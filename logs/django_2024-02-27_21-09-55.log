DEBUG 2024-02-27 21:09:57,130 utils (0.003) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:09:57,135 utils (0.001) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,137 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:09:57,138 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,158 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:09:57,159 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:09:57,160 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,162 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:09:57,163 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 21:09:57,165 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 21:09:57,166 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:09:57,167 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,168 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,169 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,170 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,203 utils (0.009) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 8', 9, '2024-02-03T10:17:50.168815+01:00'::timestamptz, 457, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 8', 9, datetime.datetime(2024, 2, 3, 10, 17, 50, 168815, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 457, True); alias=default
DEBUG 2024-02-27 21:09:57,205 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 15', 0, '2024-02-03T10:18:43.168815+01:00'::timestamptz, 573, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 15', 0, datetime.datetime(2024, 2, 3, 10, 18, 43, 168815, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 573, True); alias=default
DEBUG 2024-02-27 21:09:57,206 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 5, 'Player 13', 11, '2024-02-03T10:25:12.168815+01:00'::timestamptz, 507, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 5, 'Player 13', 11, datetime.datetime(2024, 2, 3, 10, 25, 12, 168815, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 507, True); alias=default
DEBUG 2024-02-27 21:09:57,207 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1428, 1429, 1430, '2024-02-03T10:25:12.168815+01:00'::timestamptz, 962, '["Player 13", "Player 5", "Player 8", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1428, 1429, 1430, datetime.datetime(2024, 2, 3, 10, 25, 12, 168815, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 962, <psycopg2._json.Json object at 0x7f3fdc376180>, '0x0'); alias=default
DEBUG 2024-02-27 21:09:57,208 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 5', 0, '2023-12-08T08:56:08.168815+01:00'::timestamptz, 892, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 5', 0, datetime.datetime(2023, 12, 8, 8, 56, 8, 168815, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 892, True); alias=default
DEBUG 2024-02-27 21:09:57,210 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 0, 'Player 7', 11, '2023-12-08T08:52:16.168815+01:00'::timestamptz, 661, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 0, 'Player 7', 11, datetime.datetime(2023, 12, 8, 8, 52, 16, 168815, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 661, True); alias=default
DEBUG 2024-02-27 21:09:57,211 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 8, 'Player 7', 11, '2023-12-08T08:57:42.168815+01:00'::timestamptz, 975, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 8, 'Player 7', 11, datetime.datetime(2023, 12, 8, 8, 57, 42, 168815, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 975, True); alias=default
DEBUG 2024-02-27 21:09:57,212 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1431, 1432, 1433, '2023-12-08T08:57:42.168815+01:00'::timestamptz, 987, '["Player 7", "Player 0", "Player 5", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1431, 1432, 1433, datetime.datetime(2023, 12, 8, 8, 57, 42, 168815, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 987, <psycopg2._json.Json object at 0x7f3fdc3769f0>, '0x0'); alias=default
DEBUG 2024-02-27 21:09:57,214 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,214 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,215 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:09:57,216 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 21:09:57,217 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 21:09:57,218 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 21:09:57,221 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 21:09:57,221 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:09:57,222 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,223 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,224 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,225 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,226 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 5', 0, '2023-12-17T01:08:02.223774+01:00'::timestamptz, 751, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 5', 0, datetime.datetime(2023, 12, 17, 1, 8, 2, 223774, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 751, True); alias=default
DEBUG 2024-02-27 21:09:57,228 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 6, 'Player 3', 11, '2023-12-17T01:00:00.223774+01:00'::timestamptz, 116, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 6, 'Player 3', 11, datetime.datetime(2023, 12, 17, 1, 0, 0, 223774, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 116, True); alias=default
DEBUG 2024-02-27 21:09:57,229 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 3', 9, '2023-12-17T01:09:38.223774+01:00'::timestamptz, 711, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 3', 9, datetime.datetime(2023, 12, 17, 1, 9, 38, 223774, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 711, True); alias=default
DEBUG 2024-02-27 21:09:57,230 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1434, 1435, 1436, '2023-12-17T01:09:38.223774+01:00'::timestamptz, 847, '["Player 2", "Player 3", "Player 5", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1434, 1435, 1436, datetime.datetime(2023, 12, 17, 1, 9, 38, 223774, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 847, <psycopg2._json.Json object at 0x7f3fdc376150>, '0x0'); alias=default
DEBUG 2024-02-27 21:09:57,231 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 1, 'Player 9', 11, '2023-11-06T21:57:26.223774+01:00'::timestamptz, 523, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 1, 'Player 9', 11, datetime.datetime(2023, 11, 6, 21, 57, 26, 223774, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 523, True); alias=default
DEBUG 2024-02-27 21:09:57,232 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 14', 4, '2023-11-06T22:00:33.223774+01:00'::timestamptz, 445, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 14', 4, datetime.datetime(2023, 11, 6, 22, 0, 33, 223774, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 445, True); alias=default
DEBUG 2024-02-27 21:09:57,233 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 1', 1, '2023-11-06T22:05:12.223774+01:00'::timestamptz, 67, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 1', 1, datetime.datetime(2023, 11, 6, 22, 5, 12, 223774, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 67, True); alias=default
DEBUG 2024-02-27 21:09:57,234 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1437, 1438, 1439, '2023-11-06T22:05:12.223774+01:00'::timestamptz, 989, '["Player 9", "Player 1", "Player 15", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1437, 1438, 1439, datetime.datetime(2023, 11, 6, 22, 5, 12, 223774, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 989, <psycopg2._json.Json object at 0x7f3fdc18c530>, '0x0'); alias=default
DEBUG 2024-02-27 21:09:57,235 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,236 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,237 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:09:57,238 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 21:09:57,239 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 21:09:57,240 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:09:57,241 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,242 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,243 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,244 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,245 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 4, 'Player 5', 11, '2023-12-01T10:58:18.242594+01:00'::timestamptz, 192, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 4, 'Player 5', 11, datetime.datetime(2023, 12, 1, 10, 58, 18, 242594, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 192, True); alias=default
DEBUG 2024-02-27 21:09:57,246 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 10, 'Player 14', 11, '2023-12-01T10:57:36.242594+01:00'::timestamptz, 74, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 10, 'Player 14', 11, datetime.datetime(2023, 12, 1, 10, 57, 36, 242594, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 74, True); alias=default
DEBUG 2024-02-27 21:09:57,248 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 14', 3, '2023-12-01T11:00:13.242594+01:00'::timestamptz, 473, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 14', 3, datetime.datetime(2023, 12, 1, 11, 0, 13, 242594, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 473, True); alias=default
DEBUG 2024-02-27 21:09:57,248 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1440, 1441, 1442, '2023-12-01T11:00:13.242594+01:00'::timestamptz, 307, '["Player 5", "Player 14", "Player 3", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1440, 1441, 1442, datetime.datetime(2023, 12, 1, 11, 0, 13, 242594, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 307, <psycopg2._json.Json object at 0x7f3fdc377770>, '0x0'); alias=default
DEBUG 2024-02-27 21:09:57,250 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 3', 6, '2024-01-21T11:10:05.242594+01:00'::timestamptz, 330, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 3', 6, datetime.datetime(2024, 1, 21, 11, 10, 5, 242594, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 330, True); alias=default
DEBUG 2024-02-27 21:09:57,251 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 15', 7, '2024-01-21T11:09:49.242594+01:00'::timestamptz, 312, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 15', 7, datetime.datetime(2024, 1, 21, 11, 9, 49, 242594, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 312, True); alias=default
DEBUG 2024-02-27 21:09:57,252 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 6, 'Player 4', 11, '2024-01-21T11:17:13.242594+01:00'::timestamptz, 440, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 6, 'Player 4', 11, datetime.datetime(2024, 1, 21, 11, 17, 13, 242594, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 440, True); alias=default
DEBUG 2024-02-27 21:09:57,253 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1443, 1444, 1445, '2024-01-21T11:17:13.242594+01:00'::timestamptz, 758, '["Player 4", "Player 11", "Player 3", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1443, 1444, 1445, datetime.datetime(2024, 1, 21, 11, 17, 13, 242594, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 758, <psycopg2._json.Json object at 0x7f3fdc18ca10>, '0x0'); alias=default
DEBUG 2024-02-27 21:09:57,254 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,255 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,255 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:09:57,256 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 21:09:57,258 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 21:09:57,259 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:09:57,260 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,261 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,262 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,263 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,264 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 4, 'Player 0', 11, '2023-12-16T05:09:12.261374+01:00'::timestamptz, 797, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 4, 'Player 0', 11, datetime.datetime(2023, 12, 16, 5, 9, 12, 261374, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 797, True); alias=default
DEBUG 2024-02-27 21:09:57,265 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 3, 'Player 3', 11, '2023-12-16T05:04:23.261374+01:00'::timestamptz, 634, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 3, 'Player 3', 11, datetime.datetime(2023, 12, 16, 5, 4, 23, 261374, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 634, True); alias=default
DEBUG 2024-02-27 21:09:57,267 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 9, 'Player 3', 11, '2023-12-16T05:10:12.261374+01:00'::timestamptz, 469, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 9, 'Player 3', 11, datetime.datetime(2023, 12, 16, 5, 10, 12, 261374, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 469, True); alias=default
DEBUG 2024-02-27 21:09:57,267 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1446, 1447, 1448, '2023-12-16T05:10:12.261374+01:00'::timestamptz, 983, '["Player 3", "Player 0", "Player 10", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1446, 1447, 1448, datetime.datetime(2023, 12, 16, 5, 10, 12, 261374, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 983, <psycopg2._json.Json object at 0x7f3fdc18c290>, '0x0'); alias=default
DEBUG 2024-02-27 21:09:57,269 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 4', 0, '2023-12-02T02:40:47.261374+01:00'::timestamptz, 303, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 4', 0, datetime.datetime(2023, 12, 2, 2, 40, 47, 261374, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 303, True); alias=default
DEBUG 2024-02-27 21:09:57,270 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 15', 4, '2023-12-02T02:42:29.261374+01:00'::timestamptz, 510, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 15', 4, datetime.datetime(2023, 12, 2, 2, 42, 29, 261374, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 510, True); alias=default
DEBUG 2024-02-27 21:09:57,272 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 9', 1, '2023-12-02T02:48:59.261374+01:00'::timestamptz, 635, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 9', 1, datetime.datetime(2023, 12, 2, 2, 48, 59, 261374, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 635, True); alias=default
DEBUG 2024-02-27 21:09:57,272 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1449, 1450, 1451, '2023-12-02T02:48:59.261374+01:00'::timestamptz, 900, '["Player 10", "Player 9", "Player 4", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1449, 1450, 1451, datetime.datetime(2023, 12, 2, 2, 48, 59, 261374, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 900, <psycopg2._json.Json object at 0x7f3fdc18eb40>, '0x0'); alias=default
DEBUG 2024-02-27 21:09:57,273 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,274 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,275 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:09:57,276 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 21:09:57,278 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 21:09:57,279 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 21:09:57,280 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:09:57,281 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,282 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,283 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,283 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,285 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 2, 'Player 7', 11, '2023-12-12T23:08:20.282422+01:00'::timestamptz, 814, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 2, 'Player 7', 11, datetime.datetime(2023, 12, 12, 23, 8, 20, 282422, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 814, True); alias=default
DEBUG 2024-02-27 21:09:57,286 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 13', 7, '2023-12-12T23:01:56.282422+01:00'::timestamptz, 330, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 13', 7, datetime.datetime(2023, 12, 12, 23, 1, 56, 282422, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 330, True); alias=default
DEBUG 2024-02-27 21:09:57,288 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 15', 8, '2023-12-12T23:09:36.282422+01:00'::timestamptz, 282, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 15', 8, datetime.datetime(2023, 12, 12, 23, 9, 36, 282422, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 282, True); alias=default
DEBUG 2024-02-27 21:09:57,288 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1452, 1453, 1454, '2023-12-12T23:09:36.282422+01:00'::timestamptz, 890, '["Player 7", "Player 15", "Player 6", "Player 13"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1452, 1453, 1454, datetime.datetime(2023, 12, 12, 23, 9, 36, 282422, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 890, <psycopg2._json.Json object at 0x7f3fdc3778f0>, '0x0'); alias=default
DEBUG 2024-02-27 21:09:57,290 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 0, 'Player 3', 11, '2023-11-17T12:53:32.282422+01:00'::timestamptz, 703, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 0, 'Player 3', 11, datetime.datetime(2023, 11, 17, 12, 53, 32, 282422, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 703, True); alias=default
DEBUG 2024-02-27 21:09:57,291 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 10, 'Player 11', 11, '2023-11-17T12:53:57.282422+01:00'::timestamptz, 809, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 10, 'Player 11', 11, datetime.datetime(2023, 11, 17, 12, 53, 57, 282422, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 809, True); alias=default
DEBUG 2024-02-27 21:09:57,292 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 11', 4, '2023-11-17T12:54:47.282422+01:00'::timestamptz, 888, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 11', 4, datetime.datetime(2023, 11, 17, 12, 54, 47, 282422, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 888, True); alias=default
DEBUG 2024-02-27 21:09:57,293 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1455, 1456, 1457, '2023-11-17T12:54:47.282422+01:00'::timestamptz, 859, '["Player 3", "Player 11", "Player 15", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1455, 1456, 1457, datetime.datetime(2023, 11, 17, 12, 54, 47, 282422, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 859, <psycopg2._json.Json object at 0x7f3fdc18ee40>, '0x0'); alias=default
DEBUG 2024-02-27 21:09:57,294 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:09:57,295 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
