DEBUG 2024-02-27 21:46:52,697 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:46:52,700 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,701 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:46:52,702 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,722 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:46:52,723 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:46:52,724 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,725 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:46:52,726 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 21:46:52,728 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 21:46:52,729 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:46:52,730 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,731 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,732 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,733 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,771 utils (0.009) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 6, 'Player 2', 11, '2023-11-09T12:15:44.731882+01:00'::timestamptz, 91, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 6, 'Player 2', 11, datetime.datetime(2023, 11, 9, 12, 15, 44, 731882, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 91, True); alias=default
DEBUG 2024-02-27 21:46:52,782 utils (0.011) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 3', 1, '2023-11-09T12:20:04.731882+01:00'::timestamptz, 853, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 3', 1, datetime.datetime(2023, 11, 9, 12, 20, 4, 731882, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 853, True); alias=default
DEBUG 2024-02-27 21:46:52,784 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 4, 'Player 13', 11, '2023-11-09T12:22:01.731882+01:00'::timestamptz, 219, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 4, 'Player 13', 11, datetime.datetime(2023, 11, 9, 12, 22, 1, 731882, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 219, True); alias=default
DEBUG 2024-02-27 21:46:52,785 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1745, 1746, 1747, '2023-11-09T12:22:01.731882+01:00'::timestamptz, 970, '["Player 13", "Player 2", "Player 7", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1745, 1746, 1747, datetime.datetime(2023, 11, 9, 12, 22, 1, 731882, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 970, <psycopg2._json.Json object at 0x7f1e10686b70>, '0x0'); alias=default
DEBUG 2024-02-27 21:46:52,787 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 7, 'Player 15', 11, '2024-01-31T03:12:29.731882+01:00'::timestamptz, 435, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 7, 'Player 15', 11, datetime.datetime(2024, 1, 31, 3, 12, 29, 731882, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 435, True); alias=default
DEBUG 2024-02-27 21:46:52,789 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 6, 'Player 3', 11, '2024-01-31T03:15:10.731882+01:00'::timestamptz, 467, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 6, 'Player 3', 11, datetime.datetime(2024, 1, 31, 3, 15, 10, 731882, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 467, True); alias=default
DEBUG 2024-02-27 21:46:52,791 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 3', 1, '2024-01-31T03:16:30.731882+01:00'::timestamptz, 219, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 3', 1, datetime.datetime(2024, 1, 31, 3, 16, 30, 731882, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 219, True); alias=default
DEBUG 2024-02-27 21:46:52,792 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1748, 1749, 1750, '2024-01-31T03:16:30.731882+01:00'::timestamptz, 676, '["Player 15", "Player 3", "Player 13", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1748, 1749, 1750, datetime.datetime(2024, 1, 31, 3, 16, 30, 731882, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 676, <psycopg2._json.Json object at 0x7f1e10686ff0>, '0x0'); alias=default
DEBUG 2024-02-27 21:46:52,793 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,794 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,795 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:46:52,796 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 21:46:52,798 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 21:46:52,801 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 21:46:52,804 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 21:46:52,805 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:46:52,807 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,808 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,810 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,811 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,814 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 5', 3, '2023-11-27T12:16:12.809046+01:00'::timestamptz, 627, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 5', 3, datetime.datetime(2023, 11, 27, 12, 16, 12, 809046, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 627, True); alias=default
DEBUG 2024-02-27 21:46:52,817 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 10, 'Player 11', 11, '2023-11-27T12:16:01.809046+01:00'::timestamptz, 948, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 10, 'Player 11', 11, datetime.datetime(2023, 11, 27, 12, 16, 1, 809046, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 948, True); alias=default
DEBUG 2024-02-27 21:46:52,819 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 9, 'Player 11', 11, '2023-11-27T12:16:13.809046+01:00'::timestamptz, 167, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 9, 'Player 11', 11, datetime.datetime(2023, 11, 27, 12, 16, 13, 809046, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 167, True); alias=default
DEBUG 2024-02-27 21:46:52,820 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1751, 1752, 1753, '2023-11-27T12:16:13.809046+01:00'::timestamptz, 960, '["Player 11", "Player 2", "Player 5", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1751, 1752, 1753, datetime.datetime(2023, 11, 27, 12, 16, 13, 809046, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 960, <psycopg2._json.Json object at 0x7f1e104ac200>, '0x0'); alias=default
DEBUG 2024-02-27 21:46:52,822 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 4, 'Player 4', 11, '2023-11-13T13:36:03.809046+01:00'::timestamptz, 111, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 4, 'Player 4', 11, datetime.datetime(2023, 11, 13, 13, 36, 3, 809046, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 111, True); alias=default
DEBUG 2024-02-27 21:46:52,824 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 2', 10, '2023-11-13T13:45:40.809046+01:00'::timestamptz, 875, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 2', 10, datetime.datetime(2023, 11, 13, 13, 45, 40, 809046, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 875, True); alias=default
DEBUG 2024-02-27 21:46:52,825 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 7, 'Player 1', 11, '2023-11-13T13:45:47.809046+01:00'::timestamptz, 524, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 7, 'Player 1', 11, datetime.datetime(2023, 11, 13, 13, 45, 47, 809046, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 524, True); alias=default
DEBUG 2024-02-27 21:46:52,826 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1754, 1755, 1756, '2023-11-13T13:45:47.809046+01:00'::timestamptz, 882, '["Player 1", "Player 4", "Player 9", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1754, 1755, 1756, datetime.datetime(2023, 11, 13, 13, 45, 47, 809046, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 882, <psycopg2._json.Json object at 0x7f1e104ac650>, '0x0'); alias=default
DEBUG 2024-02-27 21:46:52,827 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,829 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,830 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:46:52,831 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 21:46:52,834 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 21:46:52,835 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:46:52,836 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,838 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,839 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,841 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,842 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 3, 'Player 11', 11, '2023-11-25T20:21:07.838281+01:00'::timestamptz, 653, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 3, 'Player 11', 11, datetime.datetime(2023, 11, 25, 20, 21, 7, 838281, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 653, True); alias=default
DEBUG 2024-02-27 21:46:52,844 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 6', 6, '2023-11-25T20:25:22.838281+01:00'::timestamptz, 702, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 6', 6, datetime.datetime(2023, 11, 25, 20, 25, 22, 838281, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 702, True); alias=default
DEBUG 2024-02-27 21:46:52,846 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 7', 5, '2023-11-25T20:26:07.838281+01:00'::timestamptz, 353, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 7', 5, datetime.datetime(2023, 11, 25, 20, 26, 7, 838281, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 353, True); alias=default
DEBUG 2024-02-27 21:46:52,847 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1757, 1758, 1759, '2023-11-25T20:26:07.838281+01:00'::timestamptz, 953, '["Player 11", "Player 7", "Player 9", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1757, 1758, 1759, datetime.datetime(2023, 11, 25, 20, 26, 7, 838281, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 953, <psycopg2._json.Json object at 0x7f1e104ad070>, '0x0'); alias=default
DEBUG 2024-02-27 21:46:52,849 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 4, 'Player 3', 11, '2023-12-26T14:59:54.838281+01:00'::timestamptz, 740, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 4, 'Player 3', 11, datetime.datetime(2023, 12, 26, 14, 59, 54, 838281, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 740, True); alias=default
DEBUG 2024-02-27 21:46:52,851 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 9, 'Player 11', 11, '2023-12-26T14:59:19.838281+01:00'::timestamptz, 13, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 9, 'Player 11', 11, datetime.datetime(2023, 12, 26, 14, 59, 19, 838281, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 13, True); alias=default
DEBUG 2024-02-27 21:46:52,854 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 5, 'Player 11', 11, '2023-12-26T15:01:01.838281+01:00'::timestamptz, 95, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 5, 'Player 11', 11, datetime.datetime(2023, 12, 26, 15, 1, 1, 838281, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 95, True); alias=default
DEBUG 2024-02-27 21:46:52,855 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1760, 1761, 1762, '2023-12-26T15:01:01.838281+01:00'::timestamptz, 807, '["Player 11", "Player 3", "Player 5", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1760, 1761, 1762, datetime.datetime(2023, 12, 26, 15, 1, 1, 838281, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 807, <psycopg2._json.Json object at 0x7f1e104adca0>, '0x0'); alias=default
DEBUG 2024-02-27 21:46:52,856 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,858 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,859 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:46:52,860 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 21:46:52,862 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 21:46:52,863 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:46:52,864 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,865 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,866 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,868 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,870 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 6, 'Player 11', 11, '2024-01-02T10:11:33.865971+01:00'::timestamptz, 650, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 6, 'Player 11', 11, datetime.datetime(2024, 1, 2, 10, 11, 33, 865971, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 650, True); alias=default
DEBUG 2024-02-27 21:46:52,872 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 1, 'Player 1', 11, '2024-01-02T10:17:05.865971+01:00'::timestamptz, 124, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 1, 'Player 1', 11, datetime.datetime(2024, 1, 2, 10, 17, 5, 865971, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 124, True); alias=default
DEBUG 2024-02-27 21:46:52,873 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 8, 'Player 1', 11, '2024-01-02T10:17:19.865971+01:00'::timestamptz, 757, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 8, 'Player 1', 11, datetime.datetime(2024, 1, 2, 10, 17, 19, 865971, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 757, True); alias=default
DEBUG 2024-02-27 21:46:52,874 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1763, 1764, 1765, '2024-01-02T10:17:19.865971+01:00'::timestamptz, 996, '["Player 1", "Player 11", "Player 7", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1763, 1764, 1765, datetime.datetime(2024, 1, 2, 10, 17, 19, 865971, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 996, <psycopg2._json.Json object at 0x7f1e104ad130>, '0x0'); alias=default
DEBUG 2024-02-27 21:46:52,876 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 2', 0, '2023-12-01T10:47:07.865971+01:00'::timestamptz, 577, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 2', 0, datetime.datetime(2023, 12, 1, 10, 47, 7, 865971, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 577, True); alias=default
DEBUG 2024-02-27 21:46:52,877 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 5, 'Player 14', 11, '2023-12-01T10:51:01.865971+01:00'::timestamptz, 702, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 5, 'Player 14', 11, datetime.datetime(2023, 12, 1, 10, 51, 1, 865971, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 702, True); alias=default
DEBUG 2024-02-27 21:46:52,878 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 0, 'Player 14', 11, '2023-12-01T10:53:51.865971+01:00'::timestamptz, 774, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 0, 'Player 14', 11, datetime.datetime(2023, 12, 1, 10, 53, 51, 865971, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 774, True); alias=default
DEBUG 2024-02-27 21:46:52,879 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1766, 1767, 1768, '2023-12-01T10:53:51.865971+01:00'::timestamptz, 981, '["Player 14", "Player 11", "Player 2", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1766, 1767, 1768, datetime.datetime(2023, 12, 1, 10, 53, 51, 865971, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 981, <psycopg2._json.Json object at 0x7f1e104aef90>, '0x0'); alias=default
DEBUG 2024-02-27 21:46:52,880 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,881 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,882 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:46:52,884 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 21:46:52,886 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 21:46:52,888 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 21:46:52,889 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:46:52,890 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,891 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,892 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,893 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,895 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 8', 1, '2023-11-02T20:56:07.891664+01:00'::timestamptz, 319, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 8', 1, datetime.datetime(2023, 11, 2, 20, 56, 7, 891664, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 319, True); alias=default
DEBUG 2024-02-27 21:46:52,896 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 6, 'Player 7', 11, '2023-11-02T21:01:30.891664+01:00'::timestamptz, 903, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 6, 'Player 7', 11, datetime.datetime(2023, 11, 2, 21, 1, 30, 891664, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 903, True); alias=default
DEBUG 2024-02-27 21:46:52,897 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 3, 'Player 7', 11, '2023-11-02T21:02:18.891664+01:00'::timestamptz, 727, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 3, 'Player 7', 11, datetime.datetime(2023, 11, 2, 21, 2, 18, 891664, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 727, True); alias=default
DEBUG 2024-02-27 21:46:52,898 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1769, 1770, 1771, '2023-11-02T21:02:18.891664+01:00'::timestamptz, 951, '["Player 7", "Player 13", "Player 8", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1769, 1770, 1771, datetime.datetime(2023, 11, 2, 21, 2, 18, 891664, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 951, <psycopg2._json.Json object at 0x7f1e104aec60>, '0x0'); alias=default
DEBUG 2024-02-27 21:46:52,899 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 6, 'Player 3', 11, '2023-11-26T20:26:37.891664+01:00'::timestamptz, 375, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 6, 'Player 3', 11, datetime.datetime(2023, 11, 26, 20, 26, 37, 891664, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 375, True); alias=default
DEBUG 2024-02-27 21:46:52,901 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 11', 10, '2023-11-26T20:26:12.891664+01:00'::timestamptz, 750, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 11', 10, datetime.datetime(2023, 11, 26, 20, 26, 12, 891664, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 750, True); alias=default
DEBUG 2024-02-27 21:46:52,903 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 9', 6, '2023-11-26T20:29:32.891664+01:00'::timestamptz, 243, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 9', 6, datetime.datetime(2023, 11, 26, 20, 29, 32, 891664, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 243, True); alias=default
DEBUG 2024-02-27 21:46:52,904 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1772, 1773, 1774, '2023-11-26T20:29:32.891664+01:00'::timestamptz, 950, '["Player 3", "Player 9", "Player 4", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1772, 1773, 1774, datetime.datetime(2023, 11, 26, 20, 29, 32, 891664, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 950, <psycopg2._json.Json object at 0x7f1e104ac4d0>, '0x0'); alias=default
DEBUG 2024-02-27 21:46:52,906 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:46:52,907 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
