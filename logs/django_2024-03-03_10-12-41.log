DEBUG 2024-03-03 10:12:43,197 utils (0.003) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,206 utils (0.008) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,212 utils (0.005) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,213 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,213 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 10:12:43,234 utils (0.021) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:12:43,238 utils (0.003) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,239 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,241 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 10:12:43,247 utils (0.006) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:12:43,252 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 10:12:43,258 utils (0.007) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 10:12:43,261 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,269 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T10:12:43.261512+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 10, 12, 43, 261512, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:12:43,271 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,271 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,274 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 10:12:43,281 utils (0.006) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:12:43,286 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 10:12:43,313 utils (0.028) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 10:12:43,314 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:12:43,317 utils (0.003) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:12:43,330 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 10:12:43,339 utils (0.009) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:12:43,340 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:12:43,344 utils (0.003) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:12:43,345 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:12:43,351 utils (0.005) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:12:43,351 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 10:12:43,353 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 10:12:43,354 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:12:43,356 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:12:43,356 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 10:12:43,359 utils (0.002) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 10:12:43,359 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 10:12:43,365 utils (0.005) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 10:12:43,365 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 10:12:43,367 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:12:43,368 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:12:43,369 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:12:43,369 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:12:43,370 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:12:43,371 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 10:12:43,374 utils (0.004) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 10:12:43,375 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 10:12:43,377 utils (0.002) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:12:43,377 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 10:12:43,379 utils (0.002) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 10:12:43,380 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 10:12:43,382 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 10:12:43,382 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:12:43,384 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:12:43,384 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:12:43,385 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:12:43,385 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 10:12:43,388 utils (0.002) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 10:12:43,388 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 10:12:43,391 utils (0.002) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 10:12:43,391 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 10:12:43,393 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:12:43,393 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:12:43,395 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:12:43,395 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:12:43,396 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:12:43,396 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 10:12:43,402 utils (0.006) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 10:12:43,403 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 10:12:43,405 utils (0.002) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:12:43,406 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,408 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,411 utils (0.002) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T10:12:43.408859+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 10, 12, 43, 408859, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:12:43,411 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,423 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:12:43,433 utils (0.009) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:12:43,433 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:12:43,435 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:12:43,435 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:12:43,436 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:12:43,437 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 10:12:43,443 utils (0.006) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 10:12:43,443 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 10:12:43,446 utils (0.003) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 10:12:43,447 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,449 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,450 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T10:12:43.449418+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 10, 12, 43, 449418, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:12:43,450 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,467 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,469 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T10:12:43.468450+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 10, 12, 43, 468450, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:12:43,470 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,471 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,482 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,483 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T10:12:43.483222+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 10, 12, 43, 483222, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:12:43,488 utils (0.004) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,489 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,497 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 10:12:43,498 utils (0.000) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 10:12:43,512 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 10:12:43,514 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 10:12:43,515 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,517 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T10:12:43.516144+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 10, 12, 43, 516144, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:12:43,521 utils (0.004) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,521 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,533 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 10:12:43,534 utils (0.001) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 10:12:43,537 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,538 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T10:12:43.537744+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 10, 12, 43, 537744, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:12:43,539 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,540 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,558 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 10:12:43,559 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 10:12:43,561 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,562 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T10:12:43.561729+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 10, 12, 43, 561729, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:12:43,563 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,563 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,575 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,576 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T10:12:43.576316+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 10, 12, 43, 576316, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:12:43,581 utils (0.005) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,582 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,594 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 10:12:43,594 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 10:12:43,596 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,597 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T10:12:43.596815+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 10, 12, 43, 596815, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:12:43,598 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,598 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,600 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,601 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T10:12:43.600895+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 10, 12, 43, 600895, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:12:43,602 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,603 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,617 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,618 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T10:12:43.617987+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 10, 12, 43, 617987, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:12:43,619 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,619 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,631 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:12:43,635 utils (0.004) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:12:43,637 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,638 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T10:12:43.637763+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 10, 12, 43, 637763, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:12:43,640 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,640 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,651 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:12:43,652 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:12:43,654 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,655 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T10:12:43.654799+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 10, 12, 43, 654799, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:12:43,656 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,656 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,668 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:12:43,670 utils (0.001) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:12:43,672 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,673 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T10:12:43.672491+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 10, 12, 43, 672491, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:12:43,677 utils (0.004) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,678 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,691 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,692 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T10:12:43.691737+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 10, 12, 43, 691737, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:12:43,694 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,694 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,705 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:12:43,706 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:12:43,708 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,709 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T10:12:43.708557+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 10, 12, 43, 708557, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:12:43,710 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,711 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,713 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 10:12:43,719 utils (0.005) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:12:43,722 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 10:12:43,727 utils (0.005) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 10:12:43,729 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,730 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T10:12:43.730261+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 10, 12, 43, 730261, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:12:43,732 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,733 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,735 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 10:12:43,740 utils (0.005) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:12:43,740 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 10:12:43,742 utils (0.002) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 10:12:43,742 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 10:12:43,744 utils (0.002) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 10:12:43,745 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,749 utils (0.003) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,751 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T10:12:43.749387+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 10, 12, 43, 749387, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:12:43,753 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:12:43,754 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 10:12:43,770 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 10:12:43,770 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,771 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 10:12:43,772 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,773 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 10:12:43,776 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 10:12:43,777 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:43,778 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 10:12:43,780 utils (0.002) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:43,782 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 10:12:43,784 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:12:43,786 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:12:43,787 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:12:43,834 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 6', 5, '2023-12-12T04:46:28.786670+01:00'::timestamptz, 633, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 6', 5, datetime.datetime(2023, 12, 12, 4, 46, 28, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 633, False); alias=default
DEBUG 2024-03-03 10:12:43,836 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 8, 'Player 4', 11, '2024-02-14T04:00:57.786670+01:00'::timestamptz, 310, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 8, 'Player 4', 11, datetime.datetime(2024, 2, 14, 4, 0, 57, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 310, False); alias=default
DEBUG 2024-03-03 10:12:43,838 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 8, 'Player 6', 11, '2023-12-12T18:26:01.786670+01:00'::timestamptz, 595, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 8, 'Player 6', 11, datetime.datetime(2023, 12, 12, 18, 26, 1, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 595, False); alias=default
DEBUG 2024-03-03 10:12:43,840 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 0, 'Player 3', 11, '2024-01-09T17:52:56.786670+01:00'::timestamptz, 802, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 0, 'Player 3', 11, datetime.datetime(2024, 1, 9, 17, 52, 56, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 802, False); alias=default
DEBUG 2024-03-03 10:12:43,842 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 13', 6, '2023-11-18T14:24:02.786670+01:00'::timestamptz, 447, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 13', 6, datetime.datetime(2023, 11, 18, 14, 24, 2, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 447, False); alias=default
DEBUG 2024-03-03 10:12:43,844 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 9', 9, '2024-01-31T11:07:36.786670+01:00'::timestamptz, 761, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 9', 9, datetime.datetime(2024, 1, 31, 11, 7, 36, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 761, False); alias=default
DEBUG 2024-03-03 10:12:43,846 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 18', 3, '2024-02-01T21:55:30.786670+01:00'::timestamptz, 832, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 18', 3, datetime.datetime(2024, 2, 1, 21, 55, 30, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 832, False); alias=default
DEBUG 2024-03-03 10:12:43,849 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 1, 'Player 5', 11, '2024-01-17T15:11:38.786670+01:00'::timestamptz, 671, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 1, 'Player 5', 11, datetime.datetime(2024, 1, 17, 15, 11, 38, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 671, False); alias=default
DEBUG 2024-03-03 10:12:43,851 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 2', 4, '2024-01-13T10:28:53.786670+01:00'::timestamptz, 319, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 2', 4, datetime.datetime(2024, 1, 13, 10, 28, 53, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 319, False); alias=default
DEBUG 2024-03-03 10:12:43,853 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 5, 'Player 17', 11, '2023-11-29T21:35:45.786670+01:00'::timestamptz, 604, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 5, 'Player 17', 11, datetime.datetime(2023, 11, 29, 21, 35, 45, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 604, False); alias=default
DEBUG 2024-03-03 10:12:43,855 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 12', 7, '2023-11-08T04:27:14.786670+01:00'::timestamptz, 509, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 12', 7, datetime.datetime(2023, 11, 8, 4, 27, 14, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 509, False); alias=default
DEBUG 2024-03-03 10:12:43,857 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 18', 5, '2024-01-23T17:59:38.786670+01:00'::timestamptz, 286, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 18', 5, datetime.datetime(2024, 1, 23, 17, 59, 38, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 286, False); alias=default
DEBUG 2024-03-03 10:12:43,859 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 13', 9, '2024-01-30T23:18:11.786670+01:00'::timestamptz, 512, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 13', 9, datetime.datetime(2024, 1, 30, 23, 18, 11, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 512, False); alias=default
DEBUG 2024-03-03 10:12:43,861 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 8, 'Player 4', 11, '2024-01-31T03:46:35.786670+01:00'::timestamptz, 919, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 8, 'Player 4', 11, datetime.datetime(2024, 1, 31, 3, 46, 35, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 919, False); alias=default
DEBUG 2024-03-03 10:12:43,863 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 21', 2, '2024-02-24T01:29:41.786670+01:00'::timestamptz, 976, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 21', 2, datetime.datetime(2024, 2, 24, 1, 29, 41, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 976, False); alias=default
DEBUG 2024-03-03 10:12:43,865 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 10, 'Player 14', 11, '2024-01-15T02:02:42.786670+01:00'::timestamptz, 15, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 10, 'Player 14', 11, datetime.datetime(2024, 1, 15, 2, 2, 42, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 15, False); alias=default
DEBUG 2024-03-03 10:12:43,867 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 11', 1, '2023-12-23T11:04:07.786670+01:00'::timestamptz, 45, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 11', 1, datetime.datetime(2023, 12, 23, 11, 4, 7, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 45, False); alias=default
DEBUG 2024-03-03 10:12:43,869 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 22', 0, '2023-11-13T09:30:09.786670+01:00'::timestamptz, 346, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 22', 0, datetime.datetime(2023, 11, 13, 9, 30, 9, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 346, False); alias=default
DEBUG 2024-03-03 10:12:43,871 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 4, 'Player 3', 11, '2024-01-22T10:42:22.786670+01:00'::timestamptz, 23, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 4, 'Player 3', 11, datetime.datetime(2024, 1, 22, 10, 42, 22, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 23, False); alias=default
DEBUG 2024-03-03 10:12:43,873 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 9, 'Player 4', 11, '2023-11-06T15:57:10.786670+01:00'::timestamptz, 116, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 9, 'Player 4', 11, datetime.datetime(2023, 11, 6, 15, 57, 10, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 116, False); alias=default
DEBUG 2024-03-03 10:12:43,875 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 3', 2, '2024-02-29T14:15:00.786670+01:00'::timestamptz, 713, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 3', 2, datetime.datetime(2024, 2, 29, 14, 15, 0, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 713, False); alias=default
DEBUG 2024-03-03 10:12:43,878 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 10, 'Player 3', 11, '2023-12-17T23:14:13.786670+01:00'::timestamptz, 91, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 10, 'Player 3', 11, datetime.datetime(2023, 12, 17, 23, 14, 13, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 91, False); alias=default
DEBUG 2024-03-03 10:12:43,880 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 17', 1, '2023-12-29T23:49:37.786670+01:00'::timestamptz, 393, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 17', 1, datetime.datetime(2023, 12, 29, 23, 49, 37, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 393, False); alias=default
DEBUG 2024-03-03 10:12:43,881 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 11, 'Player 8', 9, '2023-12-27T12:29:23.786670+01:00'::timestamptz, 620, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 11, 'Player 8', 9, datetime.datetime(2023, 12, 27, 12, 29, 23, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 620, False); alias=default
DEBUG 2024-03-03 10:12:43,883 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 4', 3, '2023-11-28T07:27:59.786670+01:00'::timestamptz, 379, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 4', 3, datetime.datetime(2023, 11, 28, 7, 27, 59, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 379, False); alias=default
DEBUG 2024-03-03 10:12:43,885 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 1, 'Player 0', 11, '2023-12-24T06:05:54.786670+01:00'::timestamptz, 61, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 1, 'Player 0', 11, datetime.datetime(2023, 12, 24, 6, 5, 54, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 61, False); alias=default
DEBUG 2024-03-03 10:12:43,887 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 5, 'Player 19', 11, '2024-01-29T16:07:39.786670+01:00'::timestamptz, 251, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 5, 'Player 19', 11, datetime.datetime(2024, 1, 29, 16, 7, 39, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 251, False); alias=default
DEBUG 2024-03-03 10:12:43,889 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 1, 'Player 2', 11, '2023-11-29T14:14:58.786670+01:00'::timestamptz, 436, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 1, 'Player 2', 11, datetime.datetime(2023, 11, 29, 14, 14, 58, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 436, False); alias=default
DEBUG 2024-03-03 10:12:43,892 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 3', 9, '2024-02-24T21:08:24.786670+01:00'::timestamptz, 972, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 3', 9, datetime.datetime(2024, 2, 24, 21, 8, 24, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 972, False); alias=default
DEBUG 2024-03-03 10:12:43,893 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 17', 4, '2024-01-08T06:13:52.786670+01:00'::timestamptz, 669, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 17', 4, datetime.datetime(2024, 1, 8, 6, 13, 52, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 669, False); alias=default
DEBUG 2024-03-03 10:12:43,894 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 5, 'Player 9', 11, '2024-02-17T00:44:54.786670+01:00'::timestamptz, 833, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 5, 'Player 9', 11, datetime.datetime(2024, 2, 17, 0, 44, 54, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 833, False); alias=default
DEBUG 2024-03-03 10:12:43,896 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 9, 'Player 12', 11, '2023-11-26T02:49:37.786670+01:00'::timestamptz, 113, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 9, 'Player 12', 11, datetime.datetime(2023, 11, 26, 2, 49, 37, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 113, False); alias=default
DEBUG 2024-03-03 10:12:43,898 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 8, 'Player 27', 11, '2023-12-06T07:37:25.786670+01:00'::timestamptz, 251, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 8, 'Player 27', 11, datetime.datetime(2023, 12, 6, 7, 37, 25, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 251, False); alias=default
DEBUG 2024-03-03 10:12:43,899 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 10, 'Player 15', 11, '2023-11-09T08:19:02.786670+01:00'::timestamptz, 127, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 10, 'Player 15', 11, datetime.datetime(2023, 11, 9, 8, 19, 2, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 127, False); alias=default
DEBUG 2024-03-03 10:12:43,901 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 4, 'Player 13', 11, '2024-01-06T16:35:45.786670+01:00'::timestamptz, 391, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 4, 'Player 13', 11, datetime.datetime(2024, 1, 6, 16, 35, 45, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 391, False); alias=default
DEBUG 2024-03-03 10:12:43,903 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 7, 'Player 9', 11, '2023-11-14T12:58:18.786670+01:00'::timestamptz, 505, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 7, 'Player 9', 11, datetime.datetime(2023, 11, 14, 12, 58, 18, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 505, False); alias=default
DEBUG 2024-03-03 10:12:43,905 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 9, 'Player 29', 11, '2024-02-27T22:31:03.786670+01:00'::timestamptz, 707, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 9, 'Player 29', 11, datetime.datetime(2024, 2, 27, 22, 31, 3, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 707, False); alias=default
DEBUG 2024-03-03 10:12:43,907 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 8', 6, '2024-01-04T17:15:41.786670+01:00'::timestamptz, 156, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 8', 6, datetime.datetime(2024, 1, 4, 17, 15, 41, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 156, False); alias=default
DEBUG 2024-03-03 10:12:43,908 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 4, 'Player 6', 11, '2024-01-07T14:42:05.786670+01:00'::timestamptz, 784, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 4, 'Player 6', 11, datetime.datetime(2024, 1, 7, 14, 42, 5, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 784, False); alias=default
DEBUG 2024-03-03 10:12:43,910 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 33', 2, '2024-02-15T19:22:15.786670+01:00'::timestamptz, 893, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 33', 2, datetime.datetime(2024, 2, 15, 19, 22, 15, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 893, False); alias=default
DEBUG 2024-03-03 10:12:43,911 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 2, 'Player 5', 11, '2023-12-18T03:09:20.786670+01:00'::timestamptz, 91, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 2, 'Player 5', 11, datetime.datetime(2023, 12, 18, 3, 9, 20, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 91, False); alias=default
DEBUG 2024-03-03 10:12:43,913 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 11, 'Player 33', 1, '2023-11-11T05:10:36.786670+01:00'::timestamptz, 258, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 11, 'Player 33', 1, datetime.datetime(2023, 11, 11, 5, 10, 36, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 258, False); alias=default
DEBUG 2024-03-03 10:12:43,915 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 11, 'Player 16', 10, '2023-12-18T02:10:15.786670+01:00'::timestamptz, 521, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 11, 'Player 16', 10, datetime.datetime(2023, 12, 18, 2, 10, 15, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 521, False); alias=default
DEBUG 2024-03-03 10:12:43,916 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 10, 'Player 35', 11, '2024-02-07T17:30:27.786670+01:00'::timestamptz, 869, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 10, 'Player 35', 11, datetime.datetime(2024, 2, 7, 17, 30, 27, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 869, False); alias=default
DEBUG 2024-03-03 10:12:43,919 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 34', 6, '2024-01-25T07:04:46.786670+01:00'::timestamptz, 320, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 34', 6, datetime.datetime(2024, 1, 25, 7, 4, 46, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 320, False); alias=default
DEBUG 2024-03-03 10:12:43,921 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 24', 6, '2024-02-22T11:44:57.786670+01:00'::timestamptz, 513, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 24', 6, datetime.datetime(2024, 2, 22, 11, 44, 57, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 513, False); alias=default
DEBUG 2024-03-03 10:12:43,923 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 8, 'Player 24', 11, '2024-02-12T03:28:22.786670+01:00'::timestamptz, 184, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 8, 'Player 24', 11, datetime.datetime(2024, 2, 12, 3, 28, 22, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 184, False); alias=default
DEBUG 2024-03-03 10:12:43,925 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 6, 'Player 37', 11, '2024-02-21T05:13:19.786670+01:00'::timestamptz, 392, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 6, 'Player 37', 11, datetime.datetime(2024, 2, 21, 5, 13, 19, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 392, False); alias=default
DEBUG 2024-03-03 10:12:43,926 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 0, 'Player 19', 11, '2024-01-09T21:00:59.786670+01:00'::timestamptz, 900, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 0, 'Player 19', 11, datetime.datetime(2024, 1, 9, 21, 0, 59, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 900, False); alias=default
DEBUG 2024-03-03 10:12:43,928 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 29', 8, '2024-01-26T19:02:14.786670+01:00'::timestamptz, 264, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 29', 8, datetime.datetime(2024, 1, 26, 19, 2, 14, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 264, False); alias=default
DEBUG 2024-03-03 10:12:43,930 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 11, 'Player 0', 6, '2024-02-14T22:33:31.786670+01:00'::timestamptz, 342, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 11, 'Player 0', 6, datetime.datetime(2024, 2, 14, 22, 33, 31, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 342, False); alias=default
DEBUG 2024-03-03 10:12:43,932 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 9, 'Player 33', 11, '2023-12-26T12:55:20.786670+01:00'::timestamptz, 68, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 9, 'Player 33', 11, datetime.datetime(2023, 12, 26, 12, 55, 20, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 68, False); alias=default
DEBUG 2024-03-03 10:12:43,933 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 10, 'Player 35', 11, '2023-12-13T12:09:07.786670+01:00'::timestamptz, 330, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 10, 'Player 35', 11, datetime.datetime(2023, 12, 13, 12, 9, 7, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 330, False); alias=default
DEBUG 2024-03-03 10:12:43,935 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 34', 2, '2023-11-12T18:35:01.786670+01:00'::timestamptz, 526, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 34', 2, datetime.datetime(2023, 11, 12, 18, 35, 1, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 526, False); alias=default
DEBUG 2024-03-03 10:12:43,937 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 7', 9, '2024-01-05T18:39:18.786670+01:00'::timestamptz, 44, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 7', 9, datetime.datetime(2024, 1, 5, 18, 39, 18, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 44, False); alias=default
DEBUG 2024-03-03 10:12:43,939 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 7', 3, '2024-03-03T08:23:15.786670+01:00'::timestamptz, 133, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 7', 3, datetime.datetime(2024, 3, 3, 8, 23, 15, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 133, False); alias=default
DEBUG 2024-03-03 10:12:43,941 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 11, 'Player 16', 1, '2023-12-29T05:36:51.786670+01:00'::timestamptz, 49, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 11, 'Player 16', 1, datetime.datetime(2023, 12, 29, 5, 36, 51, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 49, False); alias=default
DEBUG 2024-03-03 10:12:43,942 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 11, 'Player 41', 8, '2024-02-18T15:36:31.786670+01:00'::timestamptz, 721, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 11, 'Player 41', 8, datetime.datetime(2024, 2, 18, 15, 36, 31, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 721, False); alias=default
DEBUG 2024-03-03 10:12:43,944 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 6, 'Player 43', 11, '2024-01-06T17:44:42.786670+01:00'::timestamptz, 979, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 6, 'Player 43', 11, datetime.datetime(2024, 1, 6, 17, 44, 42, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 979, False); alias=default
DEBUG 2024-03-03 10:12:43,946 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 13', 7, '2024-01-22T14:39:13.786670+01:00'::timestamptz, 735, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 13', 7, datetime.datetime(2024, 1, 22, 14, 39, 13, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 735, False); alias=default
DEBUG 2024-03-03 10:12:43,948 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 11, 'Player 45', 8, '2023-11-18T16:10:49.786670+01:00'::timestamptz, 198, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 11, 'Player 45', 8, datetime.datetime(2023, 11, 18, 16, 10, 49, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 198, False); alias=default
DEBUG 2024-03-03 10:12:43,949 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 17', 1, '2023-11-15T09:26:12.786670+01:00'::timestamptz, 702, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 17', 1, datetime.datetime(2023, 11, 15, 9, 26, 12, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 702, False); alias=default
DEBUG 2024-03-03 10:12:43,951 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 6, 'Player 19', 11, '2023-11-04T17:33:11.786670+01:00'::timestamptz, 990, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 6, 'Player 19', 11, datetime.datetime(2023, 11, 4, 17, 33, 11, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 990, False); alias=default
DEBUG 2024-03-03 10:12:43,953 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 14', 8, '2023-11-07T11:02:48.786670+01:00'::timestamptz, 679, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 14', 8, datetime.datetime(2023, 11, 7, 11, 2, 48, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 679, False); alias=default
DEBUG 2024-03-03 10:12:43,955 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 11, 'Player 36', 5, '2024-02-06T15:47:08.786670+01:00'::timestamptz, 619, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 11, 'Player 36', 5, datetime.datetime(2024, 2, 6, 15, 47, 8, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 619, False); alias=default
DEBUG 2024-03-03 10:12:43,957 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 12', 10, '2023-12-07T08:16:40.786670+01:00'::timestamptz, 112, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 12', 10, datetime.datetime(2023, 12, 7, 8, 16, 40, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 112, False); alias=default
DEBUG 2024-03-03 10:12:43,959 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 6, 'Player 25', 11, '2023-12-28T10:05:01.786670+01:00'::timestamptz, 196, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 6, 'Player 25', 11, datetime.datetime(2023, 12, 28, 10, 5, 1, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 196, False); alias=default
DEBUG 2024-03-03 10:12:43,960 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 4, 'Player 20', 11, '2024-02-19T18:59:39.786670+01:00'::timestamptz, 939, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 4, 'Player 20', 11, datetime.datetime(2024, 2, 19, 18, 59, 39, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 939, False); alias=default
DEBUG 2024-03-03 10:12:43,963 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 10, 'Player 22', 11, '2023-11-21T05:39:47.786670+01:00'::timestamptz, 170, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 10, 'Player 22', 11, datetime.datetime(2023, 11, 21, 5, 39, 47, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 170, False); alias=default
DEBUG 2024-03-03 10:12:43,964 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 3, 'Player 3', 11, '2024-02-11T21:56:49.786670+01:00'::timestamptz, 306, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 3, 'Player 3', 11, datetime.datetime(2024, 2, 11, 21, 56, 49, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 306, False); alias=default
DEBUG 2024-03-03 10:12:43,966 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 11, 'Player 24', 4, '2024-02-23T03:27:33.786670+01:00'::timestamptz, 74, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 11, 'Player 24', 4, datetime.datetime(2024, 2, 23, 3, 27, 33, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 74, False); alias=default
DEBUG 2024-03-03 10:12:43,968 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 11', 5, '2023-12-02T06:40:55.786670+01:00'::timestamptz, 491, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 11', 5, datetime.datetime(2023, 12, 2, 6, 40, 55, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 491, False); alias=default
DEBUG 2024-03-03 10:12:43,969 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 4, 'Player 26', 11, '2023-12-20T11:25:02.786670+01:00'::timestamptz, 703, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 4, 'Player 26', 11, datetime.datetime(2023, 12, 20, 11, 25, 2, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 703, False); alias=default
DEBUG 2024-03-03 10:12:43,972 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 50', 5, 'Player 35', 11, '2023-12-03T04:18:06.786670+01:00'::timestamptz, 931, false) RETURNING "pong_gamedata"."id"; args=('Player 50', 5, 'Player 35', 11, datetime.datetime(2023, 12, 3, 4, 18, 6, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 931, False); alias=default
DEBUG 2024-03-03 10:12:43,974 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 49', 1, '2024-01-17T05:38:52.786670+01:00'::timestamptz, 846, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 49', 1, datetime.datetime(2024, 1, 17, 5, 38, 52, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 846, False); alias=default
DEBUG 2024-03-03 10:12:43,976 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 6, 'Player 43', 11, '2023-12-29T02:13:29.786670+01:00'::timestamptz, 500, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 6, 'Player 43', 11, datetime.datetime(2023, 12, 29, 2, 13, 29, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 500, False); alias=default
DEBUG 2024-03-03 10:12:43,977 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 1, 'Player 30', 11, '2024-01-01T00:05:13.786670+01:00'::timestamptz, 644, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 1, 'Player 30', 11, datetime.datetime(2024, 1, 1, 0, 5, 13, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 644, False); alias=default
DEBUG 2024-03-03 10:12:43,979 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 26', 9, '2024-01-21T23:51:33.786670+01:00'::timestamptz, 427, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 26', 9, datetime.datetime(2024, 1, 21, 23, 51, 33, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 427, False); alias=default
DEBUG 2024-03-03 10:12:43,981 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 9, 'Player 28', 11, '2024-01-13T10:22:44.786670+01:00'::timestamptz, 626, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 9, 'Player 28', 11, datetime.datetime(2024, 1, 13, 10, 22, 44, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 626, False); alias=default
DEBUG 2024-03-03 10:12:43,983 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 11, 'Player 19', 3, '2024-01-12T08:12:46.786670+01:00'::timestamptz, 578, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 11, 'Player 19', 3, datetime.datetime(2024, 1, 12, 8, 12, 46, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 578, False); alias=default
DEBUG 2024-03-03 10:12:43,984 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 11, 'Player 55', 4, '2024-01-20T00:03:02.786670+01:00'::timestamptz, 964, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 11, 'Player 55', 4, datetime.datetime(2024, 1, 20, 0, 3, 2, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 964, False); alias=default
DEBUG 2024-03-03 10:12:43,986 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 11, 'Player 13', 9, '2023-12-02T23:07:21.786670+01:00'::timestamptz, 14, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 11, 'Player 13', 9, datetime.datetime(2023, 12, 2, 23, 7, 21, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 14, False); alias=default
DEBUG 2024-03-03 10:12:43,989 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 28', 10, '2024-02-11T01:23:37.786670+01:00'::timestamptz, 159, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 28', 10, datetime.datetime(2024, 2, 11, 1, 23, 37, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 159, False); alias=default
DEBUG 2024-03-03 10:12:43,991 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 8, 'Player 15', 11, '2023-11-28T10:31:35.786670+01:00'::timestamptz, 723, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 8, 'Player 15', 11, datetime.datetime(2023, 11, 28, 10, 31, 35, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 723, False); alias=default
DEBUG 2024-03-03 10:12:43,992 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 50', 9, '2023-12-24T21:14:34.786670+01:00'::timestamptz, 980, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 50', 9, datetime.datetime(2023, 12, 24, 21, 14, 34, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 980, False); alias=default
DEBUG 2024-03-03 10:12:43,993 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 10, 'Player 16', 11, '2023-11-05T20:52:30.786670+01:00'::timestamptz, 368, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 10, 'Player 16', 11, datetime.datetime(2023, 11, 5, 20, 52, 30, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 368, False); alias=default
DEBUG 2024-03-03 10:12:43,995 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 0, 'Player 0', 11, '2024-02-13T04:58:45.786670+01:00'::timestamptz, 179, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 0, 'Player 0', 11, datetime.datetime(2024, 2, 13, 4, 58, 45, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 179, False); alias=default
DEBUG 2024-03-03 10:12:43,997 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 5, 'Player 45', 11, '2024-01-09T23:35:43.786670+01:00'::timestamptz, 667, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 5, 'Player 45', 11, datetime.datetime(2024, 1, 9, 23, 35, 43, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 667, False); alias=default
DEBUG 2024-03-03 10:12:43,999 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 27', 1, '2023-11-23T13:57:08.786670+01:00'::timestamptz, 616, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 27', 1, datetime.datetime(2023, 11, 23, 13, 57, 8, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 616, False); alias=default
DEBUG 2024-03-03 10:12:44,000 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 3', 0, '2023-11-30T23:56:47.786670+01:00'::timestamptz, 175, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 3', 0, datetime.datetime(2023, 11, 30, 23, 56, 47, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 175, False); alias=default
DEBUG 2024-03-03 10:12:44,002 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 4, 'Player 22', 11, '2024-02-16T17:50:34.786670+01:00'::timestamptz, 430, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 4, 'Player 22', 11, datetime.datetime(2024, 2, 16, 17, 50, 34, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 430, False); alias=default
DEBUG 2024-03-03 10:12:44,004 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 0, 'Player 57', 11, '2024-01-05T12:42:46.786670+01:00'::timestamptz, 64, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 0, 'Player 57', 11, datetime.datetime(2024, 1, 5, 12, 42, 46, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 64, False); alias=default
DEBUG 2024-03-03 10:12:44,007 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 11, 'Player 17', 9, '2024-01-03T09:28:32.786670+01:00'::timestamptz, 287, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 11, 'Player 17', 9, datetime.datetime(2024, 1, 3, 9, 28, 32, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 287, False); alias=default
DEBUG 2024-03-03 10:12:44,008 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 54', 1, '2024-01-04T19:46:49.786670+01:00'::timestamptz, 836, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 54', 1, datetime.datetime(2024, 1, 4, 19, 46, 49, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 836, False); alias=default
DEBUG 2024-03-03 10:12:44,010 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 11, 'Player 39', 3, '2023-11-09T09:06:34.786670+01:00'::timestamptz, 957, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 11, 'Player 39', 3, datetime.datetime(2023, 11, 9, 9, 6, 34, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 957, False); alias=default
DEBUG 2024-03-03 10:12:44,012 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 10, 'Player 32', 11, '2023-11-26T21:30:14.786670+01:00'::timestamptz, 463, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 10, 'Player 32', 11, datetime.datetime(2023, 11, 26, 21, 30, 14, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 463, False); alias=default
DEBUG 2024-03-03 10:12:44,014 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 54', 7, 'Player 27', 11, '2024-02-18T22:56:29.786670+01:00'::timestamptz, 35, false) RETURNING "pong_gamedata"."id"; args=('Player 54', 7, 'Player 27', 11, datetime.datetime(2024, 2, 18, 22, 56, 29, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 35, False); alias=default
DEBUG 2024-03-03 10:12:44,015 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 60', 7, 'Player 59', 11, '2023-11-01T10:14:44.786670+01:00'::timestamptz, 904, false) RETURNING "pong_gamedata"."id"; args=('Player 60', 7, 'Player 59', 11, datetime.datetime(2023, 11, 1, 10, 14, 44, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 904, False); alias=default
DEBUG 2024-03-03 10:12:44,017 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 59', 11, 'Player 34', 9, '2023-11-19T20:00:30.786670+01:00'::timestamptz, 415, false) RETURNING "pong_gamedata"."id"; args=('Player 59', 11, 'Player 34', 9, datetime.datetime(2023, 11, 19, 20, 0, 30, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 415, False); alias=default
DEBUG 2024-03-03 10:12:44,019 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 52', 11, 'Player 32', 3, '2024-02-09T18:03:04.786670+01:00'::timestamptz, 187, false) RETURNING "pong_gamedata"."id"; args=('Player 52', 11, 'Player 32', 3, datetime.datetime(2024, 2, 9, 18, 3, 4, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 187, False); alias=default
DEBUG 2024-03-03 10:12:44,020 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,022 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 2, 'Player 14', 11, '2024-02-17T01:06:28.786670+01:00'::timestamptz, 99, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 2, 'Player 14', 11, datetime.datetime(2024, 2, 17, 1, 6, 28, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 99, True); alias=default
DEBUG 2024-03-03 10:12:44,023 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 3, 'Player 5', 11, '2024-02-17T01:09:51.786670+01:00'::timestamptz, 328, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 3, 'Player 5', 11, datetime.datetime(2024, 2, 17, 1, 9, 51, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 328, True); alias=default
DEBUG 2024-03-03 10:12:44,024 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 6, 'Player 5', 11, '2024-02-17T01:18:56.786670+01:00'::timestamptz, 232, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 6, 'Player 5', 11, datetime.datetime(2024, 2, 17, 1, 18, 56, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 232, True); alias=default
DEBUG 2024-03-03 10:12:44,026 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2024-02-17T01:18:56.786670+01:00'::timestamptz, 873, '["Player 5", "Player 14", "Player 0", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2024, 2, 17, 1, 18, 56, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 873, <psycopg2._json.Json object at 0x7f7b7b5ec0b0>, '0x0'); alias=default
DEBUG 2024-03-03 10:12:44,027 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 7', 10, '2024-02-29T06:36:58.786670+01:00'::timestamptz, 778, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 7', 10, datetime.datetime(2024, 2, 29, 6, 36, 58, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 778, True); alias=default
DEBUG 2024-03-03 10:12:44,029 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 7, 'Player 15', 11, '2024-02-29T06:37:45.786670+01:00'::timestamptz, 996, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 7, 'Player 15', 11, datetime.datetime(2024, 2, 29, 6, 37, 45, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 996, True); alias=default
DEBUG 2024-03-03 10:12:44,031 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 15', 4, '2024-02-29T06:37:45.786670+01:00'::timestamptz, 355, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 15', 4, datetime.datetime(2024, 2, 29, 6, 37, 45, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 355, True); alias=default
DEBUG 2024-03-03 10:12:44,032 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2024-02-29T06:37:45.786670+01:00'::timestamptz, 996, '["Player 10", "Player 15", "Player 7", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2024, 2, 29, 6, 37, 45, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 996, <psycopg2._json.Json object at 0x7f7b7b404c80>, '0x0'); alias=default
DEBUG 2024-03-03 10:12:44,034 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 4', 8, '2024-01-07T12:31:12.786670+01:00'::timestamptz, 458, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 4', 8, datetime.datetime(2024, 1, 7, 12, 31, 12, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 458, True); alias=default
DEBUG 2024-03-03 10:12:44,035 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 16', 3, '2024-01-07T12:28:38.786670+01:00'::timestamptz, 508, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 16', 3, datetime.datetime(2024, 1, 7, 12, 28, 38, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 508, True); alias=default
DEBUG 2024-03-03 10:12:44,037 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 12', 1, '2024-01-07T12:34:06.786670+01:00'::timestamptz, 21, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 12', 1, datetime.datetime(2024, 1, 7, 12, 34, 6, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 21, True); alias=default
DEBUG 2024-03-03 10:12:44,038 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2024-01-07T12:34:06.786670+01:00'::timestamptz, 836, '["Player 10", "Player 12", "Player 4", "Player 16"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2024, 1, 7, 12, 34, 6, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 836, <psycopg2._json.Json object at 0x7f7b7b5eecf0>, '0x0'); alias=default
DEBUG 2024-03-03 10:12:44,039 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 5, 'Player 9', 11, '2024-01-01T17:16:29.786670+01:00'::timestamptz, 980, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 5, 'Player 9', 11, datetime.datetime(2024, 1, 1, 17, 16, 29, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 980, True); alias=default
DEBUG 2024-03-03 10:12:44,040 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 1', 2, '2024-01-01T17:11:41.786670+01:00'::timestamptz, 447, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 1', 2, datetime.datetime(2024, 1, 1, 17, 11, 41, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 447, True); alias=default
DEBUG 2024-03-03 10:12:44,041 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 9, 'Player 13', 11, '2024-01-01T17:16:47.786670+01:00'::timestamptz, 5, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 9, 'Player 13', 11, datetime.datetime(2024, 1, 1, 17, 16, 47, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 5, True); alias=default
DEBUG 2024-03-03 10:12:44,043 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2024-01-01T17:16:47.786670+01:00'::timestamptz, 998, '["Player 13", "Player 9", "Player 16", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2024, 1, 1, 17, 16, 47, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 998, <psycopg2._json.Json object at 0x7f7b7b4437a0>, '0x0'); alias=default
DEBUG 2024-03-03 10:12:44,044 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 3, 'Player 7', 11, '2023-11-17T18:02:58.786670+01:00'::timestamptz, 534, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 3, 'Player 7', 11, datetime.datetime(2023, 11, 17, 18, 2, 58, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 534, True); alias=default
DEBUG 2024-03-03 10:12:44,046 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 8, 'Player 6', 11, '2023-11-17T18:08:21.786670+01:00'::timestamptz, 300, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 8, 'Player 6', 11, datetime.datetime(2023, 11, 17, 18, 8, 21, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 300, True); alias=default
DEBUG 2024-03-03 10:12:44,047 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 6', 4, '2023-11-17T18:10:13.786670+01:00'::timestamptz, 392, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 6', 4, datetime.datetime(2023, 11, 17, 18, 10, 13, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 392, True); alias=default
DEBUG 2024-03-03 10:12:44,049 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2023-11-17T18:10:13.786670+01:00'::timestamptz, 969, '["Player 7", "Player 6", "Player 4", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2023, 11, 17, 18, 10, 13, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 969, <psycopg2._json.Json object at 0x7f7b7b4413a0>, '0x0'); alias=default
DEBUG 2024-03-03 10:12:44,051 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 1, 'Player 16', 11, '2024-01-05T05:56:33.786670+01:00'::timestamptz, 715, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 1, 'Player 16', 11, datetime.datetime(2024, 1, 5, 5, 56, 33, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 715, True); alias=default
DEBUG 2024-03-03 10:12:44,052 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 17', 4, '2024-01-05T05:59:41.786670+01:00'::timestamptz, 585, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 17', 4, datetime.datetime(2024, 1, 5, 5, 59, 41, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 585, True); alias=default
DEBUG 2024-03-03 10:12:44,053 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 12', 0, '2024-01-05T06:00:40.786670+01:00'::timestamptz, 706, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 12', 0, datetime.datetime(2024, 1, 5, 6, 0, 40, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 706, True); alias=default
DEBUG 2024-03-03 10:12:44,055 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2024-01-05T06:00:40.786670+01:00'::timestamptz, 962, '["Player 16", "Player 12", "Player 0", "Player 17"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2024, 1, 5, 6, 0, 40, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 962, <psycopg2._json.Json object at 0x7f7b7b41ecc0>, '0x0'); alias=default
DEBUG 2024-03-03 10:12:44,056 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 3', 4, '2024-02-01T04:53:32.786670+01:00'::timestamptz, 204, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 3', 4, datetime.datetime(2024, 2, 1, 4, 53, 32, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 204, True); alias=default
DEBUG 2024-03-03 10:12:44,058 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 0, 'Player 5', 11, '2024-02-01T04:58:05.786670+01:00'::timestamptz, 998, true) RETURNING "pong_gamedata"."id"; args=('Player 18', 0, 'Player 5', 11, datetime.datetime(2024, 2, 1, 4, 58, 5, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 998, True); alias=default
DEBUG 2024-03-03 10:12:44,059 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 0, 'Player 5', 11, '2024-02-01T04:58:07.786670+01:00'::timestamptz, 448, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 0, 'Player 5', 11, datetime.datetime(2024, 2, 1, 4, 58, 7, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 448, True); alias=default
DEBUG 2024-03-03 10:12:44,060 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2024-02-01T04:58:07.786670+01:00'::timestamptz, 1000, '["Player 5", "Player 11", "Player 3", "Player 18"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2024, 2, 1, 4, 58, 7, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 1000, <psycopg2._json.Json object at 0x7f7b7b41d070>, '0x0'); alias=default
DEBUG 2024-03-03 10:12:44,062 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 2, 'Player 6', 11, '2024-01-23T12:39:04.786670+01:00'::timestamptz, 683, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 2, 'Player 6', 11, datetime.datetime(2024, 1, 23, 12, 39, 4, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 683, True); alias=default
DEBUG 2024-03-03 10:12:44,064 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 8', 4, '2024-01-23T12:40:39.786670+01:00'::timestamptz, 920, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 8', 4, datetime.datetime(2024, 1, 23, 12, 40, 39, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 920, True); alias=default
DEBUG 2024-03-03 10:12:44,065 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 3', 10, '2024-01-23T12:41:18.786670+01:00'::timestamptz, 96, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 3', 10, datetime.datetime(2024, 1, 23, 12, 41, 18, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 96, True); alias=default
DEBUG 2024-03-03 10:12:44,067 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2024-01-23T12:41:18.786670+01:00'::timestamptz, 959, '["Player 6", "Player 3", "Player 5", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2024, 1, 23, 12, 41, 18, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 959, <psycopg2._json.Json object at 0x7f7b7b41e030>, '0x0'); alias=default
DEBUG 2024-03-03 10:12:44,068 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 14', 7, '2023-12-02T07:33:26.786670+01:00'::timestamptz, 5, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 14', 7, datetime.datetime(2023, 12, 2, 7, 33, 26, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 5, True); alias=default
DEBUG 2024-03-03 10:12:44,069 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 0', 6, '2023-12-02T07:40:06.786670+01:00'::timestamptz, 593, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 0', 6, datetime.datetime(2023, 12, 2, 7, 40, 6, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 593, True); alias=default
DEBUG 2024-03-03 10:12:44,070 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 7', 9, '2023-12-02T07:44:17.786670+01:00'::timestamptz, 625, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 7', 9, datetime.datetime(2023, 12, 2, 7, 44, 17, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 625, True); alias=default
DEBUG 2024-03-03 10:12:44,072 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2023-12-02T07:44:17.786670+01:00'::timestamptz, 844, '["Player 8", "Player 7", "Player 14", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2023, 12, 2, 7, 44, 17, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 844, <psycopg2._json.Json object at 0x7f7b7b56a0c0>, '0x0'); alias=default
DEBUG 2024-03-03 10:12:44,073 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 16', 1, '2023-12-15T15:31:37.786670+01:00'::timestamptz, 834, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 16', 1, datetime.datetime(2023, 12, 15, 15, 31, 37, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 834, True); alias=default
DEBUG 2024-03-03 10:12:44,074 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 4', 0, '2023-12-15T15:29:10.786670+01:00'::timestamptz, 342, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 4', 0, datetime.datetime(2023, 12, 15, 15, 29, 10, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 342, True); alias=default
DEBUG 2024-03-03 10:12:44,075 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 7, 'Player 9', 11, '2023-12-15T15:33:43.786670+01:00'::timestamptz, 652, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 7, 'Player 9', 11, datetime.datetime(2023, 12, 15, 15, 33, 43, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 652, True); alias=default
DEBUG 2024-03-03 10:12:44,077 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2023-12-15T15:33:43.786670+01:00'::timestamptz, 960, '["Player 9", "Player 13", "Player 16", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2023, 12, 15, 15, 33, 43, 786670, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 960, <psycopg2._json.Json object at 0x7f7b7b41f1d0>, '0x0'); alias=default
DEBUG 2024-03-03 10:12:44,078 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,080 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,081 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 10:12:44,081 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:44,082 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 10:12:44,083 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:44,084 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 10:12:44,085 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 10:12:44,086 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 10:12:44,088 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 10:12:44,088 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:44,089 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 10:12:44,090 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:44,091 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 10:12:44,092 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,093 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,094 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,095 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,097 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,098 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,099 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 10:12:44,100 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:44,100 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 10:12:44,101 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:44,102 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 10:12:44,103 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 10:12:44,104 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:44,104 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 10:12:44,105 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:44,106 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 10:12:44,107 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,108 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,108 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,109 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,110 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,111 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,112 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 10:12:44,113 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:44,114 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 10:12:44,115 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:44,116 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 10:12:44,118 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 10:12:44,118 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:44,119 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 10:12:44,119 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:44,120 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 10:12:44,121 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,122 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,122 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,123 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,124 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,125 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,126 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 10:12:44,126 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:44,126 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 10:12:44,127 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:44,128 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 10:12:44,130 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 10:12:44,133 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 10:12:44,133 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:12:44,134 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 10:12:44,135 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:12:44,136 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 10:12:44,137 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,138 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,138 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,139 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,140 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:12:44,141 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
