DEBUG 2024-02-27 22:11:40,005 utils (0.004) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:11:40,007 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,009 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:11:40,009 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,025 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:11:40,026 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:11:40,026 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,028 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:11:40,029 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 22:11:40,031 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 22:11:40,032 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:11:40,034 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,035 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,036 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,038 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,076 utils (0.010) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 5', 6, '2023-12-12T18:01:38.035591+01:00'::timestamptz, 156, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 5', 6, datetime.datetime(2023, 12, 12, 18, 1, 38, 35591, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 156, True); alias=default
DEBUG 2024-02-27 22:11:40,080 utils (0.003) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 6, 'Player 15', 11, '2023-12-12T17:55:27.035591+01:00'::timestamptz, 245, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 6, 'Player 15', 11, datetime.datetime(2023, 12, 12, 17, 55, 27, 35591, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 245, True); alias=default
DEBUG 2024-02-27 22:11:40,082 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 15', 1, '2023-12-12T18:03:57.035591+01:00'::timestamptz, 69, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 15', 1, datetime.datetime(2023, 12, 12, 18, 3, 57, 35591, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 69, True); alias=default
DEBUG 2024-02-27 22:11:40,083 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1991, 1992, 1993, '2023-12-12T18:03:57.035591+01:00'::timestamptz, 755, '["Player 0", "Player 15", "Player 5", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1991, 1992, 1993, datetime.datetime(2023, 12, 12, 18, 3, 57, 35591, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 755, <psycopg2._json.Json object at 0x7f6be40fab40>, '0x0'); alias=default
DEBUG 2024-02-27 22:11:40,087 utils (0.004) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 15', 2, '2024-01-01T14:47:46.035591+01:00'::timestamptz, 798, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 15', 2, datetime.datetime(2024, 1, 1, 14, 47, 46, 35591, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 798, True); alias=default
DEBUG 2024-02-27 22:11:40,089 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 10, 'Player 2', 11, '2024-01-01T14:49:03.035591+01:00'::timestamptz, 377, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 10, 'Player 2', 11, datetime.datetime(2024, 1, 1, 14, 49, 3, 35591, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 377, True); alias=default
DEBUG 2024-02-27 22:11:40,093 utils (0.004) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 2', 7, '2024-01-01T14:49:18.035591+01:00'::timestamptz, 934, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 2', 7, datetime.datetime(2024, 1, 1, 14, 49, 18, 35591, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 934, True); alias=default
DEBUG 2024-02-27 22:11:40,095 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1994, 1995, 1996, '2024-01-01T14:49:18.035591+01:00'::timestamptz, 890, '["Player 14", "Player 2", "Player 15", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1994, 1995, 1996, datetime.datetime(2024, 1, 1, 14, 49, 18, 35591, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 890, <psycopg2._json.Json object at 0x7f6be40fb320>, '0x0'); alias=default
DEBUG 2024-02-27 22:11:40,096 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,096 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,097 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:11:40,098 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 22:11:40,099 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 22:11:40,100 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 22:11:40,102 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 22:11:40,104 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:11:40,105 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,106 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,106 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,107 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,109 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 8, 'Player 10', 11, '2023-11-10T01:21:02.106335+01:00'::timestamptz, 332, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 8, 'Player 10', 11, datetime.datetime(2023, 11, 10, 1, 21, 2, 106335, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 332, True); alias=default
DEBUG 2024-02-27 22:11:40,110 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 6, 'Player 15', 11, '2023-11-10T01:10:39.106335+01:00'::timestamptz, 244, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 6, 'Player 15', 11, datetime.datetime(2023, 11, 10, 1, 10, 39, 106335, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 244, True); alias=default
DEBUG 2024-02-27 22:11:40,111 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 15', 2, '2023-11-10T01:21:39.106335+01:00'::timestamptz, 210, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 15', 2, datetime.datetime(2023, 11, 10, 1, 21, 39, 106335, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 210, True); alias=default
DEBUG 2024-02-27 22:11:40,112 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1997, 1998, 1999, '2023-11-10T01:21:39.106335+01:00'::timestamptz, 904, '["Player 10", "Player 15", "Player 4", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1997, 1998, 1999, datetime.datetime(2023, 11, 10, 1, 21, 39, 106335, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 904, <psycopg2._json.Json object at 0x7f6be40fb4a0>, '0x0'); alias=default
DEBUG 2024-02-27 22:11:40,113 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 8, 'Player 5', 11, '2023-11-03T03:27:24.106335+01:00'::timestamptz, 172, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 8, 'Player 5', 11, datetime.datetime(2023, 11, 3, 3, 27, 24, 106335, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 172, True); alias=default
DEBUG 2024-02-27 22:11:40,114 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 8', 6, '2023-11-03T03:30:41.106335+01:00'::timestamptz, 750, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 8', 6, datetime.datetime(2023, 11, 3, 3, 30, 41, 106335, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 750, True); alias=default
DEBUG 2024-02-27 22:11:40,116 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 14', 4, '2023-11-03T03:33:34.106335+01:00'::timestamptz, 552, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 14', 4, datetime.datetime(2023, 11, 3, 3, 33, 34, 106335, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 552, True); alias=default
DEBUG 2024-02-27 22:11:40,116 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2000, 2001, 2002, '2023-11-03T03:33:34.106335+01:00'::timestamptz, 923, '["Player 5", "Player 14", "Player 11", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2000, 2001, 2002, datetime.datetime(2023, 11, 3, 3, 33, 34, 106335, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 923, <psycopg2._json.Json object at 0x7f6be3f20740>, '0x0'); alias=default
DEBUG 2024-02-27 22:11:40,117 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,118 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,120 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:11:40,121 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 22:11:40,123 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 22:11:40,124 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:11:40,124 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,125 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,126 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,127 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,129 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 10', 8, '2023-11-14T11:56:41.125800+01:00'::timestamptz, 223, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 10', 8, datetime.datetime(2023, 11, 14, 11, 56, 41, 125800, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 223, True); alias=default
DEBUG 2024-02-27 22:11:40,130 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 8', 4, '2023-11-14T11:56:56.125800+01:00'::timestamptz, 129, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 8', 4, datetime.datetime(2023, 11, 14, 11, 56, 56, 125800, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 129, True); alias=default
DEBUG 2024-02-27 22:11:40,131 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 10, 'Player 2', 11, '2023-11-14T12:02:39.125800+01:00'::timestamptz, 111, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 10, 'Player 2', 11, datetime.datetime(2023, 11, 14, 12, 2, 39, 125800, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 111, True); alias=default
DEBUG 2024-02-27 22:11:40,132 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2003, 2004, 2005, '2023-11-14T12:02:39.125800+01:00'::timestamptz, 581, '["Player 2", "Player 3", "Player 10", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2003, 2004, 2005, datetime.datetime(2023, 11, 14, 12, 2, 39, 125800, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 581, <psycopg2._json.Json object at 0x7f6be3f21370>, '0x0'); alias=default
DEBUG 2024-02-27 22:11:40,133 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 3, 'Player 14', 11, '2024-02-17T01:27:41.125800+01:00'::timestamptz, 213, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 3, 'Player 14', 11, datetime.datetime(2024, 2, 17, 1, 27, 41, 125800, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 213, True); alias=default
DEBUG 2024-02-27 22:11:40,134 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 7', 6, '2024-02-17T01:30:33.125800+01:00'::timestamptz, 334, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 7', 6, datetime.datetime(2024, 2, 17, 1, 30, 33, 125800, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 334, True); alias=default
DEBUG 2024-02-27 22:11:40,136 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 11', 6, '2024-02-17T01:39:13.125800+01:00'::timestamptz, 22, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 11', 6, datetime.datetime(2024, 2, 17, 1, 39, 13, 125800, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 22, True); alias=default
DEBUG 2024-02-27 22:11:40,137 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2006, 2007, 2008, '2024-02-17T01:39:13.125800+01:00'::timestamptz, 905, '["Player 14", "Player 11", "Player 10", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2006, 2007, 2008, datetime.datetime(2024, 2, 17, 1, 39, 13, 125800, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 905, <psycopg2._json.Json object at 0x7f6be3f21ca0>, '0x0'); alias=default
DEBUG 2024-02-27 22:11:40,139 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,139 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,140 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:11:40,141 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 22:11:40,143 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 22:11:40,144 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:11:40,145 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,146 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,147 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,147 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,149 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 9, 'Player 11', 11, '2023-12-04T08:48:32.146312+01:00'::timestamptz, 763, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 9, 'Player 11', 11, datetime.datetime(2023, 12, 4, 8, 48, 32, 146312, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 763, True); alias=default
DEBUG 2024-02-27 22:11:40,150 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 9', 4, '2023-12-04T08:47:05.146312+01:00'::timestamptz, 450, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 9', 4, datetime.datetime(2023, 12, 4, 8, 47, 5, 146312, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 450, True); alias=default
DEBUG 2024-02-27 22:11:40,151 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 9, 'Player 8', 11, '2023-12-04T08:49:40.146312+01:00'::timestamptz, 764, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 9, 'Player 8', 11, datetime.datetime(2023, 12, 4, 8, 49, 40, 146312, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 764, True); alias=default
DEBUG 2024-02-27 22:11:40,152 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2009, 2010, 2011, '2023-12-04T08:49:40.146312+01:00'::timestamptz, 831, '["Player 8", "Player 11", "Player 7", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2009, 2010, 2011, datetime.datetime(2023, 12, 4, 8, 49, 40, 146312, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 831, <psycopg2._json.Json object at 0x7f6be3f22ae0>, '0x0'); alias=default
DEBUG 2024-02-27 22:11:40,154 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 1', 8, '2024-02-21T02:20:01.146312+01:00'::timestamptz, 214, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 1', 8, datetime.datetime(2024, 2, 21, 2, 20, 1, 146312, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 214, True); alias=default
DEBUG 2024-02-27 22:11:40,156 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 15', 2, '2024-02-21T02:26:42.146312+01:00'::timestamptz, 874, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 15', 2, datetime.datetime(2024, 2, 21, 2, 26, 42, 146312, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 874, True); alias=default
DEBUG 2024-02-27 22:11:40,157 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 5', 8, '2024-02-21T02:28:02.146312+01:00'::timestamptz, 724, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 5', 8, datetime.datetime(2024, 2, 21, 2, 28, 2, 146312, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 724, True); alias=default
DEBUG 2024-02-27 22:11:40,158 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2012, 2013, 2014, '2024-02-21T02:28:02.146312+01:00'::timestamptz, 954, '["Player 0", "Player 5", "Player 1", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2012, 2013, 2014, datetime.datetime(2024, 2, 21, 2, 28, 2, 146312, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 954, <psycopg2._json.Json object at 0x7f6be3f23350>, '0x0'); alias=default
DEBUG 2024-02-27 22:11:40,159 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,160 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,161 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:11:40,161 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 22:11:40,162 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 22:11:40,164 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 22:11:40,165 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:11:40,166 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,167 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,168 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,169 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,171 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 8', 2, '2024-01-03T00:24:51.167193+01:00'::timestamptz, 804, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 8', 2, datetime.datetime(2024, 1, 3, 0, 24, 51, 167193, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 804, True); alias=default
DEBUG 2024-02-27 22:11:40,173 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 1', 2, '2024-01-03T00:26:00.167193+01:00'::timestamptz, 607, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 1', 2, datetime.datetime(2024, 1, 3, 0, 26, 0, 167193, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 607, True); alias=default
DEBUG 2024-02-27 22:11:40,174 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 5', 9, '2024-01-03T00:27:29.167193+01:00'::timestamptz, 559, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 5', 9, datetime.datetime(2024, 1, 3, 0, 27, 29, 167193, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 559, True); alias=default
DEBUG 2024-02-27 22:11:40,175 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2015, 2016, 2017, '2024-01-03T00:27:29.167193+01:00'::timestamptz, 962, '["Player 12", "Player 5", "Player 8", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2015, 2016, 2017, datetime.datetime(2024, 1, 3, 0, 27, 29, 167193, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 962, <psycopg2._json.Json object at 0x7f6be40fbb90>, '0x0'); alias=default
DEBUG 2024-02-27 22:11:40,176 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 5, 'Player 10', 11, '2024-01-06T06:42:22.167193+01:00'::timestamptz, 532, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 5, 'Player 10', 11, datetime.datetime(2024, 1, 6, 6, 42, 22, 167193, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 532, True); alias=default
DEBUG 2024-02-27 22:11:40,178 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 1', 8, '2024-01-06T06:49:40.167193+01:00'::timestamptz, 981, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 1', 8, datetime.datetime(2024, 1, 6, 6, 49, 40, 167193, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 981, True); alias=default
DEBUG 2024-02-27 22:11:40,179 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 7', 2, '2024-01-06T06:49:45.167193+01:00'::timestamptz, 465, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 7', 2, datetime.datetime(2024, 1, 6, 6, 49, 45, 167193, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 465, True); alias=default
DEBUG 2024-02-27 22:11:40,180 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2018, 2019, 2020, '2024-01-06T06:49:45.167193+01:00'::timestamptz, 986, '["Player 10", "Player 7", "Player 9", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2018, 2019, 2020, datetime.datetime(2024, 1, 6, 6, 49, 45, 167193, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 986, <psycopg2._json.Json object at 0x7f6be3f202c0>, '0x0'); alias=default
DEBUG 2024-02-27 22:11:40,181 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:11:40,182 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
