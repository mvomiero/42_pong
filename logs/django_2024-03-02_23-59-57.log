DEBUG 2024-03-02 23:59:58,627 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:58,628 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:58,629 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:58,630 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:58,630 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-02 23:59:58,658 utils (0.028) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:59:58,659 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:58,660 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:58,661 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-02 23:59:58,664 utils (0.002) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:59:58,666 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-02 23:59:58,669 utils (0.002) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-02 23:59:58,671 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:58,675 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-02T23:59:58.671944+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 2, 23, 59, 58, 671944, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:59:58,677 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:58,677 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:58,680 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-02 23:59:58,683 utils (0.003) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:59:58,688 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-02 23:59:58,693 utils (0.004) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-02 23:59:58,693 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-02 23:59:58,696 utils (0.002) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:59:58,701 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-02 23:59:58,706 utils (0.004) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:59:58,707 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-02 23:59:58,709 utils (0.002) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:59:58,710 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-02 23:59:58,713 utils (0.003) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:59:58,713 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-02 23:59:58,716 utils (0.003) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-02 23:59:58,717 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:59:58,719 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:59:58,719 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-02 23:59:58,722 utils (0.002) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-02 23:59:58,722 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-02 23:59:58,724 utils (0.002) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-02 23:59:58,725 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-02 23:59:58,727 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-02 23:59:58,727 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:59:58,729 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:59:58,729 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:59:58,730 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:59:58,730 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-02 23:59:58,732 utils (0.002) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-02 23:59:58,732 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-02 23:59:58,734 utils (0.002) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-02 23:59:58,734 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-02 23:59:58,736 utils (0.002) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-02 23:59:58,737 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-02 23:59:58,739 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-02 23:59:58,739 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:59:58,740 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:59:58,740 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:59:58,741 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:59:58,741 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-02 23:59:58,743 utils (0.002) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-02 23:59:58,743 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-02 23:59:58,745 utils (0.002) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-02 23:59:58,746 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-02 23:59:58,748 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-02 23:59:58,748 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:59:58,749 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:59:58,749 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:59:58,750 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:59:58,751 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-02 23:59:58,753 utils (0.002) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-02 23:59:58,753 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-02 23:59:58,755 utils (0.002) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-02 23:59:58,756 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:58,757 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:58,759 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-02T23:59:58.758302+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 2, 23, 59, 58, 758302, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:59:58,760 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:58,768 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-02 23:59:58,772 utils (0.004) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:59:58,773 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:59:58,775 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:59:58,775 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:59:58,777 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:59:58,777 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-02 23:59:58,779 utils (0.002) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-02 23:59:58,779 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-02 23:59:58,781 utils (0.002) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-02 23:59:58,782 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:58,784 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:58,786 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-02T23:59:58.785063+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 2, 23, 59, 58, 785063, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:59:58,786 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:58,796 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:58,797 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-02T23:59:58.796728+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 2, 23, 59, 58, 796728, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:59:58,798 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:58,798 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:58,807 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:58,808 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-02T23:59:58.807579+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 2, 23, 59, 58, 807579, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:59:58,809 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:58,809 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:58,815 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-02 23:59:58,816 utils (0.000) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-02 23:59:58,830 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-02 23:59:58,831 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-02 23:59:58,832 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:58,833 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-02T23:59:58.832677+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 2, 23, 59, 58, 832677, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:59:58,834 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:58,834 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:58,844 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-02 23:59:58,844 utils (0.001) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-02 23:59:58,846 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:58,847 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-02T23:59:58.846956+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 2, 23, 59, 58, 846956, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:59:58,848 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:58,849 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:58,859 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-02 23:59:58,860 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-02 23:59:58,862 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:58,863 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-02T23:59:58.862476+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 2, 23, 59, 58, 862476, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:59:58,863 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:58,864 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:58,877 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:58,878 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-02T23:59:58.878001+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 2, 23, 59, 58, 878001, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:59:58,879 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:58,879 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:58,890 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-02 23:59:58,891 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-02 23:59:58,893 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:58,902 utils (0.008) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-02T23:59:58.893607+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 2, 23, 59, 58, 893607, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:59:58,903 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:58,903 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:58,905 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:58,906 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-02T23:59:58.905569+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 2, 23, 59, 58, 905569, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:59:58,907 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:58,907 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:58,918 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:58,921 utils (0.002) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-02T23:59:58.919231+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 2, 23, 59, 58, 919231, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:59:58,922 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:58,922 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:58,931 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-02 23:59:58,941 utils (0.010) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-02 23:59:58,943 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:58,944 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-02T23:59:58.943850+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 2, 23, 59, 58, 943850, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:59:58,945 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:58,945 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:58,956 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-02 23:59:58,962 utils (0.006) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-02 23:59:58,964 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:58,965 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-02T23:59:58.964676+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 2, 23, 59, 58, 964676, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:59:58,966 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:58,966 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:58,976 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-02 23:59:58,983 utils (0.008) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-02 23:59:58,985 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:58,986 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-02T23:59:58.985830+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 2, 23, 59, 58, 985830, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:59:58,987 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:58,988 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:59,002 utils (0.006) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:59,003 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-02T23:59:59.003211+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 2, 23, 59, 59, 3211, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:59:59,004 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:59,005 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:59,016 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-02 23:59:59,022 utils (0.006) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-02 23:59:59,024 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:59,025 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-02T23:59:59.024437+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 2, 23, 59, 59, 24437, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:59:59,026 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:59,026 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:59,028 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-02 23:59:59,034 utils (0.005) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:59:59,036 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-02 23:59:59,041 utils (0.005) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-02 23:59:59,043 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:59,044 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-02T23:59:59.044026+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 2, 23, 59, 59, 44026, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:59:59,045 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:59,045 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:59,047 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-02 23:59:59,052 utils (0.005) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:59:59,053 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-02 23:59:59,055 utils (0.002) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-02 23:59:59,056 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-02 23:59:59,058 utils (0.002) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-02 23:59:59,059 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:59,061 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:59,063 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-02T23:59:59.061574+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 2, 23, 59, 59, 61574, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:59:59,065 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:59:59,066 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,082 utils (0.002) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-02 23:59:59,082 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:59,084 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-02 23:59:59,085 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:59,086 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-02 23:59:59,091 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-02 23:59:59,091 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:59,093 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-02 23:59:59,095 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:59,096 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-02 23:59:59,098 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,099 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,101 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,142 utils (0.005) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 13', 4, '2023-12-11T21:54:10.100163+01:00'::timestamptz, 438, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 13', 4, datetime.datetime(2023, 12, 11, 21, 54, 10, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 438, False); alias=default
DEBUG 2024-03-02 23:59:59,144 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 8, 'Player 4', 11, '2024-01-28T18:36:20.100163+01:00'::timestamptz, 268, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 8, 'Player 4', 11, datetime.datetime(2024, 1, 28, 18, 36, 20, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 268, False); alias=default
DEBUG 2024-03-02 23:59:59,145 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 2, 'Player 4', 11, '2023-12-24T13:31:34.100163+01:00'::timestamptz, 918, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 2, 'Player 4', 11, datetime.datetime(2023, 12, 24, 13, 31, 34, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 918, False); alias=default
DEBUG 2024-03-02 23:59:59,147 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 2, 'Player 17', 11, '2024-01-19T01:21:55.100163+01:00'::timestamptz, 142, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 2, 'Player 17', 11, datetime.datetime(2024, 1, 19, 1, 21, 55, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 142, False); alias=default
DEBUG 2024-03-02 23:59:59,149 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 13', 3, '2024-01-31T00:08:22.100163+01:00'::timestamptz, 264, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 13', 3, datetime.datetime(2024, 1, 31, 0, 8, 22, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 264, False); alias=default
DEBUG 2024-03-02 23:59:59,150 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 12', 1, '2024-02-03T22:03:35.100163+01:00'::timestamptz, 665, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 12', 1, datetime.datetime(2024, 2, 3, 22, 3, 35, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 665, False); alias=default
DEBUG 2024-03-02 23:59:59,152 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 1', 5, '2023-12-01T12:11:56.100163+01:00'::timestamptz, 344, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 1', 5, datetime.datetime(2023, 12, 1, 12, 11, 56, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 344, False); alias=default
DEBUG 2024-03-02 23:59:59,154 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 18', 3, '2023-11-27T01:56:10.100163+01:00'::timestamptz, 922, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 18', 3, datetime.datetime(2023, 11, 27, 1, 56, 10, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 922, False); alias=default
DEBUG 2024-03-02 23:59:59,155 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 11', 2, '2024-01-14T16:49:46.100163+01:00'::timestamptz, 815, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 11', 2, datetime.datetime(2024, 1, 14, 16, 49, 46, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 815, False); alias=default
DEBUG 2024-03-02 23:59:59,157 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 3', 6, '2023-12-14T21:05:41.100163+01:00'::timestamptz, 276, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 3', 6, datetime.datetime(2023, 12, 14, 21, 5, 41, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 276, False); alias=default
DEBUG 2024-03-02 23:59:59,158 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 10', 5, '2023-12-08T11:43:42.100163+01:00'::timestamptz, 11, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 10', 5, datetime.datetime(2023, 12, 8, 11, 43, 42, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 11, False); alias=default
DEBUG 2024-03-02 23:59:59,159 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 7, 'Player 9', 11, '2023-12-25T09:52:51.100163+01:00'::timestamptz, 6, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 7, 'Player 9', 11, datetime.datetime(2023, 12, 25, 9, 52, 51, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 6, False); alias=default
DEBUG 2024-03-02 23:59:59,161 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 18', 0, '2023-11-11T20:04:26.100163+01:00'::timestamptz, 721, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 18', 0, datetime.datetime(2023, 11, 11, 20, 4, 26, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 721, False); alias=default
DEBUG 2024-03-02 23:59:59,162 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 16', 8, '2024-02-06T21:30:11.100163+01:00'::timestamptz, 310, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 16', 8, datetime.datetime(2024, 2, 6, 21, 30, 11, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 310, False); alias=default
DEBUG 2024-03-02 23:59:59,164 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 18', 7, '2023-11-12T08:14:59.100163+01:00'::timestamptz, 355, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 18', 7, datetime.datetime(2023, 11, 12, 8, 14, 59, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 355, False); alias=default
DEBUG 2024-03-02 23:59:59,166 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 5', 8, '2023-12-18T15:14:33.100163+01:00'::timestamptz, 249, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 5', 8, datetime.datetime(2023, 12, 18, 15, 14, 33, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 249, False); alias=default
DEBUG 2024-03-02 23:59:59,167 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 4, 'Player 9', 11, '2023-12-15T09:37:00.100163+01:00'::timestamptz, 150, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 4, 'Player 9', 11, datetime.datetime(2023, 12, 15, 9, 37, 0, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 150, False); alias=default
DEBUG 2024-03-02 23:59:59,169 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 6, 'Player 3', 11, '2023-12-01T14:22:00.100163+01:00'::timestamptz, 748, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 6, 'Player 3', 11, datetime.datetime(2023, 12, 1, 14, 22, 0, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 748, False); alias=default
DEBUG 2024-03-02 23:59:59,171 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 24', 2, '2023-11-02T05:26:27.100163+01:00'::timestamptz, 290, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 24', 2, datetime.datetime(2023, 11, 2, 5, 26, 27, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 290, False); alias=default
DEBUG 2024-03-02 23:59:59,173 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 13', 7, '2023-11-30T10:39:49.100163+01:00'::timestamptz, 511, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 13', 7, datetime.datetime(2023, 11, 30, 10, 39, 49, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 511, False); alias=default
DEBUG 2024-03-02 23:59:59,174 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 9, 'Player 13', 11, '2023-12-18T21:19:27.100163+01:00'::timestamptz, 981, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 9, 'Player 13', 11, datetime.datetime(2023, 12, 18, 21, 19, 27, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 981, False); alias=default
DEBUG 2024-03-02 23:59:59,177 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 4, 'Player 19', 11, '2023-12-17T07:43:41.100163+01:00'::timestamptz, 279, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 4, 'Player 19', 11, datetime.datetime(2023, 12, 17, 7, 43, 41, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 279, False); alias=default
DEBUG 2024-03-02 23:59:59,178 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 2', 2, '2023-11-23T02:44:31.100163+01:00'::timestamptz, 295, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 2', 2, datetime.datetime(2023, 11, 23, 2, 44, 31, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 295, False); alias=default
DEBUG 2024-03-02 23:59:59,180 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 19', 4, '2024-02-12T00:12:13.100163+01:00'::timestamptz, 68, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 19', 4, datetime.datetime(2024, 2, 12, 0, 12, 13, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 68, False); alias=default
DEBUG 2024-03-02 23:59:59,181 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 25', 4, '2023-11-13T17:18:37.100163+01:00'::timestamptz, 959, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 25', 4, datetime.datetime(2023, 11, 13, 17, 18, 37, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 959, False); alias=default
DEBUG 2024-03-02 23:59:59,183 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 11, 'Player 25', 10, '2023-11-11T03:46:39.100163+01:00'::timestamptz, 398, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 11, 'Player 25', 10, datetime.datetime(2023, 11, 11, 3, 46, 39, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 398, False); alias=default
DEBUG 2024-03-02 23:59:59,185 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 7, 'Player 24', 11, '2024-01-02T16:39:43.100163+01:00'::timestamptz, 831, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 7, 'Player 24', 11, datetime.datetime(2024, 1, 2, 16, 39, 43, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 831, False); alias=default
DEBUG 2024-03-02 23:59:59,186 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 8', 10, '2023-11-03T19:41:31.100163+01:00'::timestamptz, 494, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 8', 10, datetime.datetime(2023, 11, 3, 19, 41, 31, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 494, False); alias=default
DEBUG 2024-03-02 23:59:59,188 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 2', 5, '2024-01-08T14:38:10.100163+01:00'::timestamptz, 200, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 2', 5, datetime.datetime(2024, 1, 8, 14, 38, 10, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 200, False); alias=default
DEBUG 2024-03-02 23:59:59,189 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 12', 3, '2023-11-27T09:45:38.100163+01:00'::timestamptz, 515, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 12', 3, datetime.datetime(2023, 11, 27, 9, 45, 38, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 515, False); alias=default
DEBUG 2024-03-02 23:59:59,191 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 16', 8, '2024-02-23T13:08:09.100163+01:00'::timestamptz, 537, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 16', 8, datetime.datetime(2024, 2, 23, 13, 8, 9, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 537, False); alias=default
DEBUG 2024-03-02 23:59:59,192 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 0, 'Player 8', 11, '2024-02-20T15:23:05.100163+01:00'::timestamptz, 707, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 0, 'Player 8', 11, datetime.datetime(2024, 2, 20, 15, 23, 5, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 707, False); alias=default
DEBUG 2024-03-02 23:59:59,194 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 10, 'Player 16', 11, '2024-01-04T18:47:26.100163+01:00'::timestamptz, 590, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 10, 'Player 16', 11, datetime.datetime(2024, 1, 4, 18, 47, 26, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 590, False); alias=default
DEBUG 2024-03-02 23:59:59,195 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 7, 'Player 2', 11, '2024-01-27T01:24:27.100163+01:00'::timestamptz, 681, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 7, 'Player 2', 11, datetime.datetime(2024, 1, 27, 1, 24, 27, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 681, False); alias=default
DEBUG 2024-03-02 23:59:59,196 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 2, 'Player 30', 11, '2023-11-07T22:54:32.100163+01:00'::timestamptz, 178, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 2, 'Player 30', 11, datetime.datetime(2023, 11, 7, 22, 54, 32, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 178, False); alias=default
DEBUG 2024-03-02 23:59:59,197 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 6, 'Player 9', 11, '2024-02-06T17:08:36.100163+01:00'::timestamptz, 371, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 6, 'Player 9', 11, datetime.datetime(2024, 2, 6, 17, 8, 36, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 371, False); alias=default
DEBUG 2024-03-02 23:59:59,199 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 26', 3, '2023-11-04T11:23:19.100163+01:00'::timestamptz, 403, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 26', 3, datetime.datetime(2023, 11, 4, 11, 23, 19, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 403, False); alias=default
DEBUG 2024-03-02 23:59:59,200 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 8', 2, '2024-01-26T19:51:24.100163+01:00'::timestamptz, 554, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 8', 2, datetime.datetime(2024, 1, 26, 19, 51, 24, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 554, False); alias=default
DEBUG 2024-03-02 23:59:59,202 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 3, 'Player 19', 11, '2023-12-03T18:10:33.100163+01:00'::timestamptz, 999, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 3, 'Player 19', 11, datetime.datetime(2023, 12, 3, 18, 10, 33, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 999, False); alias=default
DEBUG 2024-03-02 23:59:59,203 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 22', 5, '2024-02-05T18:27:26.100163+01:00'::timestamptz, 861, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 22', 5, datetime.datetime(2024, 2, 5, 18, 27, 26, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 861, False); alias=default
DEBUG 2024-03-02 23:59:59,204 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 6, 'Player 13', 11, '2024-02-02T21:16:53.100163+01:00'::timestamptz, 725, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 6, 'Player 13', 11, datetime.datetime(2024, 2, 2, 21, 16, 53, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 725, False); alias=default
DEBUG 2024-03-02 23:59:59,206 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 6, 'Player 6', 11, '2024-01-12T22:05:57.100163+01:00'::timestamptz, 57, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 6, 'Player 6', 11, datetime.datetime(2024, 1, 12, 22, 5, 57, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 57, False); alias=default
DEBUG 2024-03-02 23:59:59,207 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 18', 4, '2024-02-02T13:41:28.100163+01:00'::timestamptz, 509, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 18', 4, datetime.datetime(2024, 2, 2, 13, 41, 28, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 509, False); alias=default
DEBUG 2024-03-02 23:59:59,208 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 21', 7, '2023-12-30T17:48:10.100163+01:00'::timestamptz, 870, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 21', 7, datetime.datetime(2023, 12, 30, 17, 48, 10, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 870, False); alias=default
DEBUG 2024-03-02 23:59:59,210 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 34', 4, '2023-11-25T00:45:01.100163+01:00'::timestamptz, 26, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 34', 4, datetime.datetime(2023, 11, 25, 0, 45, 1, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 26, False); alias=default
DEBUG 2024-03-02 23:59:59,211 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 2, 'Player 11', 11, '2023-11-11T15:22:45.100163+01:00'::timestamptz, 994, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 2, 'Player 11', 11, datetime.datetime(2023, 11, 11, 15, 22, 45, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 994, False); alias=default
DEBUG 2024-03-02 23:59:59,213 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 35', 9, '2024-01-23T15:24:57.100163+01:00'::timestamptz, 829, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 35', 9, datetime.datetime(2024, 1, 23, 15, 24, 57, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 829, False); alias=default
DEBUG 2024-03-02 23:59:59,215 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 35', 8, '2024-02-29T02:55:16.100163+01:00'::timestamptz, 471, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 35', 8, datetime.datetime(2024, 2, 29, 2, 55, 16, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 471, False); alias=default
DEBUG 2024-03-02 23:59:59,216 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 3, 'Player 16', 11, '2024-02-05T23:22:37.100163+01:00'::timestamptz, 807, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 3, 'Player 16', 11, datetime.datetime(2024, 2, 5, 23, 22, 37, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 807, False); alias=default
DEBUG 2024-03-02 23:59:59,218 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 3, 'Player 18', 11, '2024-01-22T18:27:24.100163+01:00'::timestamptz, 966, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 3, 'Player 18', 11, datetime.datetime(2024, 1, 22, 18, 27, 24, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 966, False); alias=default
DEBUG 2024-03-02 23:59:59,220 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 6, 'Player 6', 11, '2024-02-17T19:58:54.100163+01:00'::timestamptz, 722, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 6, 'Player 6', 11, datetime.datetime(2024, 2, 17, 19, 58, 54, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 722, False); alias=default
DEBUG 2024-03-02 23:59:59,222 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 11, 'Player 28', 9, '2023-12-12T19:23:35.100163+01:00'::timestamptz, 361, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 11, 'Player 28', 9, datetime.datetime(2023, 12, 12, 19, 23, 35, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 361, False); alias=default
DEBUG 2024-03-02 23:59:59,242 utils (0.017) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 19', 4, '2024-02-01T15:47:21.100163+01:00'::timestamptz, 497, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 19', 4, datetime.datetime(2024, 2, 1, 15, 47, 21, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 497, False); alias=default
DEBUG 2024-03-02 23:59:59,244 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 6, 'Player 4', 11, '2023-11-20T23:27:50.100163+01:00'::timestamptz, 514, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 6, 'Player 4', 11, datetime.datetime(2023, 11, 20, 23, 27, 50, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 514, False); alias=default
DEBUG 2024-03-02 23:59:59,246 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 3, 'Player 16', 11, '2024-02-14T07:38:22.100163+01:00'::timestamptz, 552, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 3, 'Player 16', 11, datetime.datetime(2024, 2, 14, 7, 38, 22, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 552, False); alias=default
DEBUG 2024-03-02 23:59:59,248 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 6, 'Player 9', 11, '2024-03-01T06:31:40.100163+01:00'::timestamptz, 724, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 6, 'Player 9', 11, datetime.datetime(2024, 3, 1, 6, 31, 40, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 724, False); alias=default
DEBUG 2024-03-02 23:59:59,249 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 9, 'Player 7', 11, '2023-11-27T22:39:03.100163+01:00'::timestamptz, 831, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 9, 'Player 7', 11, datetime.datetime(2023, 11, 27, 22, 39, 3, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 831, False); alias=default
DEBUG 2024-03-02 23:59:59,252 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 10', 6, '2023-11-03T07:29:15.100163+01:00'::timestamptz, 862, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 10', 6, datetime.datetime(2023, 11, 3, 7, 29, 15, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 862, False); alias=default
DEBUG 2024-03-02 23:59:59,253 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 11, 'Player 34', 0, '2024-02-10T05:27:09.100163+01:00'::timestamptz, 178, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 11, 'Player 34', 0, datetime.datetime(2024, 2, 10, 5, 27, 9, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 178, False); alias=default
DEBUG 2024-03-02 23:59:59,255 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 10, 'Player 8', 11, '2023-12-10T12:05:06.100163+01:00'::timestamptz, 224, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 10, 'Player 8', 11, datetime.datetime(2023, 12, 10, 12, 5, 6, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 224, False); alias=default
DEBUG 2024-03-02 23:59:59,257 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 1, 'Player 14', 11, '2024-01-04T22:37:53.100163+01:00'::timestamptz, 329, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 1, 'Player 14', 11, datetime.datetime(2024, 1, 4, 22, 37, 53, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 329, False); alias=default
DEBUG 2024-03-02 23:59:59,258 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 6, 'Player 2', 11, '2024-01-19T15:02:41.100163+01:00'::timestamptz, 946, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 6, 'Player 2', 11, datetime.datetime(2024, 1, 19, 15, 2, 41, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 946, False); alias=default
DEBUG 2024-03-02 23:59:59,262 utils (0.003) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 46', 9, 'Player 1', 11, '2024-02-03T03:45:11.100163+01:00'::timestamptz, 826, false) RETURNING "pong_gamedata"."id"; args=('Player 46', 9, 'Player 1', 11, datetime.datetime(2024, 2, 3, 3, 45, 11, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 826, False); alias=default
DEBUG 2024-03-02 23:59:59,265 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 4, 'Player 24', 11, '2023-11-09T18:26:53.100163+01:00'::timestamptz, 714, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 4, 'Player 24', 11, datetime.datetime(2023, 11, 9, 18, 26, 53, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 714, False); alias=default
DEBUG 2024-03-02 23:59:59,268 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 14', 7, '2024-01-24T04:02:08.100163+01:00'::timestamptz, 986, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 14', 7, datetime.datetime(2024, 1, 24, 4, 2, 8, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 986, False); alias=default
DEBUG 2024-03-02 23:59:59,271 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 9, 'Player 44', 11, '2023-11-17T14:19:01.100163+01:00'::timestamptz, 843, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 9, 'Player 44', 11, datetime.datetime(2023, 11, 17, 14, 19, 1, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 843, False); alias=default
DEBUG 2024-03-02 23:59:59,273 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 8, 'Player 12', 11, '2024-01-10T08:54:30.100163+01:00'::timestamptz, 884, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 8, 'Player 12', 11, datetime.datetime(2024, 1, 10, 8, 54, 30, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 884, False); alias=default
DEBUG 2024-03-02 23:59:59,275 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 11, 'Player 45', 4, '2024-02-11T17:25:06.100163+01:00'::timestamptz, 443, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 11, 'Player 45', 4, datetime.datetime(2024, 2, 11, 17, 25, 6, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 443, False); alias=default
DEBUG 2024-03-02 23:59:59,276 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 5, 'Player 4', 11, '2023-12-03T02:18:19.100163+01:00'::timestamptz, 416, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 5, 'Player 4', 11, datetime.datetime(2023, 12, 3, 2, 18, 19, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 416, False); alias=default
DEBUG 2024-03-02 23:59:59,278 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 9, 'Player 34', 11, '2023-11-21T07:53:45.100163+01:00'::timestamptz, 517, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 9, 'Player 34', 11, datetime.datetime(2023, 11, 21, 7, 53, 45, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 517, False); alias=default
DEBUG 2024-03-02 23:59:59,279 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 4, 'Player 50', 11, '2024-02-02T12:16:05.100163+01:00'::timestamptz, 730, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 4, 'Player 50', 11, datetime.datetime(2024, 2, 2, 12, 16, 5, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 730, False); alias=default
DEBUG 2024-03-02 23:59:59,281 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 4, 'Player 22', 11, '2024-02-25T09:15:36.100163+01:00'::timestamptz, 940, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 4, 'Player 22', 11, datetime.datetime(2024, 2, 25, 9, 15, 36, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 940, False); alias=default
DEBUG 2024-03-02 23:59:59,283 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 50', 11, 'Player 0', 8, '2023-11-15T10:15:15.100163+01:00'::timestamptz, 978, false) RETURNING "pong_gamedata"."id"; args=('Player 50', 11, 'Player 0', 8, datetime.datetime(2023, 11, 15, 10, 15, 15, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 978, False); alias=default
DEBUG 2024-03-02 23:59:59,284 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 0, 'Player 35', 11, '2024-01-25T11:22:21.100163+01:00'::timestamptz, 333, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 0, 'Player 35', 11, datetime.datetime(2024, 1, 25, 11, 22, 21, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 333, False); alias=default
DEBUG 2024-03-02 23:59:59,286 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 45', 2, '2024-01-20T10:19:07.100163+01:00'::timestamptz, 338, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 45', 2, datetime.datetime(2024, 1, 20, 10, 19, 7, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 338, False); alias=default
DEBUG 2024-03-02 23:59:59,287 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 52', 9, 'Player 4', 11, '2024-01-09T16:52:50.100163+01:00'::timestamptz, 460, false) RETURNING "pong_gamedata"."id"; args=('Player 52', 9, 'Player 4', 11, datetime.datetime(2024, 1, 9, 16, 52, 50, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 460, False); alias=default
DEBUG 2024-03-02 23:59:59,289 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 2, 'Player 24', 11, '2023-11-29T16:55:55.100163+01:00'::timestamptz, 664, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 2, 'Player 24', 11, datetime.datetime(2023, 11, 29, 16, 55, 55, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 664, False); alias=default
DEBUG 2024-03-02 23:59:59,291 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 3, 'Player 10', 11, '2023-12-12T14:22:45.100163+01:00'::timestamptz, 266, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 3, 'Player 10', 11, datetime.datetime(2023, 12, 12, 14, 22, 45, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 266, False); alias=default
DEBUG 2024-03-02 23:59:59,293 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 11, 'Player 8', 4, '2023-11-22T03:09:43.100163+01:00'::timestamptz, 656, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 11, 'Player 8', 4, datetime.datetime(2023, 11, 22, 3, 9, 43, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 656, False); alias=default
DEBUG 2024-03-02 23:59:59,295 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 4, 'Player 6', 11, '2023-12-18T16:45:44.100163+01:00'::timestamptz, 770, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 4, 'Player 6', 11, datetime.datetime(2023, 12, 18, 16, 45, 44, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 770, False); alias=default
DEBUG 2024-03-02 23:59:59,296 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 37', 9, '2023-12-10T16:38:29.100163+01:00'::timestamptz, 930, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 37', 9, datetime.datetime(2023, 12, 10, 16, 38, 29, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 930, False); alias=default
DEBUG 2024-03-02 23:59:59,298 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 1, 'Player 0', 11, '2024-01-21T19:12:20.100163+01:00'::timestamptz, 858, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 1, 'Player 0', 11, datetime.datetime(2024, 1, 21, 19, 12, 20, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 858, False); alias=default
DEBUG 2024-03-02 23:59:59,300 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 11, 'Player 27', 0, '2024-01-23T05:05:04.100163+01:00'::timestamptz, 458, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 11, 'Player 27', 0, datetime.datetime(2024, 1, 23, 5, 5, 4, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 458, False); alias=default
DEBUG 2024-03-02 23:59:59,302 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 0, 'Player 22', 11, '2024-01-15T20:58:01.100163+01:00'::timestamptz, 424, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 0, 'Player 22', 11, datetime.datetime(2024, 1, 15, 20, 58, 1, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 424, False); alias=default
DEBUG 2024-03-02 23:59:59,304 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 9, 'Player 48', 11, '2023-11-06T09:30:22.100163+01:00'::timestamptz, 277, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 9, 'Player 48', 11, datetime.datetime(2023, 11, 6, 9, 30, 22, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 277, False); alias=default
DEBUG 2024-03-02 23:59:59,307 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 47', 11, 'Player 13', 6, '2023-12-06T20:51:01.100163+01:00'::timestamptz, 665, false) RETURNING "pong_gamedata"."id"; args=('Player 47', 11, 'Player 13', 6, datetime.datetime(2023, 12, 6, 20, 51, 1, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 665, False); alias=default
DEBUG 2024-03-02 23:59:59,308 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 52', 0, '2023-12-01T05:11:37.100163+01:00'::timestamptz, 475, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 52', 0, datetime.datetime(2023, 12, 1, 5, 11, 37, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 475, False); alias=default
DEBUG 2024-03-02 23:59:59,310 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 11, 'Player 59', 0, '2024-02-22T23:12:48.100163+01:00'::timestamptz, 14, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 11, 'Player 59', 0, datetime.datetime(2024, 2, 22, 23, 12, 48, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 14, False); alias=default
DEBUG 2024-03-02 23:59:59,311 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 0, 'Player 59', 11, '2023-11-30T04:47:31.100163+01:00'::timestamptz, 853, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 0, 'Player 59', 11, datetime.datetime(2023, 11, 30, 4, 47, 31, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 853, False); alias=default
DEBUG 2024-03-02 23:59:59,313 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 9, 'Player 39', 11, '2023-12-25T00:23:45.100163+01:00'::timestamptz, 510, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 9, 'Player 39', 11, datetime.datetime(2023, 12, 25, 0, 23, 45, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 510, False); alias=default
DEBUG 2024-03-02 23:59:59,314 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 58', 5, 'Player 17', 11, '2024-01-24T14:46:14.100163+01:00'::timestamptz, 387, false) RETURNING "pong_gamedata"."id"; args=('Player 58', 5, 'Player 17', 11, datetime.datetime(2024, 1, 24, 14, 46, 14, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 387, False); alias=default
DEBUG 2024-03-02 23:59:59,315 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 11, 'Player 23', 7, '2023-11-24T18:32:20.100163+01:00'::timestamptz, 509, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 11, 'Player 23', 7, datetime.datetime(2023, 11, 24, 18, 32, 20, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 509, False); alias=default
DEBUG 2024-03-02 23:59:59,317 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 47', 11, 'Player 0', 7, '2024-01-01T11:22:30.100163+01:00'::timestamptz, 35, false) RETURNING "pong_gamedata"."id"; args=('Player 47', 11, 'Player 0', 7, datetime.datetime(2024, 1, 1, 11, 22, 30, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 35, False); alias=default
DEBUG 2024-03-02 23:59:59,318 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 9, 'Player 28', 11, '2023-11-05T08:54:32.100163+01:00'::timestamptz, 497, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 9, 'Player 28', 11, datetime.datetime(2023, 11, 5, 8, 54, 32, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 497, False); alias=default
DEBUG 2024-03-02 23:59:59,319 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 49', 11, 'Player 44', 9, '2023-12-04T14:15:05.100163+01:00'::timestamptz, 613, false) RETURNING "pong_gamedata"."id"; args=('Player 49', 11, 'Player 44', 9, datetime.datetime(2023, 12, 4, 14, 15, 5, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 613, False); alias=default
DEBUG 2024-03-02 23:59:59,321 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 58', 11, 'Player 27', 4, '2023-11-30T11:18:37.100163+01:00'::timestamptz, 77, false) RETURNING "pong_gamedata"."id"; args=('Player 58', 11, 'Player 27', 4, datetime.datetime(2023, 11, 30, 11, 18, 37, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 77, False); alias=default
DEBUG 2024-03-02 23:59:59,322 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 2, 'Player 43', 11, '2024-01-29T18:12:08.100163+01:00'::timestamptz, 833, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 2, 'Player 43', 11, datetime.datetime(2024, 1, 29, 18, 12, 8, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 833, False); alias=default
DEBUG 2024-03-02 23:59:59,324 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 55', 11, 'Player 44', 8, '2023-11-16T00:30:04.100163+01:00'::timestamptz, 729, false) RETURNING "pong_gamedata"."id"; args=('Player 55', 11, 'Player 44', 8, datetime.datetime(2023, 11, 16, 0, 30, 4, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 729, False); alias=default
DEBUG 2024-03-02 23:59:59,326 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 5, 'Player 4', 11, '2023-12-25T04:56:12.100163+01:00'::timestamptz, 325, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 5, 'Player 4', 11, datetime.datetime(2023, 12, 25, 4, 56, 12, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 325, False); alias=default
DEBUG 2024-03-02 23:59:59,327 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 7, 'Player 15', 11, '2024-01-15T13:23:14.100163+01:00'::timestamptz, 23, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 7, 'Player 15', 11, datetime.datetime(2024, 1, 15, 13, 23, 14, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 23, False); alias=default
DEBUG 2024-03-02 23:59:59,328 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,329 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 7, 'Player 13', 11, '2023-11-18T05:58:13.100163+01:00'::timestamptz, 467, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 7, 'Player 13', 11, datetime.datetime(2023, 11, 18, 5, 58, 13, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 467, True); alias=default
DEBUG 2024-03-02 23:59:59,331 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 4', 1, '2023-11-18T05:48:24.100163+01:00'::timestamptz, 285, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 4', 1, datetime.datetime(2023, 11, 18, 5, 48, 24, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 285, True); alias=default
DEBUG 2024-03-02 23:59:59,333 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 3', 9, '2023-11-18T05:59:30.100163+01:00'::timestamptz, 398, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 3', 9, datetime.datetime(2023, 11, 18, 5, 59, 30, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 398, True); alias=default
DEBUG 2024-03-02 23:59:59,334 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2023-11-18T05:59:30.100163+01:00'::timestamptz, 951, '["Player 13", "Player 3", "Player 9", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2023, 11, 18, 5, 59, 30, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 951, <psycopg2._json.Json object at 0x7fb68e9666f0>, '0x0'); alias=default
DEBUG 2024-03-02 23:59:59,336 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 9', 6, '2024-01-07T15:25:47.100163+01:00'::timestamptz, 467, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 9', 6, datetime.datetime(2024, 1, 7, 15, 25, 47, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 467, True); alias=default
DEBUG 2024-03-02 23:59:59,337 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 3, 'Player 2', 11, '2024-01-07T15:30:20.100163+01:00'::timestamptz, 538, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 3, 'Player 2', 11, datetime.datetime(2024, 1, 7, 15, 30, 20, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 538, True); alias=default
DEBUG 2024-03-02 23:59:59,339 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 2', 6, '2024-01-07T15:32:38.100163+01:00'::timestamptz, 184, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 2', 6, datetime.datetime(2024, 1, 7, 15, 32, 38, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 184, True); alias=default
DEBUG 2024-03-02 23:59:59,340 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2024-01-07T15:32:38.100163+01:00'::timestamptz, 878, '["Player 5", "Player 2", "Player 9", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2024, 1, 7, 15, 32, 38, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 878, <psycopg2._json.Json object at 0x7fb68e8f6f90>, '0x0'); alias=default
DEBUG 2024-03-02 23:59:59,342 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 10, 'Player 3', 11, '2023-12-20T14:20:52.100163+01:00'::timestamptz, 172, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 10, 'Player 3', 11, datetime.datetime(2023, 12, 20, 14, 20, 52, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 172, True); alias=default
DEBUG 2024-03-02 23:59:59,344 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 9', 8, '2023-12-20T14:14:29.100163+01:00'::timestamptz, 140, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 9', 8, datetime.datetime(2023, 12, 20, 14, 14, 29, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 140, True); alias=default
DEBUG 2024-03-02 23:59:59,346 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 5, 'Player 8', 11, '2023-12-20T14:23:16.100163+01:00'::timestamptz, 547, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 5, 'Player 8', 11, datetime.datetime(2023, 12, 20, 14, 23, 16, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 547, True); alias=default
DEBUG 2024-03-02 23:59:59,348 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2023-12-20T14:23:16.100163+01:00'::timestamptz, 667, '["Player 8", "Player 3", "Player 14", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2023, 12, 20, 14, 23, 16, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 667, <psycopg2._json.Json object at 0x7fb68e9133e0>, '0x0'); alias=default
DEBUG 2024-03-02 23:59:59,350 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 16', 1, '2023-12-17T04:08:23.100163+01:00'::timestamptz, 882, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 16', 1, datetime.datetime(2023, 12, 17, 4, 8, 23, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 882, True); alias=default
DEBUG 2024-03-02 23:59:59,351 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 11', 2, '2023-12-17T04:07:03.100163+01:00'::timestamptz, 562, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 11', 2, datetime.datetime(2023, 12, 17, 4, 7, 3, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 562, True); alias=default
DEBUG 2024-03-02 23:59:59,353 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 2, 'Player 15', 11, '2023-12-17T04:08:34.100163+01:00'::timestamptz, 215, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 2, 'Player 15', 11, datetime.datetime(2023, 12, 17, 4, 8, 34, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 215, True); alias=default
DEBUG 2024-03-02 23:59:59,354 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2023-12-17T04:08:34.100163+01:00'::timestamptz, 893, '["Player 15", "Player 12", "Player 16", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2023, 12, 17, 4, 8, 34, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 893, <psycopg2._json.Json object at 0x7fb68e9109b0>, '0x0'); alias=default
DEBUG 2024-03-02 23:59:59,355 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 4', 6, '2024-01-27T07:17:55.100163+01:00'::timestamptz, 108, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 4', 6, datetime.datetime(2024, 1, 27, 7, 17, 55, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 108, True); alias=default
DEBUG 2024-03-02 23:59:59,356 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 2', 3, '2024-01-27T07:26:42.100163+01:00'::timestamptz, 785, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 2', 3, datetime.datetime(2024, 1, 27, 7, 26, 42, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 785, True); alias=default
DEBUG 2024-03-02 23:59:59,358 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 13', 6, '2024-01-27T07:28:22.100163+01:00'::timestamptz, 564, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 13', 6, datetime.datetime(2024, 1, 27, 7, 28, 22, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 564, True); alias=default
DEBUG 2024-03-02 23:59:59,359 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2024-01-27T07:28:22.100163+01:00'::timestamptz, 885, '["Player 0", "Player 13", "Player 4", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2024, 1, 27, 7, 28, 22, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 885, <psycopg2._json.Json object at 0x7fb68e8e4e00>, '0x0'); alias=default
DEBUG 2024-03-02 23:59:59,361 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 11', 1, '2023-12-05T10:15:09.100163+01:00'::timestamptz, 4, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 11', 1, datetime.datetime(2023, 12, 5, 10, 15, 9, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 4, True); alias=default
DEBUG 2024-03-02 23:59:59,362 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 1, 'Player 15', 11, '2023-12-05T10:26:20.100163+01:00'::timestamptz, 412, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 1, 'Player 15', 11, datetime.datetime(2023, 12, 5, 10, 26, 20, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 412, True); alias=default
DEBUG 2024-03-02 23:59:59,363 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 2, 'Player 15', 11, '2023-12-05T10:29:20.100163+01:00'::timestamptz, 323, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 2, 'Player 15', 11, datetime.datetime(2023, 12, 5, 10, 29, 20, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 323, True); alias=default
DEBUG 2024-03-02 23:59:59,365 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2023-12-05T10:29:20.100163+01:00'::timestamptz, 855, '["Player 15", "Player 1", "Player 11", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2023, 12, 5, 10, 29, 20, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 855, <psycopg2._json.Json object at 0x7fb68e9108c0>, '0x0'); alias=default
DEBUG 2024-03-02 23:59:59,366 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 6, 'Player 0', 11, '2024-01-08T15:05:37.100163+01:00'::timestamptz, 814, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 6, 'Player 0', 11, datetime.datetime(2024, 1, 8, 15, 5, 37, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 814, True); alias=default
DEBUG 2024-03-02 23:59:59,368 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 6', 9, '2024-01-08T15:02:13.100163+01:00'::timestamptz, 755, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 6', 9, datetime.datetime(2024, 1, 8, 15, 2, 13, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 755, True); alias=default
DEBUG 2024-03-02 23:59:59,369 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 8', 0, '2024-01-08T15:05:45.100163+01:00'::timestamptz, 873, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 8', 0, datetime.datetime(2024, 1, 8, 15, 5, 45, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 873, True); alias=default
DEBUG 2024-03-02 23:59:59,370 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2024-01-08T15:05:45.100163+01:00'::timestamptz, 967, '["Player 0", "Player 8", "Player 5", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2024, 1, 8, 15, 5, 45, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 967, <psycopg2._json.Json object at 0x7fb68e913560>, '0x0'); alias=default
DEBUG 2024-03-02 23:59:59,372 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 9', 10, '2023-12-10T23:12:57.100163+01:00'::timestamptz, 248, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 9', 10, datetime.datetime(2023, 12, 10, 23, 12, 57, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 248, True); alias=default
DEBUG 2024-03-02 23:59:59,373 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 9, 'Player 6', 11, '2023-12-10T23:13:28.100163+01:00'::timestamptz, 618, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 9, 'Player 6', 11, datetime.datetime(2023, 12, 10, 23, 13, 28, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 618, True); alias=default
DEBUG 2024-03-02 23:59:59,374 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 10, 'Player 6', 11, '2023-12-10T23:15:59.100163+01:00'::timestamptz, 416, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 10, 'Player 6', 11, datetime.datetime(2023, 12, 10, 23, 15, 59, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 416, True); alias=default
DEBUG 2024-03-02 23:59:59,376 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2023-12-10T23:15:59.100163+01:00'::timestamptz, 769, '["Player 6", "Player 4", "Player 9", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2023, 12, 10, 23, 15, 59, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 769, <psycopg2._json.Json object at 0x7fb68e911b20>, '0x0'); alias=default
DEBUG 2024-03-02 23:59:59,377 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 6, 'Player 12', 11, '2023-12-16T10:23:07.100163+01:00'::timestamptz, 886, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 6, 'Player 12', 11, datetime.datetime(2023, 12, 16, 10, 23, 7, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 886, True); alias=default
DEBUG 2024-03-02 23:59:59,378 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 6, 'Player 8', 11, '2023-12-16T10:22:25.100163+01:00'::timestamptz, 932, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 6, 'Player 8', 11, datetime.datetime(2023, 12, 16, 10, 22, 25, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 932, True); alias=default
DEBUG 2024-03-02 23:59:59,380 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 0, 'Player 8', 11, '2023-12-16T10:23:21.100163+01:00'::timestamptz, 77, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 0, 'Player 8', 11, datetime.datetime(2023, 12, 16, 10, 23, 21, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 77, True); alias=default
DEBUG 2024-03-02 23:59:59,381 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2023-12-16T10:23:21.100163+01:00'::timestamptz, 988, '["Player 8", "Player 12", "Player 1", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2023, 12, 16, 10, 23, 21, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 988, <psycopg2._json.Json object at 0x7fb68e8f72f0>, '0x0'); alias=default
DEBUG 2024-03-02 23:59:59,383 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 15', 3, '2024-02-10T03:49:10.100163+01:00'::timestamptz, 263, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 15', 3, datetime.datetime(2024, 2, 10, 3, 49, 10, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 263, True); alias=default
DEBUG 2024-03-02 23:59:59,384 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 3, 'Player 12', 11, '2024-02-10T03:46:33.100163+01:00'::timestamptz, 708, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 3, 'Player 12', 11, datetime.datetime(2024, 2, 10, 3, 46, 33, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 708, True); alias=default
DEBUG 2024-03-02 23:59:59,386 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 12', 9, '2024-02-10T03:50:41.100163+01:00'::timestamptz, 418, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 12', 9, datetime.datetime(2024, 2, 10, 3, 50, 41, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 418, True); alias=default
DEBUG 2024-03-02 23:59:59,387 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2024-02-10T03:50:41.100163+01:00'::timestamptz, 956, '["Player 13", "Player 12", "Player 15", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2024, 2, 10, 3, 50, 41, 100163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 956, <psycopg2._json.Json object at 0x7fb68e9138f0>, '0x0'); alias=default
DEBUG 2024-03-02 23:59:59,388 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,389 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,390 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-02 23:59:59,390 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:59,391 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-02 23:59:59,391 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:59,392 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-02 23:59:59,394 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-02 23:59:59,395 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-02 23:59:59,396 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-02 23:59:59,397 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:59,398 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-02 23:59:59,400 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:59,401 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-02 23:59:59,402 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,402 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,403 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,404 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,405 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,406 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,407 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-02 23:59:59,407 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:59,408 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-02 23:59:59,408 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:59,409 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-02 23:59:59,411 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-02 23:59:59,411 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:59,411 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-02 23:59:59,412 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:59,413 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-02 23:59:59,415 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,416 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,417 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,418 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,419 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,420 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,420 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-02 23:59:59,421 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:59,421 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-02 23:59:59,422 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:59,423 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-02 23:59:59,424 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-02 23:59:59,425 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:59,425 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-02 23:59:59,426 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:59,427 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-02 23:59:59,428 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,428 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,429 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,430 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,432 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,433 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,434 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-02 23:59:59,434 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:59,435 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-02 23:59:59,436 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:59,437 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-02 23:59:59,438 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-02 23:59:59,439 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-02 23:59:59,440 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:59:59,440 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-02 23:59:59,441 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:59:59,442 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-02 23:59:59,443 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,444 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,444 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,445 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,446 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:59:59,448 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
