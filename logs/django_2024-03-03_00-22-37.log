DEBUG 2024-03-03 00:22:39,006 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,008 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,010 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,010 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,010 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 00:22:39,027 utils (0.016) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:22:39,028 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,029 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,032 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 00:22:39,035 utils (0.003) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:22:39,037 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 00:22:39,039 utils (0.002) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 00:22:39,040 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,042 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T00:22:39.040808+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 0, 22, 39, 40808, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:22:39,043 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,044 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,047 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 00:22:39,051 utils (0.003) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:22:39,053 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 00:22:39,057 utils (0.003) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 00:22:39,058 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:22:39,061 utils (0.002) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:22:39,072 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 00:22:39,077 utils (0.005) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:22:39,079 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:22:39,083 utils (0.004) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:22:39,084 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:22:39,088 utils (0.003) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:22:39,088 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 00:22:39,090 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 00:22:39,091 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:22:39,092 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:22:39,093 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 00:22:39,095 utils (0.002) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 00:22:39,096 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 00:22:39,100 utils (0.003) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 00:22:39,100 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 00:22:39,103 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:22:39,103 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:22:39,104 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:22:39,105 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:22:39,106 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:22:39,106 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 00:22:39,108 utils (0.002) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 00:22:39,108 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 00:22:39,110 utils (0.002) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:22:39,110 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 00:22:39,112 utils (0.002) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 00:22:39,113 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 00:22:39,116 utils (0.003) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 00:22:39,116 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:22:39,118 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:22:39,118 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:22:39,119 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:22:39,119 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 00:22:39,121 utils (0.002) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 00:22:39,121 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 00:22:39,123 utils (0.002) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 00:22:39,123 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 00:22:39,125 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:22:39,125 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:22:39,126 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:22:39,126 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:22:39,127 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:22:39,127 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 00:22:39,130 utils (0.002) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 00:22:39,130 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 00:22:39,133 utils (0.002) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:22:39,134 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,136 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,137 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T00:22:39.136242+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 0, 22, 39, 136242, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:22:39,137 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,143 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:22:39,148 utils (0.005) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:22:39,149 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:22:39,150 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:22:39,150 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:22:39,152 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:22:39,152 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 00:22:39,154 utils (0.002) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 00:22:39,154 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 00:22:39,156 utils (0.002) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 00:22:39,157 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,158 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,159 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T00:22:39.158486+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 0, 22, 39, 158486, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:22:39,159 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,174 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,175 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T00:22:39.174904+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 0, 22, 39, 174904, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:22:39,176 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,177 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,192 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,192 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T00:22:39.192384+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 0, 22, 39, 192384, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:22:39,193 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,194 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,205 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 00:22:39,206 utils (0.001) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 00:22:39,219 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 00:22:39,219 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 00:22:39,221 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,222 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T00:22:39.221482+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 0, 22, 39, 221482, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:22:39,223 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,224 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,236 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 00:22:39,237 utils (0.001) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 00:22:39,239 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,240 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T00:22:39.239414+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 0, 22, 39, 239414, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:22:39,241 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,241 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,254 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 00:22:39,255 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 00:22:39,257 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,258 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T00:22:39.257480+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 0, 22, 39, 257480, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:22:39,259 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,259 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,277 utils (0.003) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,278 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T00:22:39.277965+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 0, 22, 39, 277965, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:22:39,279 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,279 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,288 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 00:22:39,288 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 00:22:39,289 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,290 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T00:22:39.290277+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 0, 22, 39, 290277, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:22:39,291 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,291 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,293 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,293 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T00:22:39.293316+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 0, 22, 39, 293316, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:22:39,294 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,294 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,308 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,309 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T00:22:39.309242+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 0, 22, 39, 309242, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:22:39,310 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,310 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,319 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:22:39,322 utils (0.003) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:22:39,324 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,324 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T00:22:39.324271+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 0, 22, 39, 324271, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:22:39,325 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,326 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,338 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:22:39,339 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:22:39,340 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,341 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T00:22:39.341202+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 0, 22, 39, 341202, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:22:39,342 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,342 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,353 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:22:39,354 utils (0.001) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:22:39,356 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,357 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T00:22:39.356439+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 0, 22, 39, 356439, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:22:39,358 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,358 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,370 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,371 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T00:22:39.370922+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 0, 22, 39, 370922, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:22:39,372 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,372 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,382 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:22:39,383 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:22:39,384 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,385 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T00:22:39.384767+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 0, 22, 39, 384767, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:22:39,386 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,386 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,387 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 00:22:39,392 utils (0.005) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:22:39,393 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 00:22:39,401 utils (0.007) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 00:22:39,403 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,404 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T00:22:39.403405+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 0, 22, 39, 403405, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:22:39,405 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,405 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,407 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 00:22:39,411 utils (0.004) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:22:39,412 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 00:22:39,415 utils (0.003) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 00:22:39,416 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 00:22:39,418 utils (0.002) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 00:22:39,419 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,421 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,424 utils (0.002) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T00:22:39.422033+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 0, 22, 39, 422033, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:22:39,426 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:22:39,428 utils (0.001) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,450 utils (0.004) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 00:22:39,451 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,453 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 00:22:39,454 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,456 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 00:22:39,460 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 00:22:39,461 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,462 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 00:22:39,466 utils (0.004) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,468 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 00:22:39,472 utils (0.003) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,475 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,477 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,516 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 1, 'Player 0', 11, '2023-11-16T12:51:19.476288+01:00'::timestamptz, 281, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 1, 'Player 0', 11, datetime.datetime(2023, 11, 16, 12, 51, 19, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 281, False); alias=default
DEBUG 2024-03-03 00:22:39,519 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 4, 'Player 9', 11, '2023-11-07T15:38:23.476288+01:00'::timestamptz, 413, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 4, 'Player 9', 11, datetime.datetime(2023, 11, 7, 15, 38, 23, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 413, False); alias=default
DEBUG 2024-03-03 00:22:39,521 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 12', 2, '2023-11-20T05:59:48.476288+01:00'::timestamptz, 549, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 12', 2, datetime.datetime(2023, 11, 20, 5, 59, 48, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 549, False); alias=default
DEBUG 2024-03-03 00:22:39,522 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 5, 'Player 5', 11, '2023-11-12T09:52:22.476288+01:00'::timestamptz, 320, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 5, 'Player 5', 11, datetime.datetime(2023, 11, 12, 9, 52, 22, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 320, False); alias=default
DEBUG 2024-03-03 00:22:39,525 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 10, 'Player 7', 11, '2023-12-23T18:40:48.476288+01:00'::timestamptz, 785, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 10, 'Player 7', 11, datetime.datetime(2023, 12, 23, 18, 40, 48, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 785, False); alias=default
DEBUG 2024-03-03 00:22:39,526 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 15', 4, '2023-12-15T20:37:33.476288+01:00'::timestamptz, 602, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 15', 4, datetime.datetime(2023, 12, 15, 20, 37, 33, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 602, False); alias=default
DEBUG 2024-03-03 00:22:39,528 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 4, 'Player 14', 11, '2023-11-12T17:52:52.476288+01:00'::timestamptz, 786, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 4, 'Player 14', 11, datetime.datetime(2023, 11, 12, 17, 52, 52, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 786, False); alias=default
DEBUG 2024-03-03 00:22:39,529 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 18', 6, '2024-01-22T12:46:05.476288+01:00'::timestamptz, 156, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 18', 6, datetime.datetime(2024, 1, 22, 12, 46, 5, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 156, False); alias=default
DEBUG 2024-03-03 00:22:39,531 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 16', 8, '2024-02-18T21:14:27.476288+01:00'::timestamptz, 221, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 16', 8, datetime.datetime(2024, 2, 18, 21, 14, 27, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 221, False); alias=default
DEBUG 2024-03-03 00:22:39,532 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 13', 5, '2024-02-12T04:43:51.476288+01:00'::timestamptz, 223, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 13', 5, datetime.datetime(2024, 2, 12, 4, 43, 51, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 223, False); alias=default
DEBUG 2024-03-03 00:22:39,534 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 1, 'Player 11', 11, '2024-02-02T03:02:04.476288+01:00'::timestamptz, 273, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 1, 'Player 11', 11, datetime.datetime(2024, 2, 2, 3, 2, 4, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 273, False); alias=default
DEBUG 2024-03-03 00:22:39,536 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 3, 'Player 9', 11, '2024-01-08T11:50:32.476288+01:00'::timestamptz, 821, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 3, 'Player 9', 11, datetime.datetime(2024, 1, 8, 11, 50, 32, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 821, False); alias=default
DEBUG 2024-03-03 00:22:39,539 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 6, 'Player 2', 11, '2023-11-13T22:42:02.476288+01:00'::timestamptz, 414, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 6, 'Player 2', 11, datetime.datetime(2023, 11, 13, 22, 42, 2, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 414, False); alias=default
DEBUG 2024-03-03 00:22:39,541 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 2, 'Player 9', 11, '2024-02-07T20:35:06.476288+01:00'::timestamptz, 402, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 2, 'Player 9', 11, datetime.datetime(2024, 2, 7, 20, 35, 6, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 402, False); alias=default
DEBUG 2024-03-03 00:22:39,542 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 22', 8, '2024-01-18T10:06:40.476288+01:00'::timestamptz, 829, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 22', 8, datetime.datetime(2024, 1, 18, 10, 6, 40, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 829, False); alias=default
DEBUG 2024-03-03 00:22:39,544 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 4', 5, '2023-12-30T13:41:57.476288+01:00'::timestamptz, 344, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 4', 5, datetime.datetime(2023, 12, 30, 13, 41, 57, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 344, False); alias=default
DEBUG 2024-03-03 00:22:39,545 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 6, 'Player 21', 11, '2023-12-02T18:30:54.476288+01:00'::timestamptz, 293, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 6, 'Player 21', 11, datetime.datetime(2023, 12, 2, 18, 30, 54, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 293, False); alias=default
DEBUG 2024-03-03 00:22:39,546 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 8, 'Player 14', 11, '2023-12-18T11:47:29.476288+01:00'::timestamptz, 329, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 8, 'Player 14', 11, datetime.datetime(2023, 12, 18, 11, 47, 29, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 329, False); alias=default
DEBUG 2024-03-03 00:22:39,547 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 2, 'Player 0', 11, '2024-02-02T16:09:23.476288+01:00'::timestamptz, 964, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 2, 'Player 0', 11, datetime.datetime(2024, 2, 2, 16, 9, 23, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 964, False); alias=default
DEBUG 2024-03-03 00:22:39,549 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 20', 7, '2023-11-12T01:39:36.476288+01:00'::timestamptz, 110, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 20', 7, datetime.datetime(2023, 11, 12, 1, 39, 36, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 110, False); alias=default
DEBUG 2024-03-03 00:22:39,550 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 16', 2, '2024-01-31T12:42:04.476288+01:00'::timestamptz, 686, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 16', 2, datetime.datetime(2024, 1, 31, 12, 42, 4, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 686, False); alias=default
DEBUG 2024-03-03 00:22:39,552 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 18', 3, '2024-01-21T06:03:17.476288+01:00'::timestamptz, 123, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 18', 3, datetime.datetime(2024, 1, 21, 6, 3, 17, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 123, False); alias=default
DEBUG 2024-03-03 00:22:39,554 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 5, 'Player 8', 11, '2024-02-17T10:48:18.476288+01:00'::timestamptz, 709, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 5, 'Player 8', 11, datetime.datetime(2024, 2, 17, 10, 48, 18, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 709, False); alias=default
DEBUG 2024-03-03 00:22:39,556 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 8, 'Player 4', 11, '2024-01-18T03:43:58.476288+01:00'::timestamptz, 883, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 8, 'Player 4', 11, datetime.datetime(2024, 1, 18, 3, 43, 58, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 883, False); alias=default
DEBUG 2024-03-03 00:22:39,558 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 8, 'Player 4', 11, '2024-03-01T11:27:03.476288+01:00'::timestamptz, 596, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 8, 'Player 4', 11, datetime.datetime(2024, 3, 1, 11, 27, 3, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 596, False); alias=default
DEBUG 2024-03-03 00:22:39,560 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 7, 'Player 2', 11, '2023-12-25T06:06:24.476288+01:00'::timestamptz, 578, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 7, 'Player 2', 11, datetime.datetime(2023, 12, 25, 6, 6, 24, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 578, False); alias=default
DEBUG 2024-03-03 00:22:39,561 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 8, 'Player 14', 11, '2023-11-17T16:21:01.476288+01:00'::timestamptz, 922, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 8, 'Player 14', 11, datetime.datetime(2023, 11, 17, 16, 21, 1, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 922, False); alias=default
DEBUG 2024-03-03 00:22:39,562 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 10, 'Player 1', 11, '2023-12-11T12:46:06.476288+01:00'::timestamptz, 707, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 10, 'Player 1', 11, datetime.datetime(2023, 12, 11, 12, 46, 6, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 707, False); alias=default
DEBUG 2024-03-03 00:22:39,564 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 14', 9, '2023-11-02T11:55:42.476288+01:00'::timestamptz, 161, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 14', 9, datetime.datetime(2023, 11, 2, 11, 55, 42, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 161, False); alias=default
DEBUG 2024-03-03 00:22:39,565 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 3, 'Player 15', 11, '2024-02-04T18:35:51.476288+01:00'::timestamptz, 649, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 3, 'Player 15', 11, datetime.datetime(2024, 2, 4, 18, 35, 51, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 649, False); alias=default
DEBUG 2024-03-03 00:22:39,566 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 9', 2, '2024-01-18T00:39:00.476288+01:00'::timestamptz, 841, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 9', 2, datetime.datetime(2024, 1, 18, 0, 39, 0, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 841, False); alias=default
DEBUG 2024-03-03 00:22:39,567 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 18', 6, '2023-12-27T21:56:56.476288+01:00'::timestamptz, 807, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 18', 6, datetime.datetime(2023, 12, 27, 21, 56, 56, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 807, False); alias=default
DEBUG 2024-03-03 00:22:39,569 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 7, 'Player 11', 11, '2023-11-11T05:54:37.476288+01:00'::timestamptz, 602, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 7, 'Player 11', 11, datetime.datetime(2023, 11, 11, 5, 54, 37, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 602, False); alias=default
DEBUG 2024-03-03 00:22:39,571 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 0, 'Player 10', 11, '2024-02-05T03:21:26.476288+01:00'::timestamptz, 97, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 0, 'Player 10', 11, datetime.datetime(2024, 2, 5, 3, 21, 26, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 97, False); alias=default
DEBUG 2024-03-03 00:22:39,572 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 10, 'Player 2', 11, '2023-12-06T17:42:31.476288+01:00'::timestamptz, 88, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 10, 'Player 2', 11, datetime.datetime(2023, 12, 6, 17, 42, 31, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 88, False); alias=default
DEBUG 2024-03-03 00:22:39,573 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 28', 8, '2023-12-03T14:21:33.476288+01:00'::timestamptz, 615, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 28', 8, datetime.datetime(2023, 12, 3, 14, 21, 33, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 615, False); alias=default
DEBUG 2024-03-03 00:22:39,575 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 7, 'Player 7', 11, '2024-02-29T18:08:05.476288+01:00'::timestamptz, 424, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 7, 'Player 7', 11, datetime.datetime(2024, 2, 29, 18, 8, 5, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 424, False); alias=default
DEBUG 2024-03-03 00:22:39,576 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 8, 'Player 7', 11, '2023-11-04T05:11:29.476288+01:00'::timestamptz, 629, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 8, 'Player 7', 11, datetime.datetime(2023, 11, 4, 5, 11, 29, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 629, False); alias=default
DEBUG 2024-03-03 00:22:39,577 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 8, 'Player 17', 11, '2023-11-05T02:29:19.476288+01:00'::timestamptz, 796, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 8, 'Player 17', 11, datetime.datetime(2023, 11, 5, 2, 29, 19, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 796, False); alias=default
DEBUG 2024-03-03 00:22:39,579 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 7, 'Player 13', 11, '2023-11-05T01:40:36.476288+01:00'::timestamptz, 266, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 7, 'Player 13', 11, datetime.datetime(2023, 11, 5, 1, 40, 36, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 266, False); alias=default
DEBUG 2024-03-03 00:22:39,580 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 11, 'Player 10', 7, '2023-12-29T03:44:35.476288+01:00'::timestamptz, 728, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 11, 'Player 10', 7, datetime.datetime(2023, 12, 29, 3, 44, 35, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 728, False); alias=default
DEBUG 2024-03-03 00:22:39,581 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 6, 'Player 14', 11, '2024-01-31T07:39:02.476288+01:00'::timestamptz, 510, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 6, 'Player 14', 11, datetime.datetime(2024, 1, 31, 7, 39, 2, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 510, False); alias=default
DEBUG 2024-03-03 00:22:39,583 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 36', 6, '2024-02-29T11:20:47.476288+01:00'::timestamptz, 969, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 36', 6, datetime.datetime(2024, 2, 29, 11, 20, 47, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 969, False); alias=default
DEBUG 2024-03-03 00:22:39,584 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 5, 'Player 10', 11, '2023-12-25T06:31:25.476288+01:00'::timestamptz, 365, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 5, 'Player 10', 11, datetime.datetime(2023, 12, 25, 6, 31, 25, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 365, False); alias=default
DEBUG 2024-03-03 00:22:39,585 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 10, 'Player 18', 11, '2024-01-15T06:59:06.476288+01:00'::timestamptz, 129, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 10, 'Player 18', 11, datetime.datetime(2024, 1, 15, 6, 59, 6, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 129, False); alias=default
DEBUG 2024-03-03 00:22:39,587 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 0', 2, '2023-11-12T03:45:24.476288+01:00'::timestamptz, 696, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 0', 2, datetime.datetime(2023, 11, 12, 3, 45, 24, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 696, False); alias=default
DEBUG 2024-03-03 00:22:39,589 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 1, 'Player 4', 11, '2024-02-24T15:57:37.476288+01:00'::timestamptz, 463, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 1, 'Player 4', 11, datetime.datetime(2024, 2, 24, 15, 57, 37, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 463, False); alias=default
DEBUG 2024-03-03 00:22:39,590 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 21', 7, '2023-12-22T17:13:20.476288+01:00'::timestamptz, 772, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 21', 7, datetime.datetime(2023, 12, 22, 17, 13, 20, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 772, False); alias=default
DEBUG 2024-03-03 00:22:39,591 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 7, 'Player 7', 11, '2024-01-14T05:04:46.476288+01:00'::timestamptz, 802, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 7, 'Player 7', 11, datetime.datetime(2024, 1, 14, 5, 4, 46, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 802, False); alias=default
DEBUG 2024-03-03 00:22:39,593 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 19', 0, '2024-02-20T21:34:14.476288+01:00'::timestamptz, 785, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 19', 0, datetime.datetime(2024, 2, 20, 21, 34, 14, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 785, False); alias=default
DEBUG 2024-03-03 00:22:39,594 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 5, 'Player 15', 11, '2024-02-24T23:46:52.476288+01:00'::timestamptz, 148, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 5, 'Player 15', 11, datetime.datetime(2024, 2, 24, 23, 46, 52, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 148, False); alias=default
DEBUG 2024-03-03 00:22:39,595 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 7, 'Player 38', 11, '2023-11-20T01:47:37.476288+01:00'::timestamptz, 610, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 7, 'Player 38', 11, datetime.datetime(2023, 11, 20, 1, 47, 37, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 610, False); alias=default
DEBUG 2024-03-03 00:22:39,596 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 17', 8, '2023-12-12T09:20:15.476288+01:00'::timestamptz, 601, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 17', 8, datetime.datetime(2023, 12, 12, 9, 20, 15, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 601, False); alias=default
DEBUG 2024-03-03 00:22:39,598 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 7, 'Player 5', 11, '2023-11-30T09:08:17.476288+01:00'::timestamptz, 650, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 7, 'Player 5', 11, datetime.datetime(2023, 11, 30, 9, 8, 17, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 650, False); alias=default
DEBUG 2024-03-03 00:22:39,599 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 11, 'Player 5', 1, '2024-02-23T23:41:41.476288+01:00'::timestamptz, 200, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 11, 'Player 5', 1, datetime.datetime(2024, 2, 23, 23, 41, 41, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 200, False); alias=default
DEBUG 2024-03-03 00:22:39,600 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 11, 'Player 21', 4, '2023-12-19T21:47:11.476288+01:00'::timestamptz, 850, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 11, 'Player 21', 4, datetime.datetime(2023, 12, 19, 21, 47, 11, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 850, False); alias=default
DEBUG 2024-03-03 00:22:39,601 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 8, 'Player 8', 11, '2024-01-19T02:34:57.476288+01:00'::timestamptz, 631, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 8, 'Player 8', 11, datetime.datetime(2024, 1, 19, 2, 34, 57, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 631, False); alias=default
DEBUG 2024-03-03 00:22:39,604 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 9, 'Player 27', 11, '2024-01-14T23:00:22.476288+01:00'::timestamptz, 933, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 9, 'Player 27', 11, datetime.datetime(2024, 1, 14, 23, 0, 22, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 933, False); alias=default
DEBUG 2024-03-03 00:22:39,605 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 15', 6, '2023-11-30T19:51:13.476288+01:00'::timestamptz, 205, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 15', 6, datetime.datetime(2023, 11, 30, 19, 51, 13, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 205, False); alias=default
DEBUG 2024-03-03 00:22:39,606 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 8, 'Player 25', 11, '2024-01-06T02:28:30.476288+01:00'::timestamptz, 251, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 8, 'Player 25', 11, datetime.datetime(2024, 1, 6, 2, 28, 30, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 251, False); alias=default
DEBUG 2024-03-03 00:22:39,608 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 10, 'Player 14', 11, '2023-11-17T11:47:13.476288+01:00'::timestamptz, 529, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 10, 'Player 14', 11, datetime.datetime(2023, 11, 17, 11, 47, 13, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 529, False); alias=default
DEBUG 2024-03-03 00:22:39,609 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 5, 'Player 13', 11, '2024-02-13T09:46:21.476288+01:00'::timestamptz, 68, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 5, 'Player 13', 11, datetime.datetime(2024, 2, 13, 9, 46, 21, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 68, False); alias=default
DEBUG 2024-03-03 00:22:39,610 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 7, 'Player 22', 11, '2024-01-12T02:03:21.476288+01:00'::timestamptz, 87, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 7, 'Player 22', 11, datetime.datetime(2024, 1, 12, 2, 3, 21, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 87, False); alias=default
DEBUG 2024-03-03 00:22:39,611 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 2, 'Player 24', 11, '2023-12-24T01:18:50.476288+01:00'::timestamptz, 233, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 2, 'Player 24', 11, datetime.datetime(2023, 12, 24, 1, 18, 50, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 233, False); alias=default
DEBUG 2024-03-03 00:22:39,612 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 9, 'Player 25', 11, '2023-11-21T09:40:42.476288+01:00'::timestamptz, 841, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 9, 'Player 25', 11, datetime.datetime(2023, 11, 21, 9, 40, 42, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 841, False); alias=default
DEBUG 2024-03-03 00:22:39,614 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 7', 10, '2023-12-31T12:44:05.476288+01:00'::timestamptz, 316, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 7', 10, datetime.datetime(2023, 12, 31, 12, 44, 5, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 316, False); alias=default
DEBUG 2024-03-03 00:22:39,615 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 18', 10, '2023-12-25T04:53:04.476288+01:00'::timestamptz, 928, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 18', 10, datetime.datetime(2023, 12, 25, 4, 53, 4, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 928, False); alias=default
DEBUG 2024-03-03 00:22:39,616 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 11', 2, '2023-12-08T02:42:18.476288+01:00'::timestamptz, 360, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 11', 2, datetime.datetime(2023, 12, 8, 2, 42, 18, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 360, False); alias=default
DEBUG 2024-03-03 00:22:39,617 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 11, 'Player 40', 10, '2023-12-12T08:10:51.476288+01:00'::timestamptz, 158, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 11, 'Player 40', 10, datetime.datetime(2023, 12, 12, 8, 10, 51, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 158, False); alias=default
DEBUG 2024-03-03 00:22:39,619 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 9, 'Player 48', 11, '2024-02-04T23:46:03.476288+01:00'::timestamptz, 763, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 9, 'Player 48', 11, datetime.datetime(2024, 2, 4, 23, 46, 3, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 763, False); alias=default
DEBUG 2024-03-03 00:22:39,621 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 5, 'Player 11', 11, '2024-01-23T19:10:08.476288+01:00'::timestamptz, 858, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 5, 'Player 11', 11, datetime.datetime(2024, 1, 23, 19, 10, 8, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 858, False); alias=default
DEBUG 2024-03-03 00:22:39,622 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 11, 'Player 43', 9, '2024-02-16T11:56:23.476288+01:00'::timestamptz, 408, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 11, 'Player 43', 9, datetime.datetime(2024, 2, 16, 11, 56, 23, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 408, False); alias=default
DEBUG 2024-03-03 00:22:39,623 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 6, 'Player 21', 11, '2023-12-16T20:08:57.476288+01:00'::timestamptz, 912, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 6, 'Player 21', 11, datetime.datetime(2023, 12, 16, 20, 8, 57, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 912, False); alias=default
DEBUG 2024-03-03 00:22:39,625 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 0, 'Player 42', 11, '2024-02-04T02:47:46.476288+01:00'::timestamptz, 554, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 0, 'Player 42', 11, datetime.datetime(2024, 2, 4, 2, 47, 46, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 554, False); alias=default
DEBUG 2024-03-03 00:22:39,626 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 4, 'Player 16', 11, '2023-12-06T20:32:11.476288+01:00'::timestamptz, 292, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 4, 'Player 16', 11, datetime.datetime(2023, 12, 6, 20, 32, 11, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 292, False); alias=default
DEBUG 2024-03-03 00:22:39,627 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 5, 'Player 35', 11, '2024-01-12T18:41:43.476288+01:00'::timestamptz, 141, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 5, 'Player 35', 11, datetime.datetime(2024, 1, 12, 18, 41, 43, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 141, False); alias=default
DEBUG 2024-03-03 00:22:39,638 utils (0.009) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 9, 'Player 15', 11, '2024-01-14T08:24:06.476288+01:00'::timestamptz, 495, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 9, 'Player 15', 11, datetime.datetime(2024, 1, 14, 8, 24, 6, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 495, False); alias=default
DEBUG 2024-03-03 00:22:39,640 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 11, 'Player 32', 10, '2024-01-26T10:28:43.476288+01:00'::timestamptz, 318, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 11, 'Player 32', 10, datetime.datetime(2024, 1, 26, 10, 28, 43, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 318, False); alias=default
DEBUG 2024-03-03 00:22:39,641 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 1, 'Player 13', 11, '2023-11-10T18:53:20.476288+01:00'::timestamptz, 887, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 1, 'Player 13', 11, datetime.datetime(2023, 11, 10, 18, 53, 20, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 887, False); alias=default
DEBUG 2024-03-03 00:22:39,643 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 11, 'Player 50', 6, '2024-01-13T07:58:52.476288+01:00'::timestamptz, 980, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 11, 'Player 50', 6, datetime.datetime(2024, 1, 13, 7, 58, 52, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 980, False); alias=default
DEBUG 2024-03-03 00:22:39,645 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 4, 'Player 32', 11, '2024-02-09T14:52:12.476288+01:00'::timestamptz, 772, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 4, 'Player 32', 11, datetime.datetime(2024, 2, 9, 14, 52, 12, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 772, False); alias=default
DEBUG 2024-03-03 00:22:39,647 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 48', 11, 'Player 34', 8, '2024-01-18T04:15:58.476288+01:00'::timestamptz, 91, false) RETURNING "pong_gamedata"."id"; args=('Player 48', 11, 'Player 34', 8, datetime.datetime(2024, 1, 18, 4, 15, 58, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 91, False); alias=default
DEBUG 2024-03-03 00:22:39,648 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 10, 'Player 38', 11, '2023-12-10T05:41:11.476288+01:00'::timestamptz, 659, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 10, 'Player 38', 11, datetime.datetime(2023, 12, 10, 5, 41, 11, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 659, False); alias=default
DEBUG 2024-03-03 00:22:39,650 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 11, 'Player 29', 4, '2024-02-28T09:27:56.476288+01:00'::timestamptz, 436, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 11, 'Player 29', 4, datetime.datetime(2024, 2, 28, 9, 27, 56, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 436, False); alias=default
DEBUG 2024-03-03 00:22:39,652 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 12', 3, '2023-12-27T15:21:18.476288+01:00'::timestamptz, 287, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 12', 3, datetime.datetime(2023, 12, 27, 15, 21, 18, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 287, False); alias=default
DEBUG 2024-03-03 00:22:39,654 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 5, 'Player 35', 11, '2024-03-01T23:11:13.476288+01:00'::timestamptz, 779, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 5, 'Player 35', 11, datetime.datetime(2024, 3, 1, 23, 11, 13, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 779, False); alias=default
DEBUG 2024-03-03 00:22:39,655 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 7, 'Player 32', 11, '2024-02-14T09:33:38.476288+01:00'::timestamptz, 105, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 7, 'Player 32', 11, datetime.datetime(2024, 2, 14, 9, 33, 38, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 105, False); alias=default
DEBUG 2024-03-03 00:22:39,657 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 10, 'Player 23', 11, '2023-11-23T14:14:12.476288+01:00'::timestamptz, 746, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 10, 'Player 23', 11, datetime.datetime(2023, 11, 23, 14, 14, 12, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 746, False); alias=default
DEBUG 2024-03-03 00:22:39,659 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 8, 'Player 18', 11, '2024-02-26T03:51:29.476288+01:00'::timestamptz, 185, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 8, 'Player 18', 11, datetime.datetime(2024, 2, 26, 3, 51, 29, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 185, False); alias=default
DEBUG 2024-03-03 00:22:39,661 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 10, 'Player 46', 11, '2024-01-25T17:18:11.476288+01:00'::timestamptz, 245, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 10, 'Player 46', 11, datetime.datetime(2024, 1, 25, 17, 18, 11, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 245, False); alias=default
DEBUG 2024-03-03 00:22:39,662 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 60', 11, 'Player 34', 6, '2024-01-07T12:41:38.476288+01:00'::timestamptz, 885, false) RETURNING "pong_gamedata"."id"; args=('Player 60', 11, 'Player 34', 6, datetime.datetime(2024, 1, 7, 12, 41, 38, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 885, False); alias=default
DEBUG 2024-03-03 00:22:39,665 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 6, 'Player 14', 11, '2023-12-26T17:44:10.476288+01:00'::timestamptz, 175, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 6, 'Player 14', 11, datetime.datetime(2023, 12, 26, 17, 44, 10, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 175, False); alias=default
DEBUG 2024-03-03 00:22:39,667 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 59', 11, 'Player 50', 3, '2024-01-11T21:01:53.476288+01:00'::timestamptz, 282, false) RETURNING "pong_gamedata"."id"; args=('Player 59', 11, 'Player 50', 3, datetime.datetime(2024, 1, 11, 21, 1, 53, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 282, False); alias=default
DEBUG 2024-03-03 00:22:39,669 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 51', 5, 'Player 4', 11, '2023-11-23T13:51:20.476288+01:00'::timestamptz, 873, false) RETURNING "pong_gamedata"."id"; args=('Player 51', 5, 'Player 4', 11, datetime.datetime(2023, 11, 23, 13, 51, 20, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 873, False); alias=default
DEBUG 2024-03-03 00:22:39,670 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 21', 1, '2024-02-12T05:28:56.476288+01:00'::timestamptz, 294, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 21', 1, datetime.datetime(2024, 2, 12, 5, 28, 56, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 294, False); alias=default
DEBUG 2024-03-03 00:22:39,672 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 23', 5, '2023-11-25T17:24:49.476288+01:00'::timestamptz, 657, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 23', 5, datetime.datetime(2023, 11, 25, 17, 24, 49, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 657, False); alias=default
DEBUG 2024-03-03 00:22:39,674 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 4, 'Player 58', 11, '2024-01-28T02:04:17.476288+01:00'::timestamptz, 156, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 4, 'Player 58', 11, datetime.datetime(2024, 1, 28, 2, 4, 17, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 156, False); alias=default
DEBUG 2024-03-03 00:22:39,676 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 9', 3, '2023-11-20T20:10:20.476288+01:00'::timestamptz, 381, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 9', 3, datetime.datetime(2023, 11, 20, 20, 10, 20, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 381, False); alias=default
DEBUG 2024-03-03 00:22:39,678 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 6, 'Player 6', 11, '2024-02-29T09:14:25.476288+01:00'::timestamptz, 640, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 6, 'Player 6', 11, datetime.datetime(2024, 2, 29, 9, 14, 25, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 640, False); alias=default
DEBUG 2024-03-03 00:22:39,680 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 64', 0, 'Player 63', 11, '2024-01-29T12:21:16.476288+01:00'::timestamptz, 986, false) RETURNING "pong_gamedata"."id"; args=('Player 64', 0, 'Player 63', 11, datetime.datetime(2024, 1, 29, 12, 21, 16, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 986, False); alias=default
DEBUG 2024-03-03 00:22:39,682 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,684 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 8, 'Player 5', 11, '2023-12-24T02:54:14.476288+01:00'::timestamptz, 696, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 8, 'Player 5', 11, datetime.datetime(2023, 12, 24, 2, 54, 14, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 696, True); alias=default
DEBUG 2024-03-03 00:22:39,687 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 4, 'Player 15', 11, '2023-12-24T02:49:51.476288+01:00'::timestamptz, 675, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 4, 'Player 15', 11, datetime.datetime(2023, 12, 24, 2, 49, 51, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 675, True); alias=default
DEBUG 2024-03-03 00:22:39,689 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 15', 3, '2023-12-24T02:54:40.476288+01:00'::timestamptz, 251, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 15', 3, datetime.datetime(2023, 12, 24, 2, 54, 40, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 251, True); alias=default
DEBUG 2024-03-03 00:22:39,692 utils (0.002) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2023-12-24T02:54:40.476288+01:00'::timestamptz, 964, '["Player 5", "Player 15", "Player 8", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2023, 12, 24, 2, 54, 40, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 964, <psycopg2._json.Json object at 0x7f71c29712b0>, '0x0'); alias=default
DEBUG 2024-03-03 00:22:39,695 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 9', 4, '2023-12-28T12:04:21.476288+01:00'::timestamptz, 509, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 9', 4, datetime.datetime(2023, 12, 28, 12, 4, 21, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 509, True); alias=default
DEBUG 2024-03-03 00:22:39,697 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 1', 0, '2023-12-28T12:08:45.476288+01:00'::timestamptz, 528, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 1', 0, datetime.datetime(2023, 12, 28, 12, 8, 45, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 528, True); alias=default
DEBUG 2024-03-03 00:22:39,699 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 4', 0, '2023-12-28T12:12:05.476288+01:00'::timestamptz, 42, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 4', 0, datetime.datetime(2023, 12, 28, 12, 12, 5, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 42, True); alias=default
DEBUG 2024-03-03 00:22:39,702 utils (0.002) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2023-12-28T12:12:05.476288+01:00'::timestamptz, 973, '["Player 2", "Player 4", "Player 9", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2023, 12, 28, 12, 12, 5, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 973, <psycopg2._json.Json object at 0x7f71c29738c0>, '0x0'); alias=default
DEBUG 2024-03-03 00:22:39,704 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 11', 10, '2023-11-10T01:39:57.476288+01:00'::timestamptz, 573, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 11', 10, datetime.datetime(2023, 11, 10, 1, 39, 57, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 573, True); alias=default
DEBUG 2024-03-03 00:22:39,706 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 8, 'Player 9', 11, '2023-11-10T01:41:05.476288+01:00'::timestamptz, 886, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 8, 'Player 9', 11, datetime.datetime(2023, 11, 10, 1, 41, 5, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 886, True); alias=default
DEBUG 2024-03-03 00:22:39,708 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 9, 'Player 9', 11, '2023-11-10T01:42:41.476288+01:00'::timestamptz, 399, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 9, 'Player 9', 11, datetime.datetime(2023, 11, 10, 1, 42, 41, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 399, True); alias=default
DEBUG 2024-03-03 00:22:39,709 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2023-11-10T01:42:41.476288+01:00'::timestamptz, 982, '["Player 9", "Player 10", "Player 11", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2023, 11, 10, 1, 42, 41, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 982, <psycopg2._json.Json object at 0x7f71c2973800>, '0x0'); alias=default
DEBUG 2024-03-03 00:22:39,711 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 5, 'Player 1', 11, '2024-02-28T00:23:35.476288+01:00'::timestamptz, 550, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 5, 'Player 1', 11, datetime.datetime(2024, 2, 28, 0, 23, 35, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 550, True); alias=default
DEBUG 2024-03-03 00:22:39,714 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 1, 'Player 5', 11, '2024-02-28T00:22:49.476288+01:00'::timestamptz, 865, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 1, 'Player 5', 11, datetime.datetime(2024, 2, 28, 0, 22, 49, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 865, True); alias=default
DEBUG 2024-03-03 00:22:39,716 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 5', 3, '2024-02-28T00:24:54.476288+01:00'::timestamptz, 668, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 5', 3, datetime.datetime(2024, 2, 28, 0, 24, 54, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 668, True); alias=default
DEBUG 2024-03-03 00:22:39,718 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2024-02-28T00:24:54.476288+01:00'::timestamptz, 990, '["Player 1", "Player 5", "Player 0", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2024, 2, 28, 0, 24, 54, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 990, <psycopg2._json.Json object at 0x7f71c2973800>, '0x0'); alias=default
DEBUG 2024-03-03 00:22:39,720 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 4', 9, '2023-11-09T12:31:42.476288+01:00'::timestamptz, 794, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 4', 9, datetime.datetime(2023, 11, 9, 12, 31, 42, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 794, True); alias=default
DEBUG 2024-03-03 00:22:39,722 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 7', 4, '2023-11-09T12:31:48.476288+01:00'::timestamptz, 289, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 7', 4, datetime.datetime(2023, 11, 9, 12, 31, 48, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 289, True); alias=default
DEBUG 2024-03-03 00:22:39,725 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 7, 'Player 5', 11, '2023-11-09T12:34:24.476288+01:00'::timestamptz, 696, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 7, 'Player 5', 11, datetime.datetime(2023, 11, 9, 12, 34, 24, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 696, True); alias=default
DEBUG 2024-03-03 00:22:39,727 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2023-11-09T12:34:24.476288+01:00'::timestamptz, 956, '["Player 5", "Player 11", "Player 4", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2023, 11, 9, 12, 34, 24, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 956, <psycopg2._json.Json object at 0x7f71c2b1bc80>, '0x0'); alias=default
DEBUG 2024-03-03 00:22:39,729 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 11', 1, '2023-12-08T08:07:31.476288+01:00'::timestamptz, 644, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 11', 1, datetime.datetime(2023, 12, 8, 8, 7, 31, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 644, True); alias=default
DEBUG 2024-03-03 00:22:39,731 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 8, 'Player 8', 11, '2023-12-08T08:07:55.476288+01:00'::timestamptz, 876, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 8, 'Player 8', 11, datetime.datetime(2023, 12, 8, 8, 7, 55, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 876, True); alias=default
DEBUG 2024-03-03 00:22:39,734 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 8', 7, '2023-12-08T08:09:21.476288+01:00'::timestamptz, 305, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 8', 7, datetime.datetime(2023, 12, 8, 8, 9, 21, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 305, True); alias=default
DEBUG 2024-03-03 00:22:39,736 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2023-12-08T08:09:21.476288+01:00'::timestamptz, 962, '["Player 5", "Player 8", "Player 11", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2023, 12, 8, 8, 9, 21, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 962, <psycopg2._json.Json object at 0x7f71c299fce0>, '0x0'); alias=default
DEBUG 2024-03-03 00:22:39,738 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 0, 'Player 16', 11, '2023-12-03T21:00:14.476288+01:00'::timestamptz, 59, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 0, 'Player 16', 11, datetime.datetime(2023, 12, 3, 21, 0, 14, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 59, True); alias=default
DEBUG 2024-03-03 00:22:39,741 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 10, 'Player 13', 11, '2023-12-03T21:08:08.476288+01:00'::timestamptz, 450, true) RETURNING "pong_gamedata"."id"; args=('Player 18', 10, 'Player 13', 11, datetime.datetime(2023, 12, 3, 21, 8, 8, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 450, True); alias=default
DEBUG 2024-03-03 00:22:39,744 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 8, 'Player 13', 11, '2023-12-03T21:09:01.476288+01:00'::timestamptz, 160, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 8, 'Player 13', 11, datetime.datetime(2023, 12, 3, 21, 9, 1, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 160, True); alias=default
DEBUG 2024-03-03 00:22:39,747 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2023-12-03T21:09:01.476288+01:00'::timestamptz, 586, '["Player 13", "Player 16", "Player 4", "Player 18"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2023, 12, 3, 21, 9, 1, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 586, <psycopg2._json.Json object at 0x7f71c299d730>, '0x0'); alias=default
DEBUG 2024-03-03 00:22:39,749 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 6', 3, '2024-01-16T22:26:30.476288+01:00'::timestamptz, 563, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 6', 3, datetime.datetime(2024, 1, 16, 22, 26, 30, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 563, True); alias=default
DEBUG 2024-03-03 00:22:39,751 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 1', 2, '2024-01-16T22:21:25.476288+01:00'::timestamptz, 53, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 1', 2, datetime.datetime(2024, 1, 16, 22, 21, 25, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 53, True); alias=default
DEBUG 2024-03-03 00:22:39,754 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 6, 'Player 8', 11, '2024-01-16T22:30:31.476288+01:00'::timestamptz, 645, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 6, 'Player 8', 11, datetime.datetime(2024, 1, 16, 22, 30, 31, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 645, True); alias=default
DEBUG 2024-03-03 00:22:39,756 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2024-01-16T22:30:31.476288+01:00'::timestamptz, 804, '["Player 8", "Player 4", "Player 6", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2024, 1, 16, 22, 30, 31, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 804, <psycopg2._json.Json object at 0x7f71c2982090>, '0x0'); alias=default
DEBUG 2024-03-03 00:22:39,760 utils (0.003) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 13', 7, '2023-11-30T09:49:44.476288+01:00'::timestamptz, 301, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 13', 7, datetime.datetime(2023, 11, 30, 9, 49, 44, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 301, True); alias=default
DEBUG 2024-03-03 00:22:39,763 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 2, 'Player 5', 11, '2023-11-30T09:45:49.476288+01:00'::timestamptz, 52, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 2, 'Player 5', 11, datetime.datetime(2023, 11, 30, 9, 45, 49, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 52, True); alias=default
DEBUG 2024-03-03 00:22:39,765 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 4, 'Player 5', 11, '2023-11-30T09:57:23.476288+01:00'::timestamptz, 594, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 4, 'Player 5', 11, datetime.datetime(2023, 11, 30, 9, 57, 23, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 594, True); alias=default
DEBUG 2024-03-03 00:22:39,767 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2023-11-30T09:57:23.476288+01:00'::timestamptz, 760, '["Player 5", "Player 2", "Player 13", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2023, 11, 30, 9, 57, 23, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 760, <psycopg2._json.Json object at 0x7f71c299dc40>, '0x0'); alias=default
DEBUG 2024-03-03 00:22:39,769 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 7', 4, '2024-02-06T15:18:48.476288+01:00'::timestamptz, 905, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 7', 4, datetime.datetime(2024, 2, 6, 15, 18, 48, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 905, True); alias=default
DEBUG 2024-03-03 00:22:39,771 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 4, 'Player 10', 11, '2024-02-06T15:09:21.476288+01:00'::timestamptz, 18, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 4, 'Player 10', 11, datetime.datetime(2024, 2, 6, 15, 9, 21, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 18, True); alias=default
DEBUG 2024-03-03 00:22:39,773 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 10', 7, '2024-02-06T15:19:54.476288+01:00'::timestamptz, 159, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 10', 7, datetime.datetime(2024, 2, 6, 15, 19, 54, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 159, True); alias=default
DEBUG 2024-03-03 00:22:39,775 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2024-02-06T15:19:54.476288+01:00'::timestamptz, 971, '["Player 0", "Player 10", "Player 7", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2024, 2, 6, 15, 19, 54, 476288, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 971, <psycopg2._json.Json object at 0x7f71c299d8e0>, '0x0'); alias=default
DEBUG 2024-03-03 00:22:39,776 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,778 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,778 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 00:22:39,779 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,779 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 00:22:39,781 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,783 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 00:22:39,785 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 00:22:39,788 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 00:22:39,792 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 00:22:39,792 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,794 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 00:22:39,796 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,797 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 00:22:39,798 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,800 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,802 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,804 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,806 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,808 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,809 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 00:22:39,810 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,811 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 00:22:39,812 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,813 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 00:22:39,817 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 00:22:39,818 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,819 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 00:22:39,821 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,822 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 00:22:39,824 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,826 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,828 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,829 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,831 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,832 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,834 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 00:22:39,834 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,836 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 00:22:39,837 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,839 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 00:22:39,842 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 00:22:39,843 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,844 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 00:22:39,845 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,846 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 00:22:39,847 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,849 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,851 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,853 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,855 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,857 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,858 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 00:22:39,859 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,860 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 00:22:39,861 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,863 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 00:22:39,864 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 00:22:39,866 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 00:22:39,867 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:22:39,869 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 00:22:39,870 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:22:39,872 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 00:22:39,874 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,875 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,876 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,877 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,878 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:22:39,879 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
