DEBUG 2024-02-27 21:58:59,737 utils (0.004) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:58:59,740 utils (0.001) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,743 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:58:59,744 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,765 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:58:59,767 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:58:59,772 utils (0.005) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,774 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:58:59,776 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 21:58:59,779 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 21:58:59,780 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:58:59,782 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,783 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,785 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,786 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,824 utils (0.009) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 1, 'Player 2', 11, '2024-01-25T04:53:07.783627+01:00'::timestamptz, 408, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 1, 'Player 2', 11, datetime.datetime(2024, 1, 25, 4, 53, 7, 783627, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 408, True); alias=default
DEBUG 2024-02-27 21:58:59,847 utils (0.022) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 2, 'Player 0', 11, '2024-01-25T04:56:21.783627+01:00'::timestamptz, 718, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 2, 'Player 0', 11, datetime.datetime(2024, 1, 25, 4, 56, 21, 783627, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 718, True); alias=default
DEBUG 2024-02-27 21:58:59,848 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 0', 0, '2024-01-25T05:00:42.783627+01:00'::timestamptz, 643, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 0', 0, datetime.datetime(2024, 1, 25, 5, 0, 42, 783627, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 643, True); alias=default
DEBUG 2024-02-27 21:58:59,850 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1928, 1929, 1930, '2024-01-25T05:00:42.783627+01:00'::timestamptz, 979, '["Player 2", "Player 0", "Player 5", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1928, 1929, 1930, datetime.datetime(2024, 1, 25, 5, 0, 42, 783627, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 979, <psycopg2._json.Json object at 0x7fbcf828ebd0>, '0x0'); alias=default
DEBUG 2024-02-27 21:58:59,851 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 10, 'Player 12', 11, '2023-11-11T19:10:32.783627+01:00'::timestamptz, 238, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 10, 'Player 12', 11, datetime.datetime(2023, 11, 11, 19, 10, 32, 783627, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 238, True); alias=default
DEBUG 2024-02-27 21:58:59,852 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 8', 5, '2023-11-11T19:17:10.783627+01:00'::timestamptz, 279, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 8', 5, datetime.datetime(2023, 11, 11, 19, 17, 10, 783627, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 279, True); alias=default
DEBUG 2024-02-27 21:58:59,854 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 3', 4, '2023-11-11T19:21:59.783627+01:00'::timestamptz, 780, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 3', 4, datetime.datetime(2023, 11, 11, 19, 21, 59, 783627, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 780, True); alias=default
DEBUG 2024-02-27 21:58:59,855 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1931, 1932, 1933, '2023-11-11T19:21:59.783627+01:00'::timestamptz, 925, '["Player 12", "Player 3", "Player 5", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1931, 1932, 1933, datetime.datetime(2023, 11, 11, 19, 21, 59, 783627, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 925, <psycopg2._json.Json object at 0x7fbcf828f620>, '0x0'); alias=default
DEBUG 2024-02-27 21:58:59,856 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,858 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,859 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:58:59,860 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 21:58:59,862 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 21:58:59,863 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 21:58:59,865 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 21:58:59,866 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:58:59,867 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,868 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,868 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,870 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,871 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 4', 9, '2024-02-16T02:12:15.868141+01:00'::timestamptz, 823, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 4', 9, datetime.datetime(2024, 2, 16, 2, 12, 15, 868141, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 823, True); alias=default
DEBUG 2024-02-27 21:58:59,872 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 8, 'Player 1', 11, '2024-02-16T02:08:04.868141+01:00'::timestamptz, 607, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 8, 'Player 1', 11, datetime.datetime(2024, 2, 16, 2, 8, 4, 868141, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 607, True); alias=default
DEBUG 2024-02-27 21:58:59,874 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 1', 8, '2024-02-16T02:12:42.868141+01:00'::timestamptz, 364, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 1', 8, datetime.datetime(2024, 2, 16, 2, 12, 42, 868141, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 364, True); alias=default
DEBUG 2024-02-27 21:58:59,875 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1934, 1935, 1936, '2024-02-16T02:12:42.868141+01:00'::timestamptz, 885, '["Player 13", "Player 1", "Player 4", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1934, 1935, 1936, datetime.datetime(2024, 2, 16, 2, 12, 42, 868141, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 885, <psycopg2._json.Json object at 0x7fbcfa4d7c80>, '0x0'); alias=default
DEBUG 2024-02-27 21:58:59,877 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 10, 'Player 15', 11, '2024-02-16T12:07:52.868141+01:00'::timestamptz, 614, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 10, 'Player 15', 11, datetime.datetime(2024, 2, 16, 12, 7, 52, 868141, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 614, True); alias=default
DEBUG 2024-02-27 21:58:59,878 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 1, 'Player 13', 11, '2024-02-16T12:08:31.868141+01:00'::timestamptz, 545, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 1, 'Player 13', 11, datetime.datetime(2024, 2, 16, 12, 8, 31, 868141, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 545, True); alias=default
DEBUG 2024-02-27 21:58:59,880 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 1, 'Player 13', 11, '2024-02-16T12:12:26.868141+01:00'::timestamptz, 38, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 1, 'Player 13', 11, datetime.datetime(2024, 2, 16, 12, 12, 26, 868141, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 38, True); alias=default
DEBUG 2024-02-27 21:58:59,880 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1937, 1938, 1939, '2024-02-16T12:12:26.868141+01:00'::timestamptz, 888, '["Player 13", "Player 15", "Player 2", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1937, 1938, 1939, datetime.datetime(2024, 2, 16, 12, 12, 26, 868141, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 888, <psycopg2._json.Json object at 0x7fbcf80b4770>, '0x0'); alias=default
DEBUG 2024-02-27 21:58:59,881 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,882 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,883 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:58:59,884 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 21:58:59,886 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 21:58:59,886 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:58:59,887 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,888 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,889 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,890 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,891 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 3, 'Player 10', 11, '2023-12-30T01:21:14.888521+01:00'::timestamptz, 708, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 3, 'Player 10', 11, datetime.datetime(2023, 12, 30, 1, 21, 14, 888521, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 708, True); alias=default
DEBUG 2024-02-27 21:58:59,893 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 12', 8, '2023-12-30T01:22:21.888521+01:00'::timestamptz, 780, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 12', 8, datetime.datetime(2023, 12, 30, 1, 22, 21, 888521, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 780, True); alias=default
DEBUG 2024-02-27 21:58:59,894 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 7', 9, '2023-12-30T01:25:18.888521+01:00'::timestamptz, 988, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 7', 9, datetime.datetime(2023, 12, 30, 1, 25, 18, 888521, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 988, True); alias=default
DEBUG 2024-02-27 21:58:59,895 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1940, 1941, 1942, '2023-12-30T01:25:18.888521+01:00'::timestamptz, 957, '["Player 10", "Player 7", "Player 9", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1940, 1941, 1942, datetime.datetime(2023, 12, 30, 1, 25, 18, 888521, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 957, <psycopg2._json.Json object at 0x7fbcf80b47d0>, '0x0'); alias=default
DEBUG 2024-02-27 21:58:59,897 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 9', 6, '2023-11-25T06:12:05.888521+01:00'::timestamptz, 746, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 9', 6, datetime.datetime(2023, 11, 25, 6, 12, 5, 888521, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 746, True); alias=default
DEBUG 2024-02-27 21:58:59,898 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 5', 3, '2023-11-25T06:03:41.888521+01:00'::timestamptz, 302, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 5', 3, datetime.datetime(2023, 11, 25, 6, 3, 41, 888521, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 302, True); alias=default
DEBUG 2024-02-27 21:58:59,899 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 3, 'Player 4', 11, '2023-11-25T06:14:53.888521+01:00'::timestamptz, 972, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 3, 'Player 4', 11, datetime.datetime(2023, 11, 25, 6, 14, 53, 888521, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 972, True); alias=default
DEBUG 2024-02-27 21:58:59,900 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1943, 1944, 1945, '2023-11-25T06:14:53.888521+01:00'::timestamptz, 974, '["Player 4", "Player 14", "Player 9", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1943, 1944, 1945, datetime.datetime(2023, 11, 25, 6, 14, 53, 888521, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 974, <psycopg2._json.Json object at 0x7fbcf80b5eb0>, '0x0'); alias=default
DEBUG 2024-02-27 21:58:59,901 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,902 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,903 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:58:59,903 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 21:58:59,905 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 21:58:59,906 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:58:59,906 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,907 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,909 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,911 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,913 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 1', 2, '2023-11-22T18:11:42.908099+01:00'::timestamptz, 149, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 1', 2, datetime.datetime(2023, 11, 22, 18, 11, 42, 908099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 149, True); alias=default
DEBUG 2024-02-27 21:58:59,914 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 0, 'Player 9', 11, '2023-11-22T18:22:40.908099+01:00'::timestamptz, 914, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 0, 'Player 9', 11, datetime.datetime(2023, 11, 22, 18, 22, 40, 908099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 914, True); alias=default
DEBUG 2024-02-27 21:58:59,915 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 9', 10, '2023-11-22T18:23:39.908099+01:00'::timestamptz, 437, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 9', 10, datetime.datetime(2023, 11, 22, 18, 23, 39, 908099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 437, True); alias=default
DEBUG 2024-02-27 21:58:59,916 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1946, 1947, 1948, '2023-11-22T18:23:39.908099+01:00'::timestamptz, 973, '["Player 6", "Player 9", "Player 1", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1946, 1947, 1948, datetime.datetime(2023, 11, 22, 18, 23, 39, 908099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 973, <psycopg2._json.Json object at 0x7fbcf828f740>, '0x0'); alias=default
DEBUG 2024-02-27 21:58:59,917 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 4, 'Player 5', 11, '2024-01-01T15:51:29.908099+01:00'::timestamptz, 395, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 4, 'Player 5', 11, datetime.datetime(2024, 1, 1, 15, 51, 29, 908099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 395, True); alias=default
DEBUG 2024-02-27 21:58:59,918 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 11', 7, '2024-01-01T15:48:04.908099+01:00'::timestamptz, 254, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 11', 7, datetime.datetime(2024, 1, 1, 15, 48, 4, 908099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 254, True); alias=default
DEBUG 2024-02-27 21:58:59,919 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 10, 'Player 0', 11, '2024-01-01T15:52:17.908099+01:00'::timestamptz, 26, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 10, 'Player 0', 11, datetime.datetime(2024, 1, 1, 15, 52, 17, 908099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 26, True); alias=default
DEBUG 2024-02-27 21:58:59,920 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1949, 1950, 1951, '2024-01-01T15:52:17.908099+01:00'::timestamptz, 507, '["Player 0", "Player 5", "Player 3", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1949, 1950, 1951, datetime.datetime(2024, 1, 1, 15, 52, 17, 908099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 507, <psycopg2._json.Json object at 0x7fbcf80b7290>, '0x0'); alias=default
DEBUG 2024-02-27 21:58:59,921 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,922 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,923 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:58:59,924 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 21:58:59,926 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 21:58:59,929 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 21:58:59,930 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:58:59,931 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,932 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,933 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,934 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,935 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 10', 2, '2024-02-05T03:14:22.932290+01:00'::timestamptz, 898, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 10', 2, datetime.datetime(2024, 2, 5, 3, 14, 22, 932290, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 898, True); alias=default
DEBUG 2024-02-27 21:58:59,936 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 4, 'Player 11', 11, '2024-02-05T03:08:42.932290+01:00'::timestamptz, 286, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 4, 'Player 11', 11, datetime.datetime(2024, 2, 5, 3, 8, 42, 932290, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 286, True); alias=default
DEBUG 2024-02-27 21:58:59,937 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 11', 2, '2024-02-05T03:14:43.932290+01:00'::timestamptz, 795, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 11', 2, datetime.datetime(2024, 2, 5, 3, 14, 43, 932290, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 795, True); alias=default
DEBUG 2024-02-27 21:58:59,938 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1952, 1953, 1954, '2024-02-05T03:14:43.932290+01:00'::timestamptz, 919, '["Player 12", "Player 11", "Player 10", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1952, 1953, 1954, datetime.datetime(2024, 2, 5, 3, 14, 43, 932290, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 919, <psycopg2._json.Json object at 0x7fbcf828f830>, '0x0'); alias=default
DEBUG 2024-02-27 21:58:59,939 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 14', 8, '2024-01-19T09:53:59.932290+01:00'::timestamptz, 699, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 14', 8, datetime.datetime(2024, 1, 19, 9, 53, 59, 932290, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 699, True); alias=default
DEBUG 2024-02-27 21:58:59,940 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 3', 0, '2024-01-19T09:54:13.932290+01:00'::timestamptz, 926, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 3', 0, datetime.datetime(2024, 1, 19, 9, 54, 13, 932290, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 926, True); alias=default
DEBUG 2024-02-27 21:58:59,942 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 4, 'Player 15', 11, '2024-01-19T09:55:12.932290+01:00'::timestamptz, 937, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 4, 'Player 15', 11, datetime.datetime(2024, 1, 19, 9, 55, 12, 932290, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 937, True); alias=default
DEBUG 2024-02-27 21:58:59,943 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1955, 1956, 1957, '2024-01-19T09:55:12.932290+01:00'::timestamptz, 985, '["Player 15", "Player 7", "Player 14", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1955, 1956, 1957, datetime.datetime(2024, 1, 19, 9, 55, 12, 932290, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 985, <psycopg2._json.Json object at 0x7fbcf80b73e0>, '0x0'); alias=default
DEBUG 2024-02-27 21:58:59,945 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:58:59,946 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
