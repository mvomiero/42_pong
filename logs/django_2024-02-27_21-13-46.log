DEBUG 2024-02-27 21:13:48,121 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:13:48,123 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,125 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:13:48,126 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,139 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:13:48,140 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:13:48,141 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,142 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:13:48,143 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 21:13:48,147 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 21:13:48,149 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:13:48,151 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,152 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,153 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,155 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,188 utils (0.009) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 7', 2, '2023-11-20T21:37:34.153075+01:00'::timestamptz, 441, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 7', 2, datetime.datetime(2023, 11, 20, 21, 37, 34, 153075, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 441, True); alias=default
DEBUG 2024-02-27 21:13:48,189 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 1', 10, '2023-11-20T21:31:47.153075+01:00'::timestamptz, 508, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 1', 10, datetime.datetime(2023, 11, 20, 21, 31, 47, 153075, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 508, True); alias=default
DEBUG 2024-02-27 21:13:48,190 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 0', 5, '2023-11-20T21:39:33.153075+01:00'::timestamptz, 602, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 0', 5, datetime.datetime(2023, 11, 20, 21, 39, 33, 153075, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 602, True); alias=default
DEBUG 2024-02-27 21:13:48,191 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1488, 1489, 1490, '2023-11-20T21:39:33.153075+01:00'::timestamptz, 974, '["Player 2", "Player 0", "Player 7", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1488, 1489, 1490, datetime.datetime(2023, 11, 20, 21, 39, 33, 153075, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 974, <psycopg2._json.Json object at 0x7f2503aeede0>, '0x0'); alias=default
DEBUG 2024-02-27 21:13:48,193 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 5, 'Player 7', 11, '2024-01-31T13:46:05.153075+01:00'::timestamptz, 293, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 5, 'Player 7', 11, datetime.datetime(2024, 1, 31, 13, 46, 5, 153075, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 293, True); alias=default
DEBUG 2024-02-27 21:13:48,194 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 9', 10, '2024-01-31T13:42:42.153075+01:00'::timestamptz, 85, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 9', 10, datetime.datetime(2024, 1, 31, 13, 42, 42, 153075, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 85, True); alias=default
DEBUG 2024-02-27 21:13:48,195 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 12', 6, '2024-01-31T13:49:59.153075+01:00'::timestamptz, 356, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 12', 6, datetime.datetime(2024, 1, 31, 13, 49, 59, 153075, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 356, True); alias=default
DEBUG 2024-02-27 21:13:48,195 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1491, 1492, 1493, '2024-01-31T13:49:59.153075+01:00'::timestamptz, 527, '["Player 7", "Player 12", "Player 0", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1491, 1492, 1493, datetime.datetime(2024, 1, 31, 13, 49, 59, 153075, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 527, <psycopg2._json.Json object at 0x7f2503aef050>, '0x0'); alias=default
DEBUG 2024-02-27 21:13:48,197 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,198 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,199 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:13:48,200 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 21:13:48,201 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 21:13:48,202 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 21:13:48,204 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 21:13:48,205 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:13:48,206 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,207 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,207 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,208 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,210 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 8, 'Player 11', 11, '2023-12-27T20:09:54.207156+01:00'::timestamptz, 53, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 8, 'Player 11', 11, datetime.datetime(2023, 12, 27, 20, 9, 54, 207156, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 53, True); alias=default
DEBUG 2024-02-27 21:13:48,211 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 3, 'Player 4', 11, '2023-12-27T20:16:35.207156+01:00'::timestamptz, 832, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 3, 'Player 4', 11, datetime.datetime(2023, 12, 27, 20, 16, 35, 207156, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 832, True); alias=default
DEBUG 2024-02-27 21:13:48,212 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 5, 'Player 4', 11, '2023-12-27T20:17:37.207156+01:00'::timestamptz, 371, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 5, 'Player 4', 11, datetime.datetime(2023, 12, 27, 20, 17, 37, 207156, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 371, True); alias=default
DEBUG 2024-02-27 21:13:48,213 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1494, 1495, 1496, '2023-12-27T20:17:37.207156+01:00'::timestamptz, 894, '["Player 4", "Player 11", "Player 2", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1494, 1495, 1496, datetime.datetime(2023, 12, 27, 20, 17, 37, 207156, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 894, <psycopg2._json.Json object at 0x7f2503aee810>, '0x0'); alias=default
DEBUG 2024-02-27 21:13:48,214 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 14', 1, '2023-12-13T13:18:33.207156+01:00'::timestamptz, 92, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 14', 1, datetime.datetime(2023, 12, 13, 13, 18, 33, 207156, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 92, True); alias=default
DEBUG 2024-02-27 21:13:48,215 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 6', 9, '2023-12-13T13:25:52.207156+01:00'::timestamptz, 531, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 6', 9, datetime.datetime(2023, 12, 13, 13, 25, 52, 207156, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 531, True); alias=default
DEBUG 2024-02-27 21:13:48,217 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 10, 'Player 2', 11, '2023-12-13T13:28:48.207156+01:00'::timestamptz, 24, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 10, 'Player 2', 11, datetime.datetime(2023, 12, 13, 13, 28, 48, 207156, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 24, True); alias=default
DEBUG 2024-02-27 21:13:48,218 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1497, 1498, 1499, '2023-12-13T13:28:48.207156+01:00'::timestamptz, 707, '["Player 2", "Player 0", "Player 14", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1497, 1498, 1499, datetime.datetime(2023, 12, 13, 13, 28, 48, 207156, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 707, <psycopg2._json.Json object at 0x7f2503918560>, '0x0'); alias=default
DEBUG 2024-02-27 21:13:48,218 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,219 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,220 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:13:48,222 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 21:13:48,223 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 21:13:48,224 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:13:48,225 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,226 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,227 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,228 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,229 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 6', 8, '2024-02-12T15:04:22.226502+01:00'::timestamptz, 733, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 6', 8, datetime.datetime(2024, 2, 12, 15, 4, 22, 226502, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 733, True); alias=default
DEBUG 2024-02-27 21:13:48,230 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 15', 2, '2024-02-12T15:02:03.226502+01:00'::timestamptz, 528, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 15', 2, datetime.datetime(2024, 2, 12, 15, 2, 3, 226502, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 528, True); alias=default
DEBUG 2024-02-27 21:13:48,232 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 12', 0, '2024-02-12T15:08:14.226502+01:00'::timestamptz, 587, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 12', 0, datetime.datetime(2024, 2, 12, 15, 8, 14, 226502, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 587, True); alias=default
DEBUG 2024-02-27 21:13:48,232 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1500, 1501, 1502, '2024-02-12T15:08:14.226502+01:00'::timestamptz, 965, '["Player 10", "Player 12", "Player 6", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1500, 1501, 1502, datetime.datetime(2024, 2, 12, 15, 8, 14, 226502, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 965, <psycopg2._json.Json object at 0x7f2503918b00>, '0x0'); alias=default
DEBUG 2024-02-27 21:13:48,234 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 7, 'Player 7', 11, '2024-02-17T05:25:42.226502+01:00'::timestamptz, 881, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 7, 'Player 7', 11, datetime.datetime(2024, 2, 17, 5, 25, 42, 226502, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 881, True); alias=default
DEBUG 2024-02-27 21:13:48,235 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 12', 0, '2024-02-17T05:24:24.226502+01:00'::timestamptz, 358, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 12', 0, datetime.datetime(2024, 2, 17, 5, 24, 24, 226502, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 358, True); alias=default
DEBUG 2024-02-27 21:13:48,236 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 8', 8, '2024-02-17T05:26:47.226502+01:00'::timestamptz, 657, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 8', 8, datetime.datetime(2024, 2, 17, 5, 26, 47, 226502, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 657, True); alias=default
DEBUG 2024-02-27 21:13:48,237 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1503, 1504, 1505, '2024-02-17T05:26:47.226502+01:00'::timestamptz, 946, '["Player 7", "Player 8", "Player 10", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1503, 1504, 1505, datetime.datetime(2024, 2, 17, 5, 26, 47, 226502, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 946, <psycopg2._json.Json object at 0x7f2503919f10>, '0x0'); alias=default
DEBUG 2024-02-27 21:13:48,238 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,239 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,239 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:13:48,240 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 21:13:48,242 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 21:13:48,243 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:13:48,244 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,244 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,245 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,246 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,248 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 5', 6, '2024-02-26T21:29:55.245016+01:00'::timestamptz, 30, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 5', 6, datetime.datetime(2024, 2, 26, 21, 29, 55, 245016, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 30, True); alias=default
DEBUG 2024-02-27 21:13:48,249 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 1', 2, '2024-02-26T21:40:15.245016+01:00'::timestamptz, 464, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 1', 2, datetime.datetime(2024, 2, 26, 21, 40, 15, 245016, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 464, True); alias=default
DEBUG 2024-02-27 21:13:48,250 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 1, 'Player 13', 11, '2024-02-26T21:45:55.245016+01:00'::timestamptz, 453, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 1, 'Player 13', 11, datetime.datetime(2024, 2, 26, 21, 45, 55, 245016, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 453, True); alias=default
DEBUG 2024-02-27 21:13:48,252 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1506, 1507, 1508, '2024-02-26T21:45:55.245016+01:00'::timestamptz, 990, '["Player 13", "Player 3", "Player 5", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1506, 1507, 1508, datetime.datetime(2024, 2, 26, 21, 45, 55, 245016, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 990, <psycopg2._json.Json object at 0x7f250391a0f0>, '0x0'); alias=default
DEBUG 2024-02-27 21:13:48,254 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 7, 'Player 8', 11, '2023-12-17T12:45:47.245016+01:00'::timestamptz, 478, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 7, 'Player 8', 11, datetime.datetime(2023, 12, 17, 12, 45, 47, 245016, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 478, True); alias=default
DEBUG 2024-02-27 21:13:48,255 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 0', 8, '2023-12-17T12:40:36.245016+01:00'::timestamptz, 50, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 0', 8, datetime.datetime(2023, 12, 17, 12, 40, 36, 245016, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 50, True); alias=default
DEBUG 2024-02-27 21:13:48,257 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 7', 8, '2023-12-17T12:48:11.245016+01:00'::timestamptz, 249, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 7', 8, datetime.datetime(2023, 12, 17, 12, 48, 11, 245016, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 249, True); alias=default
DEBUG 2024-02-27 21:13:48,258 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1509, 1510, 1511, '2023-12-17T12:48:11.245016+01:00'::timestamptz, 622, '["Player 8", "Player 7", "Player 10", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1509, 1510, 1511, datetime.datetime(2023, 12, 17, 12, 48, 11, 245016, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 622, <psycopg2._json.Json object at 0x7f250391b1d0>, '0x0'); alias=default
DEBUG 2024-02-27 21:13:48,259 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,260 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,261 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:13:48,262 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 21:13:48,263 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 21:13:48,264 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 21:13:48,265 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:13:48,266 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,267 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,267 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,269 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,270 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 4, 'Player 3', 11, '2023-12-20T03:34:39.267319+01:00'::timestamptz, 101, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 4, 'Player 3', 11, datetime.datetime(2023, 12, 20, 3, 34, 39, 267319, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 101, True); alias=default
DEBUG 2024-02-27 21:13:48,271 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 3, 'Player 0', 11, '2023-12-20T03:36:08.267319+01:00'::timestamptz, 743, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 3, 'Player 0', 11, datetime.datetime(2023, 12, 20, 3, 36, 8, 267319, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 743, True); alias=default
DEBUG 2024-02-27 21:13:48,272 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 0', 0, '2023-12-20T03:38:37.267319+01:00'::timestamptz, 679, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 0', 0, datetime.datetime(2023, 12, 20, 3, 38, 37, 267319, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 679, True); alias=default
DEBUG 2024-02-27 21:13:48,273 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1512, 1513, 1514, '2023-12-20T03:38:37.267319+01:00'::timestamptz, 892, '["Player 3", "Player 0", "Player 13", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1512, 1513, 1514, datetime.datetime(2023, 12, 20, 3, 38, 37, 267319, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 892, <psycopg2._json.Json object at 0x7f2503aefef0>, '0x0'); alias=default
DEBUG 2024-02-27 21:13:48,274 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 2, 'Player 14', 11, '2024-02-20T23:24:43.267319+01:00'::timestamptz, 827, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 2, 'Player 14', 11, datetime.datetime(2024, 2, 20, 23, 24, 43, 267319, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 827, True); alias=default
DEBUG 2024-02-27 21:13:48,276 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 7, 'Player 2', 11, '2024-02-20T23:26:01.267319+01:00'::timestamptz, 346, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 7, 'Player 2', 11, datetime.datetime(2024, 2, 20, 23, 26, 1, 267319, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 346, True); alias=default
DEBUG 2024-02-27 21:13:48,277 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 2', 9, '2024-02-20T23:26:46.267319+01:00'::timestamptz, 559, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 2', 9, datetime.datetime(2024, 2, 20, 23, 26, 46, 267319, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 559, True); alias=default
DEBUG 2024-02-27 21:13:48,278 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1515, 1516, 1517, '2024-02-20T23:26:46.267319+01:00'::timestamptz, 950, '["Player 14", "Player 2", "Player 12", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1515, 1516, 1517, datetime.datetime(2024, 2, 20, 23, 26, 46, 267319, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 950, <psycopg2._json.Json object at 0x7f2503918ec0>, '0x0'); alias=default
DEBUG 2024-02-27 21:13:48,279 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:13:48,279 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
