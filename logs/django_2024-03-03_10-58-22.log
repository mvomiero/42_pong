DEBUG 2024-03-03 10:58:24,229 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,231 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,233 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,234 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,234 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 10:58:24,256 utils (0.022) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:58:24,257 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,257 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,259 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 10:58:24,262 utils (0.002) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:58:24,264 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 10:58:24,268 utils (0.003) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 10:58:24,269 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,272 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T10:58:24.270388+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 10, 58, 24, 270388, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:58:24,273 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,274 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,277 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 10:58:24,280 utils (0.003) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:58:24,287 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 10:58:24,291 utils (0.004) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 10:58:24,292 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:58:24,294 utils (0.002) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:58:24,304 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 10:58:24,308 utils (0.004) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:58:24,309 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:58:24,311 utils (0.002) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:58:24,311 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:58:24,314 utils (0.002) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:58:24,314 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 10:58:24,317 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 10:58:24,317 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:58:24,319 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:58:24,320 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 10:58:24,321 utils (0.002) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 10:58:24,322 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 10:58:24,324 utils (0.002) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 10:58:24,324 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 10:58:24,325 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:58:24,326 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:58:24,326 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:58:24,327 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:58:24,327 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:58:24,328 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 10:58:24,330 utils (0.002) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 10:58:24,330 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 10:58:24,332 utils (0.002) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:58:24,332 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 10:58:24,334 utils (0.002) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 10:58:24,334 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 10:58:24,336 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 10:58:24,337 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:58:24,337 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:58:24,338 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:58:24,340 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:58:24,340 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 10:58:24,343 utils (0.002) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 10:58:24,343 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 10:58:24,345 utils (0.002) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 10:58:24,346 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 10:58:24,348 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:58:24,348 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:58:24,350 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:58:24,350 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:58:24,351 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:58:24,351 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 10:58:24,353 utils (0.002) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 10:58:24,353 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 10:58:24,355 utils (0.002) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:58:24,355 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,356 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,358 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T10:58:24.357230+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 10, 58, 24, 357230, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:58:24,358 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,366 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:58:24,371 utils (0.004) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:58:24,371 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:58:24,372 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:58:24,372 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:58:24,374 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:58:24,374 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 10:58:24,376 utils (0.002) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 10:58:24,376 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 10:58:24,379 utils (0.002) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 10:58:24,380 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,382 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,384 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T10:58:24.383260+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 10, 58, 24, 383260, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:58:24,385 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,391 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,392 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T10:58:24.391709+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 10, 58, 24, 391709, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:58:24,392 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,393 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,401 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,402 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T10:58:24.401830+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 10, 58, 24, 401830, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:58:24,403 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,403 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,411 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 10:58:24,411 utils (0.000) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 10:58:24,423 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 10:58:24,424 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 10:58:24,425 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,426 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T10:58:24.426044+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 10, 58, 24, 426044, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:58:24,427 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,427 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,438 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 10:58:24,438 utils (0.001) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 10:58:24,440 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,441 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T10:58:24.440701+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 10, 58, 24, 440701, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:58:24,442 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,442 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,453 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 10:58:24,454 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 10:58:24,455 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,456 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T10:58:24.456066+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 10, 58, 24, 456066, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:58:24,457 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,457 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,468 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,469 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T10:58:24.469266+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 10, 58, 24, 469266, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:58:24,471 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,471 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,484 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 10:58:24,491 utils (0.006) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 10:58:24,492 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,493 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T10:58:24.493119+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 10, 58, 24, 493119, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:58:24,494 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,494 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,496 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,497 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T10:58:24.496919+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 10, 58, 24, 496919, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:58:24,500 utils (0.003) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,501 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,523 utils (0.004) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,524 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T10:58:24.523351+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 10, 58, 24, 523351, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:58:24,524 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,525 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,536 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:58:24,543 utils (0.006) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:58:24,544 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,546 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T10:58:24.545350+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 10, 58, 24, 545350, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:58:24,550 utils (0.003) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,550 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,560 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:58:24,561 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:58:24,563 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,564 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T10:58:24.563439+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 10, 58, 24, 563439, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:58:24,565 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,565 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,576 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:58:24,577 utils (0.001) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:58:24,579 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,580 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T10:58:24.579884+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 10, 58, 24, 579884, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:58:24,582 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,582 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,595 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,596 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T10:58:24.595380+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 10, 58, 24, 595380, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:58:24,597 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,597 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,610 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:58:24,610 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:58:24,611 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,612 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T10:58:24.611758+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 10, 58, 24, 611758, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:58:24,613 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,613 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,616 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 10:58:24,622 utils (0.006) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:58:24,624 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 10:58:24,630 utils (0.005) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 10:58:24,632 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,633 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T10:58:24.632740+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 10, 58, 24, 632740, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:58:24,637 utils (0.003) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,637 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,638 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 10:58:24,643 utils (0.004) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:58:24,643 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 10:58:24,645 utils (0.002) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 10:58:24,646 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 10:58:24,648 utils (0.002) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 10:58:24,649 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,651 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,652 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T10:58:24.651426+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 10, 58, 24, 651426, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:58:24,654 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:58:24,655 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 10:58:24,667 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 10:58:24,668 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,669 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 10:58:24,670 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,671 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 10:58:24,673 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 10:58:24,674 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,674 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 10:58:24,675 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,676 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 10:58:24,678 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:58:24,684 utils (0.004) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:58:24,685 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:58:24,737 utils (0.006) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 4', 10, '2023-11-04T12:35:49.684572+01:00'::timestamptz, 97, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 4', 10, datetime.datetime(2023, 11, 4, 12, 35, 49, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 97, False); alias=default
DEBUG 2024-03-03 10:58:24,739 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 1, 'Player 8', 11, '2024-02-28T12:05:13.684572+01:00'::timestamptz, 739, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 1, 'Player 8', 11, datetime.datetime(2024, 2, 28, 12, 5, 13, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 739, False); alias=default
DEBUG 2024-03-03 10:58:24,741 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 13', 6, '2023-12-05T18:46:07.684572+01:00'::timestamptz, 733, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 13', 6, datetime.datetime(2023, 12, 5, 18, 46, 7, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 733, False); alias=default
DEBUG 2024-03-03 10:58:24,742 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 16', 8, '2024-02-27T20:30:42.684572+01:00'::timestamptz, 29, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 16', 8, datetime.datetime(2024, 2, 27, 20, 30, 42, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 29, False); alias=default
DEBUG 2024-03-03 10:58:24,744 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 7', 3, '2024-02-14T22:21:12.684572+01:00'::timestamptz, 687, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 7', 3, datetime.datetime(2024, 2, 14, 22, 21, 12, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 687, False); alias=default
DEBUG 2024-03-03 10:58:24,745 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 1', 6, '2023-11-09T03:14:49.684572+01:00'::timestamptz, 206, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 1', 6, datetime.datetime(2023, 11, 9, 3, 14, 49, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 206, False); alias=default
DEBUG 2024-03-03 10:58:24,747 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 6, 'Player 0', 11, '2024-01-19T12:50:57.684572+01:00'::timestamptz, 269, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 6, 'Player 0', 11, datetime.datetime(2024, 1, 19, 12, 50, 57, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 269, False); alias=default
DEBUG 2024-03-03 10:58:24,749 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 11', 9, '2024-02-07T02:51:17.684572+01:00'::timestamptz, 289, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 11', 9, datetime.datetime(2024, 2, 7, 2, 51, 17, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 289, False); alias=default
DEBUG 2024-03-03 10:58:24,751 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 1, 'Player 3', 11, '2024-02-02T22:48:00.684572+01:00'::timestamptz, 595, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 1, 'Player 3', 11, datetime.datetime(2024, 2, 2, 22, 48, 0, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 595, False); alias=default
DEBUG 2024-03-03 10:58:24,752 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 10', 10, '2024-01-15T03:30:46.684572+01:00'::timestamptz, 988, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 10', 10, datetime.datetime(2024, 1, 15, 3, 30, 46, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 988, False); alias=default
DEBUG 2024-03-03 10:58:24,754 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 5', 0, '2024-01-18T12:00:30.684572+01:00'::timestamptz, 619, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 5', 0, datetime.datetime(2024, 1, 18, 12, 0, 30, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 619, False); alias=default
DEBUG 2024-03-03 10:58:24,755 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 18', 8, '2023-12-22T12:50:01.684572+01:00'::timestamptz, 502, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 18', 8, datetime.datetime(2023, 12, 22, 12, 50, 1, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 502, False); alias=default
DEBUG 2024-03-03 10:58:24,757 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 19', 2, '2023-12-24T07:13:30.684572+01:00'::timestamptz, 799, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 19', 2, datetime.datetime(2023, 12, 24, 7, 13, 30, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 799, False); alias=default
DEBUG 2024-03-03 10:58:24,759 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 8', 1, '2023-12-11T16:55:44.684572+01:00'::timestamptz, 281, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 8', 1, datetime.datetime(2023, 12, 11, 16, 55, 44, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 281, False); alias=default
DEBUG 2024-03-03 10:58:24,760 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 9, 'Player 0', 11, '2024-02-18T13:12:31.684572+01:00'::timestamptz, 427, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 9, 'Player 0', 11, datetime.datetime(2024, 2, 18, 13, 12, 31, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 427, False); alias=default
DEBUG 2024-03-03 10:58:24,762 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 19', 6, '2024-02-07T13:22:38.684572+01:00'::timestamptz, 811, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 19', 6, datetime.datetime(2024, 2, 7, 13, 22, 38, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 811, False); alias=default
DEBUG 2024-03-03 10:58:24,763 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 6, 'Player 19', 11, '2024-02-02T09:23:51.684572+01:00'::timestamptz, 888, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 6, 'Player 19', 11, datetime.datetime(2024, 2, 2, 9, 23, 51, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 888, False); alias=default
DEBUG 2024-03-03 10:58:24,765 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 6, 'Player 22', 11, '2024-02-05T04:25:45.684572+01:00'::timestamptz, 802, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 6, 'Player 22', 11, datetime.datetime(2024, 2, 5, 4, 25, 45, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 802, False); alias=default
DEBUG 2024-03-03 10:58:24,767 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 12', 6, '2023-12-27T02:11:37.684572+01:00'::timestamptz, 888, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 12', 6, datetime.datetime(2023, 12, 27, 2, 11, 37, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 888, False); alias=default
DEBUG 2024-03-03 10:58:24,769 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 2', 7, '2023-12-25T21:36:09.684572+01:00'::timestamptz, 850, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 2', 7, datetime.datetime(2023, 12, 25, 21, 36, 9, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 850, False); alias=default
DEBUG 2024-03-03 10:58:24,770 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 2, 'Player 8', 11, '2023-12-20T17:25:14.684572+01:00'::timestamptz, 27, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 2, 'Player 8', 11, datetime.datetime(2023, 12, 20, 17, 25, 14, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 27, False); alias=default
DEBUG 2024-03-03 10:58:24,772 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 9', 1, '2024-01-11T06:28:16.684572+01:00'::timestamptz, 153, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 9', 1, datetime.datetime(2024, 1, 11, 6, 28, 16, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 153, False); alias=default
DEBUG 2024-03-03 10:58:24,773 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 6, 'Player 0', 11, '2023-12-20T12:11:01.684572+01:00'::timestamptz, 589, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 6, 'Player 0', 11, datetime.datetime(2023, 12, 20, 12, 11, 1, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 589, False); alias=default
DEBUG 2024-03-03 10:58:24,775 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 9', 0, '2024-02-27T18:43:41.684572+01:00'::timestamptz, 121, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 9', 0, datetime.datetime(2024, 2, 27, 18, 43, 41, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 121, False); alias=default
DEBUG 2024-03-03 10:58:24,777 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 23', 10, '2023-11-25T21:34:21.684572+01:00'::timestamptz, 421, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 23', 10, datetime.datetime(2023, 11, 25, 21, 34, 21, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 421, False); alias=default
DEBUG 2024-03-03 10:58:24,778 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 1, 'Player 7', 11, '2023-11-04T06:12:01.684572+01:00'::timestamptz, 729, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 1, 'Player 7', 11, datetime.datetime(2023, 11, 4, 6, 12, 1, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 729, False); alias=default
DEBUG 2024-03-03 10:58:24,780 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 5', 9, '2023-11-19T11:04:36.684572+01:00'::timestamptz, 521, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 5', 9, datetime.datetime(2023, 11, 19, 11, 4, 36, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 521, False); alias=default
DEBUG 2024-03-03 10:58:24,782 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 7, 'Player 28', 11, '2023-12-14T21:15:24.684572+01:00'::timestamptz, 116, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 7, 'Player 28', 11, datetime.datetime(2023, 12, 14, 21, 15, 24, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 116, False); alias=default
DEBUG 2024-03-03 10:58:24,783 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 5, 'Player 28', 11, '2024-02-07T13:50:55.684572+01:00'::timestamptz, 930, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 5, 'Player 28', 11, datetime.datetime(2024, 2, 7, 13, 50, 55, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 930, False); alias=default
DEBUG 2024-03-03 10:58:24,785 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 22', 4, '2023-12-21T00:49:21.684572+01:00'::timestamptz, 692, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 22', 4, datetime.datetime(2023, 12, 21, 0, 49, 21, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 692, False); alias=default
DEBUG 2024-03-03 10:58:24,786 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 8, 'Player 6', 11, '2024-02-29T20:18:59.684572+01:00'::timestamptz, 150, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 8, 'Player 6', 11, datetime.datetime(2024, 2, 29, 20, 18, 59, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 150, False); alias=default
DEBUG 2024-03-03 10:58:24,788 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 22', 9, '2024-02-19T14:28:58.684572+01:00'::timestamptz, 479, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 22', 9, datetime.datetime(2024, 2, 19, 14, 28, 58, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 479, False); alias=default
DEBUG 2024-03-03 10:58:24,789 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 23', 2, '2023-12-16T11:48:04.684572+01:00'::timestamptz, 68, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 23', 2, datetime.datetime(2023, 12, 16, 11, 48, 4, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 68, False); alias=default
DEBUG 2024-03-03 10:58:24,791 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 7, 'Player 13', 11, '2024-01-14T10:01:33.684572+01:00'::timestamptz, 275, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 7, 'Player 13', 11, datetime.datetime(2024, 1, 14, 10, 1, 33, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 275, False); alias=default
DEBUG 2024-03-03 10:58:24,793 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 8, 'Player 32', 11, '2024-01-29T05:01:36.684572+01:00'::timestamptz, 370, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 8, 'Player 32', 11, datetime.datetime(2024, 1, 29, 5, 1, 36, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 370, False); alias=default
DEBUG 2024-03-03 10:58:24,794 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 5, 'Player 5', 11, '2024-02-26T17:14:43.684572+01:00'::timestamptz, 184, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 5, 'Player 5', 11, datetime.datetime(2024, 2, 26, 17, 14, 43, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 184, False); alias=default
DEBUG 2024-03-03 10:58:24,796 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 0', 0, '2023-11-17T17:00:13.684572+01:00'::timestamptz, 593, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 0', 0, datetime.datetime(2023, 11, 17, 17, 0, 13, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 593, False); alias=default
DEBUG 2024-03-03 10:58:24,797 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 18', 6, '2023-11-19T02:29:38.684572+01:00'::timestamptz, 92, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 18', 6, datetime.datetime(2023, 11, 19, 2, 29, 38, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 92, False); alias=default
DEBUG 2024-03-03 10:58:24,799 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 19', 6, '2023-11-08T18:21:00.684572+01:00'::timestamptz, 474, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 19', 6, datetime.datetime(2023, 11, 8, 18, 21, 0, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 474, False); alias=default
DEBUG 2024-03-03 10:58:24,801 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 6, 'Player 6', 11, '2024-02-14T04:20:07.684572+01:00'::timestamptz, 341, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 6, 'Player 6', 11, datetime.datetime(2024, 2, 14, 4, 20, 7, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 341, False); alias=default
DEBUG 2024-03-03 10:58:24,802 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 7, 'Player 21', 11, '2024-01-21T11:52:27.684572+01:00'::timestamptz, 922, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 7, 'Player 21', 11, datetime.datetime(2024, 1, 21, 11, 52, 27, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 922, False); alias=default
DEBUG 2024-03-03 10:58:24,804 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 6, 'Player 16', 11, '2023-12-09T17:55:41.684572+01:00'::timestamptz, 815, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 6, 'Player 16', 11, datetime.datetime(2023, 12, 9, 17, 55, 41, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 815, False); alias=default
DEBUG 2024-03-03 10:58:24,806 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 15', 2, '2024-02-23T23:12:51.684572+01:00'::timestamptz, 888, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 15', 2, datetime.datetime(2024, 2, 23, 23, 12, 51, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 888, False); alias=default
DEBUG 2024-03-03 10:58:24,807 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 9, 'Player 1', 11, '2023-12-14T23:49:20.684572+01:00'::timestamptz, 860, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 9, 'Player 1', 11, datetime.datetime(2023, 12, 14, 23, 49, 20, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 860, False); alias=default
DEBUG 2024-03-03 10:58:24,809 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 15', 3, '2024-02-12T22:08:51.684572+01:00'::timestamptz, 45, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 15', 3, datetime.datetime(2024, 2, 12, 22, 8, 51, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 45, False); alias=default
DEBUG 2024-03-03 10:58:24,810 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 2, 'Player 35', 11, '2024-01-30T19:44:27.684572+01:00'::timestamptz, 852, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 2, 'Player 35', 11, datetime.datetime(2024, 1, 30, 19, 44, 27, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 852, False); alias=default
DEBUG 2024-03-03 10:58:24,812 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 10, 'Player 35', 11, '2024-02-08T09:10:12.684572+01:00'::timestamptz, 760, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 10, 'Player 35', 11, datetime.datetime(2024, 2, 8, 9, 10, 12, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 760, False); alias=default
DEBUG 2024-03-03 10:58:24,814 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 11, 'Player 3', 9, '2023-11-28T08:25:11.684572+01:00'::timestamptz, 473, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 11, 'Player 3', 9, datetime.datetime(2023, 11, 28, 8, 25, 11, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 473, False); alias=default
DEBUG 2024-03-03 10:58:24,815 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 8, 'Player 0', 11, '2023-11-13T08:06:58.684572+01:00'::timestamptz, 514, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 8, 'Player 0', 11, datetime.datetime(2023, 11, 13, 8, 6, 58, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 514, False); alias=default
DEBUG 2024-03-03 10:58:24,817 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 11, 'Player 39', 1, '2023-12-21T03:16:41.684572+01:00'::timestamptz, 673, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 11, 'Player 39', 1, datetime.datetime(2023, 12, 21, 3, 16, 41, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 673, False); alias=default
DEBUG 2024-03-03 10:58:24,819 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 5, 'Player 30', 11, '2024-01-30T18:42:04.684572+01:00'::timestamptz, 23, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 5, 'Player 30', 11, datetime.datetime(2024, 1, 30, 18, 42, 4, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 23, False); alias=default
DEBUG 2024-03-03 10:58:24,820 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 1, 'Player 31', 11, '2024-02-06T11:45:01.684572+01:00'::timestamptz, 76, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 1, 'Player 31', 11, datetime.datetime(2024, 2, 6, 11, 45, 1, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 76, False); alias=default
DEBUG 2024-03-03 10:58:24,822 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 11, 'Player 22', 9, '2023-12-31T06:10:32.684572+01:00'::timestamptz, 709, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 11, 'Player 22', 9, datetime.datetime(2023, 12, 31, 6, 10, 32, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 709, False); alias=default
DEBUG 2024-03-03 10:58:24,823 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 1, 'Player 0', 11, '2023-11-23T09:53:50.684572+01:00'::timestamptz, 124, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 1, 'Player 0', 11, datetime.datetime(2023, 11, 23, 9, 53, 50, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 124, False); alias=default
DEBUG 2024-03-03 10:58:24,825 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 1, 'Player 20', 11, '2023-12-01T09:20:05.684572+01:00'::timestamptz, 735, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 1, 'Player 20', 11, datetime.datetime(2023, 12, 1, 9, 20, 5, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 735, False); alias=default
DEBUG 2024-03-03 10:58:24,826 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 3, 'Player 29', 11, '2023-11-30T19:28:39.684572+01:00'::timestamptz, 936, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 3, 'Player 29', 11, datetime.datetime(2023, 11, 30, 19, 28, 39, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 936, False); alias=default
DEBUG 2024-03-03 10:58:24,828 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 5, 'Player 23', 11, '2023-11-09T14:36:11.684572+01:00'::timestamptz, 654, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 5, 'Player 23', 11, datetime.datetime(2023, 11, 9, 14, 36, 11, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 654, False); alias=default
DEBUG 2024-03-03 10:58:24,830 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 2, 'Player 30', 11, '2024-02-16T12:07:12.684572+01:00'::timestamptz, 38, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 2, 'Player 30', 11, datetime.datetime(2024, 2, 16, 12, 7, 12, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 38, False); alias=default
DEBUG 2024-03-03 10:58:24,832 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 11, 'Player 2', 5, '2023-11-02T08:10:55.684572+01:00'::timestamptz, 617, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 11, 'Player 2', 5, datetime.datetime(2023, 11, 2, 8, 10, 55, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 617, False); alias=default
DEBUG 2024-03-03 10:58:24,833 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 11, 'Player 4', 4, '2024-02-23T02:46:29.684572+01:00'::timestamptz, 158, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 11, 'Player 4', 4, datetime.datetime(2024, 2, 23, 2, 46, 29, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 158, False); alias=default
DEBUG 2024-03-03 10:58:24,835 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 11, 'Player 4', 2, '2024-02-13T20:53:20.684572+01:00'::timestamptz, 540, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 11, 'Player 4', 2, datetime.datetime(2024, 2, 13, 20, 53, 20, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 540, False); alias=default
DEBUG 2024-03-03 10:58:24,841 utils (0.006) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 11, 'Player 42', 8, '2024-02-21T22:41:21.684572+01:00'::timestamptz, 117, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 11, 'Player 42', 8, datetime.datetime(2024, 2, 21, 22, 41, 21, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 117, False); alias=default
DEBUG 2024-03-03 10:58:24,843 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 46', 5, 'Player 14', 11, '2023-11-25T22:17:47.684572+01:00'::timestamptz, 841, false) RETURNING "pong_gamedata"."id"; args=('Player 46', 5, 'Player 14', 11, datetime.datetime(2023, 11, 25, 22, 17, 47, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 841, False); alias=default
DEBUG 2024-03-03 10:58:24,845 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 10, 'Player 36', 11, '2024-02-07T21:49:59.684572+01:00'::timestamptz, 136, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 10, 'Player 36', 11, datetime.datetime(2024, 2, 7, 21, 49, 59, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 136, False); alias=default
DEBUG 2024-03-03 10:58:24,846 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 22', 2, '2023-12-15T04:30:58.684572+01:00'::timestamptz, 754, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 22', 2, datetime.datetime(2023, 12, 15, 4, 30, 58, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 754, False); alias=default
DEBUG 2024-03-03 10:58:24,848 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 41', 8, '2023-11-29T07:36:23.684572+01:00'::timestamptz, 505, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 41', 8, datetime.datetime(2023, 11, 29, 7, 36, 23, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 505, False); alias=default
DEBUG 2024-03-03 10:58:24,850 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 11, 'Player 45', 8, '2023-12-08T04:03:22.684572+01:00'::timestamptz, 349, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 11, 'Player 45', 8, datetime.datetime(2023, 12, 8, 4, 3, 22, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 349, False); alias=default
DEBUG 2024-03-03 10:58:24,851 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 47', 2, '2023-11-24T17:09:41.684572+01:00'::timestamptz, 146, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 47', 2, datetime.datetime(2023, 11, 24, 17, 9, 41, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 146, False); alias=default
DEBUG 2024-03-03 10:58:24,853 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 3, 'Player 45', 11, '2024-02-08T06:24:37.684572+01:00'::timestamptz, 698, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 3, 'Player 45', 11, datetime.datetime(2024, 2, 8, 6, 24, 37, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 698, False); alias=default
DEBUG 2024-03-03 10:58:24,854 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 11, 'Player 28', 3, '2024-01-07T18:21:06.684572+01:00'::timestamptz, 431, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 11, 'Player 28', 3, datetime.datetime(2024, 1, 7, 18, 21, 6, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 431, False); alias=default
DEBUG 2024-03-03 10:58:24,856 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 8', 2, '2024-01-28T10:33:51.684572+01:00'::timestamptz, 660, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 8', 2, datetime.datetime(2024, 1, 28, 10, 33, 51, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 660, False); alias=default
DEBUG 2024-03-03 10:58:24,857 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 11, 'Player 34', 5, '2023-12-01T12:54:42.684572+01:00'::timestamptz, 999, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 11, 'Player 34', 5, datetime.datetime(2023, 12, 1, 12, 54, 42, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 999, False); alias=default
DEBUG 2024-03-03 10:58:24,859 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 48', 10, 'Player 45', 11, '2023-11-04T00:07:37.684572+01:00'::timestamptz, 795, false) RETURNING "pong_gamedata"."id"; args=('Player 48', 10, 'Player 45', 11, datetime.datetime(2023, 11, 4, 0, 7, 37, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 795, False); alias=default
DEBUG 2024-03-03 10:58:24,861 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 19', 5, '2023-12-25T06:55:46.684572+01:00'::timestamptz, 182, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 19', 5, datetime.datetime(2023, 12, 25, 6, 55, 46, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 182, False); alias=default
DEBUG 2024-03-03 10:58:24,862 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 29', 5, '2024-01-19T15:42:09.684572+01:00'::timestamptz, 72, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 29', 5, datetime.datetime(2024, 1, 19, 15, 42, 9, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 72, False); alias=default
DEBUG 2024-03-03 10:58:24,864 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 2, 'Player 25', 11, '2023-11-02T18:24:10.684572+01:00'::timestamptz, 213, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 2, 'Player 25', 11, datetime.datetime(2023, 11, 2, 18, 24, 10, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 213, False); alias=default
DEBUG 2024-03-03 10:58:24,866 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 50', 9, 'Player 10', 11, '2024-01-27T14:34:53.684572+01:00'::timestamptz, 865, false) RETURNING "pong_gamedata"."id"; args=('Player 50', 9, 'Player 10', 11, datetime.datetime(2024, 1, 27, 14, 34, 53, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 865, False); alias=default
DEBUG 2024-03-03 10:58:24,867 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 8, 'Player 22', 11, '2024-02-08T16:09:38.684572+01:00'::timestamptz, 124, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 8, 'Player 22', 11, datetime.datetime(2024, 2, 8, 16, 9, 38, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 124, False); alias=default
DEBUG 2024-03-03 10:58:24,869 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 20', 4, '2024-01-18T17:54:20.684572+01:00'::timestamptz, 927, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 20', 4, datetime.datetime(2024, 1, 18, 17, 54, 20, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 927, False); alias=default
DEBUG 2024-03-03 10:58:24,870 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 50', 11, 'Player 51', 9, '2024-01-09T09:17:28.684572+01:00'::timestamptz, 987, false) RETURNING "pong_gamedata"."id"; args=('Player 50', 11, 'Player 51', 9, datetime.datetime(2024, 1, 9, 9, 17, 28, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 987, False); alias=default
DEBUG 2024-03-03 10:58:24,872 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 11, 'Player 36', 5, '2024-02-20T04:03:14.684572+01:00'::timestamptz, 258, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 11, 'Player 36', 5, datetime.datetime(2024, 2, 20, 4, 3, 14, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 258, False); alias=default
DEBUG 2024-03-03 10:58:24,873 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 45', 4, '2023-11-05T08:58:52.684572+01:00'::timestamptz, 28, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 45', 4, datetime.datetime(2023, 11, 5, 8, 58, 52, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 28, False); alias=default
DEBUG 2024-03-03 10:58:24,875 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 5, 'Player 42', 11, '2024-02-07T12:14:08.684572+01:00'::timestamptz, 114, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 5, 'Player 42', 11, datetime.datetime(2024, 2, 7, 12, 14, 8, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 114, False); alias=default
DEBUG 2024-03-03 10:58:24,877 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 21', 0, '2024-02-07T11:05:48.684572+01:00'::timestamptz, 316, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 21', 0, datetime.datetime(2024, 2, 7, 11, 5, 48, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 316, False); alias=default
DEBUG 2024-03-03 10:58:24,878 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 45', 9, '2023-11-19T11:44:32.684572+01:00'::timestamptz, 83, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 45', 9, datetime.datetime(2023, 11, 19, 11, 44, 32, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 83, False); alias=default
DEBUG 2024-03-03 10:58:24,880 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 40', 5, '2024-02-01T03:45:46.684572+01:00'::timestamptz, 814, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 40', 5, datetime.datetime(2024, 2, 1, 3, 45, 46, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 814, False); alias=default
DEBUG 2024-03-03 10:58:24,882 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 0, 'Player 23', 11, '2023-12-01T04:37:06.684572+01:00'::timestamptz, 414, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 0, 'Player 23', 11, datetime.datetime(2023, 12, 1, 4, 37, 6, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 414, False); alias=default
DEBUG 2024-03-03 10:58:24,883 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 38', 2, '2024-02-15T11:51:11.684572+01:00'::timestamptz, 38, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 38', 2, datetime.datetime(2024, 2, 15, 11, 51, 11, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 38, False); alias=default
DEBUG 2024-03-03 10:58:24,885 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 6, 'Player 53', 11, '2024-02-28T11:22:42.684572+01:00'::timestamptz, 66, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 6, 'Player 53', 11, datetime.datetime(2024, 2, 28, 11, 22, 42, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 66, False); alias=default
DEBUG 2024-03-03 10:58:24,886 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 5, 'Player 15', 11, '2023-11-28T18:44:49.684572+01:00'::timestamptz, 884, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 5, 'Player 15', 11, datetime.datetime(2023, 11, 28, 18, 44, 49, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 884, False); alias=default
DEBUG 2024-03-03 10:58:24,888 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 11, 'Player 17', 4, '2024-01-06T05:39:17.684572+01:00'::timestamptz, 356, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 11, 'Player 17', 4, datetime.datetime(2024, 1, 6, 5, 39, 17, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 356, False); alias=default
DEBUG 2024-03-03 10:58:24,889 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 1, 'Player 16', 11, '2023-12-31T17:54:22.684572+01:00'::timestamptz, 402, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 1, 'Player 16', 11, datetime.datetime(2023, 12, 31, 17, 54, 22, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 402, False); alias=default
DEBUG 2024-03-03 10:58:24,891 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 56', 4, 'Player 16', 11, '2023-11-25T12:48:18.684572+01:00'::timestamptz, 496, false) RETURNING "pong_gamedata"."id"; args=('Player 56', 4, 'Player 16', 11, datetime.datetime(2023, 11, 25, 12, 48, 18, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 496, False); alias=default
DEBUG 2024-03-03 10:58:24,892 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 52', 11, 'Player 46', 4, '2023-12-06T10:21:21.684572+01:00'::timestamptz, 179, false) RETURNING "pong_gamedata"."id"; args=('Player 52', 11, 'Player 46', 4, datetime.datetime(2023, 12, 6, 10, 21, 21, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 179, False); alias=default
DEBUG 2024-03-03 10:58:24,894 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 49', 11, 'Player 36', 8, '2024-02-22T23:21:11.684572+01:00'::timestamptz, 540, false) RETURNING "pong_gamedata"."id"; args=('Player 49', 11, 'Player 36', 8, datetime.datetime(2024, 2, 22, 23, 21, 11, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 540, False); alias=default
DEBUG 2024-03-03 10:58:24,895 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 59', 4, '2023-11-17T16:15:32.684572+01:00'::timestamptz, 335, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 59', 4, datetime.datetime(2023, 11, 17, 16, 15, 32, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 335, False); alias=default
DEBUG 2024-03-03 10:58:24,897 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 11, 'Player 9', 1, '2023-11-08T21:45:48.684572+01:00'::timestamptz, 351, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 11, 'Player 9', 1, datetime.datetime(2023, 11, 8, 21, 45, 48, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 351, False); alias=default
DEBUG 2024-03-03 10:58:24,899 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 28', 7, '2024-01-12T23:42:35.684572+01:00'::timestamptz, 205, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 28', 7, datetime.datetime(2024, 1, 12, 23, 42, 35, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 205, False); alias=default
DEBUG 2024-03-03 10:58:24,900 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 44', 7, '2024-01-10T23:20:36.684572+01:00'::timestamptz, 333, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 44', 7, datetime.datetime(2024, 1, 10, 23, 20, 36, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 333, False); alias=default
DEBUG 2024-03-03 10:58:24,901 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 59', 11, 'Player 39', 7, '2024-02-29T07:23:10.684572+01:00'::timestamptz, 772, false) RETURNING "pong_gamedata"."id"; args=('Player 59', 11, 'Player 39', 7, datetime.datetime(2024, 2, 29, 7, 23, 10, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 772, False); alias=default
DEBUG 2024-03-03 10:58:24,902 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:58:24,904 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 10', 4, '2023-11-15T00:28:30.684572+01:00'::timestamptz, 150, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 10', 4, datetime.datetime(2023, 11, 15, 0, 28, 30, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 150, True); alias=default
DEBUG 2024-03-03 10:58:24,905 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 3, 'Player 2', 11, '2023-11-15T00:22:08.684572+01:00'::timestamptz, 238, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 3, 'Player 2', 11, datetime.datetime(2023, 11, 15, 0, 22, 8, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 238, True); alias=default
DEBUG 2024-03-03 10:58:24,907 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 2', 7, '2023-11-15T00:32:05.684572+01:00'::timestamptz, 473, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 2', 7, datetime.datetime(2023, 11, 15, 0, 32, 5, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 473, True); alias=default
DEBUG 2024-03-03 10:58:24,908 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2023-11-15T00:32:05.684572+01:00'::timestamptz, 835, '["Player 4", "Player 2", "Player 10", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2023, 11, 15, 0, 32, 5, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 835, <psycopg2._json.Json object at 0x7f0f4c6efc20>, '0x0'); alias=default
DEBUG 2024-03-03 10:58:24,909 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 13', 9, '2023-12-19T18:46:05.684572+01:00'::timestamptz, 815, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 13', 9, datetime.datetime(2023, 12, 19, 18, 46, 5, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 815, True); alias=default
DEBUG 2024-03-03 10:58:24,911 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 1', 6, '2023-12-19T18:42:44.684572+01:00'::timestamptz, 707, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 1', 6, datetime.datetime(2023, 12, 19, 18, 42, 44, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 707, True); alias=default
DEBUG 2024-03-03 10:58:24,912 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 3, 'Player 4', 11, '2023-12-19T18:46:19.684572+01:00'::timestamptz, 166, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 3, 'Player 4', 11, datetime.datetime(2023, 12, 19, 18, 46, 19, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 166, True); alias=default
DEBUG 2024-03-03 10:58:24,914 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2023-12-19T18:46:19.684572+01:00'::timestamptz, 922, '["Player 4", "Player 5", "Player 13", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2023, 12, 19, 18, 46, 19, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 922, <psycopg2._json.Json object at 0x7f0f4c557830>, '0x0'); alias=default
DEBUG 2024-03-03 10:58:24,915 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 7, 'Player 11', 11, '2024-02-04T06:29:34.684572+01:00'::timestamptz, 877, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 7, 'Player 11', 11, datetime.datetime(2024, 2, 4, 6, 29, 34, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 877, True); alias=default
DEBUG 2024-03-03 10:58:24,917 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 9, 'Player 14', 11, '2024-02-04T06:28:58.684572+01:00'::timestamptz, 158, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 9, 'Player 14', 11, datetime.datetime(2024, 2, 4, 6, 28, 58, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 158, True); alias=default
DEBUG 2024-03-03 10:58:24,918 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 14', 8, '2024-02-04T06:29:44.684572+01:00'::timestamptz, 23, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 14', 8, datetime.datetime(2024, 2, 4, 6, 29, 44, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 23, True); alias=default
DEBUG 2024-03-03 10:58:24,919 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2024-02-04T06:29:44.684572+01:00'::timestamptz, 887, '["Player 11", "Player 14", "Player 7", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2024, 2, 4, 6, 29, 44, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 887, <psycopg2._json.Json object at 0x7f0f4c557830>, '0x0'); alias=default
DEBUG 2024-03-03 10:58:24,921 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 0, 'Player 0', 11, '2023-11-13T13:44:08.684572+01:00'::timestamptz, 999, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 0, 'Player 0', 11, datetime.datetime(2023, 11, 13, 13, 44, 8, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 999, True); alias=default
DEBUG 2024-03-03 10:58:24,922 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 6, 'Player 6', 11, '2023-11-13T13:33:34.684572+01:00'::timestamptz, 139, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 6, 'Player 6', 11, datetime.datetime(2023, 11, 13, 13, 33, 34, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 139, True); alias=default
DEBUG 2024-03-03 10:58:24,923 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 6', 5, '2023-11-13T13:44:08.684572+01:00'::timestamptz, 507, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 6', 5, datetime.datetime(2023, 11, 13, 13, 44, 8, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 507, True); alias=default
DEBUG 2024-03-03 10:58:24,924 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2023-11-13T13:44:08.684572+01:00'::timestamptz, 999, '["Player 0", "Player 6", "Player 4", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2023, 11, 13, 13, 44, 8, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 999, <psycopg2._json.Json object at 0x7f0f4c572ed0>, '0x0'); alias=default
DEBUG 2024-03-03 10:58:24,925 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 4', 9, '2024-02-20T11:27:30.684572+01:00'::timestamptz, 834, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 4', 9, datetime.datetime(2024, 2, 20, 11, 27, 30, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 834, True); alias=default
DEBUG 2024-03-03 10:58:24,927 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 16', 4, '2024-02-20T11:27:37.684572+01:00'::timestamptz, 963, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 16', 4, datetime.datetime(2024, 2, 20, 11, 27, 37, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 963, True); alias=default
DEBUG 2024-03-03 10:58:24,928 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 3', 9, '2024-02-20T11:27:46.684572+01:00'::timestamptz, 892, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 3', 9, datetime.datetime(2024, 2, 20, 11, 27, 46, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 892, True); alias=default
DEBUG 2024-03-03 10:58:24,929 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2024-02-20T11:27:46.684572+01:00'::timestamptz, 972, '["Player 5", "Player 3", "Player 4", "Player 16"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2024, 2, 20, 11, 27, 46, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 972, <psycopg2._json.Json object at 0x7f0f4c6ee540>, '0x0'); alias=default
DEBUG 2024-03-03 10:58:24,931 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 0, 'Player 12', 11, '2023-11-22T21:08:18.684572+01:00'::timestamptz, 884, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 0, 'Player 12', 11, datetime.datetime(2023, 11, 22, 21, 8, 18, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 884, True); alias=default
DEBUG 2024-03-03 10:58:24,933 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 13', 0, '2023-11-22T21:02:55.684572+01:00'::timestamptz, 289, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 13', 0, datetime.datetime(2023, 11, 22, 21, 2, 55, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 289, True); alias=default
DEBUG 2024-03-03 10:58:24,934 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 4, 'Player 16', 11, '2023-11-22T21:09:06.684572+01:00'::timestamptz, 33, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 4, 'Player 16', 11, datetime.datetime(2023, 11, 22, 21, 9, 6, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 33, True); alias=default
DEBUG 2024-03-03 10:58:24,935 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2023-11-22T21:09:06.684572+01:00'::timestamptz, 932, '["Player 16", "Player 12", "Player 0", "Player 13"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2023, 11, 22, 21, 9, 6, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 932, <psycopg2._json.Json object at 0x7f0f4c572d50>, '0x0'); alias=default
DEBUG 2024-03-03 10:58:24,936 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 11', 2, '2023-11-28T14:48:08.684572+01:00'::timestamptz, 516, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 11', 2, datetime.datetime(2023, 11, 28, 14, 48, 8, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 516, True); alias=default
DEBUG 2024-03-03 10:58:24,938 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 9', 1, '2023-11-28T14:43:57.684572+01:00'::timestamptz, 258, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 9', 1, datetime.datetime(2023, 11, 28, 14, 43, 57, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 258, True); alias=default
DEBUG 2024-03-03 10:58:24,939 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 0', 9, '2023-11-28T14:48:56.684572+01:00'::timestamptz, 798, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 0', 9, datetime.datetime(2023, 11, 28, 14, 48, 56, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 798, True); alias=default
DEBUG 2024-03-03 10:58:24,940 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2023-11-28T14:48:56.684572+01:00'::timestamptz, 564, '["Player 7", "Player 0", "Player 11", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2023, 11, 28, 14, 48, 56, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 564, <psycopg2._json.Json object at 0x7f0f4c5568d0>, '0x0'); alias=default
DEBUG 2024-03-03 10:58:24,941 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 10, 'Player 9', 11, '2023-11-03T06:15:00.684572+01:00'::timestamptz, 139, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 10, 'Player 9', 11, datetime.datetime(2023, 11, 3, 6, 15, 0, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 139, True); alias=default
DEBUG 2024-03-03 10:58:24,943 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 5', 6, '2023-11-03T06:14:06.684572+01:00'::timestamptz, 489, true) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 5', 6, datetime.datetime(2023, 11, 3, 6, 14, 6, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 489, True); alias=default
DEBUG 2024-03-03 10:58:24,944 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 18', 0, '2023-11-03T06:17:22.684572+01:00'::timestamptz, 254, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 18', 0, datetime.datetime(2023, 11, 3, 6, 17, 22, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 254, True); alias=default
DEBUG 2024-03-03 10:58:24,945 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2023-11-03T06:17:22.684572+01:00'::timestamptz, 685, '["Player 9", "Player 18", "Player 12", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2023, 11, 3, 6, 17, 22, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 685, <psycopg2._json.Json object at 0x7f0f4c572e10>, '0x0'); alias=default
DEBUG 2024-03-03 10:58:24,947 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 14', 9, '2024-02-24T14:40:07.684572+01:00'::timestamptz, 618, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 14', 9, datetime.datetime(2024, 2, 24, 14, 40, 7, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 618, True); alias=default
DEBUG 2024-03-03 10:58:24,949 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 1', 6, '2024-02-24T14:30:42.684572+01:00'::timestamptz, 51, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 1', 6, datetime.datetime(2024, 2, 24, 14, 30, 42, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 51, True); alias=default
DEBUG 2024-03-03 10:58:24,950 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 7', 8, '2024-02-24T14:41:41.684572+01:00'::timestamptz, 223, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 7', 8, datetime.datetime(2024, 2, 24, 14, 41, 41, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 223, True); alias=default
DEBUG 2024-03-03 10:58:24,952 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2024-02-24T14:41:41.684572+01:00'::timestamptz, 712, '["Player 5", "Player 7", "Player 14", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2024, 2, 24, 14, 41, 41, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 712, <psycopg2._json.Json object at 0x7f0f4c557830>, '0x0'); alias=default
DEBUG 2024-03-03 10:58:24,953 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 8', 9, '2024-02-10T17:55:21.684572+01:00'::timestamptz, 286, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 8', 9, datetime.datetime(2024, 2, 10, 17, 55, 21, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 286, True); alias=default
DEBUG 2024-03-03 10:58:24,954 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 14', 5, '2024-02-10T18:04:14.684572+01:00'::timestamptz, 377, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 14', 5, datetime.datetime(2024, 2, 10, 18, 4, 14, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 377, True); alias=default
DEBUG 2024-03-03 10:58:24,955 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 1, 'Player 5', 11, '2024-02-10T18:04:55.684572+01:00'::timestamptz, 124, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 1, 'Player 5', 11, datetime.datetime(2024, 2, 10, 18, 4, 55, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 124, True); alias=default
DEBUG 2024-03-03 10:58:24,957 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2024-02-10T18:04:55.684572+01:00'::timestamptz, 860, '["Player 5", "Player 9", "Player 8", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2024, 2, 10, 18, 4, 55, 684572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 860, <psycopg2._json.Json object at 0x7f0f4c546210>, '0x0'); alias=default
DEBUG 2024-03-03 10:58:24,958 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:58:24,959 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:58:24,959 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 10:58:24,960 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,960 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 10:58:24,961 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,962 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 10:58:24,964 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 10:58:24,966 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 10:58:24,968 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 10:58:24,968 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,969 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 10:58:24,970 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,971 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 10:58:24,972 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:58:24,973 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:58:24,974 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:58:24,975 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:58:24,976 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:58:24,977 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:58:24,977 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 10:58:24,978 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,978 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 10:58:24,979 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,980 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 10:58:24,982 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 10:58:24,983 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,984 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 10:58:24,984 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,985 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 10:58:24,986 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:58:24,987 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:58:24,988 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:58:24,989 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:58:24,990 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:58:24,990 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:58:24,991 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 10:58:24,991 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,992 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 10:58:24,993 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,993 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 10:58:24,995 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 10:58:24,995 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:24,996 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 10:58:24,997 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:24,998 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 10:58:24,999 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:58:25,000 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:58:25,001 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:58:25,002 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:58:25,003 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:58:25,004 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:58:25,005 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 10:58:25,005 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:25,006 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 10:58:25,007 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:25,008 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 10:58:25,009 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 10:58:25,010 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 10:58:25,011 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:58:25,011 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 10:58:25,012 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:58:25,014 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 10:58:25,015 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:58:25,016 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:58:25,017 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:58:25,018 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:58:25,019 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:58:25,020 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
