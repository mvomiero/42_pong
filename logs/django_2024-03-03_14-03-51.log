DEBUG 2024-03-03 14:03:52,414 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,415 utils (0.000) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,415 utils (0.000) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,416 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,416 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 14:03:52,425 utils (0.009) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 14:03:52,425 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,426 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,427 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 14:03:52,429 utils (0.001) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 14:03:52,431 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 14:03:52,432 utils (0.001) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 14:03:52,433 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,435 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T14:03:52.433233+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 14, 3, 52, 433233, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 14:03:52,435 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,435 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,437 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 14:03:52,439 utils (0.001) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 14:03:52,441 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 14:03:52,443 utils (0.002) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 14:03:52,444 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 14:03:52,445 utils (0.002) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 14:03:52,451 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 14:03:52,454 utils (0.003) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 14:03:52,455 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 14:03:52,456 utils (0.001) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 14:03:52,456 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 14:03:52,457 utils (0.001) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 14:03:52,457 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 14:03:52,458 utils (0.001) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 14:03:52,458 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 14:03:52,459 utils (0.001) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 14:03:52,460 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 14:03:52,461 utils (0.001) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 14:03:52,461 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 14:03:52,462 utils (0.001) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 14:03:52,462 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 14:03:52,464 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 14:03:52,465 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 14:03:52,466 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 14:03:52,466 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 14:03:52,466 utils (0.000) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 14:03:52,467 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 14:03:52,468 utils (0.001) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 14:03:52,468 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 14:03:52,469 utils (0.001) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 14:03:52,469 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 14:03:52,470 utils (0.001) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 14:03:52,470 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 14:03:52,471 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 14:03:52,471 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 14:03:52,471 utils (0.000) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 14:03:52,471 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 14:03:52,472 utils (0.000) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 14:03:52,472 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 14:03:52,473 utils (0.001) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 14:03:52,473 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 14:03:52,474 utils (0.001) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 14:03:52,474 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 14:03:52,475 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 14:03:52,475 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 14:03:52,475 utils (0.000) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 14:03:52,475 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 14:03:52,476 utils (0.000) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 14:03:52,476 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 14:03:52,477 utils (0.001) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 14:03:52,477 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 14:03:52,478 utils (0.001) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 14:03:52,479 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,480 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,481 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T14:03:52.480915+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 14, 3, 52, 480915, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 14:03:52,481 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,486 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 14:03:52,489 utils (0.002) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 14:03:52,489 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 14:03:52,490 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 14:03:52,490 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 14:03:52,490 utils (0.000) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 14:03:52,490 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 14:03:52,492 utils (0.002) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 14:03:52,493 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 14:03:52,497 utils (0.004) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 14:03:52,499 utils (0.002) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,503 utils (0.003) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,504 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T14:03:52.503708+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 14, 3, 52, 503708, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 14:03:52,505 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,518 utils (0.003) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,519 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T14:03:52.518789+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 14, 3, 52, 518789, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 14:03:52,520 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,520 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,532 utils (0.004) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,535 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T14:03:52.533430+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 14, 3, 52, 533430, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 14:03:52,536 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,536 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,542 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 14:03:52,542 utils (0.000) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 14:03:52,549 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 14:03:52,550 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 14:03:52,551 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,552 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T14:03:52.551681+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 14, 3, 52, 551681, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 14:03:52,552 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,552 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,561 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 14:03:52,563 utils (0.002) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 14:03:52,566 utils (0.003) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,568 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T14:03:52.567794+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 14, 3, 52, 567794, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 14:03:52,569 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,569 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,576 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 14:03:52,578 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 14:03:52,580 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,582 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T14:03:52.580993+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 14, 3, 52, 580993, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 14:03:52,583 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,583 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,588 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,589 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T14:03:52.589035+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 14, 3, 52, 589035, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 14:03:52,589 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,589 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,594 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 14:03:52,594 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 14:03:52,596 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,597 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T14:03:52.596531+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 14, 3, 52, 596531, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 14:03:52,598 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,598 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,600 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,601 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T14:03:52.600745+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 14, 3, 52, 600745, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 14:03:52,601 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,601 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,607 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,607 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T14:03:52.607175+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 14, 3, 52, 607175, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 14:03:52,608 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,608 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,612 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 14:03:52,617 utils (0.004) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 14:03:52,618 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,618 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T14:03:52.618339+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 14, 3, 52, 618339, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 14:03:52,619 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,619 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,623 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 14:03:52,624 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 14:03:52,625 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,625 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T14:03:52.625258+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 14, 3, 52, 625258, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 14:03:52,626 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,626 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,632 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 14:03:52,634 utils (0.001) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 14:03:52,634 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,635 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T14:03:52.634909+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 14, 3, 52, 634909, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 14:03:52,635 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,636 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,641 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,641 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T14:03:52.641162+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 14, 3, 52, 641162, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 14:03:52,641 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,642 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,647 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 14:03:52,649 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 14:03:52,650 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,651 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T14:03:52.650706+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 14, 3, 52, 650706, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 14:03:52,651 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,651 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,653 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 14:03:52,655 utils (0.003) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 14:03:52,656 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 14:03:52,659 utils (0.002) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 14:03:52,660 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,661 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T14:03:52.661161+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 14, 3, 52, 661161, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 14:03:52,662 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,662 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,665 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 14:03:52,668 utils (0.003) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 14:03:52,668 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 14:03:52,669 utils (0.001) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 14:03:52,669 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 14:03:52,670 utils (0.001) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 14:03:52,671 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,672 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,672 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T14:03:52.672389+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 14, 3, 52, 672389, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 14:03:52,673 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 14:03:52,673 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 14:03:52,683 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 14:03:52,684 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,684 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 14:03:52,685 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,686 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 14:03:52,687 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 14:03:52,688 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:52,688 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 14:03:52,689 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:52,689 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 14:03:52,690 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 14:03:52,691 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 14:03:52,691 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 14:03:52,707 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 6, 'Player 4', 11, '2024-01-21T00:33:42.691294+01:00'::timestamptz, 506, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 6, 'Player 4', 11, datetime.datetime(2024, 1, 21, 0, 33, 42, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 506, False); alias=default
DEBUG 2024-03-03 14:03:52,707 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 12', 6, '2024-03-02T00:44:45.691294+01:00'::timestamptz, 103, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 12', 6, datetime.datetime(2024, 3, 2, 0, 44, 45, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 103, False); alias=default
DEBUG 2024-03-03 14:03:52,708 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 9', 6, '2023-12-08T23:44:48.691294+01:00'::timestamptz, 624, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 9', 6, datetime.datetime(2023, 12, 8, 23, 44, 48, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 624, False); alias=default
DEBUG 2024-03-03 14:03:52,709 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 7, 'Player 10', 11, '2023-12-13T09:35:02.691294+01:00'::timestamptz, 729, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 7, 'Player 10', 11, datetime.datetime(2023, 12, 13, 9, 35, 2, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 729, False); alias=default
DEBUG 2024-03-03 14:03:52,709 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 9, 'Player 14', 11, '2024-02-25T00:34:22.691294+01:00'::timestamptz, 775, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 9, 'Player 14', 11, datetime.datetime(2024, 2, 25, 0, 34, 22, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 775, False); alias=default
DEBUG 2024-03-03 14:03:52,710 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 1, 'Player 1', 11, '2024-02-08T08:42:17.691294+01:00'::timestamptz, 751, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 1, 'Player 1', 11, datetime.datetime(2024, 2, 8, 8, 42, 17, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 751, False); alias=default
DEBUG 2024-03-03 14:03:52,711 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 14', 5, '2024-02-08T09:06:12.691294+01:00'::timestamptz, 44, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 14', 5, datetime.datetime(2024, 2, 8, 9, 6, 12, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 44, False); alias=default
DEBUG 2024-03-03 14:03:52,711 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 4, 'Player 2', 11, '2023-12-07T09:24:01.691294+01:00'::timestamptz, 915, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 4, 'Player 2', 11, datetime.datetime(2023, 12, 7, 9, 24, 1, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 915, False); alias=default
DEBUG 2024-03-03 14:03:52,712 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 10, 'Player 6', 11, '2023-12-20T02:46:37.691294+01:00'::timestamptz, 304, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 10, 'Player 6', 11, datetime.datetime(2023, 12, 20, 2, 46, 37, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 304, False); alias=default
DEBUG 2024-03-03 14:03:52,713 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 17', 8, '2024-01-02T19:53:35.691294+01:00'::timestamptz, 192, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 17', 8, datetime.datetime(2024, 1, 2, 19, 53, 35, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 192, False); alias=default
DEBUG 2024-03-03 14:03:52,713 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 7, 'Player 10', 11, '2023-12-24T08:13:50.691294+01:00'::timestamptz, 358, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 7, 'Player 10', 11, datetime.datetime(2023, 12, 24, 8, 13, 50, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 358, False); alias=default
DEBUG 2024-03-03 14:03:52,714 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 5, 'Player 13', 11, '2024-02-12T09:42:30.691294+01:00'::timestamptz, 341, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 5, 'Player 13', 11, datetime.datetime(2024, 2, 12, 9, 42, 30, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 341, False); alias=default
DEBUG 2024-03-03 14:03:52,715 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 7, 'Player 21', 11, '2023-11-20T10:58:23.691294+01:00'::timestamptz, 903, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 7, 'Player 21', 11, datetime.datetime(2023, 11, 20, 10, 58, 23, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 903, False); alias=default
DEBUG 2024-03-03 14:03:52,715 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 7, 'Player 7', 11, '2023-12-08T13:57:06.691294+01:00'::timestamptz, 739, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 7, 'Player 7', 11, datetime.datetime(2023, 12, 8, 13, 57, 6, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 739, False); alias=default
DEBUG 2024-03-03 14:03:52,716 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 19', 2, '2023-12-09T18:48:34.691294+01:00'::timestamptz, 239, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 19', 2, datetime.datetime(2023, 12, 9, 18, 48, 34, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 239, False); alias=default
DEBUG 2024-03-03 14:03:52,716 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 2, 'Player 21', 11, '2024-02-14T20:08:22.691294+01:00'::timestamptz, 804, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 2, 'Player 21', 11, datetime.datetime(2024, 2, 14, 20, 8, 22, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 804, False); alias=default
DEBUG 2024-03-03 14:03:52,717 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 18', 6, '2023-11-01T08:48:07.691294+01:00'::timestamptz, 868, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 18', 6, datetime.datetime(2023, 11, 1, 8, 48, 7, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 868, False); alias=default
DEBUG 2024-03-03 14:03:52,718 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 5, 'Player 3', 11, '2024-01-05T01:26:44.691294+01:00'::timestamptz, 961, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 5, 'Player 3', 11, datetime.datetime(2024, 1, 5, 1, 26, 44, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 961, False); alias=default
DEBUG 2024-03-03 14:03:52,718 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 1, 'Player 12', 11, '2023-12-26T12:59:50.691294+01:00'::timestamptz, 744, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 1, 'Player 12', 11, datetime.datetime(2023, 12, 26, 12, 59, 50, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 744, False); alias=default
DEBUG 2024-03-03 14:03:52,719 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 0, 'Player 5', 11, '2023-12-24T11:51:34.691294+01:00'::timestamptz, 311, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 0, 'Player 5', 11, datetime.datetime(2023, 12, 24, 11, 51, 34, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 311, False); alias=default
DEBUG 2024-03-03 14:03:52,720 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 16', 0, '2023-11-06T00:44:42.691294+01:00'::timestamptz, 463, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 16', 0, datetime.datetime(2023, 11, 6, 0, 44, 42, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 463, False); alias=default
DEBUG 2024-03-03 14:03:52,720 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 1, 'Player 11', 11, '2023-11-30T20:15:53.691294+01:00'::timestamptz, 825, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 1, 'Player 11', 11, datetime.datetime(2023, 11, 30, 20, 15, 53, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 825, False); alias=default
DEBUG 2024-03-03 14:03:52,721 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 8', 1, '2023-11-27T14:12:21.691294+01:00'::timestamptz, 170, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 8', 1, datetime.datetime(2023, 11, 27, 14, 12, 21, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 170, False); alias=default
DEBUG 2024-03-03 14:03:52,721 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 13', 10, '2023-11-26T11:48:34.691294+01:00'::timestamptz, 791, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 13', 10, datetime.datetime(2023, 11, 26, 11, 48, 34, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 791, False); alias=default
DEBUG 2024-03-03 14:03:52,722 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 22', 6, '2024-02-18T08:11:26.691294+01:00'::timestamptz, 655, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 22', 6, datetime.datetime(2024, 2, 18, 8, 11, 26, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 655, False); alias=default
DEBUG 2024-03-03 14:03:52,722 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 7, 'Player 7', 11, '2024-02-13T23:06:40.691294+01:00'::timestamptz, 344, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 7, 'Player 7', 11, datetime.datetime(2024, 2, 13, 23, 6, 40, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 344, False); alias=default
DEBUG 2024-03-03 14:03:52,723 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 5, 'Player 2', 11, '2023-12-15T05:49:44.691294+01:00'::timestamptz, 955, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 5, 'Player 2', 11, datetime.datetime(2023, 12, 15, 5, 49, 44, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 955, False); alias=default
DEBUG 2024-03-03 14:03:52,724 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 10, 'Player 26', 11, '2024-02-21T02:09:51.691294+01:00'::timestamptz, 840, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 10, 'Player 26', 11, datetime.datetime(2024, 2, 21, 2, 9, 51, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 840, False); alias=default
DEBUG 2024-03-03 14:03:52,724 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 5, 'Player 18', 11, '2024-02-11T03:30:19.691294+01:00'::timestamptz, 101, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 5, 'Player 18', 11, datetime.datetime(2024, 2, 11, 3, 30, 19, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 101, False); alias=default
DEBUG 2024-03-03 14:03:52,725 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 10, 'Player 24', 11, '2023-12-16T01:10:17.691294+01:00'::timestamptz, 518, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 10, 'Player 24', 11, datetime.datetime(2023, 12, 16, 1, 10, 17, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 518, False); alias=default
DEBUG 2024-03-03 14:03:52,725 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 30', 5, '2023-11-18T09:57:06.691294+01:00'::timestamptz, 267, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 30', 5, datetime.datetime(2023, 11, 18, 9, 57, 6, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 267, False); alias=default
DEBUG 2024-03-03 14:03:52,726 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 2', 3, '2023-11-22T05:43:36.691294+01:00'::timestamptz, 305, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 2', 3, datetime.datetime(2023, 11, 22, 5, 43, 36, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 305, False); alias=default
DEBUG 2024-03-03 14:03:52,727 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 2, 'Player 1', 11, '2023-12-02T04:04:51.691294+01:00'::timestamptz, 459, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 2, 'Player 1', 11, datetime.datetime(2023, 12, 2, 4, 4, 51, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 459, False); alias=default
DEBUG 2024-03-03 14:03:52,728 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 22', 8, '2024-02-01T10:42:15.691294+01:00'::timestamptz, 968, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 22', 8, datetime.datetime(2024, 2, 1, 10, 42, 15, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 968, False); alias=default
DEBUG 2024-03-03 14:03:52,728 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 11, 'Player 8', 5, '2024-02-12T16:56:43.691294+01:00'::timestamptz, 700, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 11, 'Player 8', 5, datetime.datetime(2024, 2, 12, 16, 56, 43, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 700, False); alias=default
DEBUG 2024-03-03 14:03:52,729 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 1, 'Player 13', 11, '2024-01-16T06:21:25.691294+01:00'::timestamptz, 722, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 1, 'Player 13', 11, datetime.datetime(2024, 1, 16, 6, 21, 25, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 722, False); alias=default
DEBUG 2024-03-03 14:03:52,729 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 10, 'Player 11', 11, '2023-12-09T16:58:30.691294+01:00'::timestamptz, 692, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 10, 'Player 11', 11, datetime.datetime(2023, 12, 9, 16, 58, 30, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 692, False); alias=default
DEBUG 2024-03-03 14:03:52,730 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 5, 'Player 6', 11, '2024-01-21T19:18:47.691294+01:00'::timestamptz, 889, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 5, 'Player 6', 11, datetime.datetime(2024, 1, 21, 19, 18, 47, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 889, False); alias=default
DEBUG 2024-03-03 14:03:52,731 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 22', 0, '2023-12-12T16:03:21.691294+01:00'::timestamptz, 686, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 22', 0, datetime.datetime(2023, 12, 12, 16, 3, 21, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 686, False); alias=default
DEBUG 2024-03-03 14:03:52,731 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 2, 'Player 30', 11, '2023-12-21T17:55:25.691294+01:00'::timestamptz, 850, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 2, 'Player 30', 11, datetime.datetime(2023, 12, 21, 17, 55, 25, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 850, False); alias=default
DEBUG 2024-03-03 14:03:52,732 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 0', 4, '2023-12-19T11:11:35.691294+01:00'::timestamptz, 156, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 0', 4, datetime.datetime(2023, 12, 19, 11, 11, 35, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 156, False); alias=default
DEBUG 2024-03-03 14:03:52,732 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 11, 'Player 7', 2, '2024-01-06T08:18:33.691294+01:00'::timestamptz, 767, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 11, 'Player 7', 2, datetime.datetime(2024, 1, 6, 8, 18, 33, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 767, False); alias=default
DEBUG 2024-03-03 14:03:52,733 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 21', 0, '2023-11-29T20:16:58.691294+01:00'::timestamptz, 949, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 21', 0, datetime.datetime(2023, 11, 29, 20, 16, 58, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 949, False); alias=default
DEBUG 2024-03-03 14:03:52,733 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 11, 'Player 36', 0, '2024-01-13T10:38:21.691294+01:00'::timestamptz, 655, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 11, 'Player 36', 0, datetime.datetime(2024, 1, 13, 10, 38, 21, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 655, False); alias=default
DEBUG 2024-03-03 14:03:52,734 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 8', 2, '2023-12-04T00:23:25.691294+01:00'::timestamptz, 608, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 8', 2, datetime.datetime(2023, 12, 4, 0, 23, 25, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 608, False); alias=default
DEBUG 2024-03-03 14:03:52,735 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 10', 2, '2024-02-19T10:26:56.691294+01:00'::timestamptz, 133, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 10', 2, datetime.datetime(2024, 2, 19, 10, 26, 56, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 133, False); alias=default
DEBUG 2024-03-03 14:03:52,735 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 5, 'Player 32', 11, '2024-01-14T01:32:09.691294+01:00'::timestamptz, 811, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 5, 'Player 32', 11, datetime.datetime(2024, 1, 14, 1, 32, 9, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 811, False); alias=default
DEBUG 2024-03-03 14:03:52,736 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 9, 'Player 12', 11, '2024-02-26T17:39:21.691294+01:00'::timestamptz, 187, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 9, 'Player 12', 11, datetime.datetime(2024, 2, 26, 17, 39, 21, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 187, False); alias=default
DEBUG 2024-03-03 14:03:52,736 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 5, 'Player 3', 11, '2024-01-21T02:40:50.691294+01:00'::timestamptz, 269, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 5, 'Player 3', 11, datetime.datetime(2024, 1, 21, 2, 40, 50, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 269, False); alias=default
DEBUG 2024-03-03 14:03:52,737 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 1, 'Player 32', 11, '2024-01-16T04:13:46.691294+01:00'::timestamptz, 482, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 1, 'Player 32', 11, datetime.datetime(2024, 1, 16, 4, 13, 46, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 482, False); alias=default
DEBUG 2024-03-03 14:03:52,738 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 2', 10, '2023-12-19T07:01:21.691294+01:00'::timestamptz, 782, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 2', 10, datetime.datetime(2023, 12, 19, 7, 1, 21, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 782, False); alias=default
DEBUG 2024-03-03 14:03:52,738 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 10, 'Player 14', 11, '2023-12-07T20:29:25.691294+01:00'::timestamptz, 109, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 10, 'Player 14', 11, datetime.datetime(2023, 12, 7, 20, 29, 25, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 109, False); alias=default
DEBUG 2024-03-03 14:03:52,739 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 2, 'Player 22', 11, '2024-01-13T22:06:40.691294+01:00'::timestamptz, 646, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 2, 'Player 22', 11, datetime.datetime(2024, 1, 13, 22, 6, 40, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 646, False); alias=default
DEBUG 2024-03-03 14:03:52,739 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 36', 3, '2024-01-22T14:48:32.691294+01:00'::timestamptz, 769, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 36', 3, datetime.datetime(2024, 1, 22, 14, 48, 32, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 769, False); alias=default
DEBUG 2024-03-03 14:03:52,740 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 2, 'Player 23', 11, '2024-01-18T04:58:56.691294+01:00'::timestamptz, 937, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 2, 'Player 23', 11, datetime.datetime(2024, 1, 18, 4, 58, 56, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 937, False); alias=default
DEBUG 2024-03-03 14:03:52,741 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 26', 4, '2024-01-04T08:04:23.691294+01:00'::timestamptz, 289, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 26', 4, datetime.datetime(2024, 1, 4, 8, 4, 23, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 289, False); alias=default
DEBUG 2024-03-03 14:03:52,741 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 26', 9, '2024-02-11T00:08:20.691294+01:00'::timestamptz, 432, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 26', 9, datetime.datetime(2024, 2, 11, 0, 8, 20, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 432, False); alias=default
DEBUG 2024-03-03 14:03:52,742 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 37', 2, '2023-12-24T18:04:02.691294+01:00'::timestamptz, 760, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 37', 2, datetime.datetime(2023, 12, 24, 18, 4, 2, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 760, False); alias=default
DEBUG 2024-03-03 14:03:52,742 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 42', 0, '2023-11-23T01:47:08.691294+01:00'::timestamptz, 445, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 42', 0, datetime.datetime(2023, 11, 23, 1, 47, 8, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 445, False); alias=default
DEBUG 2024-03-03 14:03:52,743 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 10, 'Player 25', 11, '2023-11-24T14:24:21.691294+01:00'::timestamptz, 546, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 10, 'Player 25', 11, datetime.datetime(2023, 11, 24, 14, 24, 21, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 546, False); alias=default
DEBUG 2024-03-03 14:03:52,744 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 32', 0, '2024-01-15T19:10:31.691294+01:00'::timestamptz, 478, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 32', 0, datetime.datetime(2024, 1, 15, 19, 10, 31, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 478, False); alias=default
DEBUG 2024-03-03 14:03:52,744 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 8, 'Player 16', 11, '2023-11-28T14:40:23.691294+01:00'::timestamptz, 977, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 8, 'Player 16', 11, datetime.datetime(2023, 11, 28, 14, 40, 23, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 977, False); alias=default
DEBUG 2024-03-03 14:03:52,745 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 0, 'Player 6', 11, '2024-01-29T22:45:16.691294+01:00'::timestamptz, 885, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 0, 'Player 6', 11, datetime.datetime(2024, 1, 29, 22, 45, 16, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 885, False); alias=default
DEBUG 2024-03-03 14:03:52,746 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 26', 0, '2023-12-09T07:30:18.691294+01:00'::timestamptz, 649, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 26', 0, datetime.datetime(2023, 12, 9, 7, 30, 18, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 649, False); alias=default
DEBUG 2024-03-03 14:03:52,746 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 15', 10, '2024-03-02T08:16:46.691294+01:00'::timestamptz, 8, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 15', 10, datetime.datetime(2024, 3, 2, 8, 16, 46, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 8, False); alias=default
DEBUG 2024-03-03 14:03:52,747 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 22', 9, '2024-02-03T14:31:31.691294+01:00'::timestamptz, 67, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 22', 9, datetime.datetime(2024, 2, 3, 14, 31, 31, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 67, False); alias=default
DEBUG 2024-03-03 14:03:52,747 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 46', 5, 'Player 37', 11, '2024-02-20T10:52:39.691294+01:00'::timestamptz, 560, false) RETURNING "pong_gamedata"."id"; args=('Player 46', 5, 'Player 37', 11, datetime.datetime(2024, 2, 20, 10, 52, 39, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 560, False); alias=default
DEBUG 2024-03-03 14:03:52,748 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 4, 'Player 5', 11, '2024-01-14T03:45:12.691294+01:00'::timestamptz, 940, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 4, 'Player 5', 11, datetime.datetime(2024, 1, 14, 3, 45, 12, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 940, False); alias=default
DEBUG 2024-03-03 14:03:52,749 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 14', 3, '2024-01-17T13:31:17.691294+01:00'::timestamptz, 907, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 14', 3, datetime.datetime(2024, 1, 17, 13, 31, 17, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 907, False); alias=default
DEBUG 2024-03-03 14:03:52,749 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 1, 'Player 35', 11, '2023-12-11T12:11:27.691294+01:00'::timestamptz, 212, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 1, 'Player 35', 11, datetime.datetime(2023, 12, 11, 12, 11, 27, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 212, False); alias=default
DEBUG 2024-03-03 14:03:52,750 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 11, 'Player 10', 4, '2023-11-05T00:20:09.691294+01:00'::timestamptz, 741, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 11, 'Player 10', 4, datetime.datetime(2023, 11, 5, 0, 20, 9, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 741, False); alias=default
DEBUG 2024-03-03 14:03:52,750 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 29', 2, '2024-02-05T00:05:13.691294+01:00'::timestamptz, 589, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 29', 2, datetime.datetime(2024, 2, 5, 0, 5, 13, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 589, False); alias=default
DEBUG 2024-03-03 14:03:52,751 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 11, 'Player 10', 0, '2024-01-14T13:10:17.691294+01:00'::timestamptz, 768, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 11, 'Player 10', 0, datetime.datetime(2024, 1, 14, 13, 10, 17, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 768, False); alias=default
DEBUG 2024-03-03 14:03:52,752 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 26', 4, '2023-12-13T16:45:11.691294+01:00'::timestamptz, 137, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 26', 4, datetime.datetime(2023, 12, 13, 16, 45, 11, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 137, False); alias=default
DEBUG 2024-03-03 14:03:52,752 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 43', 10, '2024-02-10T19:41:17.691294+01:00'::timestamptz, 699, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 43', 10, datetime.datetime(2024, 2, 10, 19, 41, 17, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 699, False); alias=default
DEBUG 2024-03-03 14:03:52,753 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 3, 'Player 30', 11, '2023-11-25T22:49:01.691294+01:00'::timestamptz, 678, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 3, 'Player 30', 11, datetime.datetime(2023, 11, 25, 22, 49, 1, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 678, False); alias=default
DEBUG 2024-03-03 14:03:52,753 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 27', 9, '2024-02-02T13:05:58.691294+01:00'::timestamptz, 555, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 27', 9, datetime.datetime(2024, 2, 2, 13, 5, 58, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 555, False); alias=default
DEBUG 2024-03-03 14:03:52,754 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 8', 8, '2024-02-10T19:25:18.691294+01:00'::timestamptz, 440, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 8', 8, datetime.datetime(2024, 2, 10, 19, 25, 18, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 440, False); alias=default
DEBUG 2024-03-03 14:03:52,754 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 11, 'Player 12', 10, '2023-11-24T08:15:51.691294+01:00'::timestamptz, 422, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 11, 'Player 12', 10, datetime.datetime(2023, 11, 24, 8, 15, 51, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 422, False); alias=default
DEBUG 2024-03-03 14:03:52,755 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 27', 8, '2023-12-15T23:43:59.691294+01:00'::timestamptz, 722, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 27', 8, datetime.datetime(2023, 12, 15, 23, 43, 59, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 722, False); alias=default
DEBUG 2024-03-03 14:03:52,756 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 11, 'Player 12', 1, '2024-02-26T15:50:05.691294+01:00'::timestamptz, 573, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 11, 'Player 12', 1, datetime.datetime(2024, 2, 26, 15, 50, 5, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 573, False); alias=default
DEBUG 2024-03-03 14:03:52,756 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 44', 5, '2023-12-10T12:37:14.691294+01:00'::timestamptz, 360, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 44', 5, datetime.datetime(2023, 12, 10, 12, 37, 14, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 360, False); alias=default
DEBUG 2024-03-03 14:03:52,757 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 50', 7, '2023-11-08T23:30:08.691294+01:00'::timestamptz, 952, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 50', 7, datetime.datetime(2023, 11, 8, 23, 30, 8, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 952, False); alias=default
DEBUG 2024-03-03 14:03:52,757 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 11, 'Player 12', 5, '2024-02-05T03:28:48.691294+01:00'::timestamptz, 586, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 11, 'Player 12', 5, datetime.datetime(2024, 2, 5, 3, 28, 48, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 586, False); alias=default
DEBUG 2024-03-03 14:03:52,758 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 2, 'Player 18', 11, '2023-12-23T18:27:16.691294+01:00'::timestamptz, 24, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 2, 'Player 18', 11, datetime.datetime(2023, 12, 23, 18, 27, 16, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 24, False); alias=default
DEBUG 2024-03-03 14:03:52,759 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 11', 5, '2024-02-20T09:30:21.691294+01:00'::timestamptz, 875, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 11', 5, datetime.datetime(2024, 2, 20, 9, 30, 21, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 875, False); alias=default
DEBUG 2024-03-03 14:03:52,759 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 48', 11, 'Player 0', 3, '2023-11-06T10:10:13.691294+01:00'::timestamptz, 653, false) RETURNING "pong_gamedata"."id"; args=('Player 48', 11, 'Player 0', 3, datetime.datetime(2023, 11, 6, 10, 10, 13, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 653, False); alias=default
DEBUG 2024-03-03 14:03:52,760 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 11, 'Player 49', 6, '2023-11-20T11:43:15.691294+01:00'::timestamptz, 207, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 11, 'Player 49', 6, datetime.datetime(2023, 11, 20, 11, 43, 15, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 207, False); alias=default
DEBUG 2024-03-03 14:03:52,761 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 11, 'Player 16', 10, '2024-02-24T08:33:13.691294+01:00'::timestamptz, 28, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 11, 'Player 16', 10, datetime.datetime(2024, 2, 24, 8, 33, 13, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 28, False); alias=default
DEBUG 2024-03-03 14:03:52,761 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 6, 'Player 12', 11, '2023-12-07T17:03:37.691294+01:00'::timestamptz, 350, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 6, 'Player 12', 11, datetime.datetime(2023, 12, 7, 17, 3, 37, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 350, False); alias=default
DEBUG 2024-03-03 14:03:52,762 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 23', 9, '2024-01-06T20:57:11.691294+01:00'::timestamptz, 676, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 23', 9, datetime.datetime(2024, 1, 6, 20, 57, 11, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 676, False); alias=default
DEBUG 2024-03-03 14:03:52,762 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 61', 11, 'Player 55', 3, '2024-01-18T04:21:05.691294+01:00'::timestamptz, 569, false) RETURNING "pong_gamedata"."id"; args=('Player 61', 11, 'Player 55', 3, datetime.datetime(2024, 1, 18, 4, 21, 5, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 569, False); alias=default
DEBUG 2024-03-03 14:03:52,763 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 11, 'Player 48', 6, '2024-02-20T13:47:31.691294+01:00'::timestamptz, 551, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 11, 'Player 48', 6, datetime.datetime(2024, 2, 20, 13, 47, 31, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 551, False); alias=default
DEBUG 2024-03-03 14:03:52,764 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 0, 'Player 49', 11, '2023-12-16T04:05:45.691294+01:00'::timestamptz, 132, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 0, 'Player 49', 11, datetime.datetime(2023, 12, 16, 4, 5, 45, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 132, False); alias=default
DEBUG 2024-03-03 14:03:52,764 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 51', 5, '2023-11-07T08:08:09.691294+01:00'::timestamptz, 785, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 51', 5, datetime.datetime(2023, 11, 7, 8, 8, 9, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 785, False); alias=default
DEBUG 2024-03-03 14:03:52,765 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 4, 'Player 23', 11, '2023-12-25T14:31:57.691294+01:00'::timestamptz, 515, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 4, 'Player 23', 11, datetime.datetime(2023, 12, 25, 14, 31, 57, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 515, False); alias=default
DEBUG 2024-03-03 14:03:52,765 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 9, 'Player 19', 11, '2023-12-20T12:10:11.691294+01:00'::timestamptz, 512, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 9, 'Player 19', 11, datetime.datetime(2023, 12, 20, 12, 10, 11, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 512, False); alias=default
DEBUG 2024-03-03 14:03:52,766 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 11, 'Player 57', 1, '2024-02-01T07:41:07.691294+01:00'::timestamptz, 750, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 11, 'Player 57', 1, datetime.datetime(2024, 2, 1, 7, 41, 7, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 750, False); alias=default
DEBUG 2024-03-03 14:03:52,767 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 58', 11, 'Player 45', 8, '2023-11-12T05:16:43.691294+01:00'::timestamptz, 324, false) RETURNING "pong_gamedata"."id"; args=('Player 58', 11, 'Player 45', 8, datetime.datetime(2023, 11, 12, 5, 16, 43, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 324, False); alias=default
DEBUG 2024-03-03 14:03:52,767 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 9, 'Player 46', 11, '2023-11-27T04:22:28.691294+01:00'::timestamptz, 66, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 9, 'Player 46', 11, datetime.datetime(2023, 11, 27, 4, 22, 28, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 66, False); alias=default
DEBUG 2024-03-03 14:03:52,768 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 14:03:52,769 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 1, 'Player 1', 11, '2023-11-23T08:44:20.691294+01:00'::timestamptz, 359, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 1, 'Player 1', 11, datetime.datetime(2023, 11, 23, 8, 44, 20, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 359, True); alias=default
DEBUG 2024-03-03 14:03:52,769 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 9, 'Player 2', 11, '2023-11-23T08:41:25.691294+01:00'::timestamptz, 494, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 9, 'Player 2', 11, datetime.datetime(2023, 11, 23, 8, 41, 25, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 494, True); alias=default
DEBUG 2024-03-03 14:03:52,770 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 5, 'Player 2', 11, '2023-11-23T08:46:44.691294+01:00'::timestamptz, 577, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 5, 'Player 2', 11, datetime.datetime(2023, 11, 23, 8, 46, 44, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 577, True); alias=default
DEBUG 2024-03-03 14:03:53,057 utils (0.007) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (6123, 101, 102, 103, '2023-11-23T08:46:44.691294+01:00'::timestamptz, 813, '["Player 2", "Player 1", "Player 3", "Player 4"]', '0xd2d5b504a493dc3e8d7ce4015064e0c9ccefa7d78101bdd6bea88f54ca11ed2e') RETURNING "pong_tournamentdata"."id"; args=(6123, 101, 102, 103, datetime.datetime(2023, 11, 23, 8, 46, 44, 691294, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 813, <psycopg2._json.Json object at 0x7f1ee8cdd460>, '0xd2d5b504a493dc3e8d7ce4015064e0c9ccefa7d78101bdd6bea88f54ca11ed2e'); alias=default
DEBUG 2024-03-03 14:03:53,057 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,058 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,058 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 14:03:53,058 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:53,059 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 14:03:53,059 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:53,060 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 14:03:53,061 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 14:03:53,061 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 14:03:53,063 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 14:03:53,063 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:53,064 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 14:03:53,064 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:53,064 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 14:03:53,065 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,065 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,066 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,067 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,067 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,068 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,068 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 14:03:53,068 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:53,068 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 14:03:53,069 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:53,069 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 14:03:53,070 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 14:03:53,070 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:53,071 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 14:03:53,071 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:53,072 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 14:03:53,072 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,072 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,073 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,073 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,074 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,074 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,075 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 14:03:53,075 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:53,075 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 14:03:53,076 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:53,076 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 14:03:53,077 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 14:03:53,077 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:53,078 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 14:03:53,078 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:53,079 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 14:03:53,079 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,080 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,080 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,081 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,081 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,081 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,082 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 14:03:53,082 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:53,082 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 14:03:53,083 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:53,083 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 14:03:53,084 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 14:03:53,085 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 14:03:53,085 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 14:03:53,085 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 14:03:53,086 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 14:03:53,086 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 14:03:53,087 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,087 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,088 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,088 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,088 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 14:03:53,089 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
