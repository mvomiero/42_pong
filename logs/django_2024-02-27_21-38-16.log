DEBUG 2024-02-27 21:38:17,838 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:38:17,841 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,843 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:38:17,844 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,860 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:38:17,861 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:38:17,861 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,863 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:38:17,864 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 21:38:17,868 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 21:38:17,869 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:38:17,870 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,871 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,872 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,873 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,911 utils (0.009) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 1, 'Player 10', 11, '2023-12-24T05:51:44.871864+01:00'::timestamptz, 972, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 1, 'Player 10', 11, datetime.datetime(2023, 12, 24, 5, 51, 44, 871864, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 972, True); alias=default
DEBUG 2024-02-27 21:38:17,912 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 5', 7, '2023-12-24T05:49:40.871864+01:00'::timestamptz, 790, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 5', 7, datetime.datetime(2023, 12, 24, 5, 49, 40, 871864, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 790, True); alias=default
DEBUG 2024-02-27 21:38:17,913 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 1, 'Player 6', 11, '2023-12-24T05:51:44.871864+01:00'::timestamptz, 895, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 1, 'Player 6', 11, datetime.datetime(2023, 12, 24, 5, 51, 44, 871864, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 895, True); alias=default
DEBUG 2024-02-27 21:38:17,914 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1684, 1685, 1686, '2023-12-24T05:51:44.871864+01:00'::timestamptz, 972, '["Player 6", "Player 10", "Player 12", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1684, 1685, 1686, datetime.datetime(2023, 12, 24, 5, 51, 44, 871864, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 972, <psycopg2._json.Json object at 0x7fa931b523c0>, '0x0'); alias=default
DEBUG 2024-02-27 21:38:17,916 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 10', 1, '2024-02-09T08:16:50.871864+01:00'::timestamptz, 961, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 10', 1, datetime.datetime(2024, 2, 9, 8, 16, 50, 871864, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 961, True); alias=default
DEBUG 2024-02-27 21:38:17,918 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 11', 10, '2024-02-09T08:09:10.871864+01:00'::timestamptz, 324, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 11', 10, datetime.datetime(2024, 2, 9, 8, 9, 10, 871864, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 324, True); alias=default
DEBUG 2024-02-27 21:38:17,920 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 15', 8, '2024-02-09T08:17:29.871864+01:00'::timestamptz, 217, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 15', 8, datetime.datetime(2024, 2, 9, 8, 17, 29, 871864, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 217, True); alias=default
DEBUG 2024-02-27 21:38:17,921 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1687, 1688, 1689, '2024-02-09T08:17:29.871864+01:00'::timestamptz, 1000, '["Player 4", "Player 15", "Player 10", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1687, 1688, 1689, datetime.datetime(2024, 2, 9, 8, 17, 29, 871864, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 1000, <psycopg2._json.Json object at 0x7fa931b52b70>, '0x0'); alias=default
DEBUG 2024-02-27 21:38:17,922 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,923 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,924 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:38:17,925 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 21:38:17,925 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 21:38:17,927 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 21:38:17,929 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 21:38:17,930 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:38:17,931 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,932 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,933 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,934 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,937 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 12', 6, '2024-02-05T21:43:06.932420+01:00'::timestamptz, 929, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 12', 6, datetime.datetime(2024, 2, 5, 21, 43, 6, 932420, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 929, True); alias=default
DEBUG 2024-02-27 21:38:17,938 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 3, 'Player 5', 11, '2024-02-05T21:37:00.932420+01:00'::timestamptz, 530, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 3, 'Player 5', 11, datetime.datetime(2024, 2, 5, 21, 37, 0, 932420, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 530, True); alias=default
DEBUG 2024-02-27 21:38:17,939 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 5', 6, '2024-02-05T21:43:50.932420+01:00'::timestamptz, 663, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 5', 6, datetime.datetime(2024, 2, 5, 21, 43, 50, 932420, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 663, True); alias=default
DEBUG 2024-02-27 21:38:17,940 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1690, 1691, 1692, '2024-02-05T21:43:50.932420+01:00'::timestamptz, 973, '["Player 14", "Player 5", "Player 12", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1690, 1691, 1692, datetime.datetime(2024, 2, 5, 21, 43, 50, 932420, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 973, <psycopg2._json.Json object at 0x7fa931b535f0>, '0x0'); alias=default
DEBUG 2024-02-27 21:38:17,941 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 4, 'Player 5', 11, '2023-12-18T11:27:38.932420+01:00'::timestamptz, 812, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 4, 'Player 5', 11, datetime.datetime(2023, 12, 18, 11, 27, 38, 932420, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 812, True); alias=default
DEBUG 2024-02-27 21:38:17,943 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 7', 6, '2023-12-18T11:25:35.932420+01:00'::timestamptz, 534, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 7', 6, datetime.datetime(2023, 12, 18, 11, 25, 35, 932420, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 534, True); alias=default
DEBUG 2024-02-27 21:38:17,944 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 3, 'Player 6', 11, '2023-12-18T11:28:33.932420+01:00'::timestamptz, 476, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 3, 'Player 6', 11, datetime.datetime(2023, 12, 18, 11, 28, 33, 932420, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 476, True); alias=default
DEBUG 2024-02-27 21:38:17,945 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1693, 1694, 1695, '2023-12-18T11:28:33.932420+01:00'::timestamptz, 867, '["Player 6", "Player 5", "Player 13", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1693, 1694, 1695, datetime.datetime(2023, 12, 18, 11, 28, 33, 932420, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 867, <psycopg2._json.Json object at 0x7fa9319780b0>, '0x0'); alias=default
DEBUG 2024-02-27 21:38:17,946 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,947 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,948 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:38:17,949 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 21:38:17,951 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 21:38:17,953 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:38:17,954 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,955 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,956 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,957 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,958 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 14', 8, '2024-01-18T07:39:49.955367+01:00'::timestamptz, 665, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 14', 8, datetime.datetime(2024, 1, 18, 7, 39, 49, 955367, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 665, True); alias=default
DEBUG 2024-02-27 21:38:17,960 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 9, 'Player 1', 11, '2024-01-18T07:39:02.955367+01:00'::timestamptz, 752, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 9, 'Player 1', 11, datetime.datetime(2024, 1, 18, 7, 39, 2, 955367, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 752, True); alias=default
DEBUG 2024-02-27 21:38:17,961 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 1', 7, '2024-01-18T07:41:27.955367+01:00'::timestamptz, 788, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 1', 7, datetime.datetime(2024, 1, 18, 7, 41, 27, 955367, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 788, True); alias=default
DEBUG 2024-02-27 21:38:17,962 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1696, 1697, 1698, '2024-01-18T07:41:27.955367+01:00'::timestamptz, 897, '["Player 7", "Player 1", "Player 14", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1696, 1697, 1698, datetime.datetime(2024, 1, 18, 7, 41, 27, 955367, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 897, <psycopg2._json.Json object at 0x7fa931979160>, '0x0'); alias=default
DEBUG 2024-02-27 21:38:17,963 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 1, 'Player 1', 11, '2023-11-15T15:32:44.955367+01:00'::timestamptz, 291, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 1, 'Player 1', 11, datetime.datetime(2023, 11, 15, 15, 32, 44, 955367, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 291, True); alias=default
DEBUG 2024-02-27 21:38:17,965 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 1, 'Player 5', 11, '2023-11-15T15:40:35.955367+01:00'::timestamptz, 984, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 1, 'Player 5', 11, datetime.datetime(2023, 11, 15, 15, 40, 35, 955367, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 984, True); alias=default
DEBUG 2024-02-27 21:38:17,966 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 5', 9, '2023-11-15T15:40:48.955367+01:00'::timestamptz, 915, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 5', 9, datetime.datetime(2023, 11, 15, 15, 40, 48, 955367, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 915, True); alias=default
DEBUG 2024-02-27 21:38:17,967 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1699, 1700, 1701, '2023-11-15T15:40:48.955367+01:00'::timestamptz, 997, '["Player 1", "Player 5", "Player 12", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1699, 1700, 1701, datetime.datetime(2023, 11, 15, 15, 40, 48, 955367, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 997, <psycopg2._json.Json object at 0x7fa931979640>, '0x0'); alias=default
DEBUG 2024-02-27 21:38:17,969 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,971 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,972 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:38:17,973 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 21:38:17,975 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 21:38:17,976 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:38:17,977 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,978 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,978 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,979 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,981 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 14', 7, '2024-01-31T13:37:32.978132+01:00'::timestamptz, 406, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 14', 7, datetime.datetime(2024, 1, 31, 13, 37, 32, 978132, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 406, True); alias=default
DEBUG 2024-02-27 21:38:17,982 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 11', 10, '2024-01-31T13:36:02.978132+01:00'::timestamptz, 536, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 11', 10, datetime.datetime(2024, 1, 31, 13, 36, 2, 978132, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 536, True); alias=default
DEBUG 2024-02-27 21:38:17,984 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 5', 4, '2024-01-31T13:43:00.978132+01:00'::timestamptz, 343, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 5', 4, datetime.datetime(2024, 1, 31, 13, 43, 0, 978132, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 343, True); alias=default
DEBUG 2024-02-27 21:38:17,985 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1702, 1703, 1704, '2024-01-31T13:43:00.978132+01:00'::timestamptz, 954, '["Player 4", "Player 5", "Player 14", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1702, 1703, 1704, datetime.datetime(2024, 1, 31, 13, 43, 0, 978132, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 954, <psycopg2._json.Json object at 0x7fa931b526f0>, '0x0'); alias=default
DEBUG 2024-02-27 21:38:17,988 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 4, 'Player 0', 11, '2023-11-09T21:50:53.978132+01:00'::timestamptz, 295, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 4, 'Player 0', 11, datetime.datetime(2023, 11, 9, 21, 50, 53, 978132, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 295, True); alias=default
DEBUG 2024-02-27 21:38:17,990 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 7, 'Player 14', 11, '2023-11-09T21:49:37.978132+01:00'::timestamptz, 11, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 7, 'Player 14', 11, datetime.datetime(2023, 11, 9, 21, 49, 37, 978132, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 11, True); alias=default
DEBUG 2024-02-27 21:38:17,991 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 14', 1, '2023-11-09T21:56:04.978132+01:00'::timestamptz, 343, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 14', 1, datetime.datetime(2023, 11, 9, 21, 56, 4, 978132, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 343, True); alias=default
DEBUG 2024-02-27 21:38:17,993 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1705, 1706, 1707, '2023-11-09T21:56:04.978132+01:00'::timestamptz, 606, '["Player 0", "Player 14", "Player 4", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1705, 1706, 1707, datetime.datetime(2023, 11, 9, 21, 56, 4, 978132, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 606, <psycopg2._json.Json object at 0x7fa93197a990>, '0x0'); alias=default
DEBUG 2024-02-27 21:38:17,994 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,995 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:38:17,996 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:38:17,997 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 21:38:17,998 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 21:38:17,999 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 21:38:18,000 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:38:18,001 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:38:18,002 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:38:18,004 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:38:18,006 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:38:18,007 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 5, 'Player 14', 11, '2024-02-03T21:34:10.003250+01:00'::timestamptz, 343, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 5, 'Player 14', 11, datetime.datetime(2024, 2, 3, 21, 34, 10, 3250, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 343, True); alias=default
DEBUG 2024-02-27 21:38:18,009 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 0', 5, '2024-02-03T21:42:31.003250+01:00'::timestamptz, 508, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 0', 5, datetime.datetime(2024, 2, 3, 21, 42, 31, 3250, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 508, True); alias=default
DEBUG 2024-02-27 21:38:18,010 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 12', 6, '2024-02-03T21:44:17.003250+01:00'::timestamptz, 791, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 12', 6, datetime.datetime(2024, 2, 3, 21, 44, 17, 3250, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 791, True); alias=default
DEBUG 2024-02-27 21:38:18,011 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1708, 1709, 1710, '2024-02-03T21:44:17.003250+01:00'::timestamptz, 950, '["Player 14", "Player 12", "Player 4", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1708, 1709, 1710, datetime.datetime(2024, 2, 3, 21, 44, 17, 3250, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 950, <psycopg2._json.Json object at 0x7fa93197ae40>, '0x0'); alias=default
DEBUG 2024-02-27 21:38:18,012 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 7, 'Player 2', 11, '2024-02-21T17:21:49.003250+01:00'::timestamptz, 691, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 7, 'Player 2', 11, datetime.datetime(2024, 2, 21, 17, 21, 49, 3250, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 691, True); alias=default
DEBUG 2024-02-27 21:38:18,013 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 3', 5, '2024-02-21T17:22:49.003250+01:00'::timestamptz, 584, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 3', 5, datetime.datetime(2024, 2, 21, 17, 22, 49, 3250, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 584, True); alias=default
DEBUG 2024-02-27 21:38:18,014 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 6', 2, '2024-02-21T17:23:12.003250+01:00'::timestamptz, 90, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 6', 2, datetime.datetime(2024, 2, 21, 17, 23, 12, 3250, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 90, True); alias=default
DEBUG 2024-02-27 21:38:18,015 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1711, 1712, 1713, '2024-02-21T17:23:12.003250+01:00'::timestamptz, 774, '["Player 2", "Player 6", "Player 9", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1711, 1712, 1713, datetime.datetime(2024, 2, 21, 17, 23, 12, 3250, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 774, <psycopg2._json.Json object at 0x7fa931978e90>, '0x0'); alias=default
DEBUG 2024-02-27 21:38:18,016 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:38:18,017 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
