DEBUG 2024-02-27 22:22:37,409 utils (0.003) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:22:37,412 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,413 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:22:37,414 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,437 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:22:37,439 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:22:37,439 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,441 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:22:37,442 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 22:22:37,445 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 22:22:37,445 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:22:37,447 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,449 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,451 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,452 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,504 utils (0.007) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 5', 3, '2023-11-30T17:08:12.450103+01:00'::timestamptz, 91, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 5', 3, datetime.datetime(2023, 11, 30, 17, 8, 12, 450103, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 91, True); alias=default
DEBUG 2024-02-27 22:22:37,506 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 0', 8, '2023-11-30T17:13:42.450103+01:00'::timestamptz, 504, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 0', 8, datetime.datetime(2023, 11, 30, 17, 13, 42, 450103, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 504, True); alias=default
DEBUG 2024-02-27 22:22:37,507 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 12', 2, '2023-11-30T17:20:45.450103+01:00'::timestamptz, 533, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 12', 2, datetime.datetime(2023, 11, 30, 17, 20, 45, 450103, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 533, True); alias=default
DEBUG 2024-02-27 22:22:37,508 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2113, 2114, 2115, '2023-11-30T17:20:45.450103+01:00'::timestamptz, 927, '["Player 3", "Player 12", "Player 5", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2113, 2114, 2115, datetime.datetime(2023, 11, 30, 17, 20, 45, 450103, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 927, <psycopg2._json.Json object at 0x7f11c501edb0>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:37,509 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 15', 1, '2023-12-22T10:34:55.450103+01:00'::timestamptz, 971, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 15', 1, datetime.datetime(2023, 12, 22, 10, 34, 55, 450103, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 971, True); alias=default
DEBUG 2024-02-27 22:22:37,511 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 12', 0, '2023-12-22T10:32:34.450103+01:00'::timestamptz, 722, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 12', 0, datetime.datetime(2023, 12, 22, 10, 32, 34, 450103, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 722, True); alias=default
DEBUG 2024-02-27 22:22:37,512 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 4, 'Player 5', 11, '2023-12-22T10:35:10.450103+01:00'::timestamptz, 238, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 4, 'Player 5', 11, datetime.datetime(2023, 12, 22, 10, 35, 10, 450103, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 238, True); alias=default
DEBUG 2024-02-27 22:22:37,514 utils (0.002) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2116, 2117, 2118, '2023-12-22T10:35:10.450103+01:00'::timestamptz, 986, '["Player 5", "Player 2", "Player 15", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2116, 2117, 2118, datetime.datetime(2023, 12, 22, 10, 35, 10, 450103, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 986, <psycopg2._json.Json object at 0x7f11c501f500>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:37,516 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,517 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,520 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:22:37,522 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 22:22:37,524 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 22:22:37,525 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 22:22:37,528 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 22:22:37,529 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:22:37,531 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,532 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,534 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,536 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,538 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 8, 'Player 8', 11, '2023-12-24T21:58:53.532800+01:00'::timestamptz, 288, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 8, 'Player 8', 11, datetime.datetime(2023, 12, 24, 21, 58, 53, 532800, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 288, True); alias=default
DEBUG 2024-02-27 22:22:37,540 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 5, 'Player 3', 11, '2023-12-24T22:07:48.532800+01:00'::timestamptz, 795, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 5, 'Player 3', 11, datetime.datetime(2023, 12, 24, 22, 7, 48, 532800, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 795, True); alias=default
DEBUG 2024-02-27 22:22:37,543 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 2, 'Player 3', 11, '2023-12-24T22:07:56.532800+01:00'::timestamptz, 990, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 2, 'Player 3', 11, datetime.datetime(2023, 12, 24, 22, 7, 56, 532800, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 990, True); alias=default
DEBUG 2024-02-27 22:22:37,544 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2119, 2120, 2121, '2023-12-24T22:07:56.532800+01:00'::timestamptz, 831, '["Player 3", "Player 8", "Player 12", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2119, 2120, 2121, datetime.datetime(2023, 12, 24, 22, 7, 56, 532800, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 831, <psycopg2._json.Json object at 0x7f11c4e48200>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:37,546 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 10, 'Player 6', 11, '2024-01-26T19:24:50.532800+01:00'::timestamptz, 681, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 10, 'Player 6', 11, datetime.datetime(2024, 1, 26, 19, 24, 50, 532800, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 681, True); alias=default
DEBUG 2024-02-27 22:22:37,552 utils (0.005) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 12', 2, '2024-01-26T19:24:50.532800+01:00'::timestamptz, 776, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 12', 2, datetime.datetime(2024, 1, 26, 19, 24, 50, 532800, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 776, True); alias=default
DEBUG 2024-02-27 22:22:37,553 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 3', 8, '2024-01-26T19:28:27.532800+01:00'::timestamptz, 959, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 3', 8, datetime.datetime(2024, 1, 26, 19, 28, 27, 532800, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 959, True); alias=default
DEBUG 2024-02-27 22:22:37,555 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2122, 2123, 2124, '2024-01-26T19:28:27.532800+01:00'::timestamptz, 993, '["Player 6", "Player 3", "Player 2", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2122, 2123, 2124, datetime.datetime(2024, 1, 26, 19, 28, 27, 532800, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 993, <psycopg2._json.Json object at 0x7f11c4e48a40>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:37,556 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,558 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,559 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:22:37,561 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 22:22:37,564 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 22:22:37,565 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:22:37,567 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,569 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,570 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,572 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,574 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 10', 9, '2023-11-30T11:06:40.569515+01:00'::timestamptz, 751, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 10', 9, datetime.datetime(2023, 11, 30, 11, 6, 40, 569515, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 751, True); alias=default
DEBUG 2024-02-27 22:22:37,575 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 10, 'Player 6', 11, '2023-11-30T11:05:09.569515+01:00'::timestamptz, 835, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 10, 'Player 6', 11, datetime.datetime(2023, 11, 30, 11, 5, 9, 569515, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 835, True); alias=default
DEBUG 2024-02-27 22:22:37,577 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 6', 10, '2023-11-30T11:07:45.569515+01:00'::timestamptz, 997, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 6', 10, datetime.datetime(2023, 11, 30, 11, 7, 45, 569515, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 997, True); alias=default
DEBUG 2024-02-27 22:22:37,578 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2125, 2126, 2127, '2023-11-30T11:07:45.569515+01:00'::timestamptz, 991, '["Player 14", "Player 6", "Player 10", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2125, 2126, 2127, datetime.datetime(2023, 11, 30, 11, 7, 45, 569515, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 991, <psycopg2._json.Json object at 0x7f11c4e48ce0>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:37,581 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 1, 'Player 6', 11, '2024-02-04T07:31:58.569515+01:00'::timestamptz, 325, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 1, 'Player 6', 11, datetime.datetime(2024, 2, 4, 7, 31, 58, 569515, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 325, True); alias=default
DEBUG 2024-02-27 22:22:37,583 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 10', 5, '2024-02-04T07:21:52.569515+01:00'::timestamptz, 56, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 10', 5, datetime.datetime(2024, 2, 4, 7, 21, 52, 569515, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 56, True); alias=default
DEBUG 2024-02-27 22:22:37,585 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 12', 2, '2024-02-04T07:34:49.569515+01:00'::timestamptz, 701, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 12', 2, datetime.datetime(2024, 2, 4, 7, 34, 49, 569515, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 701, True); alias=default
DEBUG 2024-02-27 22:22:37,586 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2128, 2129, 2130, '2024-02-04T07:34:49.569515+01:00'::timestamptz, 833, '["Player 6", "Player 12", "Player 2", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2128, 2129, 2130, datetime.datetime(2024, 2, 4, 7, 34, 49, 569515, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 833, <psycopg2._json.Json object at 0x7f11c4e49e50>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:37,588 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,589 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,590 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:22:37,592 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 22:22:37,594 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 22:22:37,595 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:22:37,597 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,598 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,599 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,601 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,603 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 15', 5, '2023-11-27T18:01:24.598470+01:00'::timestamptz, 996, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 15', 5, datetime.datetime(2023, 11, 27, 18, 1, 24, 598470, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 996, True); alias=default
DEBUG 2024-02-27 22:22:37,604 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 10, 'Player 0', 11, '2023-11-27T17:59:52.598470+01:00'::timestamptz, 66, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 10, 'Player 0', 11, datetime.datetime(2023, 11, 27, 17, 59, 52, 598470, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 66, True); alias=default
DEBUG 2024-02-27 22:22:37,605 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 3, 'Player 0', 11, '2023-11-27T18:01:25.598470+01:00'::timestamptz, 309, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 3, 'Player 0', 11, datetime.datetime(2023, 11, 27, 18, 1, 25, 598470, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 309, True); alias=default
DEBUG 2024-02-27 22:22:37,606 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2131, 2132, 2133, '2023-11-27T18:01:25.598470+01:00'::timestamptz, 997, '["Player 0", "Player 6", "Player 15", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2131, 2132, 2133, datetime.datetime(2023, 11, 27, 18, 1, 25, 598470, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 997, <psycopg2._json.Json object at 0x7f11c4e49490>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:37,608 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 2, 'Player 7', 11, '2023-12-29T19:16:55.598470+01:00'::timestamptz, 133, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 2, 'Player 7', 11, datetime.datetime(2023, 12, 29, 19, 16, 55, 598470, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 133, True); alias=default
DEBUG 2024-02-27 22:22:37,609 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 9, 'Player 3', 11, '2023-12-29T19:25:31.598470+01:00'::timestamptz, 932, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 9, 'Player 3', 11, datetime.datetime(2023, 12, 29, 19, 25, 31, 598470, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 932, True); alias=default
DEBUG 2024-02-27 22:22:37,610 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 7, 'Player 3', 11, '2023-12-29T19:25:43.598470+01:00'::timestamptz, 605, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 7, 'Player 3', 11, datetime.datetime(2023, 12, 29, 19, 25, 43, 598470, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 605, True); alias=default
DEBUG 2024-02-27 22:22:37,611 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2134, 2135, 2136, '2023-12-29T19:25:43.598470+01:00'::timestamptz, 944, '["Player 3", "Player 7", "Player 5", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2134, 2135, 2136, datetime.datetime(2023, 12, 29, 19, 25, 43, 598470, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 944, <psycopg2._json.Json object at 0x7f11c4e4ad20>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:37,612 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,613 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,614 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:22:37,615 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 22:22:37,617 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 22:22:37,619 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 22:22:37,620 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:22:37,621 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,622 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,623 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,624 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,625 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 0', 6, '2023-11-05T19:03:36.622447+01:00'::timestamptz, 947, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 0', 6, datetime.datetime(2023, 11, 5, 19, 3, 36, 622447, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 947, True); alias=default
DEBUG 2024-02-27 22:22:37,626 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 5, 'Player 9', 11, '2023-11-05T18:50:30.622447+01:00'::timestamptz, 174, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 5, 'Player 9', 11, datetime.datetime(2023, 11, 5, 18, 50, 30, 622447, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 174, True); alias=default
DEBUG 2024-02-27 22:22:37,628 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 9', 10, '2023-11-05T19:03:48.622447+01:00'::timestamptz, 975, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 9', 10, datetime.datetime(2023, 11, 5, 19, 3, 48, 622447, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 975, True); alias=default
DEBUG 2024-02-27 22:22:37,628 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2137, 2138, 2139, '2023-11-05T19:03:48.622447+01:00'::timestamptz, 972, '["Player 8", "Player 9", "Player 0", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2137, 2138, 2139, datetime.datetime(2023, 11, 5, 19, 3, 48, 622447, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 972, <psycopg2._json.Json object at 0x7f11c4e493a0>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:37,630 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 1', 9, '2024-01-12T09:33:09.622447+01:00'::timestamptz, 496, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 1', 9, datetime.datetime(2024, 1, 12, 9, 33, 9, 622447, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 496, True); alias=default
DEBUG 2024-02-27 22:22:37,631 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 10, 'Player 5', 11, '2024-01-12T09:41:06.622447+01:00'::timestamptz, 956, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 10, 'Player 5', 11, datetime.datetime(2024, 1, 12, 9, 41, 6, 622447, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 956, True); alias=default
DEBUG 2024-02-27 22:22:37,633 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 7, 'Player 5', 11, '2024-01-12T09:41:25.622447+01:00'::timestamptz, 251, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 7, 'Player 5', 11, datetime.datetime(2024, 1, 12, 9, 41, 25, 622447, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 251, True); alias=default
DEBUG 2024-02-27 22:22:37,634 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2140, 2141, 2142, '2024-01-12T09:41:25.622447+01:00'::timestamptz, 992, '["Player 5", "Player 3", "Player 1", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2140, 2141, 2142, datetime.datetime(2024, 1, 12, 9, 41, 25, 622447, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 992, <psycopg2._json.Json object at 0x7f11c4e49df0>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:37,636 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:37,637 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
