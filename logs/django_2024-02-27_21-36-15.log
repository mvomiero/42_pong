DEBUG 2024-02-27 21:36:17,240 utils (0.003) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:36:17,243 utils (0.001) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,245 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:36:17,246 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,260 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:36:17,261 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:36:17,262 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,264 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:36:17,265 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 21:36:17,267 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 21:36:17,268 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:36:17,269 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,270 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,271 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,273 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,307 utils (0.009) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 9', 4, '2024-02-08T03:19:58.270889+01:00'::timestamptz, 348, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 9', 4, datetime.datetime(2024, 2, 8, 3, 19, 58, 270889, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 348, True); alias=default
DEBUG 2024-02-27 21:36:17,309 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 1', 10, '2024-02-08T03:16:59.270889+01:00'::timestamptz, 449, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 1', 10, datetime.datetime(2024, 2, 8, 3, 16, 59, 270889, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 449, True); alias=default
DEBUG 2024-02-27 21:36:17,310 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 4, 'Player 15', 11, '2024-02-08T03:22:55.270889+01:00'::timestamptz, 569, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 4, 'Player 15', 11, datetime.datetime(2024, 2, 8, 3, 22, 55, 270889, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 569, True); alias=default
DEBUG 2024-02-27 21:36:17,311 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1653, 1654, 1655, '2024-02-08T03:22:55.270889+01:00'::timestamptz, 805, '["Player 15", "Player 11", "Player 9", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1653, 1654, 1655, datetime.datetime(2024, 2, 8, 3, 22, 55, 270889, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 805, <psycopg2._json.Json object at 0x7ff714f76ae0>, '0x0'); alias=default
DEBUG 2024-02-27 21:36:17,312 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 2, 'Player 0', 11, '2024-01-30T11:45:47.270889+01:00'::timestamptz, 969, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 2, 'Player 0', 11, datetime.datetime(2024, 1, 30, 11, 45, 47, 270889, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 969, True); alias=default
DEBUG 2024-02-27 21:36:17,313 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 3', 8, '2024-01-30T11:41:24.270889+01:00'::timestamptz, 272, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 3', 8, datetime.datetime(2024, 1, 30, 11, 41, 24, 270889, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 272, True); alias=default
DEBUG 2024-02-27 21:36:17,315 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 3, 'Player 2', 11, '2024-01-30T11:46:14.270889+01:00'::timestamptz, 755, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 3, 'Player 2', 11, datetime.datetime(2024, 1, 30, 11, 46, 14, 270889, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 755, True); alias=default
DEBUG 2024-02-27 21:36:17,315 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1656, 1657, 1658, '2024-01-30T11:46:14.270889+01:00'::timestamptz, 996, '["Player 2", "Player 0", "Player 6", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1656, 1657, 1658, datetime.datetime(2024, 1, 30, 11, 46, 14, 270889, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 996, <psycopg2._json.Json object at 0x7ff714f774a0>, '0x0'); alias=default
DEBUG 2024-02-27 21:36:17,317 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,318 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,319 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:36:17,320 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 21:36:17,321 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 21:36:17,322 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 21:36:17,324 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 21:36:17,325 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:36:17,326 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,327 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,328 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,329 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,330 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 10, 'Player 8', 11, '2023-11-24T10:54:29.327762+01:00'::timestamptz, 260, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 10, 'Player 8', 11, datetime.datetime(2023, 11, 24, 10, 54, 29, 327762, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 260, True); alias=default
DEBUG 2024-02-27 21:36:17,332 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 6', 0, '2023-11-24T11:01:44.327762+01:00'::timestamptz, 331, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 6', 0, datetime.datetime(2023, 11, 24, 11, 1, 44, 327762, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 331, True); alias=default
DEBUG 2024-02-27 21:36:17,333 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 12', 0, '2023-11-24T11:02:00.327762+01:00'::timestamptz, 231, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 12', 0, datetime.datetime(2023, 11, 24, 11, 2, 0, 327762, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 231, True); alias=default
DEBUG 2024-02-27 21:36:17,334 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1659, 1660, 1661, '2023-11-24T11:02:00.327762+01:00'::timestamptz, 711, '["Player 8", "Player 12", "Player 11", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1659, 1660, 1661, datetime.datetime(2023, 11, 24, 11, 2, 0, 327762, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 711, <psycopg2._json.Json object at 0x7ff714da0080>, '0x0'); alias=default
DEBUG 2024-02-27 21:36:17,335 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 9, 'Player 14', 11, '2024-02-26T19:32:16.327762+01:00'::timestamptz, 333, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 9, 'Player 14', 11, datetime.datetime(2024, 2, 26, 19, 32, 16, 327762, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 333, True); alias=default
DEBUG 2024-02-27 21:36:17,336 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 7, 'Player 4', 11, '2024-02-26T19:28:58.327762+01:00'::timestamptz, 29, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 7, 'Player 4', 11, datetime.datetime(2024, 2, 26, 19, 28, 58, 327762, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 29, True); alias=default
DEBUG 2024-02-27 21:36:17,337 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 0, 'Player 4', 11, '2024-02-26T19:36:11.327762+01:00'::timestamptz, 327, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 0, 'Player 4', 11, datetime.datetime(2024, 2, 26, 19, 36, 11, 327762, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 327, True); alias=default
DEBUG 2024-02-27 21:36:17,338 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1662, 1663, 1664, '2024-02-26T19:36:11.327762+01:00'::timestamptz, 568, '["Player 4", "Player 14", "Player 9", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1662, 1663, 1664, datetime.datetime(2024, 2, 26, 19, 36, 11, 327762, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 568, <psycopg2._json.Json object at 0x7ff714da0590>, '0x0'); alias=default
DEBUG 2024-02-27 21:36:17,339 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,340 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,341 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:36:17,343 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 21:36:17,345 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 21:36:17,346 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:36:17,347 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,347 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,348 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,349 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,351 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 5, 'Player 10', 11, '2023-12-30T13:11:06.348092+01:00'::timestamptz, 509, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 5, 'Player 10', 11, datetime.datetime(2023, 12, 30, 13, 11, 6, 348092, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 509, True); alias=default
DEBUG 2024-02-27 21:36:17,352 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 2, 'Player 4', 11, '2023-12-30T13:10:48.348092+01:00'::timestamptz, 906, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 2, 'Player 4', 11, datetime.datetime(2023, 12, 30, 13, 10, 48, 348092, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 906, True); alias=default
DEBUG 2024-02-27 21:36:17,353 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 4', 7, '2023-12-30T13:11:49.348092+01:00'::timestamptz, 434, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 4', 7, datetime.datetime(2023, 12, 30, 13, 11, 49, 348092, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 434, True); alias=default
DEBUG 2024-02-27 21:36:17,354 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1665, 1666, 1667, '2023-12-30T13:11:49.348092+01:00'::timestamptz, 967, '["Player 10", "Player 4", "Player 15", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1665, 1666, 1667, datetime.datetime(2023, 12, 30, 13, 11, 49, 348092, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 967, <psycopg2._json.Json object at 0x7ff714da0f80>, '0x0'); alias=default
DEBUG 2024-02-27 21:36:17,355 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 5, 'Player 14', 11, '2024-02-04T01:47:22.348092+01:00'::timestamptz, 42, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 5, 'Player 14', 11, datetime.datetime(2024, 2, 4, 1, 47, 22, 348092, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 42, True); alias=default
DEBUG 2024-02-27 21:36:17,357 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 5', 7, '2024-02-04T01:56:43.348092+01:00'::timestamptz, 197, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 5', 7, datetime.datetime(2024, 2, 4, 1, 56, 43, 348092, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 197, True); alias=default
DEBUG 2024-02-27 21:36:17,358 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 5, 'Player 3', 11, '2024-02-04T02:01:10.348092+01:00'::timestamptz, 21, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 5, 'Player 3', 11, datetime.datetime(2024, 2, 4, 2, 1, 10, 348092, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 21, True); alias=default
DEBUG 2024-02-27 21:36:17,359 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1668, 1669, 1670, '2024-02-04T02:01:10.348092+01:00'::timestamptz, 870, '["Player 3", "Player 14", "Player 13", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1668, 1669, 1670, datetime.datetime(2024, 2, 4, 2, 1, 10, 348092, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 870, <psycopg2._json.Json object at 0x7ff714da1bb0>, '0x0'); alias=default
DEBUG 2024-02-27 21:36:17,360 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,361 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,362 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:36:17,363 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 21:36:17,364 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 21:36:17,365 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:36:17,366 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,367 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,367 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,368 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,370 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 15', 3, '2023-12-15T22:25:20.367180+01:00'::timestamptz, 925, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 15', 3, datetime.datetime(2023, 12, 15, 22, 25, 20, 367180, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 925, True); alias=default
DEBUG 2024-02-27 21:36:17,371 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 2, 'Player 12', 11, '2023-12-15T22:25:29.367180+01:00'::timestamptz, 794, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 2, 'Player 12', 11, datetime.datetime(2023, 12, 15, 22, 25, 29, 367180, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 794, True); alias=default
DEBUG 2024-02-27 21:36:17,372 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 12', 3, '2023-12-15T22:26:30.367180+01:00'::timestamptz, 162, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 12', 3, datetime.datetime(2023, 12, 15, 22, 26, 30, 367180, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 162, True); alias=default
DEBUG 2024-02-27 21:36:17,373 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1671, 1672, 1673, '2023-12-15T22:26:30.367180+01:00'::timestamptz, 995, '["Player 4", "Player 12", "Player 15", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1671, 1672, 1673, datetime.datetime(2023, 12, 15, 22, 26, 30, 367180, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 995, <psycopg2._json.Json object at 0x7ff714da27e0>, '0x0'); alias=default
DEBUG 2024-02-27 21:36:17,375 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 13', 3, '2023-11-22T12:09:51.367180+01:00'::timestamptz, 718, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 13', 3, datetime.datetime(2023, 11, 22, 12, 9, 51, 367180, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 718, True); alias=default
DEBUG 2024-02-27 21:36:17,377 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 4, 'Player 7', 11, '2023-11-22T12:06:53.367180+01:00'::timestamptz, 423, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 4, 'Player 7', 11, datetime.datetime(2023, 11, 22, 12, 6, 53, 367180, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 423, True); alias=default
DEBUG 2024-02-27 21:36:17,378 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 2, 'Player 7', 11, '2023-11-22T12:12:18.367180+01:00'::timestamptz, 109, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 2, 'Player 7', 11, datetime.datetime(2023, 11, 22, 12, 12, 18, 367180, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 109, True); alias=default
DEBUG 2024-02-27 21:36:17,379 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1674, 1675, 1676, '2023-11-22T12:12:18.367180+01:00'::timestamptz, 865, '["Player 7", "Player 10", "Player 13", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1674, 1675, 1676, datetime.datetime(2023, 11, 22, 12, 12, 18, 367180, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 865, <psycopg2._json.Json object at 0x7ff714da3170>, '0x0'); alias=default
DEBUG 2024-02-27 21:36:17,380 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,381 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,381 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:36:17,382 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 21:36:17,383 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 21:36:17,385 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 21:36:17,386 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:36:17,387 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,388 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,388 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,390 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,391 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 9, 'Player 7', 11, '2023-12-18T09:26:00.388320+01:00'::timestamptz, 618, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 9, 'Player 7', 11, datetime.datetime(2023, 12, 18, 9, 26, 0, 388320, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 618, True); alias=default
DEBUG 2024-02-27 21:36:17,393 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 15', 4, '2023-12-18T09:22:25.388320+01:00'::timestamptz, 501, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 15', 4, datetime.datetime(2023, 12, 18, 9, 22, 25, 388320, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 501, True); alias=default
DEBUG 2024-02-27 21:36:17,394 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 6', 2, '2023-12-18T09:30:01.388320+01:00'::timestamptz, 509, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 6', 2, datetime.datetime(2023, 12, 18, 9, 30, 1, 388320, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 509, True); alias=default
DEBUG 2024-02-27 21:36:17,395 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1677, 1678, 1679, '2023-12-18T09:30:01.388320+01:00'::timestamptz, 957, '["Player 7", "Player 6", "Player 3", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1677, 1678, 1679, datetime.datetime(2023, 12, 18, 9, 30, 1, 388320, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 957, <psycopg2._json.Json object at 0x7ff714da07d0>, '0x0'); alias=default
DEBUG 2024-02-27 21:36:17,396 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 5', 1, '2023-12-19T02:20:04.388320+01:00'::timestamptz, 932, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 5', 1, datetime.datetime(2023, 12, 19, 2, 20, 4, 388320, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 932, True); alias=default
DEBUG 2024-02-27 21:36:17,398 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 14', 0, '2023-12-19T02:05:03.388320+01:00'::timestamptz, 47, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 14', 0, datetime.datetime(2023, 12, 19, 2, 5, 3, 388320, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 47, True); alias=default
DEBUG 2024-02-27 21:36:17,399 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 3', 9, '2023-12-19T02:20:29.388320+01:00'::timestamptz, 497, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 3', 9, datetime.datetime(2023, 12, 19, 2, 20, 29, 388320, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 497, True); alias=default
DEBUG 2024-02-27 21:36:17,399 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1680, 1681, 1682, '2023-12-19T02:20:29.388320+01:00'::timestamptz, 973, '["Player 8", "Player 3", "Player 5", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1680, 1681, 1682, datetime.datetime(2023, 12, 19, 2, 20, 29, 388320, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 973, <psycopg2._json.Json object at 0x7ff714da10a0>, '0x0'); alias=default
DEBUG 2024-02-27 21:36:17,400 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:36:17,401 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
