DEBUG 2024-02-27 22:34:30,775 utils (0.004) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:34:30,777 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,779 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:34:30,779 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,796 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:34:30,797 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:34:30,798 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,799 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:34:30,800 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 22:34:30,803 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 22:34:30,804 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:34:30,805 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,807 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,808 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,809 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,844 utils (0.009) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 4, 'Player 7', 11, '2023-11-28T21:22:17.807351+01:00'::timestamptz, 563, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 4, 'Player 7', 11, datetime.datetime(2023, 11, 28, 21, 22, 17, 807351, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 563, True); alias=default
DEBUG 2024-02-27 22:34:30,845 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 1, 'Player 15', 11, '2023-11-28T21:28:01.807351+01:00'::timestamptz, 664, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 1, 'Player 15', 11, datetime.datetime(2023, 11, 28, 21, 28, 1, 807351, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 664, True); alias=default
DEBUG 2024-02-27 22:34:30,847 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 4, 'Player 15', 11, '2023-11-28T21:29:19.807351+01:00'::timestamptz, 462, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 4, 'Player 15', 11, datetime.datetime(2023, 11, 28, 21, 29, 19, 807351, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 462, True); alias=default
DEBUG 2024-02-27 22:34:30,847 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2265, 2266, 2267, '2023-11-28T21:29:19.807351+01:00'::timestamptz, 985, '["Player 15", "Player 7", "Player 0", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2265, 2266, 2267, datetime.datetime(2023, 11, 28, 21, 29, 19, 807351, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 985, <psycopg2._json.Json object at 0x7f14af0b2960>, '0x0'); alias=default
DEBUG 2024-02-27 22:34:30,849 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 9, 'Player 11', 11, '2024-02-22T09:27:06.807351+01:00'::timestamptz, 289, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 9, 'Player 11', 11, datetime.datetime(2024, 2, 22, 9, 27, 6, 807351, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 289, True); alias=default
DEBUG 2024-02-27 22:34:30,850 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 8', 6, '2024-02-22T09:25:59.807351+01:00'::timestamptz, 381, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 8', 6, datetime.datetime(2024, 2, 22, 9, 25, 59, 807351, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 381, True); alias=default
DEBUG 2024-02-27 22:34:30,852 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 9', 5, '2024-02-22T09:28:46.807351+01:00'::timestamptz, 419, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 9', 5, datetime.datetime(2024, 2, 22, 9, 28, 46, 807351, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 419, True); alias=default
DEBUG 2024-02-27 22:34:30,853 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2268, 2269, 2270, '2024-02-22T09:28:46.807351+01:00'::timestamptz, 548, '["Player 11", "Player 9", "Player 7", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2268, 2269, 2270, datetime.datetime(2024, 2, 22, 9, 28, 46, 807351, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 548, <psycopg2._json.Json object at 0x7f14af0b2ba0>, '0x0'); alias=default
DEBUG 2024-02-27 22:34:30,854 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,855 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,856 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:34:30,857 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 22:34:30,858 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 22:34:30,860 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 22:34:30,862 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 22:34:30,863 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:34:30,864 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,864 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,865 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,866 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,867 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 15', 6, '2023-11-06T15:31:20.864930+01:00'::timestamptz, 947, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 15', 6, datetime.datetime(2023, 11, 6, 15, 31, 20, 864930, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 947, True); alias=default
DEBUG 2024-02-27 22:34:30,869 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 0', 2, '2023-11-06T15:30:37.864930+01:00'::timestamptz, 813, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 0', 2, datetime.datetime(2023, 11, 6, 15, 30, 37, 864930, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 813, True); alias=default
DEBUG 2024-02-27 22:34:30,870 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 6, 'Player 8', 11, '2023-11-06T15:31:40.864930+01:00'::timestamptz, 19, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 6, 'Player 8', 11, datetime.datetime(2023, 11, 6, 15, 31, 40, 864930, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 19, True); alias=default
DEBUG 2024-02-27 22:34:30,871 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2271, 2272, 2273, '2023-11-06T15:31:40.864930+01:00'::timestamptz, 967, '["Player 8", "Player 3", "Player 15", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2271, 2272, 2273, datetime.datetime(2023, 11, 6, 15, 31, 40, 864930, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 967, <psycopg2._json.Json object at 0x7f14af0b39b0>, '0x0'); alias=default
DEBUG 2024-02-27 22:34:30,873 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 5, 'Player 4', 11, '2024-01-26T10:46:03.864930+01:00'::timestamptz, 968, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 5, 'Player 4', 11, datetime.datetime(2024, 1, 26, 10, 46, 3, 864930, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 968, True); alias=default
DEBUG 2024-02-27 22:34:30,874 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 12', 2, '2024-01-26T10:44:34.864930+01:00'::timestamptz, 508, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 12', 2, datetime.datetime(2024, 1, 26, 10, 44, 34, 864930, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 508, True); alias=default
DEBUG 2024-02-27 22:34:30,876 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 13', 5, '2024-01-26T10:46:27.864930+01:00'::timestamptz, 629, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 13', 5, datetime.datetime(2024, 1, 26, 10, 46, 27, 864930, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 629, True); alias=default
DEBUG 2024-02-27 22:34:30,877 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2274, 2275, 2276, '2024-01-26T10:46:27.864930+01:00'::timestamptz, 992, '["Player 4", "Player 13", "Player 14", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2274, 2275, 2276, datetime.datetime(2024, 1, 26, 10, 46, 27, 864930, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 992, <psycopg2._json.Json object at 0x7f14aeed80b0>, '0x0'); alias=default
DEBUG 2024-02-27 22:34:30,878 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,879 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,880 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:34:30,881 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 22:34:30,882 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 22:34:30,883 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:34:30,884 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,885 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,886 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,887 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,888 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 0', 3, '2024-02-04T10:21:13.885496+01:00'::timestamptz, 345, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 0', 3, datetime.datetime(2024, 2, 4, 10, 21, 13, 885496, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 345, True); alias=default
DEBUG 2024-02-27 22:34:30,890 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 1, 'Player 11', 11, '2024-02-04T10:21:10.885496+01:00'::timestamptz, 991, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 1, 'Player 11', 11, datetime.datetime(2024, 2, 4, 10, 21, 10, 885496, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 991, True); alias=default
DEBUG 2024-02-27 22:34:30,891 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 7, 'Player 11', 11, '2024-02-04T10:21:19.885496+01:00'::timestamptz, 551, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 7, 'Player 11', 11, datetime.datetime(2024, 2, 4, 10, 21, 19, 885496, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 551, True); alias=default
DEBUG 2024-02-27 22:34:30,893 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2277, 2278, 2279, '2024-02-04T10:21:19.885496+01:00'::timestamptz, 1000, '["Player 11", "Player 10", "Player 0", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2277, 2278, 2279, datetime.datetime(2024, 2, 4, 10, 21, 19, 885496, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 1000, <psycopg2._json.Json object at 0x7f14af0b37d0>, '0x0'); alias=default
DEBUG 2024-02-27 22:34:30,894 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 6, 'Player 4', 11, '2023-12-15T07:32:41.885496+01:00'::timestamptz, 965, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 6, 'Player 4', 11, datetime.datetime(2023, 12, 15, 7, 32, 41, 885496, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 965, True); alias=default
DEBUG 2024-02-27 22:34:30,895 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 2', 4, '2023-12-15T07:29:11.885496+01:00'::timestamptz, 489, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 2', 4, datetime.datetime(2023, 12, 15, 7, 29, 11, 885496, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 489, True); alias=default
DEBUG 2024-02-27 22:34:30,897 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 0', 10, '2023-12-15T07:32:58.885496+01:00'::timestamptz, 538, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 0', 10, datetime.datetime(2023, 12, 15, 7, 32, 58, 885496, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 538, True); alias=default
DEBUG 2024-02-27 22:34:30,897 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2280, 2281, 2282, '2023-12-15T07:32:58.885496+01:00'::timestamptz, 982, '["Player 4", "Player 0", "Player 11", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2280, 2281, 2282, datetime.datetime(2023, 12, 15, 7, 32, 58, 885496, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 982, <psycopg2._json.Json object at 0x7f14aeed9700>, '0x0'); alias=default
DEBUG 2024-02-27 22:34:30,898 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,899 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,900 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:34:30,901 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 22:34:30,903 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 22:34:30,904 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:34:30,905 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,906 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,908 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,909 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,911 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 12', 7, '2024-01-08T22:02:32.906636+01:00'::timestamptz, 180, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 12', 7, datetime.datetime(2024, 1, 8, 22, 2, 32, 906636, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 180, True); alias=default
DEBUG 2024-02-27 22:34:30,912 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 8, 'Player 9', 11, '2024-01-08T22:11:23.906636+01:00'::timestamptz, 361, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 8, 'Player 9', 11, datetime.datetime(2024, 1, 8, 22, 11, 23, 906636, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 361, True); alias=default
DEBUG 2024-02-27 22:34:30,913 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 9', 2, '2024-01-08T22:14:53.906636+01:00'::timestamptz, 401, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 9', 2, datetime.datetime(2024, 1, 8, 22, 14, 53, 906636, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 401, True); alias=default
DEBUG 2024-02-27 22:34:30,914 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2283, 2284, 2285, '2024-01-08T22:14:53.906636+01:00'::timestamptz, 921, '["Player 7", "Player 9", "Player 12", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2283, 2284, 2285, datetime.datetime(2024, 1, 8, 22, 14, 53, 906636, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 921, <psycopg2._json.Json object at 0x7f14af0b34a0>, '0x0'); alias=default
DEBUG 2024-02-27 22:34:30,915 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 5', 7, '2023-11-24T15:46:32.906636+01:00'::timestamptz, 475, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 5', 7, datetime.datetime(2023, 11, 24, 15, 46, 32, 906636, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 475, True); alias=default
DEBUG 2024-02-27 22:34:30,916 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 10, 'Player 15', 11, '2023-11-24T15:42:18.906636+01:00'::timestamptz, 157, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 10, 'Player 15', 11, datetime.datetime(2023, 11, 24, 15, 42, 18, 906636, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 157, True); alias=default
DEBUG 2024-02-27 22:34:30,917 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 10, 'Player 15', 11, '2023-11-24T15:51:46.906636+01:00'::timestamptz, 69, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 10, 'Player 15', 11, datetime.datetime(2023, 11, 24, 15, 51, 46, 906636, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 69, True); alias=default
DEBUG 2024-02-27 22:34:30,918 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2286, 2287, 2288, '2023-11-24T15:51:46.906636+01:00'::timestamptz, 789, '["Player 15", "Player 6", "Player 5", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2286, 2287, 2288, datetime.datetime(2023, 11, 24, 15, 51, 46, 906636, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 789, <psycopg2._json.Json object at 0x7f14aeedaa80>, '0x0'); alias=default
DEBUG 2024-02-27 22:34:30,919 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,920 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,921 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:34:30,922 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 22:34:30,924 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 22:34:30,926 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 22:34:30,927 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:34:30,928 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,929 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,930 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,930 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,932 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 7', 9, '2023-11-23T14:25:37.929330+01:00'::timestamptz, 461, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 7', 9, datetime.datetime(2023, 11, 23, 14, 25, 37, 929330, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 461, True); alias=default
DEBUG 2024-02-27 22:34:30,933 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 4', 8, '2023-11-23T14:25:52.929330+01:00'::timestamptz, 682, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 4', 8, datetime.datetime(2023, 11, 23, 14, 25, 52, 929330, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 682, True); alias=default
DEBUG 2024-02-27 22:34:30,934 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 6', 0, '2023-11-23T14:29:11.929330+01:00'::timestamptz, 369, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 6', 0, datetime.datetime(2023, 11, 23, 14, 29, 11, 929330, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 369, True); alias=default
DEBUG 2024-02-27 22:34:30,935 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2289, 2290, 2291, '2023-11-23T14:29:11.929330+01:00'::timestamptz, 881, '["Player 3", "Player 6", "Player 7", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2289, 2290, 2291, datetime.datetime(2023, 11, 23, 14, 29, 11, 929330, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 881, <psycopg2._json.Json object at 0x7f14aeed8b30>, '0x0'); alias=default
DEBUG 2024-02-27 22:34:30,936 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 10, 'Player 14', 11, '2024-01-07T11:54:54.929330+01:00'::timestamptz, 390, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 10, 'Player 14', 11, datetime.datetime(2024, 1, 7, 11, 54, 54, 929330, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 390, True); alias=default
DEBUG 2024-02-27 22:34:30,937 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 6', 1, '2024-01-07T11:56:58.929330+01:00'::timestamptz, 579, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 6', 1, datetime.datetime(2024, 1, 7, 11, 56, 58, 929330, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 579, True); alias=default
DEBUG 2024-02-27 22:34:30,938 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 3', 2, '2024-01-07T12:00:18.929330+01:00'::timestamptz, 666, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 3', 2, datetime.datetime(2024, 1, 7, 12, 0, 18, 929330, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 666, True); alias=default
DEBUG 2024-02-27 22:34:30,939 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2292, 2293, 2294, '2024-01-07T12:00:18.929330+01:00'::timestamptz, 779, '["Player 14", "Player 3", "Player 4", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2292, 2293, 2294, datetime.datetime(2024, 1, 7, 12, 0, 18, 929330, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 779, <psycopg2._json.Json object at 0x7f14aeed9460>, '0x0'); alias=default
DEBUG 2024-02-27 22:34:30,941 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:34:30,942 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
