DEBUG 2024-03-03 13:57:14,575 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,576 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,577 utils (0.000) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,577 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,577 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 13:57:14,587 utils (0.009) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:57:14,588 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,588 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,589 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 13:57:14,590 utils (0.002) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:57:14,592 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 13:57:14,593 utils (0.001) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 13:57:14,595 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,598 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T13:57:14.596259+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 13, 57, 14, 596259, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:57:14,599 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,599 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,600 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 13:57:14,602 utils (0.002) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:57:14,604 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 13:57:14,607 utils (0.003) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 13:57:14,608 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 13:57:14,609 utils (0.001) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:57:14,615 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 13:57:14,618 utils (0.002) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:57:14,618 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 13:57:14,620 utils (0.001) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:57:14,620 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 13:57:14,622 utils (0.001) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:57:14,622 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 13:57:14,623 utils (0.001) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 13:57:14,623 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 13:57:14,624 utils (0.001) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 13:57:14,624 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 13:57:14,625 utils (0.001) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 13:57:14,625 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 13:57:14,627 utils (0.002) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 13:57:14,627 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 13:57:14,629 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 13:57:14,629 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 13:57:14,631 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 13:57:14,631 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 13:57:14,632 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 13:57:14,633 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 13:57:14,634 utils (0.001) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 13:57:14,634 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 13:57:14,635 utils (0.001) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 13:57:14,635 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 13:57:14,636 utils (0.001) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 13:57:14,636 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 13:57:14,637 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 13:57:14,637 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 13:57:14,638 utils (0.000) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 13:57:14,638 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 13:57:14,639 utils (0.000) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 13:57:14,639 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 13:57:14,639 utils (0.001) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 13:57:14,640 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 13:57:14,640 utils (0.001) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 13:57:14,641 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 13:57:14,641 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 13:57:14,641 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 13:57:14,642 utils (0.000) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 13:57:14,642 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 13:57:14,643 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 13:57:14,643 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 13:57:14,644 utils (0.001) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 13:57:14,644 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 13:57:14,646 utils (0.002) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 13:57:14,648 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,650 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,651 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T13:57:14.650755+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 13, 57, 14, 650755, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:57:14,651 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,657 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 13:57:14,659 utils (0.002) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:57:14,660 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 13:57:14,661 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 13:57:14,661 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 13:57:14,662 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 13:57:14,662 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 13:57:14,664 utils (0.001) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 13:57:14,664 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 13:57:14,665 utils (0.001) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 13:57:14,666 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,667 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,667 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T13:57:14.667338+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 13, 57, 14, 667338, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:57:14,668 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,673 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,673 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T13:57:14.673627+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 13, 57, 14, 673627, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:57:14,674 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,674 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,682 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,683 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T13:57:14.682659+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 13, 57, 14, 682659, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:57:14,683 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,683 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,687 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 13:57:14,687 utils (0.000) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 13:57:14,693 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 13:57:14,695 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 13:57:14,697 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,698 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T13:57:14.697939+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 13, 57, 14, 697939, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:57:14,699 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,699 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,704 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 13:57:14,704 utils (0.000) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 13:57:14,705 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,706 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T13:57:14.706057+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 13, 57, 14, 706057, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:57:14,707 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,707 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,716 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 13:57:14,717 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 13:57:14,717 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,718 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T13:57:14.718012+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 13, 57, 14, 718012, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:57:14,718 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,718 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,724 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,724 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T13:57:14.724347+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 13, 57, 14, 724347, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:57:14,725 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,725 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,731 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 13:57:14,732 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 13:57:14,733 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,734 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T13:57:14.733816+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 13, 57, 14, 733816, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:57:14,734 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,734 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,735 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,735 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T13:57:14.735415+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 13, 57, 14, 735415, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:57:14,736 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,736 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,741 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,741 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T13:57:14.741561+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 13, 57, 14, 741561, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:57:14,742 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,742 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,749 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 13:57:14,751 utils (0.002) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 13:57:14,752 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,752 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T13:57:14.752405+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 13, 57, 14, 752405, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:57:14,753 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,753 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,757 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 13:57:14,758 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 13:57:14,758 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,760 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T13:57:14.759313+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 13, 57, 14, 759313, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:57:14,760 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,761 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,767 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 13:57:14,768 utils (0.001) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 13:57:14,769 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,769 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T13:57:14.769431+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 13, 57, 14, 769431, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:57:14,770 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,770 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,775 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,775 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T13:57:14.775141+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 13, 57, 14, 775141, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:57:14,776 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,776 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,782 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 13:57:14,783 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 13:57:14,784 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,784 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T13:57:14.784437+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 13, 57, 14, 784437, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:57:14,785 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,785 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,786 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 13:57:14,788 utils (0.002) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:57:14,789 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 13:57:14,792 utils (0.002) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 13:57:14,794 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,796 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T13:57:14.795180+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 13, 57, 14, 795180, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:57:14,797 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,797 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,799 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 13:57:14,801 utils (0.002) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:57:14,801 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 13:57:14,802 utils (0.001) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 13:57:14,803 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 13:57:14,803 utils (0.001) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 13:57:14,804 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,805 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,806 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T13:57:14.805433+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 13, 57, 14, 805433, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:57:14,806 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:57:14,807 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 13:57:14,819 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 13:57:14,819 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,820 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 13:57:14,820 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,821 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 13:57:14,823 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 13:57:14,823 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:14,824 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 13:57:14,824 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:14,825 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 13:57:14,826 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:57:14,827 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:57:14,828 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:57:14,845 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 10', 4, '2024-02-27T04:24:47.827623+01:00'::timestamptz, 185, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 10', 4, datetime.datetime(2024, 2, 27, 4, 24, 47, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 185, False); alias=default
DEBUG 2024-03-03 13:57:14,848 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 3, 'Player 9', 11, '2024-01-17T01:46:19.827623+01:00'::timestamptz, 511, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 3, 'Player 9', 11, datetime.datetime(2024, 1, 17, 1, 46, 19, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 511, False); alias=default
DEBUG 2024-03-03 13:57:14,849 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 15', 8, '2024-01-31T22:22:08.827623+01:00'::timestamptz, 300, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 15', 8, datetime.datetime(2024, 1, 31, 22, 22, 8, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 300, False); alias=default
DEBUG 2024-03-03 13:57:14,850 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 12', 5, '2023-11-19T22:00:45.827623+01:00'::timestamptz, 109, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 12', 5, datetime.datetime(2023, 11, 19, 22, 0, 45, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 109, False); alias=default
DEBUG 2024-03-03 13:57:14,851 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 3, 'Player 14', 11, '2023-11-08T13:04:21.827623+01:00'::timestamptz, 770, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 3, 'Player 14', 11, datetime.datetime(2023, 11, 8, 13, 4, 21, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 770, False); alias=default
DEBUG 2024-03-03 13:57:14,851 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 10, 'Player 0', 11, '2024-02-26T21:34:00.827623+01:00'::timestamptz, 789, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 10, 'Player 0', 11, datetime.datetime(2024, 2, 26, 21, 34, 0, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 789, False); alias=default
DEBUG 2024-03-03 13:57:14,852 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 10, 'Player 1', 11, '2024-02-05T03:20:36.827623+01:00'::timestamptz, 557, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 10, 'Player 1', 11, datetime.datetime(2024, 2, 5, 3, 20, 36, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 557, False); alias=default
DEBUG 2024-03-03 13:57:14,853 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 13', 6, '2024-02-25T23:05:38.827623+01:00'::timestamptz, 919, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 13', 6, datetime.datetime(2024, 2, 25, 23, 5, 38, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 919, False); alias=default
DEBUG 2024-03-03 13:57:14,853 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 0, 'Player 13', 11, '2023-12-13T05:16:36.827623+01:00'::timestamptz, 610, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 0, 'Player 13', 11, datetime.datetime(2023, 12, 13, 5, 16, 36, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 610, False); alias=default
DEBUG 2024-03-03 13:57:14,854 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 8, 'Player 16', 11, '2024-02-16T14:38:38.827623+01:00'::timestamptz, 598, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 8, 'Player 16', 11, datetime.datetime(2024, 2, 16, 14, 38, 38, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 598, False); alias=default
DEBUG 2024-03-03 13:57:14,855 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 2, 'Player 19', 11, '2024-01-27T12:29:16.827623+01:00'::timestamptz, 769, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 2, 'Player 19', 11, datetime.datetime(2024, 1, 27, 12, 29, 16, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 769, False); alias=default
DEBUG 2024-03-03 13:57:14,855 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 10, 'Player 19', 11, '2023-12-20T00:41:03.827623+01:00'::timestamptz, 706, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 10, 'Player 19', 11, datetime.datetime(2023, 12, 20, 0, 41, 3, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 706, False); alias=default
DEBUG 2024-03-03 13:57:14,856 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 15', 8, '2023-11-22T14:41:27.827623+01:00'::timestamptz, 561, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 15', 8, datetime.datetime(2023, 11, 22, 14, 41, 27, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 561, False); alias=default
DEBUG 2024-03-03 13:57:14,857 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 6, 'Player 20', 11, '2023-11-30T23:10:43.827623+01:00'::timestamptz, 36, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 6, 'Player 20', 11, datetime.datetime(2023, 11, 30, 23, 10, 43, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 36, False); alias=default
DEBUG 2024-03-03 13:57:14,857 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 3', 3, '2024-01-11T13:20:36.827623+01:00'::timestamptz, 635, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 3', 3, datetime.datetime(2024, 1, 11, 13, 20, 36, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 635, False); alias=default
DEBUG 2024-03-03 13:57:14,858 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 0, 'Player 8', 11, '2023-11-19T17:22:58.827623+01:00'::timestamptz, 232, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 0, 'Player 8', 11, datetime.datetime(2023, 11, 19, 17, 22, 58, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 232, False); alias=default
DEBUG 2024-03-03 13:57:14,859 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 5', 4, '2024-01-06T09:27:34.827623+01:00'::timestamptz, 664, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 5', 4, datetime.datetime(2024, 1, 6, 9, 27, 34, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 664, False); alias=default
DEBUG 2024-03-03 13:57:14,859 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 10, 'Player 9', 11, '2024-01-28T04:00:58.827623+01:00'::timestamptz, 653, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 10, 'Player 9', 11, datetime.datetime(2024, 1, 28, 4, 0, 58, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 653, False); alias=default
DEBUG 2024-03-03 13:57:14,860 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 12', 7, '2024-02-11T03:26:50.827623+01:00'::timestamptz, 21, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 12', 7, datetime.datetime(2024, 2, 11, 3, 26, 50, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 21, False); alias=default
DEBUG 2024-03-03 13:57:14,861 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 3, 'Player 9', 11, '2024-01-04T09:38:36.827623+01:00'::timestamptz, 325, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 3, 'Player 9', 11, datetime.datetime(2024, 1, 4, 9, 38, 36, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 325, False); alias=default
DEBUG 2024-03-03 13:57:14,861 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 25', 8, '2023-12-01T19:57:31.827623+01:00'::timestamptz, 626, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 25', 8, datetime.datetime(2023, 12, 1, 19, 57, 31, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 626, False); alias=default
DEBUG 2024-03-03 13:57:14,862 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 9', 9, '2024-01-22T18:36:09.827623+01:00'::timestamptz, 793, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 9', 9, datetime.datetime(2024, 1, 22, 18, 36, 9, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 793, False); alias=default
DEBUG 2024-03-03 13:57:14,863 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 22', 5, '2023-12-30T03:22:13.827623+01:00'::timestamptz, 781, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 22', 5, datetime.datetime(2023, 12, 30, 3, 22, 13, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 781, False); alias=default
DEBUG 2024-03-03 13:57:14,863 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 4, 'Player 4', 11, '2023-11-03T18:00:24.827623+01:00'::timestamptz, 284, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 4, 'Player 4', 11, datetime.datetime(2023, 11, 3, 18, 0, 24, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 284, False); alias=default
DEBUG 2024-03-03 13:57:14,864 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 2, 'Player 13', 11, '2024-01-30T16:33:15.827623+01:00'::timestamptz, 194, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 2, 'Player 13', 11, datetime.datetime(2024, 1, 30, 16, 33, 15, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 194, False); alias=default
DEBUG 2024-03-03 13:57:14,865 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 10', 4, '2024-01-10T00:34:20.827623+01:00'::timestamptz, 639, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 10', 4, datetime.datetime(2024, 1, 10, 0, 34, 20, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 639, False); alias=default
DEBUG 2024-03-03 13:57:14,865 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 14', 7, '2023-12-11T07:23:08.827623+01:00'::timestamptz, 649, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 14', 7, datetime.datetime(2023, 12, 11, 7, 23, 8, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 649, False); alias=default
DEBUG 2024-03-03 13:57:14,866 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 10, 'Player 2', 11, '2023-11-25T10:27:05.827623+01:00'::timestamptz, 316, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 10, 'Player 2', 11, datetime.datetime(2023, 11, 25, 10, 27, 5, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 316, False); alias=default
DEBUG 2024-03-03 13:57:14,867 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 20', 4, '2024-02-14T19:32:54.827623+01:00'::timestamptz, 526, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 20', 4, datetime.datetime(2024, 2, 14, 19, 32, 54, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 526, False); alias=default
DEBUG 2024-03-03 13:57:14,867 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 8, 'Player 23', 11, '2023-12-28T14:42:27.827623+01:00'::timestamptz, 949, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 8, 'Player 23', 11, datetime.datetime(2023, 12, 28, 14, 42, 27, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 949, False); alias=default
DEBUG 2024-03-03 13:57:14,868 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 6, 'Player 24', 11, '2023-12-21T15:50:10.827623+01:00'::timestamptz, 944, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 6, 'Player 24', 11, datetime.datetime(2023, 12, 21, 15, 50, 10, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 944, False); alias=default
DEBUG 2024-03-03 13:57:14,868 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 10', 2, '2024-02-01T00:08:03.827623+01:00'::timestamptz, 903, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 10', 2, datetime.datetime(2024, 2, 1, 0, 8, 3, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 903, False); alias=default
DEBUG 2024-03-03 13:57:14,869 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 5, 'Player 14', 11, '2024-03-01T01:03:25.827623+01:00'::timestamptz, 100, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 5, 'Player 14', 11, datetime.datetime(2024, 3, 1, 1, 3, 25, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 100, False); alias=default
DEBUG 2024-03-03 13:57:14,870 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 2, 'Player 4', 11, '2024-01-30T08:32:03.827623+01:00'::timestamptz, 170, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 2, 'Player 4', 11, datetime.datetime(2024, 1, 30, 8, 32, 3, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 170, False); alias=default
DEBUG 2024-03-03 13:57:14,870 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 11, 'Player 13', 8, '2023-12-06T07:09:53.827623+01:00'::timestamptz, 32, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 11, 'Player 13', 8, datetime.datetime(2023, 12, 6, 7, 9, 53, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 32, False); alias=default
DEBUG 2024-03-03 13:57:14,871 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 9, 'Player 25', 11, '2024-02-19T14:25:33.827623+01:00'::timestamptz, 519, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 9, 'Player 25', 11, datetime.datetime(2024, 2, 19, 14, 25, 33, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 519, False); alias=default
DEBUG 2024-03-03 13:57:14,871 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 0, 'Player 4', 11, '2023-11-24T19:12:29.827623+01:00'::timestamptz, 312, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 0, 'Player 4', 11, datetime.datetime(2023, 11, 24, 19, 12, 29, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 312, False); alias=default
DEBUG 2024-03-03 13:57:14,872 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 4, 'Player 12', 11, '2024-02-19T01:37:48.827623+01:00'::timestamptz, 802, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 4, 'Player 12', 11, datetime.datetime(2024, 2, 19, 1, 37, 48, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 802, False); alias=default
DEBUG 2024-03-03 13:57:14,873 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 9, 'Player 27', 11, '2023-11-23T03:38:15.827623+01:00'::timestamptz, 39, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 9, 'Player 27', 11, datetime.datetime(2023, 11, 23, 3, 38, 15, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 39, False); alias=default
DEBUG 2024-03-03 13:57:14,873 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 7', 8, '2024-02-04T13:37:33.827623+01:00'::timestamptz, 608, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 7', 8, datetime.datetime(2024, 2, 4, 13, 37, 33, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 608, False); alias=default
DEBUG 2024-03-03 13:57:14,874 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 19', 5, '2023-12-02T02:53:02.827623+01:00'::timestamptz, 196, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 19', 5, datetime.datetime(2023, 12, 2, 2, 53, 2, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 196, False); alias=default
DEBUG 2024-03-03 13:57:14,874 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 16', 1, '2023-11-06T23:53:18.827623+01:00'::timestamptz, 739, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 16', 1, datetime.datetime(2023, 11, 6, 23, 53, 18, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 739, False); alias=default
DEBUG 2024-03-03 13:57:14,875 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 22', 9, '2023-11-10T08:40:05.827623+01:00'::timestamptz, 733, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 22', 9, datetime.datetime(2023, 11, 10, 8, 40, 5, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 733, False); alias=default
DEBUG 2024-03-03 13:57:14,876 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 24', 1, '2024-03-01T09:00:13.827623+01:00'::timestamptz, 745, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 24', 1, datetime.datetime(2024, 3, 1, 9, 0, 13, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 745, False); alias=default
DEBUG 2024-03-03 13:57:14,876 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 8, 'Player 22', 11, '2023-12-13T13:27:39.827623+01:00'::timestamptz, 809, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 8, 'Player 22', 11, datetime.datetime(2023, 12, 13, 13, 27, 39, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 809, False); alias=default
DEBUG 2024-03-03 13:57:14,877 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 34', 0, '2023-11-18T10:26:10.827623+01:00'::timestamptz, 33, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 34', 0, datetime.datetime(2023, 11, 18, 10, 26, 10, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 33, False); alias=default
DEBUG 2024-03-03 13:57:14,878 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 9, 'Player 12', 11, '2023-12-05T08:15:35.827623+01:00'::timestamptz, 841, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 9, 'Player 12', 11, datetime.datetime(2023, 12, 5, 8, 15, 35, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 841, False); alias=default
DEBUG 2024-03-03 13:57:14,878 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 9', 0, '2023-12-28T21:20:38.827623+01:00'::timestamptz, 52, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 9', 0, datetime.datetime(2023, 12, 28, 21, 20, 38, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 52, False); alias=default
DEBUG 2024-03-03 13:57:14,879 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 8, 'Player 14', 11, '2023-11-15T13:31:28.827623+01:00'::timestamptz, 61, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 8, 'Player 14', 11, datetime.datetime(2023, 11, 15, 13, 31, 28, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 61, False); alias=default
DEBUG 2024-03-03 13:57:14,879 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 11, 'Player 16', 5, '2023-12-20T16:00:39.827623+01:00'::timestamptz, 582, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 11, 'Player 16', 5, datetime.datetime(2023, 12, 20, 16, 0, 39, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 582, False); alias=default
DEBUG 2024-03-03 13:57:14,880 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 0, 'Player 13', 11, '2024-02-05T05:00:41.827623+01:00'::timestamptz, 574, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 0, 'Player 13', 11, datetime.datetime(2024, 2, 5, 5, 0, 41, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 574, False); alias=default
DEBUG 2024-03-03 13:57:14,881 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 9, 'Player 24', 11, '2023-11-15T21:01:09.827623+01:00'::timestamptz, 298, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 9, 'Player 24', 11, datetime.datetime(2023, 11, 15, 21, 1, 9, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 298, False); alias=default
DEBUG 2024-03-03 13:57:14,881 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 11, 'Player 29', 1, '2023-11-06T12:43:21.827623+01:00'::timestamptz, 834, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 11, 'Player 29', 1, datetime.datetime(2023, 11, 6, 12, 43, 21, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 834, False); alias=default
DEBUG 2024-03-03 13:57:14,882 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 7, 'Player 39', 11, '2024-01-05T05:33:58.827623+01:00'::timestamptz, 780, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 7, 'Player 39', 11, datetime.datetime(2024, 1, 5, 5, 33, 58, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 780, False); alias=default
DEBUG 2024-03-03 13:57:14,882 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 1, 'Player 11', 11, '2023-12-14T22:38:46.827623+01:00'::timestamptz, 575, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 1, 'Player 11', 11, datetime.datetime(2023, 12, 14, 22, 38, 46, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 575, False); alias=default
DEBUG 2024-03-03 13:57:14,883 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 23', 2, '2023-11-25T11:53:58.827623+01:00'::timestamptz, 109, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 23', 2, datetime.datetime(2023, 11, 25, 11, 53, 58, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 109, False); alias=default
DEBUG 2024-03-03 13:57:14,884 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 8, 'Player 23', 11, '2024-01-17T03:15:43.827623+01:00'::timestamptz, 888, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 8, 'Player 23', 11, datetime.datetime(2024, 1, 17, 3, 15, 43, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 888, False); alias=default
DEBUG 2024-03-03 13:57:14,884 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 7, 'Player 29', 11, '2024-01-31T18:57:16.827623+01:00'::timestamptz, 665, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 7, 'Player 29', 11, datetime.datetime(2024, 1, 31, 18, 57, 16, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 665, False); alias=default
DEBUG 2024-03-03 13:57:14,885 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 6, 'Player 1', 11, '2024-01-25T10:52:07.827623+01:00'::timestamptz, 87, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 6, 'Player 1', 11, datetime.datetime(2024, 1, 25, 10, 52, 7, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 87, False); alias=default
DEBUG 2024-03-03 13:57:14,886 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 6, 'Player 41', 11, '2023-11-11T18:51:10.827623+01:00'::timestamptz, 93, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 6, 'Player 41', 11, datetime.datetime(2023, 11, 11, 18, 51, 10, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 93, False); alias=default
DEBUG 2024-03-03 13:57:14,886 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 1', 0, '2024-02-07T01:07:26.827623+01:00'::timestamptz, 226, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 1', 0, datetime.datetime(2024, 2, 7, 1, 7, 26, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 226, False); alias=default
DEBUG 2024-03-03 13:57:14,887 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 7, 'Player 28', 11, '2024-01-11T03:48:09.827623+01:00'::timestamptz, 254, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 7, 'Player 28', 11, datetime.datetime(2024, 1, 11, 3, 48, 9, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 254, False); alias=default
DEBUG 2024-03-03 13:57:14,888 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 34', 7, '2024-02-15T23:33:37.827623+01:00'::timestamptz, 13, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 34', 7, datetime.datetime(2024, 2, 15, 23, 33, 37, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 13, False); alias=default
DEBUG 2024-03-03 13:57:14,888 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 4', 4, '2023-12-25T01:18:06.827623+01:00'::timestamptz, 283, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 4', 4, datetime.datetime(2023, 12, 25, 1, 18, 6, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 283, False); alias=default
DEBUG 2024-03-03 13:57:14,889 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 4, 'Player 10', 11, '2024-02-07T22:08:31.827623+01:00'::timestamptz, 862, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 4, 'Player 10', 11, datetime.datetime(2024, 2, 7, 22, 8, 31, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 862, False); alias=default
DEBUG 2024-03-03 13:57:14,889 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 0', 1, '2023-11-22T03:25:47.827623+01:00'::timestamptz, 961, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 0', 1, datetime.datetime(2023, 11, 22, 3, 25, 47, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 961, False); alias=default
DEBUG 2024-03-03 13:57:14,890 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 11, 'Player 1', 10, '2023-11-04T07:02:47.827623+01:00'::timestamptz, 227, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 11, 'Player 1', 10, datetime.datetime(2023, 11, 4, 7, 2, 47, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 227, False); alias=default
DEBUG 2024-03-03 13:57:14,891 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 38', 2, '2023-11-22T14:15:51.827623+01:00'::timestamptz, 853, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 38', 2, datetime.datetime(2023, 11, 22, 14, 15, 51, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 853, False); alias=default
DEBUG 2024-03-03 13:57:14,891 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 14', 5, '2023-11-22T05:00:25.827623+01:00'::timestamptz, 582, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 14', 5, datetime.datetime(2023, 11, 22, 5, 0, 25, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 582, False); alias=default
DEBUG 2024-03-03 13:57:14,892 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 4, 'Player 9', 11, '2024-01-26T12:34:34.827623+01:00'::timestamptz, 550, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 4, 'Player 9', 11, datetime.datetime(2024, 1, 26, 12, 34, 34, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 550, False); alias=default
DEBUG 2024-03-03 13:57:14,893 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 34', 1, '2024-03-01T16:16:15.827623+01:00'::timestamptz, 984, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 34', 1, datetime.datetime(2024, 3, 1, 16, 16, 15, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 984, False); alias=default
DEBUG 2024-03-03 13:57:14,893 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 5, 'Player 23', 11, '2024-03-02T18:03:57.827623+01:00'::timestamptz, 304, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 5, 'Player 23', 11, datetime.datetime(2024, 3, 2, 18, 3, 57, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 304, False); alias=default
DEBUG 2024-03-03 13:57:14,894 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 11, 'Player 40', 9, '2024-02-19T09:19:48.827623+01:00'::timestamptz, 988, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 11, 'Player 40', 9, datetime.datetime(2024, 2, 19, 9, 19, 48, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 988, False); alias=default
DEBUG 2024-03-03 13:57:14,895 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 6, 'Player 9', 11, '2023-12-06T13:26:38.827623+01:00'::timestamptz, 776, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 6, 'Player 9', 11, datetime.datetime(2023, 12, 6, 13, 26, 38, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 776, False); alias=default
DEBUG 2024-03-03 13:57:14,895 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 31', 2, '2024-01-09T22:09:53.827623+01:00'::timestamptz, 459, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 31', 2, datetime.datetime(2024, 1, 9, 22, 9, 53, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 459, False); alias=default
DEBUG 2024-03-03 13:57:14,896 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 11, 'Player 9', 2, '2023-11-15T13:13:34.827623+01:00'::timestamptz, 263, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 11, 'Player 9', 2, datetime.datetime(2023, 11, 15, 13, 13, 34, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 263, False); alias=default
DEBUG 2024-03-03 13:57:14,896 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 46', 0, '2024-02-25T02:16:24.827623+01:00'::timestamptz, 833, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 46', 0, datetime.datetime(2024, 2, 25, 2, 16, 24, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 833, False); alias=default
DEBUG 2024-03-03 13:57:14,897 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 46', 11, 'Player 20', 4, '2023-11-09T03:38:23.827623+01:00'::timestamptz, 680, false) RETURNING "pong_gamedata"."id"; args=('Player 46', 11, 'Player 20', 4, datetime.datetime(2023, 11, 9, 3, 38, 23, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 680, False); alias=default
DEBUG 2024-03-03 13:57:14,898 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 13', 5, '2024-02-19T03:57:31.827623+01:00'::timestamptz, 495, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 13', 5, datetime.datetime(2024, 2, 19, 3, 57, 31, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 495, False); alias=default
DEBUG 2024-03-03 13:57:14,898 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 11, 'Player 36', 0, '2023-11-03T04:20:26.827623+01:00'::timestamptz, 322, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 11, 'Player 36', 0, datetime.datetime(2023, 11, 3, 4, 20, 26, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 322, False); alias=default
DEBUG 2024-03-03 13:57:14,899 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 1, 'Player 50', 11, '2024-02-14T22:38:19.827623+01:00'::timestamptz, 633, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 1, 'Player 50', 11, datetime.datetime(2024, 2, 14, 22, 38, 19, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 633, False); alias=default
DEBUG 2024-03-03 13:57:14,900 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 8, 'Player 16', 11, '2023-12-21T09:05:48.827623+01:00'::timestamptz, 100, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 8, 'Player 16', 11, datetime.datetime(2023, 12, 21, 9, 5, 48, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 100, False); alias=default
DEBUG 2024-03-03 13:57:14,900 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 53', 11, 'Player 38', 5, '2024-02-10T17:32:38.827623+01:00'::timestamptz, 5, false) RETURNING "pong_gamedata"."id"; args=('Player 53', 11, 'Player 38', 5, datetime.datetime(2024, 2, 10, 17, 32, 38, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 5, False); alias=default
DEBUG 2024-03-03 13:57:14,901 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 5', 4, '2024-01-03T04:16:10.827623+01:00'::timestamptz, 122, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 5', 4, datetime.datetime(2024, 1, 3, 4, 16, 10, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 122, False); alias=default
DEBUG 2024-03-03 13:57:14,901 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 11, 'Player 50', 9, '2023-12-04T18:45:59.827623+01:00'::timestamptz, 452, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 11, 'Player 50', 9, datetime.datetime(2023, 12, 4, 18, 45, 59, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 452, False); alias=default
DEBUG 2024-03-03 13:57:14,902 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 6, 'Player 18', 11, '2023-12-12T01:12:55.827623+01:00'::timestamptz, 409, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 6, 'Player 18', 11, datetime.datetime(2023, 12, 12, 1, 12, 55, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 409, False); alias=default
DEBUG 2024-03-03 13:57:14,903 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 3, 'Player 9', 11, '2024-02-24T11:00:54.827623+01:00'::timestamptz, 519, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 3, 'Player 9', 11, datetime.datetime(2024, 2, 24, 11, 0, 54, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 519, False); alias=default
DEBUG 2024-03-03 13:57:14,903 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 10, 'Player 20', 11, '2024-01-24T13:33:04.827623+01:00'::timestamptz, 367, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 10, 'Player 20', 11, datetime.datetime(2024, 1, 24, 13, 33, 4, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 367, False); alias=default
DEBUG 2024-03-03 13:57:14,904 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 46', 1, 'Player 59', 11, '2023-11-12T19:35:02.827623+01:00'::timestamptz, 834, false) RETURNING "pong_gamedata"."id"; args=('Player 46', 1, 'Player 59', 11, datetime.datetime(2023, 11, 12, 19, 35, 2, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 834, False); alias=default
DEBUG 2024-03-03 13:57:14,905 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 51', 4, '2024-01-15T06:10:55.827623+01:00'::timestamptz, 81, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 51', 4, datetime.datetime(2024, 1, 15, 6, 10, 55, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 81, False); alias=default
DEBUG 2024-03-03 13:57:14,905 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 51', 7, 'Player 15', 11, '2023-12-30T08:49:46.827623+01:00'::timestamptz, 392, false) RETURNING "pong_gamedata"."id"; args=('Player 51', 7, 'Player 15', 11, datetime.datetime(2023, 12, 30, 8, 49, 46, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 392, False); alias=default
DEBUG 2024-03-03 13:57:14,906 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 10, 'Player 42', 11, '2023-11-30T14:01:18.827623+01:00'::timestamptz, 718, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 10, 'Player 42', 11, datetime.datetime(2023, 11, 30, 14, 1, 18, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 718, False); alias=default
DEBUG 2024-03-03 13:57:14,906 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 10, 'Player 1', 11, '2023-11-10T09:09:13.827623+01:00'::timestamptz, 987, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 10, 'Player 1', 11, datetime.datetime(2023, 11, 10, 9, 9, 13, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 987, False); alias=default
DEBUG 2024-03-03 13:57:14,907 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 56', 10, 'Player 16', 11, '2023-12-17T16:24:12.827623+01:00'::timestamptz, 838, false) RETURNING "pong_gamedata"."id"; args=('Player 56', 10, 'Player 16', 11, datetime.datetime(2023, 12, 17, 16, 24, 12, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 838, False); alias=default
DEBUG 2024-03-03 13:57:14,908 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 8, 'Player 38', 11, '2024-01-23T05:11:54.827623+01:00'::timestamptz, 866, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 8, 'Player 38', 11, datetime.datetime(2024, 1, 23, 5, 11, 54, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 866, False); alias=default
DEBUG 2024-03-03 13:57:14,908 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 62', 11, 'Player 54', 3, '2023-11-29T06:05:24.827623+01:00'::timestamptz, 103, false) RETURNING "pong_gamedata"."id"; args=('Player 62', 11, 'Player 54', 3, datetime.datetime(2023, 11, 29, 6, 5, 24, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 103, False); alias=default
DEBUG 2024-03-03 13:57:14,909 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 21', 4, '2023-12-14T17:50:11.827623+01:00'::timestamptz, 536, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 21', 4, datetime.datetime(2023, 12, 14, 17, 50, 11, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 536, False); alias=default
DEBUG 2024-03-03 13:57:14,910 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 7, 'Player 3', 11, '2023-12-09T18:01:04.827623+01:00'::timestamptz, 769, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 7, 'Player 3', 11, datetime.datetime(2023, 12, 9, 18, 1, 4, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 769, False); alias=default
DEBUG 2024-03-03 13:57:14,911 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 61', 0, '2024-02-03T22:03:47.827623+01:00'::timestamptz, 947, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 61', 0, datetime.datetime(2024, 2, 3, 22, 3, 47, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 947, False); alias=default
DEBUG 2024-03-03 13:57:14,911 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 8', 6, '2023-11-05T05:04:14.827623+01:00'::timestamptz, 443, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 8', 6, datetime.datetime(2023, 11, 5, 5, 4, 14, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 443, False); alias=default
DEBUG 2024-03-03 13:57:14,912 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:57:14,913 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 8', 10, '2024-01-26T00:24:31.827623+01:00'::timestamptz, 463, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 8', 10, datetime.datetime(2024, 1, 26, 0, 24, 31, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 463, True); alias=default
DEBUG 2024-03-03 13:57:14,913 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 15', 7, '2024-01-26T00:22:23.827623+01:00'::timestamptz, 573, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 15', 7, datetime.datetime(2024, 1, 26, 0, 22, 23, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 573, True); alias=default
DEBUG 2024-03-03 13:57:14,914 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 2, 'Player 2', 11, '2024-01-26T00:29:22.827623+01:00'::timestamptz, 756, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 2, 'Player 2', 11, datetime.datetime(2024, 1, 26, 0, 29, 22, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 756, True); alias=default
DEBUG 2024-03-03 13:57:15,976 utils (0.007) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (9895, 101, 102, 103, '2024-01-26T00:29:22.827623+01:00'::timestamptz, 992, '["Player 2", "Player 7", "Player 8", "Player 15"]', '0x9f44c9682751d39b8b56b4d28d13217ac022d11c399a195e98d2ed72e5ad352e') RETURNING "pong_tournamentdata"."id"; args=(9895, 101, 102, 103, datetime.datetime(2024, 1, 26, 0, 29, 22, 827623, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 992, <psycopg2._json.Json object at 0x7f338735e270>, '0x9f44c9682751d39b8b56b4d28d13217ac022d11c399a195e98d2ed72e5ad352e'); alias=default
DEBUG 2024-03-03 13:57:15,977 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:57:15,978 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:57:15,978 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 13:57:15,979 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:15,979 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 13:57:15,980 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:15,980 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 13:57:15,981 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 13:57:15,981 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 13:57:15,982 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 13:57:15,983 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:15,983 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 13:57:15,987 utils (0.003) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:15,987 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 13:57:15,988 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:57:15,988 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:57:15,989 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:57:15,989 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:57:15,990 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:57:15,990 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:57:15,991 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 13:57:15,991 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:15,991 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 13:57:15,991 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:15,992 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 13:57:15,993 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 13:57:15,993 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:15,994 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 13:57:15,994 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:15,995 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 13:57:15,995 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:57:15,996 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:57:15,996 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:57:15,997 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:57:15,997 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:57:15,998 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:57:15,998 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 13:57:15,998 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:15,998 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 13:57:15,999 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:15,999 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 13:57:16,000 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 13:57:16,000 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:16,001 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 13:57:16,001 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:16,002 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 13:57:16,002 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:57:16,003 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:57:16,003 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:57:16,003 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:57:16,004 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:57:16,004 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:57:16,005 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 13:57:16,005 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:16,005 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 13:57:16,006 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:16,006 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 13:57:16,007 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 13:57:16,007 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 13:57:16,008 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:57:16,008 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 13:57:16,008 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:57:16,009 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 13:57:16,009 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:57:16,010 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:57:16,010 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:57:16,011 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:57:16,011 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:57:16,012 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
