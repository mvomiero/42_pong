DEBUG 2024-03-03 12:32:20,374 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,375 utils (0.000) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,376 utils (0.000) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,376 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,376 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 12:32:20,385 utils (0.009) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:32:20,386 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,386 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,387 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 12:32:20,389 utils (0.001) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:32:20,390 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 12:32:20,392 utils (0.002) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 12:32:20,393 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,395 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T12:32:20.393757+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 12, 32, 20, 393757, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:32:20,395 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,395 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,397 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 12:32:20,399 utils (0.002) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:32:20,401 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 12:32:20,403 utils (0.002) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 12:32:20,404 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 12:32:20,405 utils (0.002) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:32:20,410 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 12:32:20,413 utils (0.003) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:32:20,413 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 12:32:20,414 utils (0.001) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:32:20,415 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 12:32:20,416 utils (0.001) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:32:20,416 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 12:32:20,417 utils (0.001) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 12:32:20,417 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 12:32:20,418 utils (0.001) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 12:32:20,418 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 12:32:20,419 utils (0.001) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 12:32:20,419 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 12:32:20,420 utils (0.001) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 12:32:20,420 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 12:32:20,421 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 12:32:20,421 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 12:32:20,422 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 12:32:20,422 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 12:32:20,423 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 12:32:20,423 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 12:32:20,425 utils (0.001) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 12:32:20,425 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 12:32:20,426 utils (0.001) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 12:32:20,426 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 12:32:20,427 utils (0.001) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 12:32:20,427 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 12:32:20,428 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 12:32:20,428 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 12:32:20,428 utils (0.000) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 12:32:20,429 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 12:32:20,429 utils (0.000) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 12:32:20,429 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 12:32:20,430 utils (0.001) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 12:32:20,430 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 12:32:20,431 utils (0.001) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 12:32:20,431 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 12:32:20,432 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 12:32:20,432 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 12:32:20,432 utils (0.000) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 12:32:20,432 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 12:32:20,433 utils (0.000) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 12:32:20,433 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 12:32:20,433 utils (0.001) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 12:32:20,434 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 12:32:20,434 utils (0.001) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 12:32:20,435 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,436 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,436 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T12:32:20.436220+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 12, 32, 20, 436220, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:32:20,437 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,442 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 12:32:20,444 utils (0.003) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:32:20,445 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 12:32:20,445 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 12:32:20,445 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 12:32:20,446 utils (0.000) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 12:32:20,446 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 12:32:20,447 utils (0.001) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 12:32:20,447 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 12:32:20,448 utils (0.001) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 12:32:20,449 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,449 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,450 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T12:32:20.449934+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 12, 32, 20, 449934, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:32:20,450 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,456 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,458 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T12:32:20.456968+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 12, 32, 20, 456968, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:32:20,458 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,459 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,464 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,464 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T12:32:20.464419+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 12, 32, 20, 464419, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:32:20,465 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,465 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,468 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 12:32:20,468 utils (0.000) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 12:32:20,474 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 12:32:20,475 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 12:32:20,476 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,477 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T12:32:20.477055+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 12, 32, 20, 477055, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:32:20,478 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,478 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,482 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 12:32:20,483 utils (0.000) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 12:32:20,483 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,484 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T12:32:20.483834+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 12, 32, 20, 483834, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:32:20,484 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,484 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,490 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 12:32:20,491 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 12:32:20,492 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,493 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T12:32:20.493102+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 12, 32, 20, 493102, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:32:20,494 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,494 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,499 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,499 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T12:32:20.499138+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 12, 32, 20, 499138, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:32:20,499 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,499 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,503 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 12:32:20,503 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 12:32:20,504 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,505 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T12:32:20.504907+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 12, 32, 20, 504907, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:32:20,505 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,505 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,506 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,507 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T12:32:20.506923+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 12, 32, 20, 506923, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:32:20,508 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,508 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,513 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,514 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T12:32:20.514077+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 12, 32, 20, 514077, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:32:20,515 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,515 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,519 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 12:32:20,520 utils (0.002) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 12:32:20,522 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,522 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T12:32:20.522397+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 12, 32, 20, 522397, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:32:20,523 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,523 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,528 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 12:32:20,528 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 12:32:20,529 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,529 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T12:32:20.529683+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 12, 32, 20, 529683, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:32:20,530 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,530 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,534 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 12:32:20,535 utils (0.001) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 12:32:20,536 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,536 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T12:32:20.536111+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 12, 32, 20, 536111, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:32:20,536 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,536 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,542 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,543 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T12:32:20.542533+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 12, 32, 20, 542533, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:32:20,543 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,544 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,548 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 12:32:20,548 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 12:32:20,549 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,549 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T12:32:20.549472+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 12, 32, 20, 549472, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:32:20,550 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,550 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,551 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 12:32:20,553 utils (0.002) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:32:20,554 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 12:32:20,557 utils (0.003) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 12:32:20,559 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,559 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T12:32:20.559174+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 12, 32, 20, 559174, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:32:20,560 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,560 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,561 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 12:32:20,563 utils (0.002) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:32:20,563 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 12:32:20,564 utils (0.001) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 12:32:20,564 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 12:32:20,565 utils (0.001) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 12:32:20,565 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,566 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,566 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T12:32:20.566411+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 12, 32, 20, 566411, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:32:20,567 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:32:20,567 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,576 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 12:32:20,576 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,577 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 12:32:20,577 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,578 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 12:32:20,579 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 12:32:20,580 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,580 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 12:32:20,581 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,581 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 12:32:20,582 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,583 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,583 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,598 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 4', 8, '2024-01-06T18:36:08.583081+01:00'::timestamptz, 416, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 4', 8, datetime.datetime(2024, 1, 6, 18, 36, 8, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 416, False); alias=default
DEBUG 2024-03-03 12:32:20,599 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 2, 'Player 13', 11, '2023-12-28T00:27:28.583081+01:00'::timestamptz, 244, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 2, 'Player 13', 11, datetime.datetime(2023, 12, 28, 0, 27, 28, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 244, False); alias=default
DEBUG 2024-03-03 12:32:20,599 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 7', 6, '2024-01-18T18:05:35.583081+01:00'::timestamptz, 934, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 7', 6, datetime.datetime(2024, 1, 18, 18, 5, 35, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 934, False); alias=default
DEBUG 2024-03-03 12:32:20,600 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 10, 'Player 5', 11, '2024-02-09T20:12:58.583081+01:00'::timestamptz, 664, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 10, 'Player 5', 11, datetime.datetime(2024, 2, 9, 20, 12, 58, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 664, False); alias=default
DEBUG 2024-03-03 12:32:20,601 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 3, 'Player 12', 11, '2024-02-21T15:33:05.583081+01:00'::timestamptz, 186, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 3, 'Player 12', 11, datetime.datetime(2024, 2, 21, 15, 33, 5, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 186, False); alias=default
DEBUG 2024-03-03 12:32:20,601 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 1', 8, '2023-11-17T06:17:26.583081+01:00'::timestamptz, 126, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 1', 8, datetime.datetime(2023, 11, 17, 6, 17, 26, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 126, False); alias=default
DEBUG 2024-03-03 12:32:20,602 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 6, 'Player 17', 11, '2024-02-18T07:10:36.583081+01:00'::timestamptz, 607, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 6, 'Player 17', 11, datetime.datetime(2024, 2, 18, 7, 10, 36, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 607, False); alias=default
DEBUG 2024-03-03 12:32:20,603 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 0, 'Player 8', 11, '2023-12-30T19:12:16.583081+01:00'::timestamptz, 494, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 0, 'Player 8', 11, datetime.datetime(2023, 12, 30, 19, 12, 16, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 494, False); alias=default
DEBUG 2024-03-03 12:32:20,603 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 11', 3, '2024-02-07T07:04:56.583081+01:00'::timestamptz, 578, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 11', 3, datetime.datetime(2024, 2, 7, 7, 4, 56, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 578, False); alias=default
DEBUG 2024-03-03 12:32:20,604 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 7', 2, '2023-11-05T11:03:04.583081+01:00'::timestamptz, 439, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 7', 2, datetime.datetime(2023, 11, 5, 11, 3, 4, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 439, False); alias=default
DEBUG 2024-03-03 12:32:20,605 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 6, 'Player 8', 11, '2024-02-19T06:27:00.583081+01:00'::timestamptz, 243, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 6, 'Player 8', 11, datetime.datetime(2024, 2, 19, 6, 27, 0, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 243, False); alias=default
DEBUG 2024-03-03 12:32:20,605 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 18', 6, '2023-11-25T05:28:44.583081+01:00'::timestamptz, 828, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 18', 6, datetime.datetime(2023, 11, 25, 5, 28, 44, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 828, False); alias=default
DEBUG 2024-03-03 12:32:20,606 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 1', 0, '2023-12-12T12:48:37.583081+01:00'::timestamptz, 503, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 1', 0, datetime.datetime(2023, 12, 12, 12, 48, 37, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 503, False); alias=default
DEBUG 2024-03-03 12:32:20,607 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 7, 'Player 16', 11, '2024-01-29T19:10:19.583081+01:00'::timestamptz, 808, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 7, 'Player 16', 11, datetime.datetime(2024, 1, 29, 19, 10, 19, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 808, False); alias=default
DEBUG 2024-03-03 12:32:20,607 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 6', 7, '2024-01-18T19:40:38.583081+01:00'::timestamptz, 618, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 6', 7, datetime.datetime(2024, 1, 18, 19, 40, 38, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 618, False); alias=default
DEBUG 2024-03-03 12:32:20,608 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 4', 1, '2023-12-07T21:19:25.583081+01:00'::timestamptz, 463, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 4', 1, datetime.datetime(2023, 12, 7, 21, 19, 25, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 463, False); alias=default
DEBUG 2024-03-03 12:32:20,609 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 22', 3, '2024-01-07T02:05:08.583081+01:00'::timestamptz, 207, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 22', 3, datetime.datetime(2024, 1, 7, 2, 5, 8, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 207, False); alias=default
DEBUG 2024-03-03 12:32:20,609 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 10, 'Player 12', 11, '2024-01-02T20:56:51.583081+01:00'::timestamptz, 630, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 10, 'Player 12', 11, datetime.datetime(2024, 1, 2, 20, 56, 51, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 630, False); alias=default
DEBUG 2024-03-03 12:32:20,610 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 3, 'Player 12', 11, '2024-01-04T06:01:12.583081+01:00'::timestamptz, 531, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 3, 'Player 12', 11, datetime.datetime(2024, 1, 4, 6, 1, 12, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 531, False); alias=default
DEBUG 2024-03-03 12:32:20,610 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 9, 'Player 5', 11, '2023-11-05T22:57:55.583081+01:00'::timestamptz, 404, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 9, 'Player 5', 11, datetime.datetime(2023, 11, 5, 22, 57, 55, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 404, False); alias=default
DEBUG 2024-03-03 12:32:20,611 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 24', 5, '2023-11-03T01:27:20.583081+01:00'::timestamptz, 437, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 24', 5, datetime.datetime(2023, 11, 3, 1, 27, 20, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 437, False); alias=default
DEBUG 2024-03-03 12:32:20,612 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 9, 'Player 1', 11, '2023-12-11T02:13:01.583081+01:00'::timestamptz, 273, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 9, 'Player 1', 11, datetime.datetime(2023, 12, 11, 2, 13, 1, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 273, False); alias=default
DEBUG 2024-03-03 12:32:20,612 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 12', 7, '2024-02-05T14:25:08.583081+01:00'::timestamptz, 946, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 12', 7, datetime.datetime(2024, 2, 5, 14, 25, 8, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 946, False); alias=default
DEBUG 2024-03-03 12:32:20,613 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 3, 'Player 6', 11, '2023-12-16T02:06:30.583081+01:00'::timestamptz, 995, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 3, 'Player 6', 11, datetime.datetime(2023, 12, 16, 2, 6, 30, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 995, False); alias=default
DEBUG 2024-03-03 12:32:20,613 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 17', 5, '2024-01-01T19:11:02.583081+01:00'::timestamptz, 96, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 17', 5, datetime.datetime(2024, 1, 1, 19, 11, 2, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 96, False); alias=default
DEBUG 2024-03-03 12:32:20,614 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 4, 'Player 23', 11, '2024-02-11T13:07:04.583081+01:00'::timestamptz, 638, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 4, 'Player 23', 11, datetime.datetime(2024, 2, 11, 13, 7, 4, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 638, False); alias=default
DEBUG 2024-03-03 12:32:20,615 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 5', 4, '2024-02-21T22:17:12.583081+01:00'::timestamptz, 178, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 5', 4, datetime.datetime(2024, 2, 21, 22, 17, 12, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 178, False); alias=default
DEBUG 2024-03-03 12:32:20,615 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 24', 10, '2023-11-21T14:04:44.583081+01:00'::timestamptz, 115, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 24', 10, datetime.datetime(2023, 11, 21, 14, 4, 44, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 115, False); alias=default
DEBUG 2024-03-03 12:32:20,616 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 17', 7, '2024-01-16T22:31:43.583081+01:00'::timestamptz, 357, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 17', 7, datetime.datetime(2024, 1, 16, 22, 31, 43, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 357, False); alias=default
DEBUG 2024-03-03 12:32:20,616 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 21', 4, '2024-02-24T22:34:57.583081+01:00'::timestamptz, 354, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 21', 4, datetime.datetime(2024, 2, 24, 22, 34, 57, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 354, False); alias=default
DEBUG 2024-03-03 12:32:20,617 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 8', 2, '2024-02-02T07:28:53.583081+01:00'::timestamptz, 557, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 8', 2, datetime.datetime(2024, 2, 2, 7, 28, 53, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 557, False); alias=default
DEBUG 2024-03-03 12:32:20,618 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 9, 'Player 12', 11, '2023-11-25T04:05:01.583081+01:00'::timestamptz, 494, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 9, 'Player 12', 11, datetime.datetime(2023, 11, 25, 4, 5, 1, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 494, False); alias=default
DEBUG 2024-03-03 12:32:20,618 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 11', 3, '2023-11-04T08:40:28.583081+01:00'::timestamptz, 268, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 11', 3, datetime.datetime(2023, 11, 4, 8, 40, 28, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 268, False); alias=default
DEBUG 2024-03-03 12:32:20,619 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 11, 'Player 18', 3, '2024-01-24T12:07:10.583081+01:00'::timestamptz, 608, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 11, 'Player 18', 3, datetime.datetime(2024, 1, 24, 12, 7, 10, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 608, False); alias=default
DEBUG 2024-03-03 12:32:20,620 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 15', 10, '2023-11-09T19:18:38.583081+01:00'::timestamptz, 768, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 15', 10, datetime.datetime(2023, 11, 9, 19, 18, 38, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 768, False); alias=default
DEBUG 2024-03-03 12:32:20,620 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 13', 1, '2024-01-26T01:08:08.583081+01:00'::timestamptz, 656, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 13', 1, datetime.datetime(2024, 1, 26, 1, 8, 8, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 656, False); alias=default
DEBUG 2024-03-03 12:32:20,621 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 20', 1, '2024-02-21T22:12:56.583081+01:00'::timestamptz, 561, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 20', 1, datetime.datetime(2024, 2, 21, 22, 12, 56, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 561, False); alias=default
DEBUG 2024-03-03 12:32:20,621 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 7, 'Player 19', 11, '2023-11-28T08:58:01.583081+01:00'::timestamptz, 854, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 7, 'Player 19', 11, datetime.datetime(2023, 11, 28, 8, 58, 1, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 854, False); alias=default
DEBUG 2024-03-03 12:32:20,622 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 2, 'Player 25', 11, '2024-02-05T17:26:18.583081+01:00'::timestamptz, 575, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 2, 'Player 25', 11, datetime.datetime(2024, 2, 5, 17, 26, 18, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 575, False); alias=default
DEBUG 2024-03-03 12:32:20,623 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 7', 9, '2023-12-31T23:31:57.583081+01:00'::timestamptz, 406, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 7', 9, datetime.datetime(2023, 12, 31, 23, 31, 57, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 406, False); alias=default
DEBUG 2024-03-03 12:32:20,623 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 4, 'Player 24', 11, '2024-01-27T05:23:30.583081+01:00'::timestamptz, 138, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 4, 'Player 24', 11, datetime.datetime(2024, 1, 27, 5, 23, 30, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 138, False); alias=default
DEBUG 2024-03-03 12:32:20,624 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 16', 3, '2024-01-15T11:35:07.583081+01:00'::timestamptz, 834, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 16', 3, datetime.datetime(2024, 1, 15, 11, 35, 7, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 834, False); alias=default
DEBUG 2024-03-03 12:32:20,624 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 11, 'Player 8', 5, '2024-01-16T11:09:54.583081+01:00'::timestamptz, 214, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 11, 'Player 8', 5, datetime.datetime(2024, 1, 16, 11, 9, 54, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 214, False); alias=default
DEBUG 2024-03-03 12:32:20,625 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 1, 'Player 1', 11, '2023-11-23T18:58:17.583081+01:00'::timestamptz, 88, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 1, 'Player 1', 11, datetime.datetime(2023, 11, 23, 18, 58, 17, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 88, False); alias=default
DEBUG 2024-03-03 12:32:20,625 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 2, 'Player 11', 11, '2023-12-03T09:53:13.583081+01:00'::timestamptz, 227, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 2, 'Player 11', 11, datetime.datetime(2023, 12, 3, 9, 53, 13, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 227, False); alias=default
DEBUG 2024-03-03 12:32:20,626 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 1, 'Player 24', 11, '2024-02-26T00:23:20.583081+01:00'::timestamptz, 476, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 1, 'Player 24', 11, datetime.datetime(2024, 2, 26, 0, 23, 20, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 476, False); alias=default
DEBUG 2024-03-03 12:32:20,627 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 11, 'Player 2', 2, '2023-11-01T11:25:57.583081+01:00'::timestamptz, 640, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 11, 'Player 2', 2, datetime.datetime(2023, 11, 1, 11, 25, 57, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 640, False); alias=default
DEBUG 2024-03-03 12:32:20,627 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 30', 3, '2023-12-17T06:18:16.583081+01:00'::timestamptz, 762, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 30', 3, datetime.datetime(2023, 12, 17, 6, 18, 16, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 762, False); alias=default
DEBUG 2024-03-03 12:32:20,628 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 3, 'Player 5', 11, '2024-01-17T12:10:15.583081+01:00'::timestamptz, 775, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 3, 'Player 5', 11, datetime.datetime(2024, 1, 17, 12, 10, 15, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 775, False); alias=default
DEBUG 2024-03-03 12:32:20,628 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 29', 10, '2024-01-18T11:00:30.583081+01:00'::timestamptz, 820, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 29', 10, datetime.datetime(2024, 1, 18, 11, 0, 30, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 820, False); alias=default
DEBUG 2024-03-03 12:32:20,629 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 0, 'Player 33', 11, '2024-02-09T09:52:07.583081+01:00'::timestamptz, 551, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 0, 'Player 33', 11, datetime.datetime(2024, 2, 9, 9, 52, 7, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 551, False); alias=default
DEBUG 2024-03-03 12:32:20,630 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 32', 5, '2023-11-29T06:13:57.583081+01:00'::timestamptz, 876, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 32', 5, datetime.datetime(2023, 11, 29, 6, 13, 57, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 876, False); alias=default
DEBUG 2024-03-03 12:32:20,630 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 6', 0, '2023-11-05T22:27:19.583081+01:00'::timestamptz, 418, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 6', 0, datetime.datetime(2023, 11, 5, 22, 27, 19, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 418, False); alias=default
DEBUG 2024-03-03 12:32:20,631 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 4, 'Player 39', 11, '2023-12-22T11:22:08.583081+01:00'::timestamptz, 37, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 4, 'Player 39', 11, datetime.datetime(2023, 12, 22, 11, 22, 8, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 37, False); alias=default
DEBUG 2024-03-03 12:32:20,631 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 0, 'Player 26', 11, '2023-12-07T14:53:48.583081+01:00'::timestamptz, 365, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 0, 'Player 26', 11, datetime.datetime(2023, 12, 7, 14, 53, 48, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 365, False); alias=default
DEBUG 2024-03-03 12:32:20,632 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 2', 4, '2023-11-27T08:41:20.583081+01:00'::timestamptz, 47, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 2', 4, datetime.datetime(2023, 11, 27, 8, 41, 20, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 47, False); alias=default
DEBUG 2024-03-03 12:32:20,633 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 36', 7, '2023-12-10T00:42:54.583081+01:00'::timestamptz, 112, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 36', 7, datetime.datetime(2023, 12, 10, 0, 42, 54, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 112, False); alias=default
DEBUG 2024-03-03 12:32:20,633 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 6, 'Player 31', 11, '2023-12-31T18:25:51.583081+01:00'::timestamptz, 817, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 6, 'Player 31', 11, datetime.datetime(2023, 12, 31, 18, 25, 51, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 817, False); alias=default
DEBUG 2024-03-03 12:32:20,634 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 6, 'Player 32', 11, '2023-12-08T13:15:21.583081+01:00'::timestamptz, 206, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 6, 'Player 32', 11, datetime.datetime(2023, 12, 8, 13, 15, 21, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 206, False); alias=default
DEBUG 2024-03-03 12:32:20,634 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 11, 'Player 24', 0, '2024-02-02T15:17:13.583081+01:00'::timestamptz, 292, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 11, 'Player 24', 0, datetime.datetime(2024, 2, 2, 15, 17, 13, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 292, False); alias=default
DEBUG 2024-03-03 12:32:20,635 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 11, 'Player 12', 7, '2023-12-30T19:13:44.583081+01:00'::timestamptz, 396, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 11, 'Player 12', 7, datetime.datetime(2023, 12, 30, 19, 13, 44, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 396, False); alias=default
DEBUG 2024-03-03 12:32:20,636 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 11, 'Player 39', 2, '2023-11-02T23:38:26.583081+01:00'::timestamptz, 459, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 11, 'Player 39', 2, datetime.datetime(2023, 11, 2, 23, 38, 26, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 459, False); alias=default
DEBUG 2024-03-03 12:32:20,636 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 7, 'Player 31', 11, '2024-02-15T04:27:34.583081+01:00'::timestamptz, 215, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 7, 'Player 31', 11, datetime.datetime(2024, 2, 15, 4, 27, 34, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 215, False); alias=default
DEBUG 2024-03-03 12:32:20,637 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 39', 5, '2024-01-27T13:47:06.583081+01:00'::timestamptz, 99, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 39', 5, datetime.datetime(2024, 1, 27, 13, 47, 6, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 99, False); alias=default
DEBUG 2024-03-03 12:32:20,637 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 11, 'Player 4', 7, '2023-11-23T06:19:28.583081+01:00'::timestamptz, 701, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 11, 'Player 4', 7, datetime.datetime(2023, 11, 23, 6, 19, 28, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 701, False); alias=default
DEBUG 2024-03-03 12:32:20,638 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 47', 0, 'Player 22', 11, '2023-12-28T07:33:36.583081+01:00'::timestamptz, 349, false) RETURNING "pong_gamedata"."id"; args=('Player 47', 0, 'Player 22', 11, datetime.datetime(2023, 12, 28, 7, 33, 36, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 349, False); alias=default
DEBUG 2024-03-03 12:32:20,639 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 11, 'Player 42', 2, '2023-12-15T05:23:22.583081+01:00'::timestamptz, 710, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 11, 'Player 42', 2, datetime.datetime(2023, 12, 15, 5, 23, 22, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 710, False); alias=default
DEBUG 2024-03-03 12:32:20,639 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 41', 5, '2023-11-05T17:07:27.583081+01:00'::timestamptz, 518, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 41', 5, datetime.datetime(2023, 11, 5, 17, 7, 27, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 518, False); alias=default
DEBUG 2024-03-03 12:32:20,640 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 8, 'Player 23', 11, '2024-01-01T13:21:05.583081+01:00'::timestamptz, 74, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 8, 'Player 23', 11, datetime.datetime(2024, 1, 1, 13, 21, 5, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 74, False); alias=default
DEBUG 2024-03-03 12:32:20,641 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 46', 6, 'Player 3', 11, '2024-02-17T19:11:26.583081+01:00'::timestamptz, 717, false) RETURNING "pong_gamedata"."id"; args=('Player 46', 6, 'Player 3', 11, datetime.datetime(2024, 2, 17, 19, 11, 26, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 717, False); alias=default
DEBUG 2024-03-03 12:32:20,641 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 2, 'Player 12', 11, '2024-01-14T10:43:06.583081+01:00'::timestamptz, 388, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 2, 'Player 12', 11, datetime.datetime(2024, 1, 14, 10, 43, 6, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 388, False); alias=default
DEBUG 2024-03-03 12:32:20,642 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 10, 'Player 17', 11, '2024-01-28T07:06:15.583081+01:00'::timestamptz, 309, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 10, 'Player 17', 11, datetime.datetime(2024, 1, 28, 7, 6, 15, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 309, False); alias=default
DEBUG 2024-03-03 12:32:20,643 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 10, 'Player 38', 11, '2023-11-11T14:11:50.583081+01:00'::timestamptz, 343, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 10, 'Player 38', 11, datetime.datetime(2023, 11, 11, 14, 11, 50, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 343, False); alias=default
DEBUG 2024-03-03 12:32:20,643 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 11, 'Player 35', 6, '2023-11-22T23:02:19.583081+01:00'::timestamptz, 413, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 11, 'Player 35', 6, datetime.datetime(2023, 11, 22, 23, 2, 19, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 413, False); alias=default
DEBUG 2024-03-03 12:32:20,644 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 48', 6, '2024-02-16T19:57:38.583081+01:00'::timestamptz, 466, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 48', 6, datetime.datetime(2024, 2, 16, 19, 57, 38, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 466, False); alias=default
DEBUG 2024-03-03 12:32:20,644 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 3, 'Player 13', 11, '2023-12-11T16:25:22.583081+01:00'::timestamptz, 133, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 3, 'Player 13', 11, datetime.datetime(2023, 12, 11, 16, 25, 22, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 133, False); alias=default
DEBUG 2024-03-03 12:32:20,645 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 8, 'Player 3', 11, '2024-01-11T00:27:32.583081+01:00'::timestamptz, 216, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 8, 'Player 3', 11, datetime.datetime(2024, 1, 11, 0, 27, 32, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 216, False); alias=default
DEBUG 2024-03-03 12:32:20,646 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 11, 'Player 12', 9, '2023-11-17T21:37:54.583081+01:00'::timestamptz, 185, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 11, 'Player 12', 9, datetime.datetime(2023, 11, 17, 21, 37, 54, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 185, False); alias=default
DEBUG 2024-03-03 12:32:20,646 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 4, 'Player 0', 11, '2024-01-12T08:51:15.583081+01:00'::timestamptz, 544, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 4, 'Player 0', 11, datetime.datetime(2024, 1, 12, 8, 51, 15, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 544, False); alias=default
DEBUG 2024-03-03 12:32:20,647 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 5, 'Player 5', 11, '2023-11-26T09:44:34.583081+01:00'::timestamptz, 136, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 5, 'Player 5', 11, datetime.datetime(2023, 11, 26, 9, 44, 34, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 136, False); alias=default
DEBUG 2024-03-03 12:32:20,648 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 9, 'Player 14', 11, '2023-12-29T04:04:44.583081+01:00'::timestamptz, 905, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 9, 'Player 14', 11, datetime.datetime(2023, 12, 29, 4, 4, 44, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 905, False); alias=default
DEBUG 2024-03-03 12:32:20,648 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 10, 'Player 28', 11, '2023-12-03T18:29:59.583081+01:00'::timestamptz, 12, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 10, 'Player 28', 11, datetime.datetime(2023, 12, 3, 18, 29, 59, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 12, False); alias=default
DEBUG 2024-03-03 12:32:20,649 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 11, 'Player 35', 6, '2023-11-15T11:32:37.583081+01:00'::timestamptz, 523, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 11, 'Player 35', 6, datetime.datetime(2023, 11, 15, 11, 32, 37, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 523, False); alias=default
DEBUG 2024-03-03 12:32:20,649 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 4, 'Player 11', 11, '2023-12-05T12:28:07.583081+01:00'::timestamptz, 642, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 4, 'Player 11', 11, datetime.datetime(2023, 12, 5, 12, 28, 7, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 642, False); alias=default
DEBUG 2024-03-03 12:32:20,650 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 11, 'Player 0', 6, '2023-11-02T12:28:36.583081+01:00'::timestamptz, 408, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 11, 'Player 0', 6, datetime.datetime(2023, 11, 2, 12, 28, 36, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 408, False); alias=default
DEBUG 2024-03-03 12:32:20,651 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 1, 'Player 34', 11, '2024-01-06T23:49:14.583081+01:00'::timestamptz, 924, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 1, 'Player 34', 11, datetime.datetime(2024, 1, 6, 23, 49, 14, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 924, False); alias=default
DEBUG 2024-03-03 12:32:20,651 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 56', 11, 'Player 24', 1, '2024-01-21T00:09:00.583081+01:00'::timestamptz, 442, false) RETURNING "pong_gamedata"."id"; args=('Player 56', 11, 'Player 24', 1, datetime.datetime(2024, 1, 21, 0, 9, 0, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 442, False); alias=default
DEBUG 2024-03-03 12:32:20,652 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 7, 'Player 1', 11, '2023-12-14T22:38:01.583081+01:00'::timestamptz, 164, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 7, 'Player 1', 11, datetime.datetime(2023, 12, 14, 22, 38, 1, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 164, False); alias=default
DEBUG 2024-03-03 12:32:20,653 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 9, 'Player 48', 11, '2024-01-17T16:40:30.583081+01:00'::timestamptz, 33, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 9, 'Player 48', 11, datetime.datetime(2024, 1, 17, 16, 40, 30, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 33, False); alias=default
DEBUG 2024-03-03 12:32:20,653 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 17', 1, '2023-12-06T16:10:12.583081+01:00'::timestamptz, 407, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 17', 1, datetime.datetime(2023, 12, 6, 16, 10, 12, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 407, False); alias=default
DEBUG 2024-03-03 12:32:20,654 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 4, 'Player 14', 11, '2023-11-29T08:24:26.583081+01:00'::timestamptz, 707, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 4, 'Player 14', 11, datetime.datetime(2023, 11, 29, 8, 24, 26, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 707, False); alias=default
DEBUG 2024-03-03 12:32:20,654 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 8, 'Player 1', 11, '2024-01-18T01:15:06.583081+01:00'::timestamptz, 461, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 8, 'Player 1', 11, datetime.datetime(2024, 1, 18, 1, 15, 6, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 461, False); alias=default
DEBUG 2024-03-03 12:32:20,655 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 23', 1, '2024-02-13T17:00:40.583081+01:00'::timestamptz, 351, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 23', 1, datetime.datetime(2024, 2, 13, 17, 0, 40, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 351, False); alias=default
DEBUG 2024-03-03 12:32:20,656 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 8, 'Player 15', 11, '2024-01-07T12:47:32.583081+01:00'::timestamptz, 684, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 8, 'Player 15', 11, datetime.datetime(2024, 1, 7, 12, 47, 32, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 684, False); alias=default
DEBUG 2024-03-03 12:32:20,656 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 56', 11, 'Player 59', 9, '2024-01-09T04:52:24.583081+01:00'::timestamptz, 319, false) RETURNING "pong_gamedata"."id"; args=('Player 56', 11, 'Player 59', 9, datetime.datetime(2024, 1, 9, 4, 52, 24, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 319, False); alias=default
DEBUG 2024-03-03 12:32:20,657 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 51', 11, 'Player 37', 3, '2024-02-18T08:47:55.583081+01:00'::timestamptz, 173, false) RETURNING "pong_gamedata"."id"; args=('Player 51', 11, 'Player 37', 3, datetime.datetime(2024, 2, 18, 8, 47, 55, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 173, False); alias=default
DEBUG 2024-03-03 12:32:20,658 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 53', 11, 'Player 27', 6, '2023-12-25T18:10:06.583081+01:00'::timestamptz, 9, false) RETURNING "pong_gamedata"."id"; args=('Player 53', 11, 'Player 27', 6, datetime.datetime(2023, 12, 25, 18, 10, 6, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 9, False); alias=default
DEBUG 2024-03-03 12:32:20,658 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 34', 8, '2023-11-04T01:31:12.583081+01:00'::timestamptz, 980, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 34', 8, datetime.datetime(2023, 11, 4, 1, 31, 12, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 980, False); alias=default
DEBUG 2024-03-03 12:32:20,659 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 52', 2, 'Player 39', 11, '2023-11-23T18:23:56.583081+01:00'::timestamptz, 665, false) RETURNING "pong_gamedata"."id"; args=('Player 52', 2, 'Player 39', 11, datetime.datetime(2023, 11, 23, 18, 23, 56, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 665, False); alias=default
DEBUG 2024-03-03 12:32:20,660 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 8, 'Player 9', 11, '2023-12-23T08:26:30.583081+01:00'::timestamptz, 150, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 8, 'Player 9', 11, datetime.datetime(2023, 12, 23, 8, 26, 30, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 150, False); alias=default
DEBUG 2024-03-03 12:32:20,660 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,661 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 8, 'Player 3', 11, '2024-01-18T03:42:29.583081+01:00'::timestamptz, 669, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 8, 'Player 3', 11, datetime.datetime(2024, 1, 18, 3, 42, 29, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 669, True); alias=default
DEBUG 2024-03-03 12:32:20,661 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 0, 'Player 11', 11, '2024-01-18T03:36:04.583081+01:00'::timestamptz, 305, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 0, 'Player 11', 11, datetime.datetime(2024, 1, 18, 3, 36, 4, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 305, True); alias=default
DEBUG 2024-03-03 12:32:20,662 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 6, 'Player 11', 11, '2024-01-18T03:43:28.583081+01:00'::timestamptz, 739, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 6, 'Player 11', 11, datetime.datetime(2024, 1, 18, 3, 43, 28, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 739, True); alias=default
DEBUG 2024-03-03 12:32:20,663 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2024-01-18T03:43:28.583081+01:00'::timestamptz, 749, '["Player 11", "Player 3", "Player 12", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2024, 1, 18, 3, 43, 28, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 749, <psycopg2._json.Json object at 0x7efc9853f6b0>, '0x0'); alias=default
DEBUG 2024-03-03 12:32:20,663 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 5', 2, '2024-01-24T06:48:11.583081+01:00'::timestamptz, 26, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 5', 2, datetime.datetime(2024, 1, 24, 6, 48, 11, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 26, True); alias=default
DEBUG 2024-03-03 12:32:20,664 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 9', 1, '2024-01-24T06:38:39.583081+01:00'::timestamptz, 108, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 9', 1, datetime.datetime(2024, 1, 24, 6, 38, 39, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 108, True); alias=default
DEBUG 2024-03-03 12:32:20,665 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 10, 'Player 0', 11, '2024-01-24T06:48:46.583081+01:00'::timestamptz, 623, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 10, 'Player 0', 11, datetime.datetime(2024, 1, 24, 6, 48, 46, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 623, True); alias=default
DEBUG 2024-03-03 12:32:20,665 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2024-01-24T06:48:46.583081+01:00'::timestamptz, 715, '["Player 0", "Player 7", "Player 5", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2024, 1, 24, 6, 48, 46, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 715, <psycopg2._json.Json object at 0x7efc985127e0>, '0x0'); alias=default
DEBUG 2024-03-03 12:32:20,666 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 9', 7, '2023-11-04T20:48:02.583081+01:00'::timestamptz, 50, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 9', 7, datetime.datetime(2023, 11, 4, 20, 48, 2, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 50, True); alias=default
DEBUG 2024-03-03 12:32:20,666 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 5, 'Player 5', 11, '2023-11-04T20:46:48.583081+01:00'::timestamptz, 592, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 5, 'Player 5', 11, datetime.datetime(2023, 11, 4, 20, 46, 48, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 592, True); alias=default
DEBUG 2024-03-03 12:32:20,667 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 5', 5, '2023-11-04T20:49:36.583081+01:00'::timestamptz, 944, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 5', 5, datetime.datetime(2023, 11, 4, 20, 49, 36, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 944, True); alias=default
DEBUG 2024-03-03 12:32:20,668 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2023-11-04T20:49:36.583081+01:00'::timestamptz, 760, '["Player 11", "Player 5", "Player 9", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2023, 11, 4, 20, 49, 36, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 760, <psycopg2._json.Json object at 0x7efc9853c080>, '0x0'); alias=default
DEBUG 2024-03-03 12:32:20,668 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 9, 'Player 7', 11, '2023-11-09T03:01:33.583081+01:00'::timestamptz, 727, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 9, 'Player 7', 11, datetime.datetime(2023, 11, 9, 3, 1, 33, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 727, True); alias=default
DEBUG 2024-03-03 12:32:20,669 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 5, 'Player 16', 11, '2023-11-09T02:59:16.583081+01:00'::timestamptz, 444, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 5, 'Player 16', 11, datetime.datetime(2023, 11, 9, 2, 59, 16, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 444, True); alias=default
DEBUG 2024-03-03 12:32:20,669 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 16', 7, '2023-11-09T03:03:01.583081+01:00'::timestamptz, 974, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 16', 7, datetime.datetime(2023, 11, 9, 3, 3, 1, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 974, True); alias=default
DEBUG 2024-03-03 12:32:20,670 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2023-11-09T03:03:01.583081+01:00'::timestamptz, 815, '["Player 7", "Player 16", "Player 5", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2023, 11, 9, 3, 3, 1, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 815, <psycopg2._json.Json object at 0x7efc9853dfd0>, '0x0'); alias=default
DEBUG 2024-03-03 12:32:20,671 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 11', 2, '2023-12-11T02:27:16.583081+01:00'::timestamptz, 543, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 11', 2, datetime.datetime(2023, 12, 11, 2, 27, 16, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 543, True); alias=default
DEBUG 2024-03-03 12:32:20,671 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 9, 'Player 5', 11, '2023-12-11T02:31:47.583081+01:00'::timestamptz, 68, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 9, 'Player 5', 11, datetime.datetime(2023, 12, 11, 2, 31, 47, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 68, True); alias=default
DEBUG 2024-03-03 12:32:20,672 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 5', 3, '2023-12-11T02:32:53.583081+01:00'::timestamptz, 514, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 5', 3, datetime.datetime(2023, 12, 11, 2, 32, 53, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 514, True); alias=default
DEBUG 2024-03-03 12:32:20,672 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2023-12-11T02:32:53.583081+01:00'::timestamptz, 880, '["Player 12", "Player 5", "Player 11", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2023, 12, 11, 2, 32, 53, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 880, <psycopg2._json.Json object at 0x7efc98575e20>, '0x0'); alias=default
DEBUG 2024-03-03 12:32:20,673 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 14', 5, '2024-02-06T11:19:35.583081+01:00'::timestamptz, 552, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 14', 5, datetime.datetime(2024, 2, 6, 11, 19, 35, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 552, True); alias=default
DEBUG 2024-03-03 12:32:20,674 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 4, 'Player 3', 11, '2024-02-06T11:20:37.583081+01:00'::timestamptz, 890, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 4, 'Player 3', 11, datetime.datetime(2024, 2, 6, 11, 20, 37, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 890, True); alias=default
DEBUG 2024-03-03 12:32:20,674 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 3', 6, '2024-02-06T11:22:06.583081+01:00'::timestamptz, 650, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 3', 6, datetime.datetime(2024, 2, 6, 11, 22, 6, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 650, True); alias=default
DEBUG 2024-03-03 12:32:20,675 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2024-02-06T11:22:06.583081+01:00'::timestamptz, 979, '["Player 12", "Player 3", "Player 14", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2024, 2, 6, 11, 22, 6, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 979, <psycopg2._json.Json object at 0x7efc983c5e50>, '0x0'); alias=default
DEBUG 2024-03-03 12:32:20,676 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 10', 2, '2023-12-05T16:05:15.583081+01:00'::timestamptz, 706, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 10', 2, datetime.datetime(2023, 12, 5, 16, 5, 15, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 706, True); alias=default
DEBUG 2024-03-03 12:32:20,676 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 1, 'Player 18', 11, '2023-12-05T16:06:40.583081+01:00'::timestamptz, 158, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 1, 'Player 18', 11, datetime.datetime(2023, 12, 5, 16, 6, 40, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 158, True); alias=default
DEBUG 2024-03-03 12:32:20,677 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 18', 4, '2023-12-05T16:09:31.583081+01:00'::timestamptz, 439, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 18', 4, datetime.datetime(2023, 12, 5, 16, 9, 31, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 439, True); alias=default
DEBUG 2024-03-03 12:32:20,677 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2023-12-05T16:09:31.583081+01:00'::timestamptz, 962, '["Player 4", "Player 18", "Player 10", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2023, 12, 5, 16, 9, 31, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 962, <psycopg2._json.Json object at 0x7efc9853dfd0>, '0x0'); alias=default
DEBUG 2024-03-03 12:32:20,678 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 6, 'Player 11', 11, '2024-02-12T21:38:24.583081+01:00'::timestamptz, 934, true) RETURNING "pong_gamedata"."id"; args=('Player 18', 6, 'Player 11', 11, datetime.datetime(2024, 2, 12, 21, 38, 24, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 934, True); alias=default
DEBUG 2024-03-03 12:32:20,679 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 10', 5, '2024-02-12T21:37:25.583081+01:00'::timestamptz, 804, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 10', 5, datetime.datetime(2024, 2, 12, 21, 37, 25, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 804, True); alias=default
DEBUG 2024-03-03 12:32:20,679 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 3', 2, '2024-02-12T21:38:51.583081+01:00'::timestamptz, 812, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 3', 2, datetime.datetime(2024, 2, 12, 21, 38, 51, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 812, True); alias=default
DEBUG 2024-03-03 12:32:20,680 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2024-02-12T21:38:51.583081+01:00'::timestamptz, 961, '["Player 11", "Player 3", "Player 18", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2024, 2, 12, 21, 38, 51, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 961, <psycopg2._json.Json object at 0x7efc983e3920>, '0x0'); alias=default
DEBUG 2024-03-03 12:32:20,681 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 0, 'Player 19', 11, '2024-02-11T22:10:02.583081+01:00'::timestamptz, 336, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 0, 'Player 19', 11, datetime.datetime(2024, 2, 11, 22, 10, 2, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 336, True); alias=default
DEBUG 2024-03-03 12:32:20,681 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 3, 'Player 3', 11, '2024-02-11T22:16:22.583081+01:00'::timestamptz, 661, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 3, 'Player 3', 11, datetime.datetime(2024, 2, 11, 22, 16, 22, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 661, True); alias=default
DEBUG 2024-03-03 12:32:20,682 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 1, 'Player 3', 11, '2024-02-11T22:19:43.583081+01:00'::timestamptz, 708, true) RETURNING "pong_gamedata"."id"; args=('Player 19', 1, 'Player 3', 11, datetime.datetime(2024, 2, 11, 22, 19, 43, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 708, True); alias=default
DEBUG 2024-03-03 12:32:20,683 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2024-02-11T22:19:43.583081+01:00'::timestamptz, 917, '["Player 3", "Player 19", "Player 16", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2024, 2, 11, 22, 19, 43, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 917, <psycopg2._json.Json object at 0x7efc983944d0>, '0x0'); alias=default
DEBUG 2024-03-03 12:32:20,683 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 0, 'Player 3', 11, '2024-02-26T10:26:35.583081+01:00'::timestamptz, 213, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 0, 'Player 3', 11, datetime.datetime(2024, 2, 26, 10, 26, 35, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 213, True); alias=default
DEBUG 2024-03-03 12:32:20,684 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 10', 4, '2024-02-26T10:27:07.583081+01:00'::timestamptz, 885, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 10', 4, datetime.datetime(2024, 2, 26, 10, 27, 7, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 885, True); alias=default
DEBUG 2024-03-03 12:32:20,684 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 0, 'Player 14', 11, '2024-02-26T10:28:38.583081+01:00'::timestamptz, 519, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 0, 'Player 14', 11, datetime.datetime(2024, 2, 26, 10, 28, 38, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 519, True); alias=default
DEBUG 2024-03-03 12:32:20,685 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2024-02-26T10:28:38.583081+01:00'::timestamptz, 976, '["Player 14", "Player 3", "Player 11", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2024, 2, 26, 10, 28, 38, 583081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 976, <psycopg2._json.Json object at 0x7efc98512a80>, '0x0'); alias=default
DEBUG 2024-03-03 12:32:20,686 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,686 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,687 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 12:32:20,687 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,687 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 12:32:20,687 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,688 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 12:32:20,688 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 12:32:20,689 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 12:32:20,690 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 12:32:20,690 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,691 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 12:32:20,691 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,692 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 12:32:20,692 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,692 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,693 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,693 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,694 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,694 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,695 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 12:32:20,695 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,695 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 12:32:20,696 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,696 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 12:32:20,697 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 12:32:20,697 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,697 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 12:32:20,698 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,698 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 12:32:20,699 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,699 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,699 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,700 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,700 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,701 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,701 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 12:32:20,701 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,702 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 12:32:20,702 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,702 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 12:32:20,703 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 12:32:20,704 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,704 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 12:32:20,704 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,705 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 12:32:20,705 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,706 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,706 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,706 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,707 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,707 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,708 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 12:32:20,708 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,708 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 12:32:20,709 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,709 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 12:32:20,710 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 12:32:20,710 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 12:32:20,711 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:32:20,711 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 12:32:20,711 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:32:20,712 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 12:32:20,712 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,713 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,713 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,714 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,714 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:32:20,715 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
