DEBUG 2024-03-03 09:48:22,816 utils (0.003) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:22,819 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:22,822 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:22,822 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:22,823 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 09:48:22,837 utils (0.014) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:48:22,838 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:22,839 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:22,840 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 09:48:22,844 utils (0.003) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:48:22,848 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 09:48:22,851 utils (0.002) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 09:48:22,852 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:22,856 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T09:48:22.853354+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 9, 48, 22, 853354, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:48:22,857 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:22,857 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:22,861 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 09:48:22,866 utils (0.005) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:48:22,873 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 09:48:22,877 utils (0.004) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 09:48:22,878 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 09:48:22,880 utils (0.002) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:48:22,888 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 09:48:22,892 utils (0.004) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:48:22,893 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 09:48:22,896 utils (0.002) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:48:22,897 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 09:48:22,900 utils (0.003) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:48:22,901 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 09:48:22,903 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 09:48:22,904 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 09:48:22,906 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 09:48:22,906 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 09:48:22,910 utils (0.003) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 09:48:22,910 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 09:48:22,914 utils (0.004) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 09:48:22,914 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 09:48:22,917 utils (0.003) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 09:48:22,918 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 09:48:22,919 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 09:48:22,920 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 09:48:22,921 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 09:48:22,922 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 09:48:22,924 utils (0.002) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 09:48:22,924 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 09:48:22,926 utils (0.002) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 09:48:22,926 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 09:48:22,928 utils (0.002) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 09:48:22,928 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 09:48:22,930 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 09:48:22,930 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 09:48:22,931 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 09:48:22,931 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 09:48:22,933 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 09:48:22,933 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 09:48:22,935 utils (0.002) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 09:48:22,935 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 09:48:22,937 utils (0.002) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 09:48:22,937 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 09:48:22,939 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 09:48:22,939 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 09:48:22,940 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 09:48:22,940 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 09:48:22,941 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 09:48:22,941 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 09:48:22,943 utils (0.002) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 09:48:22,943 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 09:48:22,945 utils (0.002) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 09:48:22,945 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:22,947 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:22,949 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T09:48:22.947897+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 9, 48, 22, 947897, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:48:22,949 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:22,957 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 09:48:22,962 utils (0.004) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:48:22,962 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 09:48:22,964 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 09:48:22,964 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 09:48:22,966 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 09:48:22,966 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 09:48:22,968 utils (0.002) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 09:48:22,969 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 09:48:22,971 utils (0.002) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 09:48:22,972 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:22,974 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:22,976 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T09:48:22.974719+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 9, 48, 22, 974719, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:48:22,976 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:22,989 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:22,990 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T09:48:22.989956+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 9, 48, 22, 989956, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:48:22,992 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:22,992 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,005 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:23,006 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T09:48:23.006045+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 9, 48, 23, 6045, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:48:23,007 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,007 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,015 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 09:48:23,016 utils (0.000) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 09:48:23,030 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 09:48:23,031 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 09:48:23,033 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:23,034 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T09:48:23.033465+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 9, 48, 23, 33465, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:48:23,041 utils (0.007) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,042 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,051 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 09:48:23,052 utils (0.000) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 09:48:23,054 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:23,055 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T09:48:23.054464+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 9, 48, 23, 54464, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:48:23,056 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,056 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,070 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 09:48:23,071 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 09:48:23,073 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:23,074 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T09:48:23.073485+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 9, 48, 23, 73485, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:48:23,078 utils (0.004) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,078 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,090 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:23,091 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T09:48:23.090929+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 9, 48, 23, 90929, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:48:23,094 utils (0.002) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,094 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,104 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 09:48:23,107 utils (0.003) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 09:48:23,109 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:23,110 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T09:48:23.110067+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 9, 48, 23, 110067, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:48:23,111 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,112 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,114 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:23,115 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T09:48:23.114422+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 9, 48, 23, 114422, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:48:23,116 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,116 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,131 utils (0.006) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:23,132 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T09:48:23.131381+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 9, 48, 23, 131381, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:48:23,133 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,133 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,143 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 09:48:23,148 utils (0.005) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 09:48:23,150 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:23,152 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T09:48:23.151032+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 9, 48, 23, 151032, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:48:23,153 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,153 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,164 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 09:48:23,166 utils (0.002) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 09:48:23,169 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:23,170 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T09:48:23.169602+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 9, 48, 23, 169602, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:48:23,171 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,171 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,182 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 09:48:23,186 utils (0.003) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 09:48:23,188 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:23,189 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T09:48:23.188359+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 9, 48, 23, 188359, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:48:23,189 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,190 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,203 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:23,204 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T09:48:23.204231+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 9, 48, 23, 204231, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:48:23,206 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,206 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,222 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 09:48:23,223 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 09:48:23,225 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:23,226 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T09:48:23.225457+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 9, 48, 23, 225457, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:48:23,229 utils (0.003) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,229 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,231 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 09:48:23,238 utils (0.006) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:48:23,239 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 09:48:23,244 utils (0.004) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 09:48:23,245 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:23,246 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T09:48:23.245893+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 9, 48, 23, 245893, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:48:23,248 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,248 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,250 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 09:48:23,255 utils (0.004) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:48:23,256 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 09:48:23,258 utils (0.002) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 09:48:23,258 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 09:48:23,260 utils (0.002) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 09:48:23,261 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,263 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:23,264 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T09:48:23.263726+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 9, 48, 23, 263726, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:48:23,266 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:48:23,267 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,286 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 09:48:23,286 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,287 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 09:48:23,288 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,290 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 09:48:23,294 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 09:48:23,294 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,296 utils (0.002) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 09:48:23,298 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,299 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 09:48:23,301 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,303 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,304 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,338 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 11', 9, '2023-12-18T03:24:05.303365+01:00'::timestamptz, 586, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 11', 9, datetime.datetime(2023, 12, 18, 3, 24, 5, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 586, False); alias=default
DEBUG 2024-03-03 09:48:23,339 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 13', 0, '2024-02-20T20:22:08.303365+01:00'::timestamptz, 632, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 13', 0, datetime.datetime(2024, 2, 20, 20, 22, 8, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 632, False); alias=default
DEBUG 2024-03-03 09:48:23,341 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 12', 10, '2024-01-21T06:05:24.303365+01:00'::timestamptz, 570, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 12', 10, datetime.datetime(2024, 1, 21, 6, 5, 24, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 570, False); alias=default
DEBUG 2024-03-03 09:48:23,342 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 2, 'Player 17', 11, '2023-11-30T06:17:24.303365+01:00'::timestamptz, 353, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 2, 'Player 17', 11, datetime.datetime(2023, 11, 30, 6, 17, 24, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 353, False); alias=default
DEBUG 2024-03-03 09:48:23,343 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 6, 'Player 17', 11, '2024-02-22T20:29:46.303365+01:00'::timestamptz, 604, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 6, 'Player 17', 11, datetime.datetime(2024, 2, 22, 20, 29, 46, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 604, False); alias=default
DEBUG 2024-03-03 09:48:23,345 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 2, 'Player 13', 11, '2024-01-21T17:33:03.303365+01:00'::timestamptz, 874, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 2, 'Player 13', 11, datetime.datetime(2024, 1, 21, 17, 33, 3, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 874, False); alias=default
DEBUG 2024-03-03 09:48:23,347 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 16', 5, '2024-02-21T09:37:01.303365+01:00'::timestamptz, 620, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 16', 5, datetime.datetime(2024, 2, 21, 9, 37, 1, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 620, False); alias=default
DEBUG 2024-03-03 09:48:23,349 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 8, 'Player 2', 11, '2023-11-10T23:20:53.303365+01:00'::timestamptz, 17, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 8, 'Player 2', 11, datetime.datetime(2023, 11, 10, 23, 20, 53, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 17, False); alias=default
DEBUG 2024-03-03 09:48:23,351 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 5, 'Player 2', 11, '2023-12-20T01:14:19.303365+01:00'::timestamptz, 36, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 5, 'Player 2', 11, datetime.datetime(2023, 12, 20, 1, 14, 19, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 36, False); alias=default
DEBUG 2024-03-03 09:48:23,353 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 2, 'Player 16', 11, '2023-11-30T02:09:15.303365+01:00'::timestamptz, 83, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 2, 'Player 16', 11, datetime.datetime(2023, 11, 30, 2, 9, 15, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 83, False); alias=default
DEBUG 2024-03-03 09:48:23,355 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 2, 'Player 15', 11, '2024-01-27T04:23:16.303365+01:00'::timestamptz, 648, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 2, 'Player 15', 11, datetime.datetime(2024, 1, 27, 4, 23, 16, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 648, False); alias=default
DEBUG 2024-03-03 09:48:23,357 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 9, 'Player 2', 11, '2024-02-22T22:34:51.303365+01:00'::timestamptz, 491, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 9, 'Player 2', 11, datetime.datetime(2024, 2, 22, 22, 34, 51, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 491, False); alias=default
DEBUG 2024-03-03 09:48:23,359 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 8', 8, '2024-01-27T04:01:12.303365+01:00'::timestamptz, 546, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 8', 8, datetime.datetime(2024, 1, 27, 4, 1, 12, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 546, False); alias=default
DEBUG 2024-03-03 09:48:23,360 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 6, 'Player 8', 11, '2023-12-28T00:22:35.303365+01:00'::timestamptz, 38, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 6, 'Player 8', 11, datetime.datetime(2023, 12, 28, 0, 22, 35, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 38, False); alias=default
DEBUG 2024-03-03 09:48:23,362 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 2', 2, '2024-02-18T23:52:08.303365+01:00'::timestamptz, 57, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 2', 2, datetime.datetime(2024, 2, 18, 23, 52, 8, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 57, False); alias=default
DEBUG 2024-03-03 09:48:23,364 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 2, 'Player 9', 11, '2023-12-06T04:39:58.303365+01:00'::timestamptz, 918, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 2, 'Player 9', 11, datetime.datetime(2023, 12, 6, 4, 39, 58, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 918, False); alias=default
DEBUG 2024-03-03 09:48:23,365 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 10, 'Player 15', 11, '2024-02-03T01:44:12.303365+01:00'::timestamptz, 906, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 10, 'Player 15', 11, datetime.datetime(2024, 2, 3, 1, 44, 12, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 906, False); alias=default
DEBUG 2024-03-03 09:48:23,367 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 8, 'Player 3', 11, '2024-01-26T21:14:00.303365+01:00'::timestamptz, 419, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 8, 'Player 3', 11, datetime.datetime(2024, 1, 26, 21, 14, 0, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 419, False); alias=default
DEBUG 2024-03-03 09:48:23,369 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 10, 'Player 19', 11, '2023-11-15T09:38:13.303365+01:00'::timestamptz, 58, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 10, 'Player 19', 11, datetime.datetime(2023, 11, 15, 9, 38, 13, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 58, False); alias=default
DEBUG 2024-03-03 09:48:23,370 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 8', 0, '2023-12-10T00:09:03.303365+01:00'::timestamptz, 54, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 8', 0, datetime.datetime(2023, 12, 10, 0, 9, 3, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 54, False); alias=default
DEBUG 2024-03-03 09:48:23,371 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 18', 5, '2024-02-20T06:58:08.303365+01:00'::timestamptz, 352, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 18', 5, datetime.datetime(2024, 2, 20, 6, 58, 8, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 352, False); alias=default
DEBUG 2024-03-03 09:48:23,372 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 12', 3, '2024-01-08T16:59:10.303365+01:00'::timestamptz, 538, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 12', 3, datetime.datetime(2024, 1, 8, 16, 59, 10, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 538, False); alias=default
DEBUG 2024-03-03 09:48:23,374 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 6, 'Player 1', 11, '2024-01-16T04:30:42.303365+01:00'::timestamptz, 461, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 6, 'Player 1', 11, datetime.datetime(2024, 1, 16, 4, 30, 42, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 461, False); alias=default
DEBUG 2024-03-03 09:48:23,375 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 8, 'Player 13', 11, '2023-12-08T06:28:39.303365+01:00'::timestamptz, 117, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 8, 'Player 13', 11, datetime.datetime(2023, 12, 8, 6, 28, 39, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 117, False); alias=default
DEBUG 2024-03-03 09:48:23,376 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 3, 'Player 11', 11, '2024-02-01T03:14:20.303365+01:00'::timestamptz, 505, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 3, 'Player 11', 11, datetime.datetime(2024, 2, 1, 3, 14, 20, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 505, False); alias=default
DEBUG 2024-03-03 09:48:23,377 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 1', 5, '2024-01-31T12:28:13.303365+01:00'::timestamptz, 968, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 1', 5, datetime.datetime(2024, 1, 31, 12, 28, 13, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 968, False); alias=default
DEBUG 2024-03-03 09:48:23,379 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 11', 2, '2023-11-12T09:32:53.303365+01:00'::timestamptz, 875, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 11', 2, datetime.datetime(2023, 11, 12, 9, 32, 53, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 875, False); alias=default
DEBUG 2024-03-03 09:48:23,381 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 0, 'Player 1', 11, '2024-01-03T18:22:08.303365+01:00'::timestamptz, 45, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 0, 'Player 1', 11, datetime.datetime(2024, 1, 3, 18, 22, 8, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 45, False); alias=default
DEBUG 2024-03-03 09:48:23,382 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 29', 10, '2023-11-26T09:05:43.303365+01:00'::timestamptz, 810, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 29', 10, datetime.datetime(2023, 11, 26, 9, 5, 43, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 810, False); alias=default
DEBUG 2024-03-03 09:48:23,384 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 12', 7, '2024-01-02T10:26:30.303365+01:00'::timestamptz, 577, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 12', 7, datetime.datetime(2024, 1, 2, 10, 26, 30, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 577, False); alias=default
DEBUG 2024-03-03 09:48:23,385 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 6', 2, '2024-02-18T08:08:54.303365+01:00'::timestamptz, 733, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 6', 2, datetime.datetime(2024, 2, 18, 8, 8, 54, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 733, False); alias=default
DEBUG 2024-03-03 09:48:23,386 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 9, 'Player 2', 11, '2024-02-12T12:37:58.303365+01:00'::timestamptz, 995, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 9, 'Player 2', 11, datetime.datetime(2024, 2, 12, 12, 37, 58, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 995, False); alias=default
DEBUG 2024-03-03 09:48:23,387 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 21', 5, '2024-01-08T22:34:17.303365+01:00'::timestamptz, 535, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 21', 5, datetime.datetime(2024, 1, 8, 22, 34, 17, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 535, False); alias=default
DEBUG 2024-03-03 09:48:23,389 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 16', 5, '2023-12-19T23:35:54.303365+01:00'::timestamptz, 423, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 16', 5, datetime.datetime(2023, 12, 19, 23, 35, 54, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 423, False); alias=default
DEBUG 2024-03-03 09:48:23,390 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 1, 'Player 9', 11, '2024-01-13T07:39:39.303365+01:00'::timestamptz, 143, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 1, 'Player 9', 11, datetime.datetime(2024, 1, 13, 7, 39, 39, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 143, False); alias=default
DEBUG 2024-03-03 09:48:23,391 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 20', 5, '2023-11-10T03:31:04.303365+01:00'::timestamptz, 125, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 20', 5, datetime.datetime(2023, 11, 10, 3, 31, 4, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 125, False); alias=default
DEBUG 2024-03-03 09:48:23,392 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 10, 'Player 15', 11, '2024-02-25T15:19:13.303365+01:00'::timestamptz, 409, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 10, 'Player 15', 11, datetime.datetime(2024, 2, 25, 15, 19, 13, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 409, False); alias=default
DEBUG 2024-03-03 09:48:23,393 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 10, 'Player 27', 11, '2023-11-18T02:50:12.303365+01:00'::timestamptz, 368, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 10, 'Player 27', 11, datetime.datetime(2023, 11, 18, 2, 50, 12, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 368, False); alias=default
DEBUG 2024-03-03 09:48:23,394 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 7', 0, '2023-11-05T23:03:31.303365+01:00'::timestamptz, 977, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 7', 0, datetime.datetime(2023, 11, 5, 23, 3, 31, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 977, False); alias=default
DEBUG 2024-03-03 09:48:23,396 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 11, 'Player 3', 10, '2023-11-24T05:19:20.303365+01:00'::timestamptz, 491, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 11, 'Player 3', 10, datetime.datetime(2023, 11, 24, 5, 19, 20, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 491, False); alias=default
DEBUG 2024-03-03 09:48:23,398 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 1', 1, '2023-11-15T15:25:42.303365+01:00'::timestamptz, 724, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 1', 1, datetime.datetime(2023, 11, 15, 15, 25, 42, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 724, False); alias=default
DEBUG 2024-03-03 09:48:23,400 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 1', 8, '2024-01-29T03:59:08.303365+01:00'::timestamptz, 714, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 1', 8, datetime.datetime(2024, 1, 29, 3, 59, 8, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 714, False); alias=default
DEBUG 2024-03-03 09:48:23,401 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 0, 'Player 34', 11, '2023-11-14T09:39:53.303365+01:00'::timestamptz, 675, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 0, 'Player 34', 11, datetime.datetime(2023, 11, 14, 9, 39, 53, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 675, False); alias=default
DEBUG 2024-03-03 09:48:23,402 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 9, 'Player 5', 11, '2024-02-13T08:13:46.303365+01:00'::timestamptz, 363, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 9, 'Player 5', 11, datetime.datetime(2024, 2, 13, 8, 13, 46, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 363, False); alias=default
DEBUG 2024-03-03 09:48:23,404 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 3, 'Player 20', 11, '2023-12-05T02:52:11.303365+01:00'::timestamptz, 709, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 3, 'Player 20', 11, datetime.datetime(2023, 12, 5, 2, 52, 11, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 709, False); alias=default
DEBUG 2024-03-03 09:48:23,405 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 2', 4, '2023-12-10T21:24:15.303365+01:00'::timestamptz, 823, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 2', 4, datetime.datetime(2023, 12, 10, 21, 24, 15, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 823, False); alias=default
DEBUG 2024-03-03 09:48:23,406 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 23', 4, '2024-01-29T15:08:51.303365+01:00'::timestamptz, 724, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 23', 4, datetime.datetime(2024, 1, 29, 15, 8, 51, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 724, False); alias=default
DEBUG 2024-03-03 09:48:23,407 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 6, 'Player 38', 11, '2024-01-02T09:17:29.303365+01:00'::timestamptz, 572, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 6, 'Player 38', 11, datetime.datetime(2024, 1, 2, 9, 17, 29, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 572, False); alias=default
DEBUG 2024-03-03 09:48:23,408 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 11, 'Player 29', 8, '2023-12-27T06:26:20.303365+01:00'::timestamptz, 189, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 11, 'Player 29', 8, datetime.datetime(2023, 12, 27, 6, 26, 20, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 189, False); alias=default
DEBUG 2024-03-03 09:48:23,410 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 4, 'Player 0', 11, '2024-01-25T19:55:48.303365+01:00'::timestamptz, 617, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 4, 'Player 0', 11, datetime.datetime(2024, 1, 25, 19, 55, 48, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 617, False); alias=default
DEBUG 2024-03-03 09:48:23,411 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 6, 'Player 20', 11, '2023-11-21T05:55:51.303365+01:00'::timestamptz, 652, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 6, 'Player 20', 11, datetime.datetime(2023, 11, 21, 5, 55, 51, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 652, False); alias=default
DEBUG 2024-03-03 09:48:23,413 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 18', 1, '2024-02-21T06:10:56.303365+01:00'::timestamptz, 913, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 18', 1, datetime.datetime(2024, 2, 21, 6, 10, 56, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 913, False); alias=default
DEBUG 2024-03-03 09:48:23,415 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 7, 'Player 20', 11, '2023-11-21T15:07:49.303365+01:00'::timestamptz, 417, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 7, 'Player 20', 11, datetime.datetime(2023, 11, 21, 15, 7, 49, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 417, False); alias=default
DEBUG 2024-03-03 09:48:23,416 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 11, 'Player 2', 3, '2023-12-11T12:54:45.303365+01:00'::timestamptz, 254, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 11, 'Player 2', 3, datetime.datetime(2023, 12, 11, 12, 54, 45, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 254, False); alias=default
DEBUG 2024-03-03 09:48:23,418 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 1, 'Player 13', 11, '2024-01-07T16:00:49.303365+01:00'::timestamptz, 228, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 1, 'Player 13', 11, datetime.datetime(2024, 1, 7, 16, 0, 49, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 228, False); alias=default
DEBUG 2024-03-03 09:48:23,419 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 41', 7, '2023-11-20T17:22:38.303365+01:00'::timestamptz, 586, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 41', 7, datetime.datetime(2023, 11, 20, 17, 22, 38, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 586, False); alias=default
DEBUG 2024-03-03 09:48:23,420 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 11, 'Player 34', 0, '2024-02-06T06:12:16.303365+01:00'::timestamptz, 554, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 11, 'Player 34', 0, datetime.datetime(2024, 2, 6, 6, 12, 16, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 554, False); alias=default
DEBUG 2024-03-03 09:48:23,421 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 43', 3, '2024-02-28T06:27:46.303365+01:00'::timestamptz, 764, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 43', 3, datetime.datetime(2024, 2, 28, 6, 27, 46, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 764, False); alias=default
DEBUG 2024-03-03 09:48:23,423 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 2, 'Player 3', 11, '2024-01-04T01:41:18.303365+01:00'::timestamptz, 935, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 2, 'Player 3', 11, datetime.datetime(2024, 1, 4, 1, 41, 18, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 935, False); alias=default
DEBUG 2024-03-03 09:48:23,424 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 2, 'Player 13', 11, '2024-02-03T08:47:43.303365+01:00'::timestamptz, 284, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 2, 'Player 13', 11, datetime.datetime(2024, 2, 3, 8, 47, 43, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 284, False); alias=default
DEBUG 2024-03-03 09:48:23,425 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 15', 3, '2023-11-07T00:27:04.303365+01:00'::timestamptz, 788, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 15', 3, datetime.datetime(2023, 11, 7, 0, 27, 4, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 788, False); alias=default
DEBUG 2024-03-03 09:48:23,426 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 8, 'Player 8', 11, '2024-01-14T14:22:37.303365+01:00'::timestamptz, 447, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 8, 'Player 8', 11, datetime.datetime(2024, 1, 14, 14, 22, 37, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 447, False); alias=default
DEBUG 2024-03-03 09:48:23,428 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 34', 6, '2023-11-22T09:32:29.303365+01:00'::timestamptz, 280, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 34', 6, datetime.datetime(2023, 11, 22, 9, 32, 29, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 280, False); alias=default
DEBUG 2024-03-03 09:48:23,429 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 9, 'Player 46', 11, '2023-11-14T01:38:41.303365+01:00'::timestamptz, 961, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 9, 'Player 46', 11, datetime.datetime(2023, 11, 14, 1, 38, 41, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 961, False); alias=default
DEBUG 2024-03-03 09:48:23,431 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 47', 0, 'Player 21', 11, '2023-12-13T04:32:20.303365+01:00'::timestamptz, 423, false) RETURNING "pong_gamedata"."id"; args=('Player 47', 0, 'Player 21', 11, datetime.datetime(2023, 12, 13, 4, 32, 20, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 423, False); alias=default
DEBUG 2024-03-03 09:48:23,433 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 24', 4, '2023-12-13T06:28:10.303365+01:00'::timestamptz, 945, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 24', 4, datetime.datetime(2023, 12, 13, 6, 28, 10, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 945, False); alias=default
DEBUG 2024-03-03 09:48:23,434 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 4, 'Player 47', 11, '2023-12-26T02:49:59.303365+01:00'::timestamptz, 171, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 4, 'Player 47', 11, datetime.datetime(2023, 12, 26, 2, 49, 59, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 171, False); alias=default
DEBUG 2024-03-03 09:48:23,436 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 0, 'Player 1', 11, '2024-03-01T15:39:27.303365+01:00'::timestamptz, 388, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 0, 'Player 1', 11, datetime.datetime(2024, 3, 1, 15, 39, 27, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 388, False); alias=default
DEBUG 2024-03-03 09:48:23,437 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 2, 'Player 40', 11, '2024-03-02T06:48:37.303365+01:00'::timestamptz, 434, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 2, 'Player 40', 11, datetime.datetime(2024, 3, 2, 6, 48, 37, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 434, False); alias=default
DEBUG 2024-03-03 09:48:23,438 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 5, 'Player 0', 11, '2023-11-13T16:36:59.303365+01:00'::timestamptz, 680, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 5, 'Player 0', 11, datetime.datetime(2023, 11, 13, 16, 36, 59, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 680, False); alias=default
DEBUG 2024-03-03 09:48:23,439 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 37', 2, '2023-12-04T08:55:03.303365+01:00'::timestamptz, 850, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 37', 2, datetime.datetime(2023, 12, 4, 8, 55, 3, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 850, False); alias=default
DEBUG 2024-03-03 09:48:23,441 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 48', 11, 'Player 9', 3, '2023-11-04T00:36:19.303365+01:00'::timestamptz, 697, false) RETURNING "pong_gamedata"."id"; args=('Player 48', 11, 'Player 9', 3, datetime.datetime(2023, 11, 4, 0, 36, 19, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 697, False); alias=default
DEBUG 2024-03-03 09:48:23,442 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 8, 'Player 48', 11, '2024-01-15T09:31:09.303365+01:00'::timestamptz, 676, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 8, 'Player 48', 11, datetime.datetime(2024, 1, 15, 9, 31, 9, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 676, False); alias=default
DEBUG 2024-03-03 09:48:23,443 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 2', 5, '2023-12-29T15:02:58.303365+01:00'::timestamptz, 365, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 2', 5, datetime.datetime(2023, 12, 29, 15, 2, 58, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 365, False); alias=default
DEBUG 2024-03-03 09:48:23,444 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 5, 'Player 17', 11, '2024-03-01T12:20:00.303365+01:00'::timestamptz, 577, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 5, 'Player 17', 11, datetime.datetime(2024, 3, 1, 12, 20, 0, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 577, False); alias=default
DEBUG 2024-03-03 09:48:23,446 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 48', 11, 'Player 32', 10, '2023-12-14T06:32:18.303365+01:00'::timestamptz, 833, false) RETURNING "pong_gamedata"."id"; args=('Player 48', 11, 'Player 32', 10, datetime.datetime(2023, 12, 14, 6, 32, 18, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 833, False); alias=default
DEBUG 2024-03-03 09:48:23,447 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 8, 'Player 14', 11, '2024-01-22T16:57:39.303365+01:00'::timestamptz, 202, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 8, 'Player 14', 11, datetime.datetime(2024, 1, 22, 16, 57, 39, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 202, False); alias=default
DEBUG 2024-03-03 09:48:23,449 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 4, 'Player 45', 11, '2023-11-25T15:36:12.303365+01:00'::timestamptz, 705, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 4, 'Player 45', 11, datetime.datetime(2023, 11, 25, 15, 36, 12, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 705, False); alias=default
DEBUG 2024-03-03 09:48:23,451 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 11, 'Player 4', 8, '2024-01-20T09:03:44.303365+01:00'::timestamptz, 298, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 11, 'Player 4', 8, datetime.datetime(2024, 1, 20, 9, 3, 44, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 298, False); alias=default
DEBUG 2024-03-03 09:48:23,452 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 17', 7, '2023-12-10T05:54:52.303365+01:00'::timestamptz, 956, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 17', 7, datetime.datetime(2023, 12, 10, 5, 54, 52, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 956, False); alias=default
DEBUG 2024-03-03 09:48:23,453 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 19', 0, '2023-12-28T21:20:34.303365+01:00'::timestamptz, 942, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 19', 0, datetime.datetime(2023, 12, 28, 21, 20, 34, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 942, False); alias=default
DEBUG 2024-03-03 09:48:23,454 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 8', 0, '2023-11-05T14:02:32.303365+01:00'::timestamptz, 783, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 8', 0, datetime.datetime(2023, 11, 5, 14, 2, 32, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 783, False); alias=default
DEBUG 2024-03-03 09:48:23,456 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 11, 'Player 3', 5, '2023-12-26T16:45:12.303365+01:00'::timestamptz, 21, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 11, 'Player 3', 5, datetime.datetime(2023, 12, 26, 16, 45, 12, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 21, False); alias=default
DEBUG 2024-03-03 09:48:23,457 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 11, 'Player 56', 1, '2024-02-06T09:25:15.303365+01:00'::timestamptz, 634, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 11, 'Player 56', 1, datetime.datetime(2024, 2, 6, 9, 25, 15, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 634, False); alias=default
DEBUG 2024-03-03 09:48:23,458 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 0, 'Player 20', 11, '2024-01-02T07:57:11.303365+01:00'::timestamptz, 254, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 0, 'Player 20', 11, datetime.datetime(2024, 1, 2, 7, 57, 11, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 254, False); alias=default
DEBUG 2024-03-03 09:48:23,459 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 11, 'Player 15', 8, '2023-11-04T23:52:32.303365+01:00'::timestamptz, 146, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 11, 'Player 15', 8, datetime.datetime(2023, 11, 4, 23, 52, 32, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 146, False); alias=default
DEBUG 2024-03-03 09:48:23,461 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 0', 1, '2024-02-08T14:21:06.303365+01:00'::timestamptz, 504, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 0', 1, datetime.datetime(2024, 2, 8, 14, 21, 6, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 504, False); alias=default
DEBUG 2024-03-03 09:48:23,462 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 55', 11, 'Player 2', 4, '2023-12-28T08:39:51.303365+01:00'::timestamptz, 289, false) RETURNING "pong_gamedata"."id"; args=('Player 55', 11, 'Player 2', 4, datetime.datetime(2023, 12, 28, 8, 39, 51, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 289, False); alias=default
DEBUG 2024-03-03 09:48:23,464 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 5, 'Player 5', 11, '2024-01-18T21:15:35.303365+01:00'::timestamptz, 95, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 5, 'Player 5', 11, datetime.datetime(2024, 1, 18, 21, 15, 35, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 95, False); alias=default
DEBUG 2024-03-03 09:48:23,466 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 51', 0, 'Player 19', 11, '2024-03-02T18:51:11.303365+01:00'::timestamptz, 352, false) RETURNING "pong_gamedata"."id"; args=('Player 51', 0, 'Player 19', 11, datetime.datetime(2024, 3, 2, 18, 51, 11, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 352, False); alias=default
DEBUG 2024-03-03 09:48:23,467 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 2, 'Player 24', 11, '2024-03-03T03:05:42.303365+01:00'::timestamptz, 838, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 2, 'Player 24', 11, datetime.datetime(2024, 3, 3, 3, 5, 42, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 838, False); alias=default
DEBUG 2024-03-03 09:48:23,468 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 7, 'Player 34', 11, '2023-11-17T20:47:28.303365+01:00'::timestamptz, 601, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 7, 'Player 34', 11, datetime.datetime(2023, 11, 17, 20, 47, 28, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 601, False); alias=default
DEBUG 2024-03-03 09:48:23,470 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 59', 11, 'Player 54', 0, '2023-11-25T07:29:57.303365+01:00'::timestamptz, 536, false) RETURNING "pong_gamedata"."id"; args=('Player 59', 11, 'Player 54', 0, datetime.datetime(2023, 11, 25, 7, 29, 57, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 536, False); alias=default
DEBUG 2024-03-03 09:48:23,471 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 37', 5, '2023-11-22T18:30:18.303365+01:00'::timestamptz, 365, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 37', 5, datetime.datetime(2023, 11, 22, 18, 30, 18, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 365, False); alias=default
DEBUG 2024-03-03 09:48:23,472 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 3', 3, '2024-01-04T15:34:31.303365+01:00'::timestamptz, 254, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 3', 3, datetime.datetime(2024, 1, 4, 15, 34, 31, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 254, False); alias=default
DEBUG 2024-03-03 09:48:23,474 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 33', 2, '2024-02-21T04:06:41.303365+01:00'::timestamptz, 741, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 33', 2, datetime.datetime(2024, 2, 21, 4, 6, 41, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 741, False); alias=default
DEBUG 2024-03-03 09:48:23,475 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 51', 11, 'Player 63', 7, '2023-11-21T18:58:05.303365+01:00'::timestamptz, 614, false) RETURNING "pong_gamedata"."id"; args=('Player 51', 11, 'Player 63', 7, datetime.datetime(2023, 11, 21, 18, 58, 5, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 614, False); alias=default
DEBUG 2024-03-03 09:48:23,476 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 6', 2, '2024-02-02T06:09:45.303365+01:00'::timestamptz, 86, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 6', 2, datetime.datetime(2024, 2, 2, 6, 9, 45, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 86, False); alias=default
DEBUG 2024-03-03 09:48:23,478 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 9, 'Player 27', 11, '2023-11-09T15:12:38.303365+01:00'::timestamptz, 983, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 9, 'Player 27', 11, datetime.datetime(2023, 11, 9, 15, 12, 38, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 983, False); alias=default
DEBUG 2024-03-03 09:48:23,479 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 60', 0, 'Player 14', 11, '2024-01-24T13:20:26.303365+01:00'::timestamptz, 212, false) RETURNING "pong_gamedata"."id"; args=('Player 60', 0, 'Player 14', 11, datetime.datetime(2024, 1, 24, 13, 20, 26, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 212, False); alias=default
DEBUG 2024-03-03 09:48:23,481 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,483 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 1', 5, '2024-01-13T00:43:07.303365+01:00'::timestamptz, 493, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 1', 5, datetime.datetime(2024, 1, 13, 0, 43, 7, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 493, True); alias=default
DEBUG 2024-03-03 09:48:23,484 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 6, 'Player 2', 11, '2024-01-13T00:43:01.303365+01:00'::timestamptz, 817, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 6, 'Player 2', 11, datetime.datetime(2024, 1, 13, 0, 43, 1, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 817, True); alias=default
DEBUG 2024-03-03 09:48:23,485 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 2', 9, '2024-01-13T00:44:29.303365+01:00'::timestamptz, 588, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 2', 9, datetime.datetime(2024, 1, 13, 0, 44, 29, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 588, True); alias=default
DEBUG 2024-03-03 09:48:23,487 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2024-01-13T00:44:29.303365+01:00'::timestamptz, 905, '["Player 12", "Player 2", "Player 1", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2024, 1, 13, 0, 44, 29, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 905, <psycopg2._json.Json object at 0x7fb1e21b9e80>, '0x0'); alias=default
DEBUG 2024-03-03 09:48:23,488 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 3, 'Player 8', 11, '2023-11-29T09:20:23.303365+01:00'::timestamptz, 735, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 3, 'Player 8', 11, datetime.datetime(2023, 11, 29, 9, 20, 23, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 735, True); alias=default
DEBUG 2024-03-03 09:48:23,490 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 15', 10, '2023-11-29T09:19:06.303365+01:00'::timestamptz, 397, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 15', 10, datetime.datetime(2023, 11, 29, 9, 19, 6, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 397, True); alias=default
DEBUG 2024-03-03 09:48:23,491 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 9, 'Player 7', 11, '2023-11-29T09:22:28.303365+01:00'::timestamptz, 541, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 9, 'Player 7', 11, datetime.datetime(2023, 11, 29, 9, 22, 28, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 541, True); alias=default
DEBUG 2024-03-03 09:48:23,492 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2023-11-29T09:22:28.303365+01:00'::timestamptz, 860, '["Player 7", "Player 8", "Player 1", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2023, 11, 29, 9, 22, 28, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 860, <psycopg2._json.Json object at 0x7fb1e21ba870>, '0x0'); alias=default
DEBUG 2024-03-03 09:48:23,494 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 10', 7, '2023-11-09T10:44:16.303365+01:00'::timestamptz, 478, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 10', 7, datetime.datetime(2023, 11, 9, 10, 44, 16, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 478, True); alias=default
DEBUG 2024-03-03 09:48:23,495 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 9, 'Player 7', 11, '2023-11-09T10:46:14.303365+01:00'::timestamptz, 496, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 9, 'Player 7', 11, datetime.datetime(2023, 11, 9, 10, 46, 14, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 496, True); alias=default
DEBUG 2024-03-03 09:48:23,497 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 7', 5, '2023-11-09T10:51:00.303365+01:00'::timestamptz, 420, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 7', 5, datetime.datetime(2023, 11, 9, 10, 51, 0, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 420, True); alias=default
DEBUG 2024-03-03 09:48:23,499 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2023-11-09T10:51:00.303365+01:00'::timestamptz, 882, '["Player 14", "Player 7", "Player 10", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2023, 11, 9, 10, 51, 0, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 882, <psycopg2._json.Json object at 0x7fb1e21b9e80>, '0x0'); alias=default
DEBUG 2024-03-03 09:48:23,500 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 1', 8, '2024-02-05T17:49:55.303365+01:00'::timestamptz, 81, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 1', 8, datetime.datetime(2024, 2, 5, 17, 49, 55, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 81, True); alias=default
DEBUG 2024-03-03 09:48:23,502 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 12', 1, '2024-02-05T17:52:47.303365+01:00'::timestamptz, 355, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 12', 1, datetime.datetime(2024, 2, 5, 17, 52, 47, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 355, True); alias=default
DEBUG 2024-03-03 09:48:23,503 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 0', 4, '2024-02-05T17:58:40.303365+01:00'::timestamptz, 739, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 0', 4, datetime.datetime(2024, 2, 5, 17, 58, 40, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 739, True); alias=default
DEBUG 2024-03-03 09:48:23,504 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2024-02-05T17:58:40.303365+01:00'::timestamptz, 708, '["Player 11", "Player 0", "Player 1", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2024, 2, 5, 17, 58, 40, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 708, <psycopg2._json.Json object at 0x7fb1e2024770>, '0x0'); alias=default
DEBUG 2024-03-03 09:48:23,505 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 3', 4, '2024-01-02T13:04:36.303365+01:00'::timestamptz, 206, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 3', 4, datetime.datetime(2024, 1, 2, 13, 4, 36, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 206, True); alias=default
DEBUG 2024-03-03 09:48:23,507 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 12', 3, '2024-01-02T13:17:09.303365+01:00'::timestamptz, 989, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 12', 3, datetime.datetime(2024, 1, 2, 13, 17, 9, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 989, True); alias=default
DEBUG 2024-03-03 09:48:23,508 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 1, 'Player 5', 11, '2024-01-02T13:17:18.303365+01:00'::timestamptz, 493, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 1, 'Player 5', 11, datetime.datetime(2024, 1, 2, 13, 17, 18, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 493, True); alias=default
DEBUG 2024-03-03 09:48:23,509 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2024-01-02T13:17:18.303365+01:00'::timestamptz, 998, '["Player 5", "Player 1", "Player 3", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2024, 1, 2, 13, 17, 18, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 998, <psycopg2._json.Json object at 0x7fb1e220d910>, '0x0'); alias=default
DEBUG 2024-03-03 09:48:23,510 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 17', 0, '2023-11-28T14:45:36.303365+01:00'::timestamptz, 86, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 17', 0, datetime.datetime(2023, 11, 28, 14, 45, 36, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 86, True); alias=default
DEBUG 2024-03-03 09:48:23,512 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 1, 'Player 13', 11, '2023-11-28T14:47:23.303365+01:00'::timestamptz, 610, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 1, 'Player 13', 11, datetime.datetime(2023, 11, 28, 14, 47, 23, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 610, True); alias=default
DEBUG 2024-03-03 09:48:23,513 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 13', 5, '2023-11-28T14:52:09.303365+01:00'::timestamptz, 265, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 13', 5, datetime.datetime(2023, 11, 28, 14, 52, 9, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 265, True); alias=default
DEBUG 2024-03-03 09:48:23,515 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2023-11-28T14:52:09.303365+01:00'::timestamptz, 896, '["Player 6", "Player 13", "Player 17", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2023, 11, 28, 14, 52, 9, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 896, <psycopg2._json.Json object at 0x7fb1e220d190>, '0x0'); alias=default
DEBUG 2024-03-03 09:48:23,516 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 6, 'Player 10', 11, '2024-02-27T19:39:45.303365+01:00'::timestamptz, 180, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 6, 'Player 10', 11, datetime.datetime(2024, 2, 27, 19, 39, 45, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 180, True); alias=default
DEBUG 2024-03-03 09:48:23,518 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 2, 'Player 7', 11, '2024-02-27T19:40:24.303365+01:00'::timestamptz, 56, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 2, 'Player 7', 11, datetime.datetime(2024, 2, 27, 19, 40, 24, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 56, True); alias=default
DEBUG 2024-03-03 09:48:23,519 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 10, 'Player 7', 11, '2024-02-27T19:46:17.303365+01:00'::timestamptz, 150, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 10, 'Player 7', 11, datetime.datetime(2024, 2, 27, 19, 46, 17, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 150, True); alias=default
DEBUG 2024-03-03 09:48:23,520 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2024-02-27T19:46:17.303365+01:00'::timestamptz, 572, '["Player 7", "Player 10", "Player 15", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2024, 2, 27, 19, 46, 17, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 572, <psycopg2._json.Json object at 0x7fb1e220d190>, '0x0'); alias=default
DEBUG 2024-03-03 09:48:23,521 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 1', 5, '2024-03-02T14:37:05.303365+01:00'::timestamptz, 641, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 1', 5, datetime.datetime(2024, 3, 2, 14, 37, 5, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 641, True); alias=default
DEBUG 2024-03-03 09:48:23,523 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 18', 3, '2024-03-02T14:39:56.303365+01:00'::timestamptz, 824, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 18', 3, datetime.datetime(2024, 3, 2, 14, 39, 56, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 824, True); alias=default
DEBUG 2024-03-03 09:48:23,524 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 6, 'Player 2', 11, '2024-03-02T14:41:30.303365+01:00'::timestamptz, 425, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 6, 'Player 2', 11, datetime.datetime(2024, 3, 2, 14, 41, 30, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 425, True); alias=default
DEBUG 2024-03-03 09:48:23,525 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2024-03-02T14:41:30.303365+01:00'::timestamptz, 918, '["Player 2", "Player 8", "Player 1", "Player 18"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2024, 3, 2, 14, 41, 30, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 918, <psycopg2._json.Json object at 0x7fb1e20256a0>, '0x0'); alias=default
DEBUG 2024-03-03 09:48:23,526 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 4, 'Player 19', 11, '2023-11-02T02:55:28.303365+01:00'::timestamptz, 205, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 4, 'Player 19', 11, datetime.datetime(2023, 11, 2, 2, 55, 28, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 205, True); alias=default
DEBUG 2024-03-03 09:48:23,528 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 7', 6, '2023-11-02T02:59:07.303365+01:00'::timestamptz, 306, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 7', 6, datetime.datetime(2023, 11, 2, 2, 59, 7, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 306, True); alias=default
DEBUG 2024-03-03 09:48:23,529 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 2', 5, '2023-11-02T03:02:33.303365+01:00'::timestamptz, 545, true) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 2', 5, datetime.datetime(2023, 11, 2, 3, 2, 33, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 545, True); alias=default
DEBUG 2024-03-03 09:48:23,530 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2023-11-02T03:02:33.303365+01:00'::timestamptz, 630, '["Player 19", "Player 2", "Player 9", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2023, 11, 2, 3, 2, 33, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 630, <psycopg2._json.Json object at 0x7fb1e220cb60>, '0x0'); alias=default
DEBUG 2024-03-03 09:48:23,531 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 10', 4, '2023-11-29T23:37:11.303365+01:00'::timestamptz, 713, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 10', 4, datetime.datetime(2023, 11, 29, 23, 37, 11, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 713, True); alias=default
DEBUG 2024-03-03 09:48:23,533 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 19', 5, '2023-11-29T23:38:46.303365+01:00'::timestamptz, 6, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 19', 5, datetime.datetime(2023, 11, 29, 23, 38, 46, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 6, True); alias=default
DEBUG 2024-03-03 09:48:23,534 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 8, 'Player 4', 11, '2023-11-29T23:39:04.303365+01:00'::timestamptz, 321, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 8, 'Player 4', 11, datetime.datetime(2023, 11, 29, 23, 39, 4, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 321, True); alias=default
DEBUG 2024-03-03 09:48:23,536 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2023-11-29T23:39:04.303365+01:00'::timestamptz, 826, '["Player 4", "Player 6", "Player 10", "Player 19"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2023, 11, 29, 23, 39, 4, 303365, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 826, <psycopg2._json.Json object at 0x7fb1e2026ff0>, '0x0'); alias=default
DEBUG 2024-03-03 09:48:23,537 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,538 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,539 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 09:48:23,539 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,540 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 09:48:23,540 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,541 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 09:48:23,542 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 09:48:23,543 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 09:48:23,545 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 09:48:23,546 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,546 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 09:48:23,548 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,549 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 09:48:23,550 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,552 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,552 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,553 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,554 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,555 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,556 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 09:48:23,556 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,556 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 09:48:23,557 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,558 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 09:48:23,559 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 09:48:23,560 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,560 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 09:48:23,561 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,562 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 09:48:23,563 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,563 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,564 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,565 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,567 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,568 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,569 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 09:48:23,570 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,570 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 09:48:23,571 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,572 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 09:48:23,574 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 09:48:23,574 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,574 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 09:48:23,575 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,576 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 09:48:23,577 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,578 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,579 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,579 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,580 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,581 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,582 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 09:48:23,583 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,584 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 09:48:23,585 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,586 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 09:48:23,587 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 09:48:23,588 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 09:48:23,589 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:48:23,590 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 09:48:23,591 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:48:23,591 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 09:48:23,592 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,593 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,594 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,595 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,596 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:48:23,597 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
