DEBUG 2024-02-27 21:52:16,885 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:52:16,887 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:52:16,889 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:52:16,890 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:52:16,904 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:52:16,906 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:52:16,907 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:52:16,909 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:52:16,911 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 21:52:16,914 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 21:52:16,915 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:52:16,917 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:52:16,918 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:52:16,919 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:52:16,921 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:52:16,963 utils (0.009) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 8, 'Player 15', 11, '2024-01-07T15:25:58.918735+01:00'::timestamptz, 478, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 8, 'Player 15', 11, datetime.datetime(2024, 1, 7, 15, 25, 58, 918735, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 478, True); alias=default
DEBUG 2024-02-27 21:52:16,973 utils (0.009) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 3', 5, '2024-01-07T15:21:10.918735+01:00'::timestamptz, 436, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 3', 5, datetime.datetime(2024, 1, 7, 15, 21, 10, 918735, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 436, True); alias=default
DEBUG 2024-02-27 21:52:16,975 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 1, 'Player 8', 11, '2024-01-07T15:29:45.918735+01:00'::timestamptz, 66, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 1, 'Player 8', 11, datetime.datetime(2024, 1, 7, 15, 29, 45, 918735, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 66, True); alias=default
DEBUG 2024-02-27 21:52:16,976 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1865, 1866, 1867, '2024-01-07T15:29:45.918735+01:00'::timestamptz, 951, '["Player 8", "Player 15", "Player 7", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1865, 1866, 1867, datetime.datetime(2024, 1, 7, 15, 29, 45, 918735, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 951, <psycopg2._json.Json object at 0x7f0fa3426960>, '0x0'); alias=default
DEBUG 2024-02-27 21:52:16,977 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 12', 8, '2024-01-05T09:08:37.918735+01:00'::timestamptz, 99, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 12', 8, datetime.datetime(2024, 1, 5, 9, 8, 37, 918735, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 99, True); alias=default
DEBUG 2024-02-27 21:52:16,978 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 11', 10, '2024-01-05T09:08:49.918735+01:00'::timestamptz, 835, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 11', 10, datetime.datetime(2024, 1, 5, 9, 8, 49, 918735, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 835, True); alias=default
DEBUG 2024-02-27 21:52:16,980 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 8, 'Player 2', 11, '2024-01-05T09:10:24.918735+01:00'::timestamptz, 451, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 8, 'Player 2', 11, datetime.datetime(2024, 1, 5, 9, 10, 24, 918735, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 451, True); alias=default
DEBUG 2024-02-27 21:52:16,980 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1868, 1869, 1870, '2024-01-05T09:10:24.918735+01:00'::timestamptz, 930, '["Player 2", "Player 6", "Player 12", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1868, 1869, 1870, datetime.datetime(2024, 1, 5, 9, 10, 24, 918735, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 930, <psycopg2._json.Json object at 0x7f0fa34272f0>, '0x0'); alias=default
DEBUG 2024-02-27 21:52:16,982 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:52:16,982 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:52:16,983 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:52:16,984 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 21:52:16,985 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 21:52:16,986 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 21:52:16,988 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 21:52:16,990 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:52:16,991 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:52:16,992 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:52:16,993 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:52:16,994 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:52:16,996 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 7, 'Player 9', 11, '2023-11-10T19:38:16.992781+01:00'::timestamptz, 283, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 7, 'Player 9', 11, datetime.datetime(2023, 11, 10, 19, 38, 16, 992781, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 283, True); alias=default
DEBUG 2024-02-27 21:52:16,998 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 0, 'Player 10', 11, '2023-11-10T19:35:04.992781+01:00'::timestamptz, 535, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 0, 'Player 10', 11, datetime.datetime(2023, 11, 10, 19, 35, 4, 992781, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 535, True); alias=default
DEBUG 2024-02-27 21:52:16,999 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 10', 0, '2023-11-10T19:41:55.992781+01:00'::timestamptz, 474, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 10', 0, datetime.datetime(2023, 11, 10, 19, 41, 55, 992781, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 474, True); alias=default
DEBUG 2024-02-27 21:52:16,999 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1871, 1872, 1873, '2023-11-10T19:41:55.992781+01:00'::timestamptz, 946, '["Player 9", "Player 10", "Player 13", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1871, 1872, 1873, datetime.datetime(2023, 11, 10, 19, 41, 55, 992781, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 946, <psycopg2._json.Json object at 0x7f0fa3250650>, '0x0'); alias=default
DEBUG 2024-02-27 21:52:17,001 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 5, 'Player 11', 11, '2023-11-29T23:08:13.992781+01:00'::timestamptz, 482, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 5, 'Player 11', 11, datetime.datetime(2023, 11, 29, 23, 8, 13, 992781, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 482, True); alias=default
DEBUG 2024-02-27 21:52:17,002 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 8', 3, '2023-11-29T23:06:18.992781+01:00'::timestamptz, 761, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 8', 3, datetime.datetime(2023, 11, 29, 23, 6, 18, 992781, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 761, True); alias=default
DEBUG 2024-02-27 21:52:17,003 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 2, 'Player 7', 11, '2023-11-29T23:09:29.992781+01:00'::timestamptz, 745, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 2, 'Player 7', 11, datetime.datetime(2023, 11, 29, 23, 9, 29, 992781, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 745, True); alias=default
DEBUG 2024-02-27 21:52:17,004 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1874, 1875, 1876, '2023-11-29T23:09:29.992781+01:00'::timestamptz, 952, '["Player 7", "Player 11", "Player 2", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1874, 1875, 1876, datetime.datetime(2023, 11, 29, 23, 9, 29, 992781, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 952, <psycopg2._json.Json object at 0x7f0fa3250890>, '0x0'); alias=default
DEBUG 2024-02-27 21:52:17,005 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:52:17,006 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:52:17,007 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:52:17,008 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 21:52:17,010 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 21:52:17,011 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:52:17,012 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:52:17,012 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:52:17,013 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:52:17,014 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:52:17,016 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 11', 3, '2023-12-10T05:43:54.013119+01:00'::timestamptz, 566, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 11', 3, datetime.datetime(2023, 12, 10, 5, 43, 54, 13119, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 566, True); alias=default
DEBUG 2024-02-27 21:52:17,017 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 9, 'Player 3', 11, '2023-12-10T05:46:36.013119+01:00'::timestamptz, 188, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 9, 'Player 3', 11, datetime.datetime(2023, 12, 10, 5, 46, 36, 13119, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 188, True); alias=default
DEBUG 2024-02-27 21:52:17,018 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 7, 'Player 3', 11, '2023-12-10T05:46:36.013119+01:00'::timestamptz, 223, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 7, 'Player 3', 11, datetime.datetime(2023, 12, 10, 5, 46, 36, 13119, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 223, True); alias=default
DEBUG 2024-02-27 21:52:17,019 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1877, 1878, 1879, '2023-12-10T05:46:36.013119+01:00'::timestamptz, 728, '["Player 3", "Player 0", "Player 11", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1877, 1878, 1879, datetime.datetime(2023, 12, 10, 5, 46, 36, 13119, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 728, <psycopg2._json.Json object at 0x7f0fa3250560>, '0x0'); alias=default
DEBUG 2024-02-27 21:52:17,021 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 5, 'Player 6', 11, '2024-01-17T13:10:28.013119+01:00'::timestamptz, 115, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 5, 'Player 6', 11, datetime.datetime(2024, 1, 17, 13, 10, 28, 13119, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 115, True); alias=default
DEBUG 2024-02-27 21:52:17,022 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 1, 'Player 11', 11, '2024-01-17T13:07:16.013119+01:00'::timestamptz, 594, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 1, 'Player 11', 11, datetime.datetime(2024, 1, 17, 13, 7, 16, 13119, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 594, True); alias=default
DEBUG 2024-02-27 21:52:17,024 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 11', 2, '2024-01-17T13:11:41.013119+01:00'::timestamptz, 527, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 11', 2, datetime.datetime(2024, 1, 17, 13, 11, 41, 13119, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 527, True); alias=default
DEBUG 2024-02-27 21:52:17,024 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1880, 1881, 1882, '2024-01-17T13:11:41.013119+01:00'::timestamptz, 859, '["Player 6", "Player 11", "Player 15", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1880, 1881, 1882, datetime.datetime(2024, 1, 17, 13, 11, 41, 13119, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 859, <psycopg2._json.Json object at 0x7f0fa3251d00>, '0x0'); alias=default
DEBUG 2024-02-27 21:52:17,025 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:52:17,026 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:52:17,027 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:52:17,028 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 21:52:17,030 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 21:52:17,030 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:52:17,031 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:52:17,032 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:52:17,033 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:52:17,034 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:52:17,035 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 13', 1, '2023-11-15T20:10:17.032725+01:00'::timestamptz, 8, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 13', 1, datetime.datetime(2023, 11, 15, 20, 10, 17, 32725, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 8, True); alias=default
DEBUG 2024-02-27 21:52:17,036 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 4, 'Player 11', 11, '2023-11-15T20:12:54.032725+01:00'::timestamptz, 399, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 4, 'Player 11', 11, datetime.datetime(2023, 11, 15, 20, 12, 54, 32725, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 399, True); alias=default
DEBUG 2024-02-27 21:52:17,037 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 11', 5, '2023-11-15T20:17:12.032725+01:00'::timestamptz, 118, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 11', 5, datetime.datetime(2023, 11, 15, 20, 17, 12, 32725, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 118, True); alias=default
DEBUG 2024-02-27 21:52:17,038 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1883, 1884, 1885, '2023-11-15T20:17:12.032725+01:00'::timestamptz, 657, '["Player 6", "Player 11", "Player 13", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1883, 1884, 1885, datetime.datetime(2023, 11, 15, 20, 17, 12, 32725, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 657, <psycopg2._json.Json object at 0x7f0fa3250950>, '0x0'); alias=default
DEBUG 2024-02-27 21:52:17,040 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 11', 2, '2023-12-24T00:36:26.032725+01:00'::timestamptz, 28, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 11', 2, datetime.datetime(2023, 12, 24, 0, 36, 26, 32725, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 28, True); alias=default
DEBUG 2024-02-27 21:52:17,041 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 4, 'Player 8', 11, '2023-12-24T00:38:07.032725+01:00'::timestamptz, 178, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 4, 'Player 8', 11, datetime.datetime(2023, 12, 24, 0, 38, 7, 32725, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 178, True); alias=default
DEBUG 2024-02-27 21:52:17,043 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 8', 0, '2023-12-24T00:45:29.032725+01:00'::timestamptz, 768, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 8', 0, datetime.datetime(2023, 12, 24, 0, 45, 29, 32725, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 768, True); alias=default
DEBUG 2024-02-27 21:52:17,044 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1886, 1887, 1888, '2023-12-24T00:45:29.032725+01:00'::timestamptz, 620, '["Player 9", "Player 8", "Player 11", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1886, 1887, 1888, datetime.datetime(2023, 12, 24, 0, 45, 29, 32725, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 620, <psycopg2._json.Json object at 0x7f0fa32532c0>, '0x0'); alias=default
DEBUG 2024-02-27 21:52:17,045 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:52:17,045 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:52:17,046 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:52:17,047 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 21:52:17,048 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 21:52:17,050 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 21:52:17,050 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:52:17,051 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:52:17,052 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:52:17,053 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:52:17,054 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:52:17,055 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 9, 'Player 8', 11, '2023-12-28T08:28:40.052700+01:00'::timestamptz, 609, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 9, 'Player 8', 11, datetime.datetime(2023, 12, 28, 8, 28, 40, 52700, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 609, True); alias=default
DEBUG 2024-02-27 21:52:17,057 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 8, 'Player 1', 11, '2023-12-28T08:25:13.052700+01:00'::timestamptz, 79, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 8, 'Player 1', 11, datetime.datetime(2023, 12, 28, 8, 25, 13, 52700, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 79, True); alias=default
DEBUG 2024-02-27 21:52:17,058 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 2, 'Player 1', 11, '2023-12-28T08:34:27.052700+01:00'::timestamptz, 424, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 2, 'Player 1', 11, datetime.datetime(2023, 12, 28, 8, 34, 27, 52700, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 424, True); alias=default
DEBUG 2024-02-27 21:52:17,059 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1889, 1890, 1891, '2023-12-28T08:34:27.052700+01:00'::timestamptz, 956, '["Player 1", "Player 8", "Player 13", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1889, 1890, 1891, datetime.datetime(2023, 12, 28, 8, 34, 27, 52700, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 956, <psycopg2._json.Json object at 0x7f0fa3252930>, '0x0'); alias=default
DEBUG 2024-02-27 21:52:17,061 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 1, 'Player 2', 11, '2023-12-21T00:15:11.052700+01:00'::timestamptz, 705, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 1, 'Player 2', 11, datetime.datetime(2023, 12, 21, 0, 15, 11, 52700, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 705, True); alias=default
DEBUG 2024-02-27 21:52:17,062 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 8', 0, '2023-12-21T00:18:49.052700+01:00'::timestamptz, 981, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 8', 0, datetime.datetime(2023, 12, 21, 0, 18, 49, 52700, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 981, True); alias=default
DEBUG 2024-02-27 21:52:17,064 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 6', 2, '2023-12-21T00:18:58.052700+01:00'::timestamptz, 957, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 6', 2, datetime.datetime(2023, 12, 21, 0, 18, 58, 52700, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 957, True); alias=default
DEBUG 2024-02-27 21:52:17,064 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1892, 1893, 1894, '2023-12-21T00:18:58.052700+01:00'::timestamptz, 990, '["Player 2", "Player 6", "Player 12", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1892, 1893, 1894, datetime.datetime(2023, 12, 21, 0, 18, 58, 52700, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 990, <psycopg2._json.Json object at 0x7f0fa3253e30>, '0x0'); alias=default
DEBUG 2024-02-27 21:52:17,066 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:52:17,066 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
