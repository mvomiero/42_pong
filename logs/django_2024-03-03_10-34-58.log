DEBUG 2024-03-03 10:34:59,610 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:34:59,612 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:34:59,615 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:34:59,615 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:34:59,615 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 10:34:59,631 utils (0.016) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:34:59,632 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:34:59,633 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:34:59,635 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 10:34:59,638 utils (0.003) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:34:59,641 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 10:34:59,643 utils (0.002) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 10:34:59,645 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:34:59,649 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T10:34:59.645897+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 10, 34, 59, 645897, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:34:59,650 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:34:59,651 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:34:59,654 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 10:34:59,657 utils (0.002) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:34:59,661 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 10:34:59,666 utils (0.005) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 10:34:59,668 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:34:59,671 utils (0.003) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:34:59,679 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 10:34:59,684 utils (0.005) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:34:59,685 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:34:59,687 utils (0.002) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:34:59,688 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:34:59,690 utils (0.002) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:34:59,691 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 10:34:59,693 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 10:34:59,693 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:34:59,695 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:34:59,695 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 10:34:59,699 utils (0.004) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 10:34:59,699 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 10:34:59,702 utils (0.002) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 10:34:59,702 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 10:34:59,704 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:34:59,705 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:34:59,706 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:34:59,706 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:34:59,707 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:34:59,708 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 10:34:59,710 utils (0.002) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 10:34:59,710 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 10:34:59,712 utils (0.002) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:34:59,712 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 10:34:59,714 utils (0.002) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 10:34:59,714 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 10:34:59,717 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 10:34:59,717 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:34:59,718 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:34:59,719 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:34:59,719 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:34:59,720 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 10:34:59,721 utils (0.002) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 10:34:59,722 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 10:34:59,723 utils (0.002) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 10:34:59,724 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 10:34:59,725 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:34:59,726 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:34:59,726 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:34:59,727 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:34:59,727 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:34:59,728 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 10:34:59,729 utils (0.002) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 10:34:59,730 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 10:34:59,732 utils (0.002) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:34:59,733 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:34:59,734 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:34:59,736 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T10:34:59.735367+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 10, 34, 59, 735367, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:34:59,736 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:34:59,744 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:34:59,749 utils (0.005) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:34:59,750 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:34:59,751 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:34:59,751 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:34:59,752 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:34:59,753 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 10:34:59,754 utils (0.002) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 10:34:59,755 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 10:34:59,757 utils (0.002) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 10:34:59,758 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:34:59,760 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:34:59,764 utils (0.003) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T10:34:59.761299+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 10, 34, 59, 761299, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:34:59,764 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:34:59,786 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:34:59,787 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T10:34:59.786478+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 10, 34, 59, 786478, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:34:59,794 utils (0.007) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:34:59,794 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:34:59,810 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:34:59,811 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T10:34:59.810812+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 10, 34, 59, 810812, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:34:59,812 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:34:59,812 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:34:59,825 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 10:34:59,826 utils (0.001) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 10:34:59,843 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 10:34:59,844 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 10:34:59,846 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:34:59,847 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T10:34:59.846527+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 10, 34, 59, 846527, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:34:59,848 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:34:59,848 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:34:59,861 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 10:34:59,861 utils (0.001) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 10:34:59,864 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:34:59,865 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T10:34:59.864617+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 10, 34, 59, 864617, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:34:59,869 utils (0.004) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:34:59,870 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:34:59,884 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 10:34:59,886 utils (0.002) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 10:34:59,888 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:34:59,889 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T10:34:59.888497+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 10, 34, 59, 888497, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:34:59,890 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:34:59,890 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:34:59,904 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:34:59,904 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T10:34:59.904475+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 10, 34, 59, 904475, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:34:59,905 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:34:59,906 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:34:59,917 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 10:34:59,918 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 10:34:59,920 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:34:59,921 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T10:34:59.920977+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 10, 34, 59, 920977, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:34:59,922 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:34:59,923 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:34:59,924 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:34:59,925 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T10:34:59.924626+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 10, 34, 59, 924626, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:34:59,926 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:34:59,926 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:34:59,939 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:34:59,940 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T10:34:59.939671+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 10, 34, 59, 939671, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:34:59,941 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:34:59,941 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:34:59,950 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:34:59,954 utils (0.004) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:34:59,956 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:34:59,956 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T10:34:59.956314+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 10, 34, 59, 956314, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:34:59,957 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:34:59,958 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:34:59,964 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:34:59,966 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:34:59,968 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:34:59,969 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T10:34:59.968644+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 10, 34, 59, 968644, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:34:59,970 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:34:59,971 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:34:59,979 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:34:59,980 utils (0.001) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:34:59,983 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:34:59,984 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T10:34:59.983438+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 10, 34, 59, 983438, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:34:59,985 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:34:59,985 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:34:59,992 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:34:59,993 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T10:34:59.992807+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 10, 34, 59, 992807, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:34:59,994 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:34:59,994 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:35:00,004 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:35:00,006 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:35:00,008 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:35:00,009 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T10:35:00.008591+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 10, 35, 0, 8591, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:35:00,010 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:35:00,010 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:35:00,012 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 10:35:00,018 utils (0.006) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:35:00,020 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 10:35:00,025 utils (0.004) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 10:35:00,027 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:35:00,028 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T10:35:00.027524+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 10, 35, 0, 27524, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:35:00,029 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:35:00,029 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:35:00,031 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 10:35:00,036 utils (0.005) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:35:00,037 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 10:35:00,039 utils (0.002) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 10:35:00,039 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 10:35:00,041 utils (0.002) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 10:35:00,042 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:35:00,044 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:35:00,045 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T10:35:00.044427+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 10, 35, 0, 44427, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:35:00,048 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:35:00,049 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,067 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 10:35:00,068 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:35:00,069 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 10:35:00,071 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:35:00,072 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 10:35:00,076 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 10:35:00,076 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:35:00,078 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 10:35:00,079 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:35:00,080 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 10:35:00,082 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,084 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,085 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,112 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 10', 5, '2024-02-22T05:01:37.084676+01:00'::timestamptz, 228, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 10', 5, datetime.datetime(2024, 2, 22, 5, 1, 37, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 228, False); alias=default
DEBUG 2024-03-03 10:35:00,113 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 13', 9, '2024-01-06T23:36:40.084676+01:00'::timestamptz, 439, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 13', 9, datetime.datetime(2024, 1, 6, 23, 36, 40, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 439, False); alias=default
DEBUG 2024-03-03 10:35:00,115 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 10, 'Player 3', 11, '2023-12-17T14:29:50.084676+01:00'::timestamptz, 117, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 10, 'Player 3', 11, datetime.datetime(2023, 12, 17, 14, 29, 50, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 117, False); alias=default
DEBUG 2024-03-03 10:35:00,117 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 8, 'Player 17', 11, '2023-11-12T14:18:11.084676+01:00'::timestamptz, 172, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 8, 'Player 17', 11, datetime.datetime(2023, 11, 12, 14, 18, 11, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 172, False); alias=default
DEBUG 2024-03-03 10:35:00,119 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 7', 10, '2023-12-13T21:04:25.084676+01:00'::timestamptz, 367, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 7', 10, datetime.datetime(2023, 12, 13, 21, 4, 25, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 367, False); alias=default
DEBUG 2024-03-03 10:35:00,120 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 2, 'Player 1', 11, '2024-01-28T02:18:23.084676+01:00'::timestamptz, 986, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 2, 'Player 1', 11, datetime.datetime(2024, 1, 28, 2, 18, 23, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 986, False); alias=default
DEBUG 2024-03-03 10:35:00,121 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 12', 9, '2024-01-25T07:27:48.084676+01:00'::timestamptz, 737, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 12', 9, datetime.datetime(2024, 1, 25, 7, 27, 48, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 737, False); alias=default
DEBUG 2024-03-03 10:35:00,123 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 17', 6, '2024-03-01T05:10:53.084676+01:00'::timestamptz, 276, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 17', 6, datetime.datetime(2024, 3, 1, 5, 10, 53, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 276, False); alias=default
DEBUG 2024-03-03 10:35:00,124 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 5', 6, '2024-02-19T00:01:18.084676+01:00'::timestamptz, 361, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 5', 6, datetime.datetime(2024, 2, 19, 0, 1, 18, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 361, False); alias=default
DEBUG 2024-03-03 10:35:00,125 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 10, 'Player 10', 11, '2024-01-04T00:08:13.084676+01:00'::timestamptz, 796, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 10, 'Player 10', 11, datetime.datetime(2024, 1, 4, 0, 8, 13, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 796, False); alias=default
DEBUG 2024-03-03 10:35:00,126 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 1, 'Player 13', 11, '2023-12-08T02:34:16.084676+01:00'::timestamptz, 82, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 1, 'Player 13', 11, datetime.datetime(2023, 12, 8, 2, 34, 16, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 82, False); alias=default
DEBUG 2024-03-03 10:35:00,127 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 4', 4, '2024-01-18T17:32:14.084676+01:00'::timestamptz, 299, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 4', 4, datetime.datetime(2024, 1, 18, 17, 32, 14, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 299, False); alias=default
DEBUG 2024-03-03 10:35:00,129 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 4, 'Player 17', 11, '2023-11-02T04:00:08.084676+01:00'::timestamptz, 776, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 4, 'Player 17', 11, datetime.datetime(2023, 11, 2, 4, 0, 8, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 776, False); alias=default
DEBUG 2024-03-03 10:35:00,130 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 4', 1, '2024-01-17T00:08:23.084676+01:00'::timestamptz, 906, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 4', 1, datetime.datetime(2024, 1, 17, 0, 8, 23, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 906, False); alias=default
DEBUG 2024-03-03 10:35:00,131 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 0, 'Player 1', 11, '2023-11-28T15:58:08.084676+01:00'::timestamptz, 457, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 0, 'Player 1', 11, datetime.datetime(2023, 11, 28, 15, 58, 8, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 457, False); alias=default
DEBUG 2024-03-03 10:35:00,133 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 10', 3, '2023-11-14T00:29:26.084676+01:00'::timestamptz, 429, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 10', 3, datetime.datetime(2023, 11, 14, 0, 29, 26, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 429, False); alias=default
DEBUG 2024-03-03 10:35:00,135 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 0', 6, '2024-01-31T04:34:27.084676+01:00'::timestamptz, 837, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 0', 6, datetime.datetime(2024, 1, 31, 4, 34, 27, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 837, False); alias=default
DEBUG 2024-03-03 10:35:00,136 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 14', 2, '2024-02-23T12:55:12.084676+01:00'::timestamptz, 557, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 14', 2, datetime.datetime(2024, 2, 23, 12, 55, 12, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 557, False); alias=default
DEBUG 2024-03-03 10:35:00,137 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 10', 4, '2023-12-17T01:09:56.084676+01:00'::timestamptz, 225, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 10', 4, datetime.datetime(2023, 12, 17, 1, 9, 56, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 225, False); alias=default
DEBUG 2024-03-03 10:35:00,139 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 8, 'Player 7', 11, '2023-11-10T12:41:51.084676+01:00'::timestamptz, 416, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 8, 'Player 7', 11, datetime.datetime(2023, 11, 10, 12, 41, 51, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 416, False); alias=default
DEBUG 2024-03-03 10:35:00,140 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 11', 1, '2024-01-10T05:31:13.084676+01:00'::timestamptz, 782, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 11', 1, datetime.datetime(2024, 1, 10, 5, 31, 13, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 782, False); alias=default
DEBUG 2024-03-03 10:35:00,141 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 17', 2, '2023-11-09T09:35:23.084676+01:00'::timestamptz, 665, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 17', 2, datetime.datetime(2023, 11, 9, 9, 35, 23, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 665, False); alias=default
DEBUG 2024-03-03 10:35:00,142 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 5, 'Player 11', 11, '2024-02-15T12:07:33.084676+01:00'::timestamptz, 219, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 5, 'Player 11', 11, datetime.datetime(2024, 2, 15, 12, 7, 33, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 219, False); alias=default
DEBUG 2024-03-03 10:35:00,144 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 9', 4, '2024-02-05T07:36:10.084676+01:00'::timestamptz, 506, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 9', 4, datetime.datetime(2024, 2, 5, 7, 36, 10, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 506, False); alias=default
DEBUG 2024-03-03 10:35:00,146 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 1', 4, '2024-02-06T10:07:01.084676+01:00'::timestamptz, 937, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 1', 4, datetime.datetime(2024, 2, 6, 10, 7, 1, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 937, False); alias=default
DEBUG 2024-03-03 10:35:00,147 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 15', 4, '2024-01-04T18:09:22.084676+01:00'::timestamptz, 175, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 15', 4, datetime.datetime(2024, 1, 4, 18, 9, 22, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 175, False); alias=default
DEBUG 2024-03-03 10:35:00,148 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 18', 3, '2023-12-02T22:26:43.084676+01:00'::timestamptz, 621, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 18', 3, datetime.datetime(2023, 12, 2, 22, 26, 43, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 621, False); alias=default
DEBUG 2024-03-03 10:35:00,150 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 2, 'Player 18', 11, '2024-01-11T05:30:50.084676+01:00'::timestamptz, 209, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 2, 'Player 18', 11, datetime.datetime(2024, 1, 11, 5, 30, 50, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 209, False); alias=default
DEBUG 2024-03-03 10:35:00,152 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 10, 'Player 11', 11, '2023-12-07T17:28:24.084676+01:00'::timestamptz, 472, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 10, 'Player 11', 11, datetime.datetime(2023, 12, 7, 17, 28, 24, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 472, False); alias=default
DEBUG 2024-03-03 10:35:00,153 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 10, 'Player 28', 11, '2023-11-21T21:09:23.084676+01:00'::timestamptz, 515, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 10, 'Player 28', 11, datetime.datetime(2023, 11, 21, 21, 9, 23, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 515, False); alias=default
DEBUG 2024-03-03 10:35:00,154 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 2, 'Player 7', 11, '2024-01-10T00:44:14.084676+01:00'::timestamptz, 61, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 2, 'Player 7', 11, datetime.datetime(2024, 1, 10, 0, 44, 14, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 61, False); alias=default
DEBUG 2024-03-03 10:35:00,156 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 2, 'Player 11', 11, '2023-11-25T15:32:25.084676+01:00'::timestamptz, 503, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 2, 'Player 11', 11, datetime.datetime(2023, 11, 25, 15, 32, 25, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 503, False); alias=default
DEBUG 2024-03-03 10:35:00,157 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 22', 1, '2024-02-25T17:10:56.084676+01:00'::timestamptz, 34, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 22', 1, datetime.datetime(2024, 2, 25, 17, 10, 56, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 34, False); alias=default
DEBUG 2024-03-03 10:35:00,158 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 7, 'Player 12', 11, '2023-11-29T13:33:59.084676+01:00'::timestamptz, 350, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 7, 'Player 12', 11, datetime.datetime(2023, 11, 29, 13, 33, 59, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 350, False); alias=default
DEBUG 2024-03-03 10:35:00,159 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 24', 6, '2024-02-10T02:13:30.084676+01:00'::timestamptz, 942, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 24', 6, datetime.datetime(2024, 2, 10, 2, 13, 30, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 942, False); alias=default
DEBUG 2024-03-03 10:35:00,161 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 7', 7, '2023-11-21T00:36:06.084676+01:00'::timestamptz, 277, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 7', 7, datetime.datetime(2023, 11, 21, 0, 36, 6, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 277, False); alias=default
DEBUG 2024-03-03 10:35:00,162 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 7, 'Player 18', 11, '2023-11-30T19:21:47.084676+01:00'::timestamptz, 952, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 7, 'Player 18', 11, datetime.datetime(2023, 11, 30, 19, 21, 47, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 952, False); alias=default
DEBUG 2024-03-03 10:35:00,163 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 22', 4, '2023-12-19T11:40:06.084676+01:00'::timestamptz, 879, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 22', 4, datetime.datetime(2023, 12, 19, 11, 40, 6, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 879, False); alias=default
DEBUG 2024-03-03 10:35:00,165 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 7, 'Player 24', 11, '2024-01-18T00:19:15.084676+01:00'::timestamptz, 610, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 7, 'Player 24', 11, datetime.datetime(2024, 1, 18, 0, 19, 15, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 610, False); alias=default
DEBUG 2024-03-03 10:35:00,167 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 6, 'Player 32', 11, '2024-01-02T06:46:08.084676+01:00'::timestamptz, 373, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 6, 'Player 32', 11, datetime.datetime(2024, 1, 2, 6, 46, 8, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 373, False); alias=default
DEBUG 2024-03-03 10:35:00,168 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 17', 1, '2024-01-25T22:22:16.084676+01:00'::timestamptz, 841, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 17', 1, datetime.datetime(2024, 1, 25, 22, 22, 16, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 841, False); alias=default
DEBUG 2024-03-03 10:35:00,170 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 3, 'Player 17', 11, '2024-02-27T03:15:13.084676+01:00'::timestamptz, 89, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 3, 'Player 17', 11, datetime.datetime(2024, 2, 27, 3, 15, 13, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 89, False); alias=default
DEBUG 2024-03-03 10:35:00,171 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 2', 6, '2024-02-12T09:17:44.084676+01:00'::timestamptz, 93, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 2', 6, datetime.datetime(2024, 2, 12, 9, 17, 44, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 93, False); alias=default
DEBUG 2024-03-03 10:35:00,173 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 11, 'Player 13', 7, '2024-01-03T18:46:00.084676+01:00'::timestamptz, 682, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 11, 'Player 13', 7, datetime.datetime(2024, 1, 3, 18, 46, 0, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 682, False); alias=default
DEBUG 2024-03-03 10:35:00,174 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 6, 'Player 13', 11, '2024-01-20T05:17:23.084676+01:00'::timestamptz, 848, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 6, 'Player 13', 11, datetime.datetime(2024, 1, 20, 5, 17, 23, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 848, False); alias=default
DEBUG 2024-03-03 10:35:00,175 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 19', 6, '2023-11-08T00:36:59.084676+01:00'::timestamptz, 220, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 19', 6, datetime.datetime(2023, 11, 8, 0, 36, 59, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 220, False); alias=default
DEBUG 2024-03-03 10:35:00,176 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 9, 'Player 31', 11, '2023-11-04T21:33:58.084676+01:00'::timestamptz, 96, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 9, 'Player 31', 11, datetime.datetime(2023, 11, 4, 21, 33, 58, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 96, False); alias=default
DEBUG 2024-03-03 10:35:00,178 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 38', 6, '2023-11-05T02:30:18.084676+01:00'::timestamptz, 533, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 38', 6, datetime.datetime(2023, 11, 5, 2, 30, 18, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 533, False); alias=default
DEBUG 2024-03-03 10:35:00,179 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 5, 'Player 22', 11, '2024-01-18T19:55:40.084676+01:00'::timestamptz, 949, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 5, 'Player 22', 11, datetime.datetime(2024, 1, 18, 19, 55, 40, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 949, False); alias=default
DEBUG 2024-03-03 10:35:00,180 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 11, 'Player 18', 7, '2023-12-27T04:51:17.084676+01:00'::timestamptz, 289, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 11, 'Player 18', 7, datetime.datetime(2023, 12, 27, 4, 51, 17, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 289, False); alias=default
DEBUG 2024-03-03 10:35:00,182 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 6, 'Player 34', 11, '2023-12-29T03:46:04.084676+01:00'::timestamptz, 645, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 6, 'Player 34', 11, datetime.datetime(2023, 12, 29, 3, 46, 4, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 645, False); alias=default
DEBUG 2024-03-03 10:35:00,183 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 13', 9, '2024-02-01T02:29:30.084676+01:00'::timestamptz, 878, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 13', 9, datetime.datetime(2024, 2, 1, 2, 29, 30, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 878, False); alias=default
DEBUG 2024-03-03 10:35:00,185 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 15', 4, '2023-12-05T05:56:38.084676+01:00'::timestamptz, 600, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 15', 4, datetime.datetime(2023, 12, 5, 5, 56, 38, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 600, False); alias=default
DEBUG 2024-03-03 10:35:00,186 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 16', 1, '2023-11-04T21:52:35.084676+01:00'::timestamptz, 782, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 16', 1, datetime.datetime(2023, 11, 4, 21, 52, 35, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 782, False); alias=default
DEBUG 2024-03-03 10:35:00,188 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 33', 10, '2024-02-10T14:09:58.084676+01:00'::timestamptz, 848, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 33', 10, datetime.datetime(2024, 2, 10, 14, 9, 58, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 848, False); alias=default
DEBUG 2024-03-03 10:35:00,189 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 7, 'Player 28', 11, '2024-01-05T02:03:15.084676+01:00'::timestamptz, 459, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 7, 'Player 28', 11, datetime.datetime(2024, 1, 5, 2, 3, 15, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 459, False); alias=default
DEBUG 2024-03-03 10:35:00,191 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 3, 'Player 4', 11, '2024-01-14T14:16:54.084676+01:00'::timestamptz, 337, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 3, 'Player 4', 11, datetime.datetime(2024, 1, 14, 14, 16, 54, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 337, False); alias=default
DEBUG 2024-03-03 10:35:00,192 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 7, 'Player 27', 11, '2024-01-29T16:14:58.084676+01:00'::timestamptz, 227, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 7, 'Player 27', 11, datetime.datetime(2024, 1, 29, 16, 14, 58, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 227, False); alias=default
DEBUG 2024-03-03 10:35:00,193 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 11, 'Player 24', 8, '2024-01-27T00:57:06.084676+01:00'::timestamptz, 32, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 11, 'Player 24', 8, datetime.datetime(2024, 1, 27, 0, 57, 6, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 32, False); alias=default
DEBUG 2024-03-03 10:35:00,195 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 31', 6, '2024-03-02T14:51:30.084676+01:00'::timestamptz, 694, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 31', 6, datetime.datetime(2024, 3, 2, 14, 51, 30, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 694, False); alias=default
DEBUG 2024-03-03 10:35:00,196 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 7', 9, '2024-01-21T13:58:47.084676+01:00'::timestamptz, 800, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 7', 9, datetime.datetime(2024, 1, 21, 13, 58, 47, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 800, False); alias=default
DEBUG 2024-03-03 10:35:00,197 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 32', 0, '2024-03-01T16:13:14.084676+01:00'::timestamptz, 916, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 32', 0, datetime.datetime(2024, 3, 1, 16, 13, 14, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 916, False); alias=default
DEBUG 2024-03-03 10:35:00,199 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 0, 'Player 32', 11, '2024-01-21T17:26:33.084676+01:00'::timestamptz, 410, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 0, 'Player 32', 11, datetime.datetime(2024, 1, 21, 17, 26, 33, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 410, False); alias=default
DEBUG 2024-03-03 10:35:00,201 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 11, 'Player 13', 9, '2023-11-11T02:32:05.084676+01:00'::timestamptz, 29, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 11, 'Player 13', 9, datetime.datetime(2023, 11, 11, 2, 32, 5, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 29, False); alias=default
DEBUG 2024-03-03 10:35:00,202 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 7, 'Player 45', 11, '2024-01-30T21:10:34.084676+01:00'::timestamptz, 795, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 7, 'Player 45', 11, datetime.datetime(2024, 1, 30, 21, 10, 34, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 795, False); alias=default
DEBUG 2024-03-03 10:35:00,204 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 16', 7, '2023-11-23T10:42:47.084676+01:00'::timestamptz, 27, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 16', 7, datetime.datetime(2023, 11, 23, 10, 42, 47, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 27, False); alias=default
DEBUG 2024-03-03 10:35:00,205 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 41', 0, '2023-12-09T04:08:39.084676+01:00'::timestamptz, 309, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 41', 0, datetime.datetime(2023, 12, 9, 4, 8, 39, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 309, False); alias=default
DEBUG 2024-03-03 10:35:00,206 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 7', 8, '2023-12-27T04:20:23.084676+01:00'::timestamptz, 156, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 7', 8, datetime.datetime(2023, 12, 27, 4, 20, 23, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 156, False); alias=default
DEBUG 2024-03-03 10:35:00,207 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 5, 'Player 27', 11, '2024-02-18T15:26:43.084676+01:00'::timestamptz, 509, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 5, 'Player 27', 11, datetime.datetime(2024, 2, 18, 15, 26, 43, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 509, False); alias=default
DEBUG 2024-03-03 10:35:00,209 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 10, 'Player 14', 11, '2024-01-30T17:20:35.084676+01:00'::timestamptz, 22, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 10, 'Player 14', 11, datetime.datetime(2024, 1, 30, 17, 20, 35, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 22, False); alias=default
DEBUG 2024-03-03 10:35:00,210 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 10, 'Player 7', 11, '2024-01-26T22:04:14.084676+01:00'::timestamptz, 119, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 10, 'Player 7', 11, datetime.datetime(2024, 1, 26, 22, 4, 14, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 119, False); alias=default
DEBUG 2024-03-03 10:35:00,211 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 11, 'Player 32', 7, '2023-12-08T23:12:57.084676+01:00'::timestamptz, 481, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 11, 'Player 32', 7, datetime.datetime(2023, 12, 8, 23, 12, 57, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 481, False); alias=default
DEBUG 2024-03-03 10:35:00,212 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 5', 5, '2024-01-11T05:26:34.084676+01:00'::timestamptz, 269, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 5', 5, datetime.datetime(2024, 1, 11, 5, 26, 34, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 269, False); alias=default
DEBUG 2024-03-03 10:35:00,213 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 50', 9, 'Player 10', 11, '2023-11-01T04:00:30.084676+01:00'::timestamptz, 810, false) RETURNING "pong_gamedata"."id"; args=('Player 50', 9, 'Player 10', 11, datetime.datetime(2023, 11, 1, 4, 0, 30, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 810, False); alias=default
DEBUG 2024-03-03 10:35:00,215 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 18', 4, '2024-01-06T13:11:03.084676+01:00'::timestamptz, 154, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 18', 4, datetime.datetime(2024, 1, 6, 13, 11, 3, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 154, False); alias=default
DEBUG 2024-03-03 10:35:00,217 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 51', 6, 'Player 45', 11, '2024-01-23T12:08:55.084676+01:00'::timestamptz, 933, false) RETURNING "pong_gamedata"."id"; args=('Player 51', 6, 'Player 45', 11, datetime.datetime(2024, 1, 23, 12, 8, 55, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 933, False); alias=default
DEBUG 2024-03-03 10:35:00,218 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 4, 'Player 23', 11, '2023-12-05T18:27:19.084676+01:00'::timestamptz, 266, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 4, 'Player 23', 11, datetime.datetime(2023, 12, 5, 18, 27, 19, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 266, False); alias=default
DEBUG 2024-03-03 10:35:00,219 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 1, 'Player 8', 11, '2024-03-01T17:56:17.084676+01:00'::timestamptz, 658, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 1, 'Player 8', 11, datetime.datetime(2024, 3, 1, 17, 56, 17, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 658, False); alias=default
DEBUG 2024-03-03 10:35:00,221 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 11, 'Player 25', 5, '2024-02-26T16:53:34.084676+01:00'::timestamptz, 937, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 11, 'Player 25', 5, datetime.datetime(2024, 2, 26, 16, 53, 34, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 937, False); alias=default
DEBUG 2024-03-03 10:35:00,222 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 8, 'Player 34', 11, '2024-02-29T16:59:00.084676+01:00'::timestamptz, 704, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 8, 'Player 34', 11, datetime.datetime(2024, 2, 29, 16, 59, 0, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 704, False); alias=default
DEBUG 2024-03-03 10:35:00,223 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 52', 5, '2023-11-09T22:09:07.084676+01:00'::timestamptz, 167, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 52', 5, datetime.datetime(2023, 11, 9, 22, 9, 7, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 167, False); alias=default
DEBUG 2024-03-03 10:35:00,225 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 11, 'Player 28', 3, '2024-01-24T02:52:41.084676+01:00'::timestamptz, 767, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 11, 'Player 28', 3, datetime.datetime(2024, 1, 24, 2, 52, 41, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 767, False); alias=default
DEBUG 2024-03-03 10:35:00,226 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 0, 'Player 14', 11, '2024-02-29T20:21:01.084676+01:00'::timestamptz, 89, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 0, 'Player 14', 11, datetime.datetime(2024, 2, 29, 20, 21, 1, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 89, False); alias=default
DEBUG 2024-03-03 10:35:00,227 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 9, 'Player 44', 11, '2024-01-23T03:47:58.084676+01:00'::timestamptz, 354, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 9, 'Player 44', 11, datetime.datetime(2024, 1, 23, 3, 47, 58, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 354, False); alias=default
DEBUG 2024-03-03 10:35:00,229 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 11, 'Player 51', 8, '2024-01-11T16:28:48.084676+01:00'::timestamptz, 341, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 11, 'Player 51', 8, datetime.datetime(2024, 1, 11, 16, 28, 48, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 341, False); alias=default
DEBUG 2024-03-03 10:35:00,230 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 34', 7, '2023-12-09T13:16:23.084676+01:00'::timestamptz, 272, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 34', 7, datetime.datetime(2023, 12, 9, 13, 16, 23, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 272, False); alias=default
DEBUG 2024-03-03 10:35:00,231 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 46', 4, 'Player 40', 11, '2023-12-30T21:02:58.084676+01:00'::timestamptz, 961, false) RETURNING "pong_gamedata"."id"; args=('Player 46', 4, 'Player 40', 11, datetime.datetime(2023, 12, 30, 21, 2, 58, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 961, False); alias=default
DEBUG 2024-03-03 10:35:00,233 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 48', 9, '2024-02-19T00:01:13.084676+01:00'::timestamptz, 469, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 48', 9, datetime.datetime(2024, 2, 19, 0, 1, 13, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 469, False); alias=default
DEBUG 2024-03-03 10:35:00,235 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 8, 'Player 50', 11, '2024-01-18T20:05:53.084676+01:00'::timestamptz, 643, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 8, 'Player 50', 11, datetime.datetime(2024, 1, 18, 20, 5, 53, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 643, False); alias=default
DEBUG 2024-03-03 10:35:00,236 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 59', 8, 'Player 1', 11, '2023-12-26T07:51:30.084676+01:00'::timestamptz, 414, false) RETURNING "pong_gamedata"."id"; args=('Player 59', 8, 'Player 1', 11, datetime.datetime(2023, 12, 26, 7, 51, 30, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 414, False); alias=default
DEBUG 2024-03-03 10:35:00,237 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 0, 'Player 49', 11, '2024-01-30T18:27:17.084676+01:00'::timestamptz, 140, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 0, 'Player 49', 11, datetime.datetime(2024, 1, 30, 18, 27, 17, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 140, False); alias=default
DEBUG 2024-03-03 10:35:00,239 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 3, 'Player 24', 11, '2024-02-15T15:17:31.084676+01:00'::timestamptz, 772, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 3, 'Player 24', 11, datetime.datetime(2024, 2, 15, 15, 17, 31, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 772, False); alias=default
DEBUG 2024-03-03 10:35:00,240 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 6, 'Player 14', 11, '2023-12-31T12:46:20.084676+01:00'::timestamptz, 364, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 6, 'Player 14', 11, datetime.datetime(2023, 12, 31, 12, 46, 20, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 364, False); alias=default
DEBUG 2024-03-03 10:35:00,241 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 59', 11, 'Player 9', 5, '2024-01-13T19:35:10.084676+01:00'::timestamptz, 531, false) RETURNING "pong_gamedata"."id"; args=('Player 59', 11, 'Player 9', 5, datetime.datetime(2024, 1, 13, 19, 35, 10, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 531, False); alias=default
DEBUG 2024-03-03 10:35:00,242 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 59', 6, 'Player 22', 11, '2023-12-04T13:01:04.084676+01:00'::timestamptz, 865, false) RETURNING "pong_gamedata"."id"; args=('Player 59', 6, 'Player 22', 11, datetime.datetime(2023, 12, 4, 13, 1, 4, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 865, False); alias=default
DEBUG 2024-03-03 10:35:00,243 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 2, 'Player 60', 11, '2023-12-11T10:20:09.084676+01:00'::timestamptz, 653, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 2, 'Player 60', 11, datetime.datetime(2023, 12, 11, 10, 20, 9, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 653, False); alias=default
DEBUG 2024-03-03 10:35:00,244 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 10, 'Player 21', 11, '2024-02-19T05:13:09.084676+01:00'::timestamptz, 501, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 10, 'Player 21', 11, datetime.datetime(2024, 2, 19, 5, 13, 9, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 501, False); alias=default
DEBUG 2024-03-03 10:35:00,246 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 62', 2, 'Player 48', 11, '2023-11-18T05:19:43.084676+01:00'::timestamptz, 551, false) RETURNING "pong_gamedata"."id"; args=('Player 62', 2, 'Player 48', 11, datetime.datetime(2023, 11, 18, 5, 19, 43, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 551, False); alias=default
DEBUG 2024-03-03 10:35:00,247 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 21', 1, '2023-12-15T08:43:16.084676+01:00'::timestamptz, 624, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 21', 1, datetime.datetime(2023, 12, 15, 8, 43, 16, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 624, False); alias=default
DEBUG 2024-03-03 10:35:00,249 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 59', 11, 'Player 25', 9, '2023-12-11T17:03:07.084676+01:00'::timestamptz, 477, false) RETURNING "pong_gamedata"."id"; args=('Player 59', 11, 'Player 25', 9, datetime.datetime(2023, 12, 11, 17, 3, 7, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 477, False); alias=default
DEBUG 2024-03-03 10:35:00,251 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,252 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 5, 'Player 0', 11, '2023-12-23T07:47:38.084676+01:00'::timestamptz, 662, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 5, 'Player 0', 11, datetime.datetime(2023, 12, 23, 7, 47, 38, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 662, True); alias=default
DEBUG 2024-03-03 10:35:00,253 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 3, 'Player 11', 11, '2023-12-23T07:52:05.084676+01:00'::timestamptz, 889, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 3, 'Player 11', 11, datetime.datetime(2023, 12, 23, 7, 52, 5, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 889, True); alias=default
DEBUG 2024-03-03 10:35:00,254 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 11', 9, '2023-12-23T07:53:06.084676+01:00'::timestamptz, 318, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 11', 9, datetime.datetime(2023, 12, 23, 7, 53, 6, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 318, True); alias=default
DEBUG 2024-03-03 10:35:00,256 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2023-12-23T07:53:06.084676+01:00'::timestamptz, 990, '["Player 0", "Player 11", "Player 9", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2023, 12, 23, 7, 53, 6, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 990, <psycopg2._json.Json object at 0x7f9bbacde9f0>, '0x0'); alias=default
DEBUG 2024-03-03 10:35:00,257 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 4, 'Player 2', 11, '2024-01-31T04:36:47.084676+01:00'::timestamptz, 405, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 4, 'Player 2', 11, datetime.datetime(2024, 1, 31, 4, 36, 47, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 405, True); alias=default
DEBUG 2024-03-03 10:35:00,259 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 0, 'Player 13', 11, '2024-01-31T04:37:21.084676+01:00'::timestamptz, 478, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 0, 'Player 13', 11, datetime.datetime(2024, 1, 31, 4, 37, 21, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 478, True); alias=default
DEBUG 2024-03-03 10:35:00,260 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 4, 'Player 13', 11, '2024-01-31T04:39:42.084676+01:00'::timestamptz, 221, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 4, 'Player 13', 11, datetime.datetime(2024, 1, 31, 4, 39, 42, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 221, True); alias=default
DEBUG 2024-03-03 10:35:00,261 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2024-01-31T04:39:42.084676+01:00'::timestamptz, 619, '["Player 13", "Player 2", "Player 4", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2024, 1, 31, 4, 39, 42, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 619, <psycopg2._json.Json object at 0x7f9bbacde9f0>, '0x0'); alias=default
DEBUG 2024-03-03 10:35:00,263 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 4, 'Player 12', 11, '2023-11-19T04:14:19.084676+01:00'::timestamptz, 266, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 4, 'Player 12', 11, datetime.datetime(2023, 11, 19, 4, 14, 19, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 266, True); alias=default
DEBUG 2024-03-03 10:35:00,264 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 10, 'Player 8', 11, '2023-11-19T04:18:02.084676+01:00'::timestamptz, 257, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 10, 'Player 8', 11, datetime.datetime(2023, 11, 19, 4, 18, 2, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 257, True); alias=default
DEBUG 2024-03-03 10:35:00,265 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 8', 6, '2023-11-19T04:24:32.084676+01:00'::timestamptz, 12, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 8', 6, datetime.datetime(2023, 11, 19, 4, 24, 32, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 12, True); alias=default
DEBUG 2024-03-03 10:35:00,268 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2023-11-19T04:24:32.084676+01:00'::timestamptz, 879, '["Player 12", "Player 8", "Player 0", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2023, 11, 19, 4, 24, 32, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 879, <psycopg2._json.Json object at 0x7f9bbab444a0>, '0x0'); alias=default
DEBUG 2024-03-03 10:35:00,269 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 1', 6, '2023-12-23T18:14:22.084676+01:00'::timestamptz, 306, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 1', 6, datetime.datetime(2023, 12, 23, 18, 14, 22, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 306, True); alias=default
DEBUG 2024-03-03 10:35:00,270 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 1, 'Player 9', 11, '2023-12-23T18:04:22.084676+01:00'::timestamptz, 80, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 1, 'Player 9', 11, datetime.datetime(2023, 12, 23, 18, 4, 22, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 80, True); alias=default
DEBUG 2024-03-03 10:35:00,272 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 9', 0, '2023-12-23T18:17:35.084676+01:00'::timestamptz, 122, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 9', 0, datetime.datetime(2023, 12, 23, 18, 17, 35, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 122, True); alias=default
DEBUG 2024-03-03 10:35:00,273 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2023-12-23T18:17:35.084676+01:00'::timestamptz, 873, '["Player 5", "Player 9", "Player 1", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2023, 12, 23, 18, 17, 35, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 873, <psycopg2._json.Json object at 0x7f9bbacde9f0>, '0x0'); alias=default
DEBUG 2024-03-03 10:35:00,274 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 7, 'Player 4', 11, '2024-02-06T05:55:06.084676+01:00'::timestamptz, 841, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 7, 'Player 4', 11, datetime.datetime(2024, 2, 6, 5, 55, 6, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 841, True); alias=default
DEBUG 2024-03-03 10:35:00,275 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 9, 'Player 11', 11, '2024-02-06T05:53:56.084676+01:00'::timestamptz, 742, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 9, 'Player 11', 11, datetime.datetime(2024, 2, 6, 5, 53, 56, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 742, True); alias=default
DEBUG 2024-03-03 10:35:00,277 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 11', 8, '2024-02-06T05:57:20.084676+01:00'::timestamptz, 469, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 11', 8, datetime.datetime(2024, 2, 6, 5, 57, 20, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 469, True); alias=default
DEBUG 2024-03-03 10:35:00,278 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2024-02-06T05:57:20.084676+01:00'::timestamptz, 975, '["Player 4", "Player 11", "Player 17", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2024, 2, 6, 5, 57, 20, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 975, <psycopg2._json.Json object at 0x7f9bbacddcd0>, '0x0'); alias=default
DEBUG 2024-03-03 10:35:00,279 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 8, 'Player 7', 11, '2024-02-14T22:27:19.084676+01:00'::timestamptz, 131, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 8, 'Player 7', 11, datetime.datetime(2024, 2, 14, 22, 27, 19, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 131, True); alias=default
DEBUG 2024-03-03 10:35:00,281 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 9', 4, '2024-02-14T22:39:26.084676+01:00'::timestamptz, 413, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 9', 4, datetime.datetime(2024, 2, 14, 22, 39, 26, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 413, True); alias=default
DEBUG 2024-03-03 10:35:00,283 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 13', 4, '2024-02-14T22:40:45.084676+01:00'::timestamptz, 888, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 13', 4, datetime.datetime(2024, 2, 14, 22, 40, 45, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 888, True); alias=default
DEBUG 2024-03-03 10:35:00,284 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2024-02-14T22:40:45.084676+01:00'::timestamptz, 937, '["Player 7", "Player 13", "Player 0", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2024, 2, 14, 22, 40, 45, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 937, <psycopg2._json.Json object at 0x7f9bbacde9f0>, '0x0'); alias=default
DEBUG 2024-03-03 10:35:00,286 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 6', 5, '2024-01-17T05:04:19.084676+01:00'::timestamptz, 121, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 6', 5, datetime.datetime(2024, 1, 17, 5, 4, 19, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 121, True); alias=default
DEBUG 2024-03-03 10:35:00,287 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 4, 'Player 3', 11, '2024-01-17T05:13:41.084676+01:00'::timestamptz, 972, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 4, 'Player 3', 11, datetime.datetime(2024, 1, 17, 5, 13, 41, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 972, True); alias=default
DEBUG 2024-03-03 10:35:00,289 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 3', 6, '2024-01-17T05:13:58.084676+01:00'::timestamptz, 955, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 3', 6, datetime.datetime(2024, 1, 17, 5, 13, 58, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 955, True); alias=default
DEBUG 2024-03-03 10:35:00,290 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2024-01-17T05:13:58.084676+01:00'::timestamptz, 989, '["Player 1", "Player 3", "Player 6", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2024, 1, 17, 5, 13, 58, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 989, <psycopg2._json.Json object at 0x7f9bbab45310>, '0x0'); alias=default
DEBUG 2024-03-03 10:35:00,291 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 11', 5, '2023-12-22T10:03:53.084676+01:00'::timestamptz, 137, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 11', 5, datetime.datetime(2023, 12, 22, 10, 3, 53, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 137, True); alias=default
DEBUG 2024-03-03 10:35:00,292 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 9, 'Player 12', 11, '2023-12-22T10:05:48.084676+01:00'::timestamptz, 697, true) RETURNING "pong_gamedata"."id"; args=('Player 19', 9, 'Player 12', 11, datetime.datetime(2023, 12, 22, 10, 5, 48, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 697, True); alias=default
DEBUG 2024-03-03 10:35:00,294 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 12', 2, '2023-12-22T10:07:19.084676+01:00'::timestamptz, 281, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 12', 2, datetime.datetime(2023, 12, 22, 10, 7, 19, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 281, True); alias=default
DEBUG 2024-03-03 10:35:00,295 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2023-12-22T10:07:19.084676+01:00'::timestamptz, 788, '["Player 8", "Player 12", "Player 11", "Player 19"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2023, 12, 22, 10, 7, 19, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 788, <psycopg2._json.Json object at 0x7f9bbad2f200>, '0x0'); alias=default
DEBUG 2024-03-03 10:35:00,296 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 7, 'Player 16', 11, '2023-12-19T21:24:47.084676+01:00'::timestamptz, 217, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 7, 'Player 16', 11, datetime.datetime(2023, 12, 19, 21, 24, 47, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 217, True); alias=default
DEBUG 2024-03-03 10:35:00,298 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 6', 5, '2023-12-19T21:29:57.084676+01:00'::timestamptz, 936, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 6', 5, datetime.datetime(2023, 12, 19, 21, 29, 57, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 936, True); alias=default
DEBUG 2024-03-03 10:35:00,300 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 6, 'Player 14', 11, '2023-12-19T21:30:11.084676+01:00'::timestamptz, 221, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 6, 'Player 14', 11, datetime.datetime(2023, 12, 19, 21, 30, 11, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 221, True); alias=default
DEBUG 2024-03-03 10:35:00,301 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2023-12-19T21:30:11.084676+01:00'::timestamptz, 950, '["Player 14", "Player 16", "Player 1", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2023, 12, 19, 21, 30, 11, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 950, <psycopg2._json.Json object at 0x7f9bbacde9f0>, '0x0'); alias=default
DEBUG 2024-03-03 10:35:00,303 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 1, 'Player 10', 11, '2023-12-09T01:21:01.084676+01:00'::timestamptz, 684, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 1, 'Player 10', 11, datetime.datetime(2023, 12, 9, 1, 21, 1, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 684, True); alias=default
DEBUG 2024-03-03 10:35:00,304 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 0, 'Player 4', 11, '2023-12-09T01:25:12.084676+01:00'::timestamptz, 12, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 0, 'Player 4', 11, datetime.datetime(2023, 12, 9, 1, 25, 12, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 12, True); alias=default
DEBUG 2024-03-03 10:35:00,305 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 8, 'Player 4', 11, '2023-12-09T01:26:01.084676+01:00'::timestamptz, 780, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 8, 'Player 4', 11, datetime.datetime(2023, 12, 9, 1, 26, 1, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 780, True); alias=default
DEBUG 2024-03-03 10:35:00,307 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2023-12-09T01:26:01.084676+01:00'::timestamptz, 984, '["Player 4", "Player 10", "Player 7", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2023, 12, 9, 1, 26, 1, 84676, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 984, <psycopg2._json.Json object at 0x7f9bbad2e510>, '0x0'); alias=default
DEBUG 2024-03-03 10:35:00,307 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,308 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,309 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 10:35:00,309 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:35:00,310 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 10:35:00,311 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:35:00,312 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 10:35:00,313 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 10:35:00,314 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 10:35:00,316 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 10:35:00,317 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:35:00,319 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 10:35:00,320 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:35:00,320 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 10:35:00,322 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,322 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,323 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,324 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,325 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,326 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,327 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 10:35:00,327 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:35:00,327 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 10:35:00,328 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:35:00,329 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 10:35:00,330 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 10:35:00,331 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:35:00,332 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 10:35:00,333 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:35:00,334 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 10:35:00,336 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,336 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,337 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,338 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,339 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,340 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,341 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 10:35:00,341 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:35:00,341 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 10:35:00,342 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:35:00,343 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 10:35:00,345 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 10:35:00,345 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:35:00,346 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 10:35:00,347 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:35:00,347 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 10:35:00,349 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,350 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,352 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,353 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,354 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,355 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,356 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 10:35:00,356 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:35:00,357 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 10:35:00,357 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:35:00,358 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 10:35:00,359 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 10:35:00,361 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 10:35:00,361 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:35:00,362 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 10:35:00,362 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:35:00,363 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 10:35:00,364 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,366 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,368 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,369 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,370 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:35:00,371 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
