DEBUG 2024-02-27 22:31:07,002 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:31:07,005 utils (0.001) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,007 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:31:07,008 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,040 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:31:07,043 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:31:07,044 utils (0.001) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,047 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:31:07,050 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 22:31:07,055 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 22:31:07,062 utils (0.005) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:31:07,064 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,066 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,068 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,070 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,112 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 7', 1, '2023-12-28T16:54:42.066653+01:00'::timestamptz, 343, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 7', 1, datetime.datetime(2023, 12, 28, 16, 54, 42, 66653, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 343, True); alias=default
DEBUG 2024-02-27 22:31:07,113 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 11', 5, '2023-12-28T16:53:00.066653+01:00'::timestamptz, 77, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 11', 5, datetime.datetime(2023, 12, 28, 16, 53, 0, 66653, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 77, True); alias=default
DEBUG 2024-02-27 22:31:07,115 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 15', 10, '2023-12-28T16:58:36.066653+01:00'::timestamptz, 634, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 15', 10, datetime.datetime(2023, 12, 28, 16, 58, 36, 66653, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 634, True); alias=default
DEBUG 2024-02-27 22:31:07,116 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2205, 2206, 2207, '2023-12-28T16:58:36.066653+01:00'::timestamptz, 577, '["Player 1", "Player 15", "Player 7", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2205, 2206, 2207, datetime.datetime(2023, 12, 28, 16, 58, 36, 66653, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 577, <psycopg2._json.Json object at 0x7fcdfb24e900>, '0x0'); alias=default
DEBUG 2024-02-27 22:31:07,117 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 7', 6, '2023-11-23T19:20:55.066653+01:00'::timestamptz, 464, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 7', 6, datetime.datetime(2023, 11, 23, 19, 20, 55, 66653, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 464, True); alias=default
DEBUG 2024-02-27 22:31:07,119 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 12', 9, '2023-11-23T19:29:08.066653+01:00'::timestamptz, 921, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 12', 9, datetime.datetime(2023, 11, 23, 19, 29, 8, 66653, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 921, True); alias=default
DEBUG 2024-02-27 22:31:07,120 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 4', 4, '2023-11-23T19:29:22.066653+01:00'::timestamptz, 681, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 4', 4, datetime.datetime(2023, 11, 23, 19, 29, 22, 66653, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 681, True); alias=default
DEBUG 2024-02-27 22:31:07,121 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2208, 2209, 2210, '2023-11-23T19:29:22.066653+01:00'::timestamptz, 971, '["Player 2", "Player 4", "Player 7", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2208, 2209, 2210, datetime.datetime(2023, 11, 23, 19, 29, 22, 66653, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 971, <psycopg2._json.Json object at 0x7fcdfb24f260>, '0x0'); alias=default
DEBUG 2024-02-27 22:31:07,122 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,124 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,126 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:31:07,127 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 22:31:07,128 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 22:31:07,130 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 22:31:07,133 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 22:31:07,134 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:31:07,135 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,136 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,136 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,137 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,139 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 2', 6, '2023-12-28T15:04:47.136177+01:00'::timestamptz, 27, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 2', 6, datetime.datetime(2023, 12, 28, 15, 4, 47, 136177, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 27, True); alias=default
DEBUG 2024-02-27 22:31:07,141 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 10, 'Player 14', 11, '2023-12-28T15:01:28.136177+01:00'::timestamptz, 385, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 10, 'Player 14', 11, datetime.datetime(2023, 12, 28, 15, 1, 28, 136177, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 385, True); alias=default
DEBUG 2024-02-27 22:31:07,142 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 14', 2, '2023-12-28T15:10:44.136177+01:00'::timestamptz, 349, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 14', 2, datetime.datetime(2023, 12, 28, 15, 10, 44, 136177, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 349, True); alias=default
DEBUG 2024-02-27 22:31:07,143 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2211, 2212, 2213, '2023-12-28T15:10:44.136177+01:00'::timestamptz, 941, '["Player 6", "Player 14", "Player 2", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2211, 2212, 2213, datetime.datetime(2023, 12, 28, 15, 10, 44, 136177, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 941, <psycopg2._json.Json object at 0x7fcdfb24f6b0>, '0x0'); alias=default
DEBUG 2024-02-27 22:31:07,145 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 15', 1, '2024-02-17T22:56:59.136177+01:00'::timestamptz, 55, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 15', 1, datetime.datetime(2024, 2, 17, 22, 56, 59, 136177, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 55, True); alias=default
DEBUG 2024-02-27 22:31:07,146 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 1', 1, '2024-02-17T23:01:48.136177+01:00'::timestamptz, 427, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 1', 1, datetime.datetime(2024, 2, 17, 23, 1, 48, 136177, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 427, True); alias=default
DEBUG 2024-02-27 22:31:07,147 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 4, 'Player 3', 11, '2024-02-17T23:07:36.136177+01:00'::timestamptz, 873, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 4, 'Player 3', 11, datetime.datetime(2024, 2, 17, 23, 7, 36, 136177, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 873, True); alias=default
DEBUG 2024-02-27 22:31:07,148 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2214, 2215, 2216, '2024-02-17T23:07:36.136177+01:00'::timestamptz, 775, '["Player 3", "Player 4", "Player 15", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2214, 2215, 2216, datetime.datetime(2024, 2, 17, 23, 7, 36, 136177, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 775, <psycopg2._json.Json object at 0x7fcdfb0705c0>, '0x0'); alias=default
DEBUG 2024-02-27 22:31:07,149 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,150 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,150 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:31:07,151 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 22:31:07,153 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 22:31:07,153 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:31:07,155 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,156 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,157 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,159 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,160 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 2, 'Player 9', 11, '2023-12-09T01:36:06.156315+01:00'::timestamptz, 471, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 2, 'Player 9', 11, datetime.datetime(2023, 12, 9, 1, 36, 6, 156315, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 471, True); alias=default
DEBUG 2024-02-27 22:31:07,162 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 3, 'Player 14', 11, '2023-12-09T01:39:15.156315+01:00'::timestamptz, 374, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 3, 'Player 14', 11, datetime.datetime(2023, 12, 9, 1, 39, 15, 156315, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 374, True); alias=default
DEBUG 2024-02-27 22:31:07,163 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 14', 1, '2023-12-09T01:39:39.156315+01:00'::timestamptz, 193, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 14', 1, datetime.datetime(2023, 12, 9, 1, 39, 39, 156315, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 193, True); alias=default
DEBUG 2024-02-27 22:31:07,164 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2217, 2218, 2219, '2023-12-09T01:39:39.156315+01:00'::timestamptz, 684, '["Player 9", "Player 14", "Player 12", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2217, 2218, 2219, datetime.datetime(2023, 12, 9, 1, 39, 39, 156315, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 684, <psycopg2._json.Json object at 0x7fcdfb070b60>, '0x0'); alias=default
DEBUG 2024-02-27 22:31:07,165 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 10', 10, '2024-02-04T22:35:50.156315+01:00'::timestamptz, 901, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 10', 10, datetime.datetime(2024, 2, 4, 22, 35, 50, 156315, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 901, True); alias=default
DEBUG 2024-02-27 22:31:07,166 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 0', 8, '2024-02-04T22:27:45.156315+01:00'::timestamptz, 180, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 0', 8, datetime.datetime(2024, 2, 4, 22, 27, 45, 156315, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 180, True); alias=default
DEBUG 2024-02-27 22:31:07,168 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 0, 'Player 9', 11, '2024-02-04T22:36:08.156315+01:00'::timestamptz, 961, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 0, 'Player 9', 11, datetime.datetime(2024, 2, 4, 22, 36, 8, 156315, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 961, True); alias=default
DEBUG 2024-02-27 22:31:07,168 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2220, 2221, 2222, '2024-02-04T22:36:08.156315+01:00'::timestamptz, 919, '["Player 9", "Player 1", "Player 10", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2220, 2221, 2222, datetime.datetime(2024, 2, 4, 22, 36, 8, 156315, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 919, <psycopg2._json.Json object at 0x7fcdfb071760>, '0x0'); alias=default
DEBUG 2024-02-27 22:31:07,169 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,170 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,171 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:31:07,173 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 22:31:07,176 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 22:31:07,177 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:31:07,178 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,179 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,180 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,182 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,183 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 4, 'Player 4', 11, '2023-12-21T12:28:18.179854+01:00'::timestamptz, 733, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 4, 'Player 4', 11, datetime.datetime(2023, 12, 21, 12, 28, 18, 179854, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 733, True); alias=default
DEBUG 2024-02-27 22:31:07,185 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 5, 'Player 1', 11, '2023-12-21T12:28:15.179854+01:00'::timestamptz, 347, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 5, 'Player 1', 11, datetime.datetime(2023, 12, 21, 12, 28, 15, 179854, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 347, True); alias=default
DEBUG 2024-02-27 22:31:07,186 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 7, 'Player 1', 11, '2023-12-21T12:31:31.179854+01:00'::timestamptz, 6, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 7, 'Player 1', 11, datetime.datetime(2023, 12, 21, 12, 31, 31, 179854, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 6, True); alias=default
DEBUG 2024-02-27 22:31:07,187 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2223, 2224, 2225, '2023-12-21T12:31:31.179854+01:00'::timestamptz, 926, '["Player 1", "Player 4", "Player 11", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2223, 2224, 2225, datetime.datetime(2023, 12, 21, 12, 31, 31, 179854, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 926, <psycopg2._json.Json object at 0x7fcdfb0721e0>, '0x0'); alias=default
DEBUG 2024-02-27 22:31:07,189 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 8', 9, '2023-12-25T03:35:35.179854+01:00'::timestamptz, 762, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 8', 9, datetime.datetime(2023, 12, 25, 3, 35, 35, 179854, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 762, True); alias=default
DEBUG 2024-02-27 22:31:07,191 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 0', 0, '2023-12-25T03:33:07.179854+01:00'::timestamptz, 354, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 0', 0, datetime.datetime(2023, 12, 25, 3, 33, 7, 179854, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 354, True); alias=default
DEBUG 2024-02-27 22:31:07,192 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 7, 'Player 2', 11, '2023-12-25T03:37:28.179854+01:00'::timestamptz, 468, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 7, 'Player 2', 11, datetime.datetime(2023, 12, 25, 3, 37, 28, 179854, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 468, True); alias=default
DEBUG 2024-02-27 22:31:07,193 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2226, 2227, 2228, '2023-12-25T03:37:28.179854+01:00'::timestamptz, 875, '["Player 2", "Player 5", "Player 8", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2226, 2227, 2228, datetime.datetime(2023, 12, 25, 3, 37, 28, 179854, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 875, <psycopg2._json.Json object at 0x7fcdfb0730b0>, '0x0'); alias=default
DEBUG 2024-02-27 22:31:07,195 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,196 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,196 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:31:07,197 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 22:31:07,199 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 22:31:07,200 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 22:31:07,201 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:31:07,202 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,203 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,204 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,206 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,208 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 14', 9, '2024-02-15T19:15:57.203751+01:00'::timestamptz, 243, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 14', 9, datetime.datetime(2024, 2, 15, 19, 15, 57, 203751, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 243, True); alias=default
DEBUG 2024-02-27 22:31:07,209 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 2, 'Player 15', 11, '2024-02-15T19:21:30.203751+01:00'::timestamptz, 658, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 2, 'Player 15', 11, datetime.datetime(2024, 2, 15, 19, 21, 30, 203751, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 658, True); alias=default
DEBUG 2024-02-27 22:31:07,210 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 15', 0, '2024-02-15T19:24:49.203751+01:00'::timestamptz, 438, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 15', 0, datetime.datetime(2024, 2, 15, 19, 24, 49, 203751, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 438, True); alias=default
DEBUG 2024-02-27 22:31:07,211 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2229, 2230, 2231, '2024-02-15T19:24:49.203751+01:00'::timestamptz, 857, '["Player 4", "Player 15", "Player 14", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2229, 2230, 2231, datetime.datetime(2024, 2, 15, 19, 24, 49, 203751, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 857, <psycopg2._json.Json object at 0x7fcdfb0715b0>, '0x0'); alias=default
DEBUG 2024-02-27 22:31:07,212 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 15', 10, '2023-12-05T00:07:02.203751+01:00'::timestamptz, 830, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 15', 10, datetime.datetime(2023, 12, 5, 0, 7, 2, 203751, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 830, True); alias=default
DEBUG 2024-02-27 22:31:07,214 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 3, 'Player 1', 11, '2023-12-05T00:06:41.203751+01:00'::timestamptz, 598, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 3, 'Player 1', 11, datetime.datetime(2023, 12, 5, 0, 6, 41, 203751, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 598, True); alias=default
DEBUG 2024-02-27 22:31:07,215 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 5, 'Player 1', 11, '2023-12-05T00:08:52.203751+01:00'::timestamptz, 804, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 5, 'Player 1', 11, datetime.datetime(2023, 12, 5, 0, 8, 52, 203751, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 804, True); alias=default
DEBUG 2024-02-27 22:31:07,215 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2232, 2233, 2234, '2023-12-05T00:08:52.203751+01:00'::timestamptz, 940, '["Player 1", "Player 10", "Player 15", "Player 13"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2232, 2233, 2234, datetime.datetime(2023, 12, 5, 0, 8, 52, 203751, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 940, <psycopg2._json.Json object at 0x7fcdfb070bf0>, '0x0'); alias=default
DEBUG 2024-02-27 22:31:07,217 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:31:07,217 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
