DEBUG 2024-02-27 21:18:13,606 utils (0.005) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:18:13,610 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,612 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:18:13,613 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,631 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:18:13,632 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:18:13,633 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,636 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:18:13,639 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 21:18:13,643 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 21:18:13,644 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:18:13,645 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,646 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,647 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,648 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,688 utils (0.009) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 9', 0, '2024-01-02T16:00:47.646965+01:00'::timestamptz, 92, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 9', 0, datetime.datetime(2024, 1, 2, 16, 0, 47, 646965, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 92, True); alias=default
DEBUG 2024-02-27 21:18:13,690 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 0, 'Player 7', 11, '2024-01-02T16:10:24.646965+01:00'::timestamptz, 560, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 0, 'Player 7', 11, datetime.datetime(2024, 1, 2, 16, 10, 24, 646965, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 560, True); alias=default
DEBUG 2024-02-27 21:18:13,691 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 10, 'Player 7', 11, '2024-01-02T16:15:10.646965+01:00'::timestamptz, 226, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 10, 'Player 7', 11, datetime.datetime(2024, 1, 2, 16, 15, 10, 646965, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 226, True); alias=default
DEBUG 2024-02-27 21:18:13,692 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1520, 1521, 1522, '2024-01-02T16:15:10.646965+01:00'::timestamptz, 955, '["Player 7", "Player 6", "Player 9", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1520, 1521, 1522, datetime.datetime(2024, 1, 2, 16, 15, 10, 646965, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 955, <psycopg2._json.Json object at 0x7fde620222a0>, '0x0'); alias=default
DEBUG 2024-02-27 21:18:13,694 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 9, 'Player 0', 11, '2023-11-08T20:32:15.646965+01:00'::timestamptz, 235, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 9, 'Player 0', 11, datetime.datetime(2023, 11, 8, 20, 32, 15, 646965, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 235, True); alias=default
DEBUG 2024-02-27 21:18:13,696 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 6, 'Player 9', 11, '2023-11-08T20:41:48.646965+01:00'::timestamptz, 939, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 6, 'Player 9', 11, datetime.datetime(2023, 11, 8, 20, 41, 48, 646965, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 939, True); alias=default
DEBUG 2024-02-27 21:18:13,697 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 7, 'Player 9', 11, '2023-11-08T20:41:52.646965+01:00'::timestamptz, 470, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 7, 'Player 9', 11, datetime.datetime(2023, 11, 8, 20, 41, 52, 646965, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 470, True); alias=default
DEBUG 2024-02-27 21:18:13,698 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1523, 1524, 1525, '2023-11-08T20:41:52.646965+01:00'::timestamptz, 943, '["Player 9", "Player 0", "Player 13", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1523, 1524, 1525, datetime.datetime(2023, 11, 8, 20, 41, 52, 646965, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 943, <psycopg2._json.Json object at 0x7fde620233e0>, '0x0'); alias=default
DEBUG 2024-02-27 21:18:13,699 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,700 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,701 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:18:13,702 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 21:18:13,705 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 21:18:13,707 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 21:18:13,710 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 21:18:13,711 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:18:13,712 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,713 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,714 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,715 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,716 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 5, 'Player 13', 11, '2024-02-12T20:16:34.713363+01:00'::timestamptz, 852, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 5, 'Player 13', 11, datetime.datetime(2024, 2, 12, 20, 16, 34, 713363, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 852, True); alias=default
DEBUG 2024-02-27 21:18:13,717 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 2, 'Player 4', 11, '2024-02-12T20:12:36.713363+01:00'::timestamptz, 605, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 2, 'Player 4', 11, datetime.datetime(2024, 2, 12, 20, 12, 36, 713363, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 605, True); alias=default
DEBUG 2024-02-27 21:18:13,720 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 0, 'Player 4', 11, '2024-02-12T20:17:47.713363+01:00'::timestamptz, 37, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 0, 'Player 4', 11, datetime.datetime(2024, 2, 12, 20, 17, 47, 713363, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 37, True); alias=default
DEBUG 2024-02-27 21:18:13,721 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1526, 1527, 1528, '2024-02-12T20:17:47.713363+01:00'::timestamptz, 925, '["Player 4", "Player 13", "Player 1", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1526, 1527, 1528, datetime.datetime(2024, 2, 12, 20, 17, 47, 713363, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 925, <psycopg2._json.Json object at 0x7fde620236b0>, '0x0'); alias=default
DEBUG 2024-02-27 21:18:13,723 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 7', 7, '2024-01-25T21:46:35.713363+01:00'::timestamptz, 716, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 7', 7, datetime.datetime(2024, 1, 25, 21, 46, 35, 713363, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 716, True); alias=default
DEBUG 2024-02-27 21:18:13,725 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 2, 'Player 8', 11, '2024-01-25T21:46:09.713363+01:00'::timestamptz, 503, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 2, 'Player 8', 11, datetime.datetime(2024, 1, 25, 21, 46, 9, 713363, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 503, True); alias=default
DEBUG 2024-02-27 21:18:13,726 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 8', 10, '2024-01-25T21:48:00.713363+01:00'::timestamptz, 390, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 8', 10, datetime.datetime(2024, 1, 25, 21, 48, 0, 713363, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 390, True); alias=default
DEBUG 2024-02-27 21:18:13,727 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1529, 1530, 1531, '2024-01-25T21:48:00.713363+01:00'::timestamptz, 801, '["Player 15", "Player 8", "Player 7", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1529, 1530, 1531, datetime.datetime(2024, 1, 25, 21, 48, 0, 713363, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 801, <psycopg2._json.Json object at 0x7fde61e488c0>, '0x0'); alias=default
DEBUG 2024-02-27 21:18:13,729 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,729 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,730 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:18:13,731 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 21:18:13,733 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 21:18:13,734 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:18:13,736 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,738 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,740 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,742 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,743 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 7', 10, '2023-12-23T18:31:15.738566+01:00'::timestamptz, 375, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 7', 10, datetime.datetime(2023, 12, 23, 18, 31, 15, 738566, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 375, True); alias=default
DEBUG 2024-02-27 21:18:13,745 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 1, 'Player 4', 11, '2023-12-23T18:34:39.738566+01:00'::timestamptz, 735, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 1, 'Player 4', 11, datetime.datetime(2023, 12, 23, 18, 34, 39, 738566, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 735, True); alias=default
DEBUG 2024-02-27 21:18:13,746 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 4', 8, '2023-12-23T18:37:59.738566+01:00'::timestamptz, 655, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 4', 8, datetime.datetime(2023, 12, 23, 18, 37, 59, 738566, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 655, True); alias=default
DEBUG 2024-02-27 21:18:13,747 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1532, 1533, 1534, '2023-12-23T18:37:59.738566+01:00'::timestamptz, 935, '["Player 12", "Player 4", "Player 7", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1532, 1533, 1534, datetime.datetime(2023, 12, 23, 18, 37, 59, 738566, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 935, <psycopg2._json.Json object at 0x7fde61e49160>, '0x0'); alias=default
DEBUG 2024-02-27 21:18:13,748 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 2', 3, '2024-01-12T04:03:00.738566+01:00'::timestamptz, 469, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 2', 3, datetime.datetime(2024, 1, 12, 4, 3, 0, 738566, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 469, True); alias=default
DEBUG 2024-02-27 21:18:13,750 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 0, 'Player 13', 11, '2024-01-12T04:08:35.738566+01:00'::timestamptz, 835, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 0, 'Player 13', 11, datetime.datetime(2024, 1, 12, 4, 8, 35, 738566, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 835, True); alias=default
DEBUG 2024-02-27 21:18:13,751 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 0, 'Player 13', 11, '2024-01-12T04:09:28.738566+01:00'::timestamptz, 181, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 0, 'Player 13', 11, datetime.datetime(2024, 1, 12, 4, 9, 28, 738566, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 181, True); alias=default
DEBUG 2024-02-27 21:18:13,753 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1535, 1536, 1537, '2024-01-12T04:09:28.738566+01:00'::timestamptz, 888, '["Player 13", "Player 12", "Player 2", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1535, 1536, 1537, datetime.datetime(2024, 1, 12, 4, 9, 28, 738566, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 888, <psycopg2._json.Json object at 0x7fde61e49670>, '0x0'); alias=default
DEBUG 2024-02-27 21:18:13,755 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,756 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,758 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:18:13,759 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 21:18:13,760 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 21:18:13,761 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:18:13,762 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,763 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,764 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,765 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,766 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 6, 'Player 4', 11, '2023-12-25T23:36:22.763508+01:00'::timestamptz, 222, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 6, 'Player 4', 11, datetime.datetime(2023, 12, 25, 23, 36, 22, 763508, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 222, True); alias=default
DEBUG 2024-02-27 21:18:13,768 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 13', 1, '2023-12-25T23:40:40.763508+01:00'::timestamptz, 850, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 13', 1, datetime.datetime(2023, 12, 25, 23, 40, 40, 763508, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 850, True); alias=default
DEBUG 2024-02-27 21:18:13,770 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 0, 'Player 5', 11, '2023-12-25T23:42:53.763508+01:00'::timestamptz, 905, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 0, 'Player 5', 11, datetime.datetime(2023, 12, 25, 23, 42, 53, 763508, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 905, True); alias=default
DEBUG 2024-02-27 21:18:13,771 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1538, 1539, 1540, '2023-12-25T23:42:53.763508+01:00'::timestamptz, 983, '["Player 5", "Player 4", "Player 2", "Player 13"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1538, 1539, 1540, datetime.datetime(2023, 12, 25, 23, 42, 53, 763508, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 983, <psycopg2._json.Json object at 0x7fde61e4a810>, '0x0'); alias=default
DEBUG 2024-02-27 21:18:13,773 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 1', 7, '2023-12-05T22:49:33.763508+01:00'::timestamptz, 748, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 1', 7, datetime.datetime(2023, 12, 5, 22, 49, 33, 763508, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 748, True); alias=default
DEBUG 2024-02-27 21:18:13,775 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 4', 0, '2023-12-05T22:43:33.763508+01:00'::timestamptz, 474, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 4', 0, datetime.datetime(2023, 12, 5, 22, 43, 33, 763508, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 474, True); alias=default
DEBUG 2024-02-27 21:18:13,776 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 10', 3, '2023-12-05T22:52:15.763508+01:00'::timestamptz, 601, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 10', 3, datetime.datetime(2023, 12, 5, 22, 52, 15, 763508, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 601, True); alias=default
DEBUG 2024-02-27 21:18:13,778 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1541, 1542, 1543, '2023-12-05T22:52:15.763508+01:00'::timestamptz, 996, '["Player 11", "Player 10", "Player 1", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1541, 1542, 1543, datetime.datetime(2023, 12, 5, 22, 52, 15, 763508, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 996, <psycopg2._json.Json object at 0x7fde61e4a9c0>, '0x0'); alias=default
DEBUG 2024-02-27 21:18:13,779 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,780 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,781 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:18:13,782 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 21:18:13,783 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 21:18:13,786 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 21:18:13,787 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:18:13,789 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,791 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,792 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,793 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,795 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 12', 1, '2024-01-27T04:31:18.791843+01:00'::timestamptz, 506, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 12', 1, datetime.datetime(2024, 1, 27, 4, 31, 18, 791843, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 506, True); alias=default
DEBUG 2024-02-27 21:18:13,797 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 9, 'Player 9', 11, '2024-01-27T04:32:42.791843+01:00'::timestamptz, 389, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 9, 'Player 9', 11, datetime.datetime(2024, 1, 27, 4, 32, 42, 791843, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 389, True); alias=default
DEBUG 2024-02-27 21:18:13,798 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 9', 1, '2024-01-27T04:36:40.791843+01:00'::timestamptz, 293, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 9', 1, datetime.datetime(2024, 1, 27, 4, 36, 40, 791843, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 293, True); alias=default
DEBUG 2024-02-27 21:18:13,799 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1544, 1545, 1546, '2024-01-27T04:36:40.791843+01:00'::timestamptz, 828, '["Player 13", "Player 9", "Player 12", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1544, 1545, 1546, datetime.datetime(2024, 1, 27, 4, 36, 40, 791843, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 828, <psycopg2._json.Json object at 0x7fde61e4af60>, '0x0'); alias=default
DEBUG 2024-02-27 21:18:13,800 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 2, 'Player 0', 11, '2024-01-11T16:07:38.791843+01:00'::timestamptz, 130, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 2, 'Player 0', 11, datetime.datetime(2024, 1, 11, 16, 7, 38, 791843, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 130, True); alias=default
DEBUG 2024-02-27 21:18:13,801 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 10, 'Player 3', 11, '2024-01-11T16:14:04.791843+01:00'::timestamptz, 491, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 10, 'Player 3', 11, datetime.datetime(2024, 1, 11, 16, 14, 4, 791843, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 491, True); alias=default
DEBUG 2024-02-27 21:18:13,803 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 3', 10, '2024-01-11T16:14:14.791843+01:00'::timestamptz, 859, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 3', 10, datetime.datetime(2024, 1, 11, 16, 14, 14, 791843, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 859, True); alias=default
DEBUG 2024-02-27 21:18:13,805 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1547, 1548, 1549, '2024-01-11T16:14:14.791843+01:00'::timestamptz, 526, '["Player 0", "Player 3", "Player 5", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1547, 1548, 1549, datetime.datetime(2024, 1, 11, 16, 14, 14, 791843, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 526, <psycopg2._json.Json object at 0x7fde61e496d0>, '0x0'); alias=default
DEBUG 2024-02-27 21:18:13,807 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:18:13,809 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
