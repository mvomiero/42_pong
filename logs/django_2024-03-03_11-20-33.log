DEBUG 2024-03-03 11:20:35,395 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,397 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,399 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,399 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,399 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 11:20:35,421 utils (0.022) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:20:35,423 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,423 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,424 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 11:20:35,427 utils (0.003) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:20:35,430 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 11:20:35,432 utils (0.002) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 11:20:35,433 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,436 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T11:20:35.433991+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 11, 20, 35, 433991, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:20:35,437 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,437 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,439 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 11:20:35,442 utils (0.003) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:20:35,447 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 11:20:35,451 utils (0.004) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 11:20:35,452 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 11:20:35,456 utils (0.003) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:20:35,461 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 11:20:35,467 utils (0.006) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:20:35,470 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 11:20:35,473 utils (0.003) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:20:35,474 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 11:20:35,477 utils (0.002) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:20:35,477 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 11:20:35,492 utils (0.014) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 11:20:35,492 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 11:20:35,494 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 11:20:35,495 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 11:20:35,507 utils (0.012) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 11:20:35,507 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 11:20:35,515 utils (0.008) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 11:20:35,516 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 11:20:35,518 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 11:20:35,518 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 11:20:35,519 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 11:20:35,520 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 11:20:35,521 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 11:20:35,521 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 11:20:35,523 utils (0.002) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 11:20:35,523 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 11:20:35,525 utils (0.002) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 11:20:35,525 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 11:20:35,527 utils (0.002) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 11:20:35,527 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 11:20:35,528 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 11:20:35,529 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 11:20:35,529 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 11:20:35,530 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 11:20:35,531 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 11:20:35,531 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 11:20:35,533 utils (0.002) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 11:20:35,533 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 11:20:35,535 utils (0.002) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 11:20:35,535 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 11:20:35,537 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 11:20:35,538 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 11:20:35,539 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 11:20:35,539 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 11:20:35,540 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 11:20:35,541 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 11:20:35,542 utils (0.002) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 11:20:35,543 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 11:20:35,545 utils (0.002) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 11:20:35,546 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,548 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,549 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T11:20:35.548471+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 11, 20, 35, 548471, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:20:35,550 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,561 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 11:20:35,566 utils (0.005) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:20:35,567 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 11:20:35,568 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 11:20:35,568 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 11:20:35,569 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 11:20:35,570 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 11:20:35,572 utils (0.002) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 11:20:35,572 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 11:20:35,575 utils (0.003) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 11:20:35,576 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,578 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,579 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T11:20:35.578546+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 11, 20, 35, 578546, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:20:35,580 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,593 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,595 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T11:20:35.594322+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 11, 20, 35, 594322, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:20:35,596 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,597 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,609 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,610 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T11:20:35.609639+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 11, 20, 35, 609639, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:20:35,612 utils (0.002) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,612 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,624 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 11:20:35,624 utils (0.000) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 11:20:35,634 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 11:20:35,635 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 11:20:35,636 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,637 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T11:20:35.636778+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 11, 20, 35, 636778, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:20:35,638 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,638 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,647 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 11:20:35,647 utils (0.000) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 11:20:35,648 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,649 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T11:20:35.649161+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 11, 20, 35, 649161, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:20:35,650 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,651 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,664 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 11:20:35,664 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 11:20:35,666 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,666 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T11:20:35.666325+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 11, 20, 35, 666325, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:20:35,667 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,667 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,676 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,677 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T11:20:35.676800+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 11, 20, 35, 676800, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:20:35,678 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,678 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,688 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 11:20:35,689 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 11:20:35,691 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,692 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T11:20:35.691704+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 11, 20, 35, 691704, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:20:35,693 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,693 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,694 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,695 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T11:20:35.695167+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 11, 20, 35, 695167, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:20:35,696 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,696 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,707 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,708 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T11:20:35.708132+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 11, 20, 35, 708132, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:20:35,709 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,710 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,719 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 11:20:35,722 utils (0.003) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 11:20:35,724 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,725 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T11:20:35.724580+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 11, 20, 35, 724580, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:20:35,726 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,726 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,736 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 11:20:35,737 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 11:20:35,738 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,739 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T11:20:35.739015+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 11, 20, 35, 739015, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:20:35,740 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,740 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,749 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 11:20:35,750 utils (0.001) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 11:20:35,752 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,752 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T11:20:35.752373+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 11, 20, 35, 752373, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:20:35,753 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,754 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,764 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,765 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T11:20:35.765045+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 11, 20, 35, 765045, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:20:35,767 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,767 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,775 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 11:20:35,776 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 11:20:35,777 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,778 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T11:20:35.777870+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 11, 20, 35, 777870, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:20:35,779 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,779 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,781 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 11:20:35,785 utils (0.004) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:20:35,787 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 11:20:35,791 utils (0.004) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 11:20:35,793 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,794 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T11:20:35.793887+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 11, 20, 35, 793887, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:20:35,795 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,795 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,797 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 11:20:35,802 utils (0.004) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:20:35,803 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 11:20:35,805 utils (0.002) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 11:20:35,805 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 11:20:35,807 utils (0.002) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 11:20:35,808 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,809 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,811 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T11:20:35.810242+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 11, 20, 35, 810242, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:20:35,812 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:20:35,813 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 11:20:35,824 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 11:20:35,824 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,825 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 11:20:35,827 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,828 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 11:20:35,833 utils (0.002) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 11:20:35,834 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:35,835 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 11:20:35,837 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:35,838 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 11:20:35,841 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:20:35,843 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:20:35,844 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:20:35,874 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 0', 7, '2023-12-15T04:35:31.843673+01:00'::timestamptz, 442, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 0', 7, datetime.datetime(2023, 12, 15, 4, 35, 31, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 442, False); alias=default
DEBUG 2024-03-03 11:20:35,876 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 5, 'Player 12', 11, '2023-12-16T18:11:35.843673+01:00'::timestamptz, 322, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 5, 'Player 12', 11, datetime.datetime(2023, 12, 16, 18, 11, 35, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 322, False); alias=default
DEBUG 2024-03-03 11:20:35,877 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 9', 6, '2024-01-20T05:16:35.843673+01:00'::timestamptz, 667, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 9', 6, datetime.datetime(2024, 1, 20, 5, 16, 35, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 667, False); alias=default
DEBUG 2024-03-03 11:20:35,879 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 0, 'Player 16', 11, '2024-01-11T14:29:31.843673+01:00'::timestamptz, 412, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 0, 'Player 16', 11, datetime.datetime(2024, 1, 11, 14, 29, 31, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 412, False); alias=default
DEBUG 2024-03-03 11:20:35,880 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 5, 'Player 9', 11, '2024-02-25T10:55:09.843673+01:00'::timestamptz, 633, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 5, 'Player 9', 11, datetime.datetime(2024, 2, 25, 10, 55, 9, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 633, False); alias=default
DEBUG 2024-03-03 11:20:35,881 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 7, 'Player 3', 11, '2024-01-22T11:59:18.843673+01:00'::timestamptz, 926, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 7, 'Player 3', 11, datetime.datetime(2024, 1, 22, 11, 59, 18, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 926, False); alias=default
DEBUG 2024-03-03 11:20:35,883 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 0', 1, '2024-02-17T00:28:14.843673+01:00'::timestamptz, 626, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 0', 1, datetime.datetime(2024, 2, 17, 0, 28, 14, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 626, False); alias=default
DEBUG 2024-03-03 11:20:35,884 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 3, 'Player 0', 11, '2024-02-20T17:04:09.843673+01:00'::timestamptz, 725, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 3, 'Player 0', 11, datetime.datetime(2024, 2, 20, 17, 4, 9, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 725, False); alias=default
DEBUG 2024-03-03 11:20:35,885 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 0, 'Player 11', 11, '2023-12-13T21:04:05.843673+01:00'::timestamptz, 684, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 0, 'Player 11', 11, datetime.datetime(2023, 12, 13, 21, 4, 5, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 684, False); alias=default
DEBUG 2024-03-03 11:20:35,887 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 3, 'Player 1', 11, '2023-11-01T05:10:27.843673+01:00'::timestamptz, 687, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 3, 'Player 1', 11, datetime.datetime(2023, 11, 1, 5, 10, 27, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 687, False); alias=default
DEBUG 2024-03-03 11:20:35,888 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 3, 'Player 15', 11, '2024-02-27T07:44:20.843673+01:00'::timestamptz, 309, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 3, 'Player 15', 11, datetime.datetime(2024, 2, 27, 7, 44, 20, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 309, False); alias=default
DEBUG 2024-03-03 11:20:35,889 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 6, 'Player 4', 11, '2024-01-26T22:02:29.843673+01:00'::timestamptz, 146, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 6, 'Player 4', 11, datetime.datetime(2024, 1, 26, 22, 2, 29, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 146, False); alias=default
DEBUG 2024-03-03 11:20:35,890 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 8', 9, '2023-11-16T04:42:37.843673+01:00'::timestamptz, 971, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 8', 9, datetime.datetime(2023, 11, 16, 4, 42, 37, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 971, False); alias=default
DEBUG 2024-03-03 11:20:35,891 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 16', 2, '2023-12-22T06:22:45.843673+01:00'::timestamptz, 847, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 16', 2, datetime.datetime(2023, 12, 22, 6, 22, 45, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 847, False); alias=default
DEBUG 2024-03-03 11:20:35,893 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 16', 10, '2023-12-26T01:16:42.843673+01:00'::timestamptz, 135, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 16', 10, datetime.datetime(2023, 12, 26, 1, 16, 42, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 135, False); alias=default
DEBUG 2024-03-03 11:20:35,894 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 22', 1, '2024-01-16T06:21:23.843673+01:00'::timestamptz, 933, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 22', 1, datetime.datetime(2024, 1, 16, 6, 21, 23, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 933, False); alias=default
DEBUG 2024-03-03 11:20:35,895 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 22', 3, '2024-02-04T22:04:32.843673+01:00'::timestamptz, 388, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 22', 3, datetime.datetime(2024, 2, 4, 22, 4, 32, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 388, False); alias=default
DEBUG 2024-03-03 11:20:35,896 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 14', 7, '2024-02-11T05:45:31.843673+01:00'::timestamptz, 986, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 14', 7, datetime.datetime(2024, 2, 11, 5, 45, 31, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 986, False); alias=default
DEBUG 2024-03-03 11:20:35,898 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 9, 'Player 23', 11, '2024-02-22T11:54:03.843673+01:00'::timestamptz, 883, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 9, 'Player 23', 11, datetime.datetime(2024, 2, 22, 11, 54, 3, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 883, False); alias=default
DEBUG 2024-03-03 11:20:35,899 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 7, 'Player 2', 11, '2023-12-27T04:08:35.843673+01:00'::timestamptz, 203, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 7, 'Player 2', 11, datetime.datetime(2023, 12, 27, 4, 8, 35, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 203, False); alias=default
DEBUG 2024-03-03 11:20:35,900 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 0, 'Player 4', 11, '2024-01-24T09:15:17.843673+01:00'::timestamptz, 244, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 0, 'Player 4', 11, datetime.datetime(2024, 1, 24, 9, 15, 17, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 244, False); alias=default
DEBUG 2024-03-03 11:20:35,901 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 5', 0, '2024-01-30T19:54:24.843673+01:00'::timestamptz, 824, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 5', 0, datetime.datetime(2024, 1, 30, 19, 54, 24, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 824, False); alias=default
DEBUG 2024-03-03 11:20:35,902 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 7, 'Player 24', 11, '2023-11-03T15:54:26.843673+01:00'::timestamptz, 440, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 7, 'Player 24', 11, datetime.datetime(2023, 11, 3, 15, 54, 26, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 440, False); alias=default
DEBUG 2024-03-03 11:20:35,904 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 0', 2, '2023-12-25T13:42:51.843673+01:00'::timestamptz, 966, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 0', 2, datetime.datetime(2023, 12, 25, 13, 42, 51, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 966, False); alias=default
DEBUG 2024-03-03 11:20:35,905 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 23', 7, '2023-11-10T06:07:31.843673+01:00'::timestamptz, 237, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 23', 7, datetime.datetime(2023, 11, 10, 6, 7, 31, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 237, False); alias=default
DEBUG 2024-03-03 11:20:35,906 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 13', 3, '2024-01-19T16:52:53.843673+01:00'::timestamptz, 303, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 13', 3, datetime.datetime(2024, 1, 19, 16, 52, 53, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 303, False); alias=default
DEBUG 2024-03-03 11:20:35,907 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 22', 5, '2024-02-03T18:58:29.843673+01:00'::timestamptz, 335, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 22', 5, datetime.datetime(2024, 2, 3, 18, 58, 29, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 335, False); alias=default
DEBUG 2024-03-03 11:20:35,908 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 9', 10, '2023-12-18T06:48:00.843673+01:00'::timestamptz, 704, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 9', 10, datetime.datetime(2023, 12, 18, 6, 48, 0, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 704, False); alias=default
DEBUG 2024-03-03 11:20:35,909 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 3, 'Player 4', 11, '2023-11-07T17:41:30.843673+01:00'::timestamptz, 277, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 3, 'Player 4', 11, datetime.datetime(2023, 11, 7, 17, 41, 30, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 277, False); alias=default
DEBUG 2024-03-03 11:20:35,911 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 16', 5, '2023-11-09T07:25:38.843673+01:00'::timestamptz, 665, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 16', 5, datetime.datetime(2023, 11, 9, 7, 25, 38, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 665, False); alias=default
DEBUG 2024-03-03 11:20:35,912 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 25', 8, '2024-02-22T20:42:32.843673+01:00'::timestamptz, 786, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 25', 8, datetime.datetime(2024, 2, 22, 20, 42, 32, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 786, False); alias=default
DEBUG 2024-03-03 11:20:35,913 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 1, 'Player 10', 11, '2023-12-21T22:10:28.843673+01:00'::timestamptz, 672, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 1, 'Player 10', 11, datetime.datetime(2023, 12, 21, 22, 10, 28, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 672, False); alias=default
DEBUG 2024-03-03 11:20:35,914 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 23', 1, '2023-11-21T19:00:27.843673+01:00'::timestamptz, 548, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 23', 1, datetime.datetime(2023, 11, 21, 19, 0, 27, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 548, False); alias=default
DEBUG 2024-03-03 11:20:35,915 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 24', 3, '2024-02-24T20:02:16.843673+01:00'::timestamptz, 444, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 24', 3, datetime.datetime(2024, 2, 24, 20, 2, 16, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 444, False); alias=default
DEBUG 2024-03-03 11:20:35,917 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 10', 10, '2024-02-04T14:17:57.843673+01:00'::timestamptz, 831, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 10', 10, datetime.datetime(2024, 2, 4, 14, 17, 57, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 831, False); alias=default
DEBUG 2024-03-03 11:20:35,918 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 31', 2, '2023-11-01T04:17:48.843673+01:00'::timestamptz, 148, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 31', 2, datetime.datetime(2023, 11, 1, 4, 17, 48, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 148, False); alias=default
DEBUG 2024-03-03 11:20:35,919 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 7', 8, '2023-12-09T17:25:20.843673+01:00'::timestamptz, 687, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 7', 8, datetime.datetime(2023, 12, 9, 17, 25, 20, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 687, False); alias=default
DEBUG 2024-03-03 11:20:35,920 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 1, 'Player 12', 11, '2023-12-13T08:25:51.843673+01:00'::timestamptz, 330, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 1, 'Player 12', 11, datetime.datetime(2023, 12, 13, 8, 25, 51, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 330, False); alias=default
DEBUG 2024-03-03 11:20:35,921 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 4, 'Player 14', 11, '2023-12-25T12:08:33.843673+01:00'::timestamptz, 443, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 4, 'Player 14', 11, datetime.datetime(2023, 12, 25, 12, 8, 33, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 443, False); alias=default
DEBUG 2024-03-03 11:20:35,922 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 9, 'Player 32', 11, '2023-11-20T06:19:15.843673+01:00'::timestamptz, 241, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 9, 'Player 32', 11, datetime.datetime(2023, 11, 20, 6, 19, 15, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 241, False); alias=default
DEBUG 2024-03-03 11:20:35,923 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 7, 'Player 20', 11, '2024-01-22T19:55:36.843673+01:00'::timestamptz, 593, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 7, 'Player 20', 11, datetime.datetime(2024, 1, 22, 19, 55, 36, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 593, False); alias=default
DEBUG 2024-03-03 11:20:35,925 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 3, 'Player 23', 11, '2024-01-08T23:45:48.843673+01:00'::timestamptz, 192, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 3, 'Player 23', 11, datetime.datetime(2024, 1, 8, 23, 45, 48, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 192, False); alias=default
DEBUG 2024-03-03 11:20:35,926 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 11, 'Player 5', 2, '2023-11-04T18:52:08.843673+01:00'::timestamptz, 24, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 11, 'Player 5', 2, datetime.datetime(2023, 11, 4, 18, 52, 8, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 24, False); alias=default
DEBUG 2024-03-03 11:20:35,927 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 5', 0, '2023-11-06T02:49:45.843673+01:00'::timestamptz, 170, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 5', 0, datetime.datetime(2023, 11, 6, 2, 49, 45, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 170, False); alias=default
DEBUG 2024-03-03 11:20:35,928 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 15', 4, '2024-01-11T00:32:07.843673+01:00'::timestamptz, 48, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 15', 4, datetime.datetime(2024, 1, 11, 0, 32, 7, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 48, False); alias=default
DEBUG 2024-03-03 11:20:35,929 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 36', 7, '2023-12-14T05:44:01.843673+01:00'::timestamptz, 82, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 36', 7, datetime.datetime(2023, 12, 14, 5, 44, 1, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 82, False); alias=default
DEBUG 2024-03-03 11:20:35,930 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 11, 'Player 38', 4, '2023-11-10T00:08:29.843673+01:00'::timestamptz, 964, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 11, 'Player 38', 4, datetime.datetime(2023, 11, 10, 0, 8, 29, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 964, False); alias=default
DEBUG 2024-03-03 11:20:35,931 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 5, 'Player 21', 11, '2024-01-31T22:38:47.843673+01:00'::timestamptz, 187, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 5, 'Player 21', 11, datetime.datetime(2024, 1, 31, 22, 38, 47, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 187, False); alias=default
DEBUG 2024-03-03 11:20:35,933 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 11, 'Player 17', 8, '2023-11-14T04:45:35.843673+01:00'::timestamptz, 214, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 11, 'Player 17', 8, datetime.datetime(2023, 11, 14, 4, 45, 35, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 214, False); alias=default
DEBUG 2024-03-03 11:20:35,934 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 4, 'Player 12', 11, '2023-11-29T16:47:59.843673+01:00'::timestamptz, 897, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 4, 'Player 12', 11, datetime.datetime(2023, 11, 29, 16, 47, 59, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 897, False); alias=default
DEBUG 2024-03-03 11:20:35,935 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 10, 'Player 22', 11, '2023-11-27T22:38:08.843673+01:00'::timestamptz, 265, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 10, 'Player 22', 11, datetime.datetime(2023, 11, 27, 22, 38, 8, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 265, False); alias=default
DEBUG 2024-03-03 11:20:35,936 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 28', 0, '2024-01-20T21:15:15.843673+01:00'::timestamptz, 351, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 28', 0, datetime.datetime(2024, 1, 20, 21, 15, 15, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 351, False); alias=default
DEBUG 2024-03-03 11:20:35,937 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 7, 'Player 25', 11, '2024-01-10T11:27:11.843673+01:00'::timestamptz, 80, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 7, 'Player 25', 11, datetime.datetime(2024, 1, 10, 11, 27, 11, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 80, False); alias=default
DEBUG 2024-03-03 11:20:35,939 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 25', 7, '2024-02-11T10:25:32.843673+01:00'::timestamptz, 91, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 25', 7, datetime.datetime(2024, 2, 11, 10, 25, 32, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 91, False); alias=default
DEBUG 2024-03-03 11:20:35,940 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 6, 'Player 5', 11, '2024-01-26T10:26:46.843673+01:00'::timestamptz, 63, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 6, 'Player 5', 11, datetime.datetime(2024, 1, 26, 10, 26, 46, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 63, False); alias=default
DEBUG 2024-03-03 11:20:35,941 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 42', 1, '2023-11-20T04:59:45.843673+01:00'::timestamptz, 437, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 42', 1, datetime.datetime(2023, 11, 20, 4, 59, 45, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 437, False); alias=default
DEBUG 2024-03-03 11:20:35,942 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 5', 2, '2023-12-07T17:12:46.843673+01:00'::timestamptz, 87, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 5', 2, datetime.datetime(2023, 12, 7, 17, 12, 46, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 87, False); alias=default
DEBUG 2024-03-03 11:20:35,943 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 26', 8, '2024-01-03T17:28:19.843673+01:00'::timestamptz, 200, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 26', 8, datetime.datetime(2024, 1, 3, 17, 28, 19, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 200, False); alias=default
DEBUG 2024-03-03 11:20:35,944 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 19', 4, '2023-11-07T07:44:23.843673+01:00'::timestamptz, 972, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 19', 4, datetime.datetime(2023, 11, 7, 7, 44, 23, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 972, False); alias=default
DEBUG 2024-03-03 11:20:35,945 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 1, 'Player 25', 11, '2023-11-26T00:18:22.843673+01:00'::timestamptz, 242, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 1, 'Player 25', 11, datetime.datetime(2023, 11, 26, 0, 18, 22, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 242, False); alias=default
DEBUG 2024-03-03 11:20:35,946 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 11, 'Player 11', 2, '2023-12-29T01:06:10.843673+01:00'::timestamptz, 634, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 11, 'Player 11', 2, datetime.datetime(2023, 12, 29, 1, 6, 10, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 634, False); alias=default
DEBUG 2024-03-03 11:20:35,947 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 11, 'Player 17', 0, '2024-01-22T18:34:20.843673+01:00'::timestamptz, 514, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 11, 'Player 17', 0, datetime.datetime(2024, 1, 22, 18, 34, 20, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 514, False); alias=default
DEBUG 2024-03-03 11:20:35,949 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 3, 'Player 29', 11, '2024-01-19T04:14:37.843673+01:00'::timestamptz, 112, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 3, 'Player 29', 11, datetime.datetime(2024, 1, 19, 4, 14, 37, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 112, False); alias=default
DEBUG 2024-03-03 11:20:35,950 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 3, 'Player 0', 11, '2023-11-20T23:35:27.843673+01:00'::timestamptz, 919, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 3, 'Player 0', 11, datetime.datetime(2023, 11, 20, 23, 35, 27, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 919, False); alias=default
DEBUG 2024-03-03 11:20:35,951 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 2, 'Player 35', 11, '2023-12-06T01:55:59.843673+01:00'::timestamptz, 249, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 2, 'Player 35', 11, datetime.datetime(2023, 12, 6, 1, 55, 59, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 249, False); alias=default
DEBUG 2024-03-03 11:20:35,952 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 2, 'Player 17', 11, '2023-11-06T06:35:08.843673+01:00'::timestamptz, 120, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 2, 'Player 17', 11, datetime.datetime(2023, 11, 6, 6, 35, 8, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 120, False); alias=default
DEBUG 2024-03-03 11:20:35,953 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 6, 'Player 42', 11, '2024-01-03T10:15:28.843673+01:00'::timestamptz, 918, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 6, 'Player 42', 11, datetime.datetime(2024, 1, 3, 10, 15, 28, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 918, False); alias=default
DEBUG 2024-03-03 11:20:35,955 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 10', 2, '2023-12-27T10:14:59.843673+01:00'::timestamptz, 544, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 10', 2, datetime.datetime(2023, 12, 27, 10, 14, 59, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 544, False); alias=default
DEBUG 2024-03-03 11:20:35,956 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 3, 'Player 40', 11, '2024-02-14T18:54:49.843673+01:00'::timestamptz, 480, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 3, 'Player 40', 11, datetime.datetime(2024, 2, 14, 18, 54, 49, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 480, False); alias=default
DEBUG 2024-03-03 11:20:35,957 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 9, 'Player 20', 11, '2024-02-14T06:02:49.843673+01:00'::timestamptz, 525, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 9, 'Player 20', 11, datetime.datetime(2024, 2, 14, 6, 2, 49, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 525, False); alias=default
DEBUG 2024-03-03 11:20:35,958 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 48', 4, 'Player 6', 11, '2024-02-26T00:07:25.843673+01:00'::timestamptz, 416, false) RETURNING "pong_gamedata"."id"; args=('Player 48', 4, 'Player 6', 11, datetime.datetime(2024, 2, 26, 0, 7, 25, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 416, False); alias=default
DEBUG 2024-03-03 11:20:35,959 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 22', 0, '2024-01-16T02:43:23.843673+01:00'::timestamptz, 339, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 22', 0, datetime.datetime(2024, 1, 16, 2, 43, 23, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 339, False); alias=default
DEBUG 2024-03-03 11:20:35,961 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 6, 'Player 36', 11, '2023-11-06T19:51:34.843673+01:00'::timestamptz, 469, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 6, 'Player 36', 11, datetime.datetime(2023, 11, 6, 19, 51, 34, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 469, False); alias=default
DEBUG 2024-03-03 11:20:35,962 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 5, 'Player 29', 11, '2024-02-27T03:16:23.843673+01:00'::timestamptz, 596, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 5, 'Player 29', 11, datetime.datetime(2024, 2, 27, 3, 16, 23, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 596, False); alias=default
DEBUG 2024-03-03 11:20:35,963 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 42', 9, '2023-12-11T19:36:57.843673+01:00'::timestamptz, 830, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 42', 9, datetime.datetime(2023, 12, 11, 19, 36, 57, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 830, False); alias=default
DEBUG 2024-03-03 11:20:35,964 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 1, 'Player 6', 11, '2023-11-13T15:59:43.843673+01:00'::timestamptz, 399, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 1, 'Player 6', 11, datetime.datetime(2023, 11, 13, 15, 59, 43, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 399, False); alias=default
DEBUG 2024-03-03 11:20:35,966 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 8, 'Player 53', 11, '2023-12-01T07:48:51.843673+01:00'::timestamptz, 184, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 8, 'Player 53', 11, datetime.datetime(2023, 12, 1, 7, 48, 51, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 184, False); alias=default
DEBUG 2024-03-03 11:20:35,967 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 53', 1, '2024-02-14T02:02:06.843673+01:00'::timestamptz, 773, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 53', 1, datetime.datetime(2024, 2, 14, 2, 2, 6, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 773, False); alias=default
DEBUG 2024-03-03 11:20:35,968 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 30', 5, '2023-12-07T18:38:46.843673+01:00'::timestamptz, 54, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 30', 5, datetime.datetime(2023, 12, 7, 18, 38, 46, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 54, False); alias=default
DEBUG 2024-03-03 11:20:35,969 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 5, 'Player 1', 11, '2023-11-09T08:40:34.843673+01:00'::timestamptz, 200, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 5, 'Player 1', 11, datetime.datetime(2023, 11, 9, 8, 40, 34, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 200, False); alias=default
DEBUG 2024-03-03 11:20:35,970 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 33', 7, '2024-02-07T12:05:35.843673+01:00'::timestamptz, 768, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 33', 7, datetime.datetime(2024, 2, 7, 12, 5, 35, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 768, False); alias=default
DEBUG 2024-03-03 11:20:35,971 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 11, 'Player 29', 10, '2024-02-21T23:40:09.843673+01:00'::timestamptz, 605, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 11, 'Player 29', 10, datetime.datetime(2024, 2, 21, 23, 40, 9, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 605, False); alias=default
DEBUG 2024-03-03 11:20:35,973 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 33', 4, '2024-02-11T00:54:29.843673+01:00'::timestamptz, 48, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 33', 4, datetime.datetime(2024, 2, 11, 0, 54, 29, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 48, False); alias=default
DEBUG 2024-03-03 11:20:35,974 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 3, 'Player 48', 11, '2023-11-05T03:36:01.843673+01:00'::timestamptz, 983, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 3, 'Player 48', 11, datetime.datetime(2023, 11, 5, 3, 36, 1, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 983, False); alias=default
DEBUG 2024-03-03 11:20:35,975 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 11, 'Player 16', 2, '2023-12-25T04:00:22.843673+01:00'::timestamptz, 881, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 11, 'Player 16', 2, datetime.datetime(2023, 12, 25, 4, 0, 22, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 881, False); alias=default
DEBUG 2024-03-03 11:20:35,977 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 10, 'Player 41', 11, '2023-12-02T06:26:34.843673+01:00'::timestamptz, 779, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 10, 'Player 41', 11, datetime.datetime(2023, 12, 2, 6, 26, 34, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 779, False); alias=default
DEBUG 2024-03-03 11:20:35,978 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 11, 'Player 58', 0, '2024-01-11T15:47:43.843673+01:00'::timestamptz, 871, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 11, 'Player 58', 0, datetime.datetime(2024, 1, 11, 15, 47, 43, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 871, False); alias=default
DEBUG 2024-03-03 11:20:35,979 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 59', 3, '2024-02-03T03:57:22.843673+01:00'::timestamptz, 645, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 59', 3, datetime.datetime(2024, 2, 3, 3, 57, 22, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 645, False); alias=default
DEBUG 2024-03-03 11:20:35,981 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 46', 11, 'Player 40', 6, '2023-11-06T18:51:46.843673+01:00'::timestamptz, 312, false) RETURNING "pong_gamedata"."id"; args=('Player 46', 11, 'Player 40', 6, datetime.datetime(2023, 11, 6, 18, 51, 46, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 312, False); alias=default
DEBUG 2024-03-03 11:20:35,982 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 34', 7, '2024-02-29T08:45:47.843673+01:00'::timestamptz, 306, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 34', 7, datetime.datetime(2024, 2, 29, 8, 45, 47, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 306, False); alias=default
DEBUG 2024-03-03 11:20:35,983 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 8, 'Player 27', 11, '2023-12-14T13:48:43.843673+01:00'::timestamptz, 498, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 8, 'Player 27', 11, datetime.datetime(2023, 12, 14, 13, 48, 43, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 498, False); alias=default
DEBUG 2024-03-03 11:20:35,985 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 4, 'Player 3', 11, '2024-01-17T01:33:23.843673+01:00'::timestamptz, 129, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 4, 'Player 3', 11, datetime.datetime(2024, 1, 17, 1, 33, 23, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 129, False); alias=default
DEBUG 2024-03-03 11:20:35,986 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 10, 'Player 45', 11, '2024-01-18T20:23:16.843673+01:00'::timestamptz, 172, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 10, 'Player 45', 11, datetime.datetime(2024, 1, 18, 20, 23, 16, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 172, False); alias=default
DEBUG 2024-03-03 11:20:35,988 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 11, 'Player 53', 3, '2024-01-01T22:41:19.843673+01:00'::timestamptz, 180, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 11, 'Player 53', 3, datetime.datetime(2024, 1, 1, 22, 41, 19, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 180, False); alias=default
DEBUG 2024-03-03 11:20:35,989 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 24', 8, '2023-11-02T17:12:02.843673+01:00'::timestamptz, 274, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 24', 8, datetime.datetime(2023, 11, 2, 17, 12, 2, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 274, False); alias=default
DEBUG 2024-03-03 11:20:35,990 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 11', 10, '2023-11-28T16:20:52.843673+01:00'::timestamptz, 166, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 11', 10, datetime.datetime(2023, 11, 28, 16, 20, 52, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 166, False); alias=default
DEBUG 2024-03-03 11:20:35,992 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 3, 'Player 14', 11, '2024-01-07T13:44:25.843673+01:00'::timestamptz, 891, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 3, 'Player 14', 11, datetime.datetime(2024, 1, 7, 13, 44, 25, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 891, False); alias=default
DEBUG 2024-03-03 11:20:35,993 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 50', 5, 'Player 53', 11, '2023-12-28T16:55:53.843673+01:00'::timestamptz, 204, false) RETURNING "pong_gamedata"."id"; args=('Player 50', 5, 'Player 53', 11, datetime.datetime(2023, 12, 28, 16, 55, 53, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 204, False); alias=default
DEBUG 2024-03-03 11:20:35,994 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 38', 7, '2023-12-01T18:19:20.843673+01:00'::timestamptz, 183, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 38', 7, datetime.datetime(2023, 12, 1, 18, 19, 20, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 183, False); alias=default
DEBUG 2024-03-03 11:20:35,996 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 5, 'Player 21', 11, '2024-01-23T10:15:14.843673+01:00'::timestamptz, 384, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 5, 'Player 21', 11, datetime.datetime(2024, 1, 23, 10, 15, 14, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 384, False); alias=default
DEBUG 2024-03-03 11:20:35,997 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:20:35,998 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 4, 'Player 0', 11, '2024-03-02T17:42:30.843673+01:00'::timestamptz, 658, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 4, 'Player 0', 11, datetime.datetime(2024, 3, 2, 17, 42, 30, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 658, True); alias=default
DEBUG 2024-03-03 11:20:35,999 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 0, 'Player 12', 11, '2024-03-02T17:42:09.843673+01:00'::timestamptz, 400, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 0, 'Player 12', 11, datetime.datetime(2024, 3, 2, 17, 42, 9, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 400, True); alias=default
DEBUG 2024-03-03 11:20:36,000 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 10, 'Player 12', 11, '2024-03-02T17:45:06.843673+01:00'::timestamptz, 413, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 10, 'Player 12', 11, datetime.datetime(2024, 3, 2, 17, 45, 6, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 413, True); alias=default
DEBUG 2024-03-03 11:20:36,002 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2024-03-02T17:45:06.843673+01:00'::timestamptz, 814, '["Player 12", "Player 0", "Player 15", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2024, 3, 2, 17, 45, 6, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 814, <psycopg2._json.Json object at 0x7f995657c860>, '0x0'); alias=default
DEBUG 2024-03-03 11:20:36,003 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 1', 10, '2024-01-21T06:04:15.843673+01:00'::timestamptz, 556, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 1', 10, datetime.datetime(2024, 1, 21, 6, 4, 15, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 556, True); alias=default
DEBUG 2024-03-03 11:20:36,004 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 4', 6, '2024-01-21T06:05:20.843673+01:00'::timestamptz, 492, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 4', 6, datetime.datetime(2024, 1, 21, 6, 5, 20, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 492, True); alias=default
DEBUG 2024-03-03 11:20:36,006 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 6, 'Player 15', 11, '2024-01-21T06:11:10.843673+01:00'::timestamptz, 981, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 6, 'Player 15', 11, datetime.datetime(2024, 1, 21, 6, 11, 10, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 981, True); alias=default
DEBUG 2024-03-03 11:20:36,007 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2024-01-21T06:11:10.843673+01:00'::timestamptz, 971, '["Player 15", "Player 5", "Player 1", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2024, 1, 21, 6, 11, 10, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 971, <psycopg2._json.Json object at 0x7f995658f5c0>, '0x0'); alias=default
DEBUG 2024-03-03 11:20:36,008 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 0', 0, '2023-11-29T12:05:58.843673+01:00'::timestamptz, 590, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 0', 0, datetime.datetime(2023, 11, 29, 12, 5, 58, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 590, True); alias=default
DEBUG 2024-03-03 11:20:36,009 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 9, 'Player 3', 11, '2023-11-29T12:02:36.843673+01:00'::timestamptz, 470, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 9, 'Player 3', 11, datetime.datetime(2023, 11, 29, 12, 2, 36, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 470, True); alias=default
DEBUG 2024-03-03 11:20:36,010 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 3', 6, '2023-11-29T12:10:04.843673+01:00'::timestamptz, 495, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 3', 6, datetime.datetime(2023, 11, 29, 12, 10, 4, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 495, True); alias=default
DEBUG 2024-03-03 11:20:36,011 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2023-11-29T12:10:04.843673+01:00'::timestamptz, 918, '["Player 14", "Player 3", "Player 0", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2023, 11, 29, 12, 10, 4, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 918, <psycopg2._json.Json object at 0x7f995658e660>, '0x0'); alias=default
DEBUG 2024-03-03 11:20:36,013 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 12', 10, '2023-12-21T19:52:20.843673+01:00'::timestamptz, 105, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 12', 10, datetime.datetime(2023, 12, 21, 19, 52, 20, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 105, True); alias=default
DEBUG 2024-03-03 11:20:36,014 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 3', 6, '2023-12-21T19:55:03.843673+01:00'::timestamptz, 187, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 3', 6, datetime.datetime(2023, 12, 21, 19, 55, 3, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 187, True); alias=default
DEBUG 2024-03-03 11:20:36,015 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 6, 'Player 7', 11, '2023-12-21T19:57:20.843673+01:00'::timestamptz, 298, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 6, 'Player 7', 11, datetime.datetime(2023, 12, 21, 19, 57, 20, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 298, True); alias=default
DEBUG 2024-03-03 11:20:36,016 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2023-12-21T19:57:20.843673+01:00'::timestamptz, 405, '["Player 7", "Player 16", "Player 12", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2023, 12, 21, 19, 57, 20, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 405, <psycopg2._json.Json object at 0x7f995658d7f0>, '0x0'); alias=default
DEBUG 2024-03-03 11:20:36,018 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 4, 'Player 1', 11, '2023-11-22T15:06:47.843673+01:00'::timestamptz, 618, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 4, 'Player 1', 11, datetime.datetime(2023, 11, 22, 15, 6, 47, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 618, True); alias=default
DEBUG 2024-03-03 11:20:36,019 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 1, 'Player 17', 11, '2023-11-22T15:03:04.843673+01:00'::timestamptz, 395, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 1, 'Player 17', 11, datetime.datetime(2023, 11, 22, 15, 3, 4, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 395, True); alias=default
DEBUG 2024-03-03 11:20:36,020 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 17', 2, '2023-11-22T15:09:59.843673+01:00'::timestamptz, 416, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 17', 2, datetime.datetime(2023, 11, 22, 15, 9, 59, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 416, True); alias=default
DEBUG 2024-03-03 11:20:36,021 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2023-11-22T15:09:59.843673+01:00'::timestamptz, 810, '["Player 1", "Player 17", "Player 3", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2023, 11, 22, 15, 9, 59, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 810, <psycopg2._json.Json object at 0x7f995657c5c0>, '0x0'); alias=default
DEBUG 2024-03-03 11:20:36,022 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 2', 7, '2023-12-02T11:13:54.843673+01:00'::timestamptz, 813, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 2', 7, datetime.datetime(2023, 12, 2, 11, 13, 54, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 813, True); alias=default
DEBUG 2024-03-03 11:20:36,024 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 0', 2, '2023-12-02T11:11:51.843673+01:00'::timestamptz, 464, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 0', 2, datetime.datetime(2023, 12, 2, 11, 11, 51, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 464, True); alias=default
DEBUG 2024-03-03 11:20:36,025 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 16', 8, '2023-12-02T11:17:00.843673+01:00'::timestamptz, 949, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 16', 8, datetime.datetime(2023, 12, 2, 11, 17, 0, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 949, True); alias=default
DEBUG 2024-03-03 11:20:36,026 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2023-12-02T11:17:00.843673+01:00'::timestamptz, 999, '["Player 10", "Player 16", "Player 2", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2023, 12, 2, 11, 17, 0, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 999, <psycopg2._json.Json object at 0x7f995657fdd0>, '0x0'); alias=default
DEBUG 2024-03-03 11:20:36,027 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 9, 'Player 11', 11, '2023-11-20T21:14:07.843673+01:00'::timestamptz, 883, true) RETURNING "pong_gamedata"."id"; args=('Player 18', 9, 'Player 11', 11, datetime.datetime(2023, 11, 20, 21, 14, 7, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 883, True); alias=default
DEBUG 2024-03-03 11:20:36,028 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 3', 4, '2023-11-20T21:10:41.843673+01:00'::timestamptz, 147, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 3', 4, datetime.datetime(2023, 11, 20, 21, 10, 41, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 147, True); alias=default
DEBUG 2024-03-03 11:20:36,030 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 17', 9, '2023-11-20T21:14:18.843673+01:00'::timestamptz, 563, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 17', 9, datetime.datetime(2023, 11, 20, 21, 14, 18, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 563, True); alias=default
DEBUG 2024-03-03 11:20:36,031 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2023-11-20T21:14:18.843673+01:00'::timestamptz, 894, '["Player 11", "Player 17", "Player 18", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2023, 11, 20, 21, 14, 18, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 894, <psycopg2._json.Json object at 0x7f995657de20>, '0x0'); alias=default
DEBUG 2024-03-03 11:20:36,032 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 10', 3, '2023-12-21T20:46:19.843673+01:00'::timestamptz, 755, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 10', 3, datetime.datetime(2023, 12, 21, 20, 46, 19, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 755, True); alias=default
DEBUG 2024-03-03 11:20:36,034 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 16', 2, '2023-12-21T20:48:25.843673+01:00'::timestamptz, 595, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 16', 2, datetime.datetime(2023, 12, 21, 20, 48, 25, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 595, True); alias=default
DEBUG 2024-03-03 11:20:36,036 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 11', 10, '2023-12-21T20:49:53.843673+01:00'::timestamptz, 669, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 11', 10, datetime.datetime(2023, 12, 21, 20, 49, 53, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 669, True); alias=default
DEBUG 2024-03-03 11:20:36,037 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2023-12-21T20:49:53.843673+01:00'::timestamptz, 969, '["Player 4", "Player 11", "Player 10", "Player 16"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2023, 12, 21, 20, 49, 53, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 969, <psycopg2._json.Json object at 0x7f995655de20>, '0x0'); alias=default
DEBUG 2024-03-03 11:20:36,038 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 4', 7, '2024-02-19T14:11:19.843673+01:00'::timestamptz, 555, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 4', 7, datetime.datetime(2024, 2, 19, 14, 11, 19, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 555, True); alias=default
DEBUG 2024-03-03 11:20:36,040 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 9, 'Player 12', 11, '2024-02-19T14:15:49.843673+01:00'::timestamptz, 946, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 9, 'Player 12', 11, datetime.datetime(2024, 2, 19, 14, 15, 49, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 946, True); alias=default
DEBUG 2024-03-03 11:20:36,041 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 12', 5, '2024-02-19T14:16:05.843673+01:00'::timestamptz, 311, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 12', 5, datetime.datetime(2024, 2, 19, 14, 16, 5, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 311, True); alias=default
DEBUG 2024-03-03 11:20:36,042 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2024-02-19T14:16:05.843673+01:00'::timestamptz, 962, '["Player 0", "Player 12", "Player 4", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2024, 2, 19, 14, 16, 5, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 962, <psycopg2._json.Json object at 0x7f995657e660>, '0x0'); alias=default
DEBUG 2024-03-03 11:20:36,043 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 10, 'Player 5', 11, '2023-11-24T01:41:12.843673+01:00'::timestamptz, 47, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 10, 'Player 5', 11, datetime.datetime(2023, 11, 24, 1, 41, 12, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 47, True); alias=default
DEBUG 2024-03-03 11:20:36,044 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 9, 'Player 1', 11, '2023-11-24T01:41:12.843673+01:00'::timestamptz, 846, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 9, 'Player 1', 11, datetime.datetime(2023, 11, 24, 1, 41, 12, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 846, True); alias=default
DEBUG 2024-03-03 11:20:36,046 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 7, 'Player 1', 11, '2023-11-24T01:42:25.843673+01:00'::timestamptz, 290, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 7, 'Player 1', 11, datetime.datetime(2023, 11, 24, 1, 42, 25, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 290, True); alias=default
DEBUG 2024-03-03 11:20:36,047 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2023-11-24T01:42:25.843673+01:00'::timestamptz, 919, '["Player 1", "Player 5", "Player 13", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2023, 11, 24, 1, 42, 25, 843673, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 919, <psycopg2._json.Json object at 0x7f99563a97c0>, '0x0'); alias=default
DEBUG 2024-03-03 11:20:36,048 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,048 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,049 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 11:20:36,050 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:36,050 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 11:20:36,051 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:36,052 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 11:20:36,054 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 11:20:36,055 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 11:20:36,057 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 11:20:36,058 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:36,059 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 11:20:36,060 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:36,061 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 11:20:36,062 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,063 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,063 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,064 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,065 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,066 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,067 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 11:20:36,067 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:36,067 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 11:20:36,068 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:36,069 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 11:20:36,071 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 11:20:36,071 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:36,072 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 11:20:36,073 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:36,073 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 11:20:36,074 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,075 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,076 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,077 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,078 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,079 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,079 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 11:20:36,080 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:36,080 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 11:20:36,081 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:36,082 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 11:20:36,083 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 11:20:36,084 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:36,084 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 11:20:36,085 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:36,086 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 11:20:36,087 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,088 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,089 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,090 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,090 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,091 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,092 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 11:20:36,092 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:36,093 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 11:20:36,093 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:36,094 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 11:20:36,095 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 11:20:36,097 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 11:20:36,097 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:20:36,098 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 11:20:36,099 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:20:36,099 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 11:20:36,100 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,101 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,102 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,102 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,103 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:20:36,104 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
