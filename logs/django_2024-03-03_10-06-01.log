DEBUG 2024-03-03 10:06:02,670 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:02,672 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:02,674 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:02,674 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:02,674 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 10:06:02,703 utils (0.028) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:06:02,704 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:02,705 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:02,707 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 10:06:02,709 utils (0.002) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:06:02,712 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 10:06:02,714 utils (0.002) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 10:06:02,715 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:02,719 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T10:06:02.716396+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 10, 6, 2, 716396, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:06:02,720 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:02,721 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:02,723 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 10:06:02,726 utils (0.003) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:06:02,730 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 10:06:02,734 utils (0.003) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 10:06:02,735 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:06:02,737 utils (0.002) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:06:02,750 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 10:06:02,755 utils (0.005) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:06:02,757 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:06:02,760 utils (0.003) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:06:02,761 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:06:02,764 utils (0.002) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:06:02,764 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 10:06:02,766 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 10:06:02,767 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:06:02,768 utils (0.001) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:06:02,768 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 10:06:02,770 utils (0.002) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 10:06:02,770 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 10:06:02,772 utils (0.002) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 10:06:02,773 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 10:06:02,776 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:06:02,776 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:06:02,778 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:06:02,778 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:06:02,780 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:06:02,780 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 10:06:02,782 utils (0.002) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 10:06:02,782 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 10:06:02,784 utils (0.002) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:06:02,784 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 10:06:02,787 utils (0.002) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 10:06:02,787 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 10:06:02,789 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 10:06:02,789 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:06:02,790 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:06:02,791 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:06:02,792 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:06:02,792 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 10:06:02,795 utils (0.002) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 10:06:02,795 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 10:06:02,796 utils (0.002) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 10:06:02,797 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 10:06:02,798 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:06:02,799 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:06:02,799 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:06:02,800 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:06:02,800 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:06:02,800 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 10:06:02,802 utils (0.002) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 10:06:02,802 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 10:06:02,804 utils (0.002) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:06:02,805 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:02,807 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:02,808 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T10:06:02.807355+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 10, 6, 2, 807355, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:06:02,809 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:02,815 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:06:02,820 utils (0.005) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:06:02,820 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:06:02,822 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:06:02,822 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:06:02,824 utils (0.002) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:06:02,824 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 10:06:02,827 utils (0.002) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 10:06:02,827 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 10:06:02,829 utils (0.002) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 10:06:02,830 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:02,831 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:02,833 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T10:06:02.831923+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 10, 6, 2, 831923, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:06:02,833 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:02,846 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:02,847 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T10:06:02.846540+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 10, 6, 2, 846540, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:06:02,847 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:02,848 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:02,855 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:02,858 utils (0.002) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T10:06:02.855616+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 10, 6, 2, 855616, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:06:02,859 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:02,859 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:02,868 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 10:06:02,868 utils (0.000) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 10:06:02,880 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 10:06:02,881 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 10:06:02,883 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:02,884 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T10:06:02.883356+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 10, 6, 2, 883356, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:06:02,885 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:02,885 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:02,895 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 10:06:02,895 utils (0.000) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 10:06:02,897 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:02,897 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T10:06:02.897230+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 10, 6, 2, 897230, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:06:02,898 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:02,898 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:02,911 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 10:06:02,912 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 10:06:02,913 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:02,914 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T10:06:02.913778+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 10, 6, 2, 913778, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:06:02,915 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:02,915 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:02,925 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:02,926 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T10:06:02.925735+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 10, 6, 2, 925735, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:06:02,928 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:02,928 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:02,937 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 10:06:02,937 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 10:06:02,939 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:02,940 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T10:06:02.939872+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 10, 6, 2, 939872, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:06:02,941 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:02,942 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:02,944 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:02,945 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T10:06:02.944575+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 10, 6, 2, 944575, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:06:02,945 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:02,946 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:02,953 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:02,954 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T10:06:02.953773+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 10, 6, 2, 953773, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:06:02,955 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:02,955 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:02,967 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:06:02,970 utils (0.003) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:06:02,971 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:02,972 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T10:06:02.972038+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 10, 6, 2, 972038, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:06:02,973 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:02,974 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:02,983 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:06:02,983 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:06:02,985 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:02,985 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T10:06:02.985289+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 10, 6, 2, 985289, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:06:02,986 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:02,986 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:03,000 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:06:03,002 utils (0.002) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:06:03,003 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:03,004 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T10:06:03.003875+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 10, 6, 3, 3875, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:06:03,005 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:03,005 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:03,015 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:03,015 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T10:06:03.015393+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 10, 6, 3, 15393, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:06:03,016 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:03,017 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:03,025 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:06:03,027 utils (0.002) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:06:03,029 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:03,030 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T10:06:03.030028+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 10, 6, 3, 30028, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:06:03,031 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:03,031 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:03,033 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 10:06:03,038 utils (0.005) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:06:03,041 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 10:06:03,047 utils (0.006) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 10:06:03,049 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:03,050 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T10:06:03.049832+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 10, 6, 3, 49832, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:06:03,051 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:03,051 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:03,053 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 10:06:03,058 utils (0.004) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:06:03,058 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 10:06:03,061 utils (0.002) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 10:06:03,061 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 10:06:03,063 utils (0.002) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 10:06:03,064 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:03,065 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:03,066 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T10:06:03.065939+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 10, 6, 3, 65939, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:06:03,068 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:06:03,068 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,085 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 10:06:03,085 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:03,086 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 10:06:03,087 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:03,088 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 10:06:03,091 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 10:06:03,092 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:03,093 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 10:06:03,095 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:03,095 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 10:06:03,097 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,098 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,099 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,126 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 14', 2, '2023-12-13T15:52:03.098535+01:00'::timestamptz, 859, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 14', 2, datetime.datetime(2023, 12, 13, 15, 52, 3, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 859, False); alias=default
DEBUG 2024-03-03 10:06:03,128 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 10', 7, '2024-01-13T09:22:13.098535+01:00'::timestamptz, 589, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 10', 7, datetime.datetime(2024, 1, 13, 9, 22, 13, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 589, False); alias=default
DEBUG 2024-03-03 10:06:03,129 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 0', 0, '2024-02-01T08:41:16.098535+01:00'::timestamptz, 200, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 0', 0, datetime.datetime(2024, 2, 1, 8, 41, 16, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 200, False); alias=default
DEBUG 2024-03-03 10:06:03,130 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 1, 'Player 17', 11, '2024-02-12T11:56:22.098535+01:00'::timestamptz, 924, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 1, 'Player 17', 11, datetime.datetime(2024, 2, 12, 11, 56, 22, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 924, False); alias=default
DEBUG 2024-03-03 10:06:03,131 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 1', 4, '2024-01-17T21:11:29.098535+01:00'::timestamptz, 634, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 1', 4, datetime.datetime(2024, 1, 17, 21, 11, 29, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 634, False); alias=default
DEBUG 2024-03-03 10:06:03,133 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 2, 'Player 6', 11, '2023-12-07T15:20:57.098535+01:00'::timestamptz, 5, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 2, 'Player 6', 11, datetime.datetime(2023, 12, 7, 15, 20, 57, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 5, False); alias=default
DEBUG 2024-03-03 10:06:03,134 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 4, 'Player 1', 11, '2023-12-24T17:36:05.098535+01:00'::timestamptz, 57, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 4, 'Player 1', 11, datetime.datetime(2023, 12, 24, 17, 36, 5, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 57, False); alias=default
DEBUG 2024-03-03 10:06:03,135 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 1', 0, '2024-02-06T10:04:16.098535+01:00'::timestamptz, 899, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 1', 0, datetime.datetime(2024, 2, 6, 10, 4, 16, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 899, False); alias=default
DEBUG 2024-03-03 10:06:03,137 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 9, 'Player 15', 11, '2023-12-12T23:31:33.098535+01:00'::timestamptz, 512, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 9, 'Player 15', 11, datetime.datetime(2023, 12, 12, 23, 31, 33, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 512, False); alias=default
DEBUG 2024-03-03 10:06:03,138 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 6, 'Player 19', 11, '2023-11-10T08:58:24.098535+01:00'::timestamptz, 131, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 6, 'Player 19', 11, datetime.datetime(2023, 11, 10, 8, 58, 24, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 131, False); alias=default
DEBUG 2024-03-03 10:06:03,140 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 10, 'Player 3', 11, '2024-01-30T01:11:24.098535+01:00'::timestamptz, 500, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 10, 'Player 3', 11, datetime.datetime(2024, 1, 30, 1, 11, 24, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 500, False); alias=default
DEBUG 2024-03-03 10:06:03,142 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 5, 'Player 5', 11, '2023-12-12T22:54:43.098535+01:00'::timestamptz, 452, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 5, 'Player 5', 11, datetime.datetime(2023, 12, 12, 22, 54, 43, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 452, False); alias=default
DEBUG 2024-03-03 10:06:03,143 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 6', 1, '2024-03-01T23:28:27.098535+01:00'::timestamptz, 229, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 6', 1, datetime.datetime(2024, 3, 1, 23, 28, 27, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 229, False); alias=default
DEBUG 2024-03-03 10:06:03,145 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 6, 'Player 17', 11, '2023-12-18T19:02:57.098535+01:00'::timestamptz, 988, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 6, 'Player 17', 11, datetime.datetime(2023, 12, 18, 19, 2, 57, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 988, False); alias=default
DEBUG 2024-03-03 10:06:03,146 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 4, 'Player 18', 11, '2023-12-15T19:31:11.098535+01:00'::timestamptz, 631, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 4, 'Player 18', 11, datetime.datetime(2023, 12, 15, 19, 31, 11, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 631, False); alias=default
DEBUG 2024-03-03 10:06:03,147 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 6', 0, '2024-01-03T19:43:40.098535+01:00'::timestamptz, 196, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 6', 0, datetime.datetime(2024, 1, 3, 19, 43, 40, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 196, False); alias=default
DEBUG 2024-03-03 10:06:03,149 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 10, 'Player 22', 11, '2023-11-03T09:50:07.098535+01:00'::timestamptz, 724, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 10, 'Player 22', 11, datetime.datetime(2023, 11, 3, 9, 50, 7, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 724, False); alias=default
DEBUG 2024-03-03 10:06:03,150 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 3', 9, '2023-12-25T23:41:45.098535+01:00'::timestamptz, 425, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 3', 9, datetime.datetime(2023, 12, 25, 23, 41, 45, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 425, False); alias=default
DEBUG 2024-03-03 10:06:03,151 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 8, 'Player 7', 11, '2023-12-11T23:09:01.098535+01:00'::timestamptz, 214, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 8, 'Player 7', 11, datetime.datetime(2023, 12, 11, 23, 9, 1, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 214, False); alias=default
DEBUG 2024-03-03 10:06:03,152 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 17', 7, '2024-02-23T20:43:15.098535+01:00'::timestamptz, 361, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 17', 7, datetime.datetime(2024, 2, 23, 20, 43, 15, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 361, False); alias=default
DEBUG 2024-03-03 10:06:03,154 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 9', 2, '2024-01-15T01:57:09.098535+01:00'::timestamptz, 521, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 9', 2, datetime.datetime(2024, 1, 15, 1, 57, 9, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 521, False); alias=default
DEBUG 2024-03-03 10:06:03,155 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 4, 'Player 11', 11, '2023-11-10T04:40:59.098535+01:00'::timestamptz, 172, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 4, 'Player 11', 11, datetime.datetime(2023, 11, 10, 4, 40, 59, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 172, False); alias=default
DEBUG 2024-03-03 10:06:03,156 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 12', 7, '2023-12-15T15:46:40.098535+01:00'::timestamptz, 412, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 12', 7, datetime.datetime(2023, 12, 15, 15, 46, 40, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 412, False); alias=default
DEBUG 2024-03-03 10:06:03,158 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 2', 4, '2024-01-06T02:35:53.098535+01:00'::timestamptz, 806, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 2', 4, datetime.datetime(2024, 1, 6, 2, 35, 53, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 806, False); alias=default
DEBUG 2024-03-03 10:06:03,160 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 4, 'Player 18', 11, '2024-02-07T23:46:55.098535+01:00'::timestamptz, 796, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 4, 'Player 18', 11, datetime.datetime(2024, 2, 7, 23, 46, 55, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 796, False); alias=default
DEBUG 2024-03-03 10:06:03,161 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 19', 1, '2023-12-30T17:18:33.098535+01:00'::timestamptz, 375, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 19', 1, datetime.datetime(2023, 12, 30, 17, 18, 33, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 375, False); alias=default
DEBUG 2024-03-03 10:06:03,162 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 11, 'Player 11', 2, '2024-02-28T02:17:55.098535+01:00'::timestamptz, 705, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 11, 'Player 11', 2, datetime.datetime(2024, 2, 28, 2, 17, 55, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 705, False); alias=default
DEBUG 2024-03-03 10:06:03,164 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 3, 'Player 26', 11, '2023-12-27T22:21:44.098535+01:00'::timestamptz, 62, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 3, 'Player 26', 11, datetime.datetime(2023, 12, 27, 22, 21, 44, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 62, False); alias=default
DEBUG 2024-03-03 10:06:03,165 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 8, 'Player 26', 11, '2024-02-14T01:20:20.098535+01:00'::timestamptz, 271, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 8, 'Player 26', 11, datetime.datetime(2024, 2, 14, 1, 20, 20, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 271, False); alias=default
DEBUG 2024-03-03 10:06:03,167 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 2, 'Player 28', 11, '2024-03-01T14:28:13.098535+01:00'::timestamptz, 790, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 2, 'Player 28', 11, datetime.datetime(2024, 3, 1, 14, 28, 13, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 790, False); alias=default
DEBUG 2024-03-03 10:06:03,168 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 3', 8, '2024-02-09T21:42:18.098535+01:00'::timestamptz, 378, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 3', 8, datetime.datetime(2024, 2, 9, 21, 42, 18, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 378, False); alias=default
DEBUG 2024-03-03 10:06:03,169 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 31', 9, '2024-01-01T04:13:47.098535+01:00'::timestamptz, 893, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 31', 9, datetime.datetime(2024, 1, 1, 4, 13, 47, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 893, False); alias=default
DEBUG 2024-03-03 10:06:03,171 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 2, 'Player 30', 11, '2024-01-03T04:54:41.098535+01:00'::timestamptz, 728, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 2, 'Player 30', 11, datetime.datetime(2024, 1, 3, 4, 54, 41, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 728, False); alias=default
DEBUG 2024-03-03 10:06:03,172 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 11, 'Player 7', 0, '2024-01-29T19:12:36.098535+01:00'::timestamptz, 309, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 11, 'Player 7', 0, datetime.datetime(2024, 1, 29, 19, 12, 36, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 309, False); alias=default
DEBUG 2024-03-03 10:06:03,174 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 1, 'Player 27', 11, '2023-12-31T22:19:33.098535+01:00'::timestamptz, 463, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 1, 'Player 27', 11, datetime.datetime(2023, 12, 31, 22, 19, 33, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 463, False); alias=default
DEBUG 2024-03-03 10:06:03,176 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 3, 'Player 10', 11, '2024-01-15T14:13:31.098535+01:00'::timestamptz, 176, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 3, 'Player 10', 11, datetime.datetime(2024, 1, 15, 14, 13, 31, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 176, False); alias=default
DEBUG 2024-03-03 10:06:03,177 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 7, 'Player 3', 11, '2024-02-19T05:55:34.098535+01:00'::timestamptz, 896, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 7, 'Player 3', 11, datetime.datetime(2024, 2, 19, 5, 55, 34, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 896, False); alias=default
DEBUG 2024-03-03 10:06:03,178 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 30', 1, '2024-01-13T18:49:13.098535+01:00'::timestamptz, 286, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 30', 1, datetime.datetime(2024, 1, 13, 18, 49, 13, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 286, False); alias=default
DEBUG 2024-03-03 10:06:03,180 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 4, 'Player 28', 11, '2023-12-28T04:32:09.098535+01:00'::timestamptz, 25, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 4, 'Player 28', 11, datetime.datetime(2023, 12, 28, 4, 32, 9, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 25, False); alias=default
DEBUG 2024-03-03 10:06:03,181 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 8, 'Player 2', 11, '2024-01-13T07:32:21.098535+01:00'::timestamptz, 667, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 8, 'Player 2', 11, datetime.datetime(2024, 1, 13, 7, 32, 21, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 667, False); alias=default
DEBUG 2024-03-03 10:06:03,182 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 5, 'Player 21', 11, '2024-01-24T06:10:18.098535+01:00'::timestamptz, 56, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 5, 'Player 21', 11, datetime.datetime(2024, 1, 24, 6, 10, 18, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 56, False); alias=default
DEBUG 2024-03-03 10:06:03,184 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 3, 'Player 23', 11, '2024-01-22T14:23:55.098535+01:00'::timestamptz, 711, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 3, 'Player 23', 11, datetime.datetime(2024, 1, 22, 14, 23, 55, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 711, False); alias=default
DEBUG 2024-03-03 10:06:03,185 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 36', 9, '2023-12-23T16:15:02.098535+01:00'::timestamptz, 95, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 36', 9, datetime.datetime(2023, 12, 23, 16, 15, 2, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 95, False); alias=default
DEBUG 2024-03-03 10:06:03,186 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 15', 2, '2023-11-10T11:46:50.098535+01:00'::timestamptz, 933, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 15', 2, datetime.datetime(2023, 11, 10, 11, 46, 50, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 933, False); alias=default
DEBUG 2024-03-03 10:06:03,187 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 0', 8, '2024-01-29T18:40:59.098535+01:00'::timestamptz, 514, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 0', 8, datetime.datetime(2024, 1, 29, 18, 40, 59, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 514, False); alias=default
DEBUG 2024-03-03 10:06:03,189 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 5, 'Player 22', 11, '2023-12-17T17:02:51.098535+01:00'::timestamptz, 192, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 5, 'Player 22', 11, datetime.datetime(2023, 12, 17, 17, 2, 51, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 192, False); alias=default
DEBUG 2024-03-03 10:06:03,191 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 9, 'Player 16', 11, '2023-12-07T16:44:23.098535+01:00'::timestamptz, 68, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 9, 'Player 16', 11, datetime.datetime(2023, 12, 7, 16, 44, 23, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 68, False); alias=default
DEBUG 2024-03-03 10:06:03,192 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 11, 'Player 23', 9, '2024-01-21T10:35:52.098535+01:00'::timestamptz, 234, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 11, 'Player 23', 9, datetime.datetime(2024, 1, 21, 10, 35, 52, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 234, False); alias=default
DEBUG 2024-03-03 10:06:03,194 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 11, 'Player 32', 9, '2023-11-28T11:46:17.098535+01:00'::timestamptz, 571, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 11, 'Player 32', 9, datetime.datetime(2023, 11, 28, 11, 46, 17, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 571, False); alias=default
DEBUG 2024-03-03 10:06:03,195 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 11', 7, '2023-12-29T05:43:08.098535+01:00'::timestamptz, 233, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 11', 7, datetime.datetime(2023, 12, 29, 5, 43, 8, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 233, False); alias=default
DEBUG 2024-03-03 10:06:03,196 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 10', 1, '2024-01-15T01:42:13.098535+01:00'::timestamptz, 176, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 10', 1, datetime.datetime(2024, 1, 15, 1, 42, 13, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 176, False); alias=default
DEBUG 2024-03-03 10:06:03,198 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 2, 'Player 31', 11, '2024-01-26T18:19:51.098535+01:00'::timestamptz, 6, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 2, 'Player 31', 11, datetime.datetime(2024, 1, 26, 18, 19, 51, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 6, False); alias=default
DEBUG 2024-03-03 10:06:03,199 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 2', 6, '2023-12-14T03:32:02.098535+01:00'::timestamptz, 291, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 2', 6, datetime.datetime(2023, 12, 14, 3, 32, 2, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 291, False); alias=default
DEBUG 2024-03-03 10:06:03,200 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 40', 1, '2024-01-06T23:16:21.098535+01:00'::timestamptz, 724, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 40', 1, datetime.datetime(2024, 1, 6, 23, 16, 21, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 724, False); alias=default
DEBUG 2024-03-03 10:06:03,201 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 10, 'Player 42', 11, '2023-12-04T16:23:30.098535+01:00'::timestamptz, 891, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 10, 'Player 42', 11, datetime.datetime(2023, 12, 4, 16, 23, 30, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 891, False); alias=default
DEBUG 2024-03-03 10:06:03,203 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 7', 5, '2023-11-06T23:43:34.098535+01:00'::timestamptz, 373, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 7', 5, datetime.datetime(2023, 11, 6, 23, 43, 34, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 373, False); alias=default
DEBUG 2024-03-03 10:06:03,204 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 11, 'Player 16', 1, '2024-01-12T07:05:32.098535+01:00'::timestamptz, 343, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 11, 'Player 16', 1, datetime.datetime(2024, 1, 12, 7, 5, 32, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 343, False); alias=default
DEBUG 2024-03-03 10:06:03,205 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 8, 'Player 22', 11, '2023-12-08T20:13:56.098535+01:00'::timestamptz, 171, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 8, 'Player 22', 11, datetime.datetime(2023, 12, 8, 20, 13, 56, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 171, False); alias=default
DEBUG 2024-03-03 10:06:03,207 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 10, 'Player 24', 11, '2023-12-08T03:59:14.098535+01:00'::timestamptz, 600, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 10, 'Player 24', 11, datetime.datetime(2023, 12, 8, 3, 59, 14, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 600, False); alias=default
DEBUG 2024-03-03 10:06:03,209 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 37', 9, '2023-12-04T22:42:53.098535+01:00'::timestamptz, 753, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 37', 9, datetime.datetime(2023, 12, 4, 22, 42, 53, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 753, False); alias=default
DEBUG 2024-03-03 10:06:03,210 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 3, 'Player 35', 11, '2024-01-10T22:39:50.098535+01:00'::timestamptz, 30, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 3, 'Player 35', 11, datetime.datetime(2024, 1, 10, 22, 39, 50, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 30, False); alias=default
DEBUG 2024-03-03 10:06:03,211 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 7, 'Player 27', 11, '2023-11-19T09:23:01.098535+01:00'::timestamptz, 692, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 7, 'Player 27', 11, datetime.datetime(2023, 11, 19, 9, 23, 1, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 692, False); alias=default
DEBUG 2024-03-03 10:06:03,213 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 9, 'Player 0', 11, '2023-12-20T09:31:06.098535+01:00'::timestamptz, 178, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 9, 'Player 0', 11, datetime.datetime(2023, 12, 20, 9, 31, 6, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 178, False); alias=default
DEBUG 2024-03-03 10:06:03,214 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 47', 11, 'Player 15', 0, '2023-12-17T04:50:50.098535+01:00'::timestamptz, 571, false) RETURNING "pong_gamedata"."id"; args=('Player 47', 11, 'Player 15', 0, datetime.datetime(2023, 12, 17, 4, 50, 50, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 571, False); alias=default
DEBUG 2024-03-03 10:06:03,215 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 4, 'Player 2', 11, '2023-11-28T05:31:28.098535+01:00'::timestamptz, 962, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 4, 'Player 2', 11, datetime.datetime(2023, 11, 28, 5, 31, 28, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 962, False); alias=default
DEBUG 2024-03-03 10:06:03,216 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 2, 'Player 29', 11, '2024-02-19T13:38:22.098535+01:00'::timestamptz, 80, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 2, 'Player 29', 11, datetime.datetime(2024, 2, 19, 13, 38, 22, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 80, False); alias=default
DEBUG 2024-03-03 10:06:03,218 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 3', 0, '2023-12-23T11:31:18.098535+01:00'::timestamptz, 764, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 3', 0, datetime.datetime(2023, 12, 23, 11, 31, 18, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 764, False); alias=default
DEBUG 2024-03-03 10:06:03,219 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 3', 4, '2023-11-14T11:52:41.098535+01:00'::timestamptz, 770, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 3', 4, datetime.datetime(2023, 11, 14, 11, 52, 41, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 770, False); alias=default
DEBUG 2024-03-03 10:06:03,220 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 3, 'Player 23', 11, '2024-01-14T09:12:25.098535+01:00'::timestamptz, 777, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 3, 'Player 23', 11, datetime.datetime(2024, 1, 14, 9, 12, 25, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 777, False); alias=default
DEBUG 2024-03-03 10:06:03,221 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 1, 'Player 40', 11, '2023-11-09T21:25:37.098535+01:00'::timestamptz, 611, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 1, 'Player 40', 11, datetime.datetime(2023, 11, 9, 21, 25, 37, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 611, False); alias=default
DEBUG 2024-03-03 10:06:03,223 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 41', 10, '2024-01-06T15:08:07.098535+01:00'::timestamptz, 715, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 41', 10, datetime.datetime(2024, 1, 6, 15, 8, 7, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 715, False); alias=default
DEBUG 2024-03-03 10:06:03,224 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 4, 'Player 44', 11, '2024-02-19T19:39:57.098535+01:00'::timestamptz, 189, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 4, 'Player 44', 11, datetime.datetime(2024, 2, 19, 19, 39, 57, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 189, False); alias=default
DEBUG 2024-03-03 10:06:03,226 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 3, 'Player 19', 11, '2024-02-18T13:54:44.098535+01:00'::timestamptz, 459, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 3, 'Player 19', 11, datetime.datetime(2024, 2, 18, 13, 54, 44, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 459, False); alias=default
DEBUG 2024-03-03 10:06:03,228 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 46', 1, 'Player 32', 11, '2023-12-15T12:55:22.098535+01:00'::timestamptz, 274, false) RETURNING "pong_gamedata"."id"; args=('Player 46', 1, 'Player 32', 11, datetime.datetime(2023, 12, 15, 12, 55, 22, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 274, False); alias=default
DEBUG 2024-03-03 10:06:03,229 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 52', 11, 'Player 28', 5, '2024-01-17T23:34:33.098535+01:00'::timestamptz, 42, false) RETURNING "pong_gamedata"."id"; args=('Player 52', 11, 'Player 28', 5, datetime.datetime(2024, 1, 17, 23, 34, 33, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 42, False); alias=default
DEBUG 2024-03-03 10:06:03,230 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 49', 8, 'Player 48', 11, '2023-12-06T16:47:42.098535+01:00'::timestamptz, 755, false) RETURNING "pong_gamedata"."id"; args=('Player 49', 8, 'Player 48', 11, datetime.datetime(2023, 12, 6, 16, 47, 42, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 755, False); alias=default
DEBUG 2024-03-03 10:06:03,231 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 10', 7, '2023-11-03T16:38:26.098535+01:00'::timestamptz, 826, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 10', 7, datetime.datetime(2023, 11, 3, 16, 38, 26, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 826, False); alias=default
DEBUG 2024-03-03 10:06:03,233 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 5', 8, '2023-11-16T15:02:28.098535+01:00'::timestamptz, 964, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 5', 8, datetime.datetime(2023, 11, 16, 15, 2, 28, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 964, False); alias=default
DEBUG 2024-03-03 10:06:03,234 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 8, 'Player 30', 11, '2024-02-04T19:55:57.098535+01:00'::timestamptz, 345, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 8, 'Player 30', 11, datetime.datetime(2024, 2, 4, 19, 55, 57, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 345, False); alias=default
DEBUG 2024-03-03 10:06:03,235 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 2, 'Player 0', 11, '2024-01-17T15:32:02.098535+01:00'::timestamptz, 593, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 2, 'Player 0', 11, datetime.datetime(2024, 1, 17, 15, 32, 2, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 593, False); alias=default
DEBUG 2024-03-03 10:06:03,236 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 11, 'Player 53', 10, '2023-12-17T19:39:43.098535+01:00'::timestamptz, 145, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 11, 'Player 53', 10, datetime.datetime(2023, 12, 17, 19, 39, 43, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 145, False); alias=default
DEBUG 2024-03-03 10:06:03,237 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 48', 7, '2024-01-07T00:51:05.098535+01:00'::timestamptz, 398, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 48', 7, datetime.datetime(2024, 1, 7, 0, 51, 5, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 398, False); alias=default
DEBUG 2024-03-03 10:06:03,239 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 21', 4, '2023-11-05T14:59:33.098535+01:00'::timestamptz, 112, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 21', 4, datetime.datetime(2023, 11, 5, 14, 59, 33, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 112, False); alias=default
DEBUG 2024-03-03 10:06:03,241 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 10, 'Player 33', 11, '2023-12-28T11:19:37.098535+01:00'::timestamptz, 766, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 10, 'Player 33', 11, datetime.datetime(2023, 12, 28, 11, 19, 37, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 766, False); alias=default
DEBUG 2024-03-03 10:06:03,242 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 1, 'Player 19', 11, '2024-01-02T15:08:15.098535+01:00'::timestamptz, 322, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 1, 'Player 19', 11, datetime.datetime(2024, 1, 2, 15, 8, 15, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 322, False); alias=default
DEBUG 2024-03-03 10:06:03,244 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 17', 1, '2024-02-17T05:50:39.098535+01:00'::timestamptz, 203, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 17', 1, datetime.datetime(2024, 2, 17, 5, 50, 39, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 203, False); alias=default
DEBUG 2024-03-03 10:06:03,245 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 11, 'Player 5', 1, '2023-11-07T00:21:05.098535+01:00'::timestamptz, 188, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 11, 'Player 5', 1, datetime.datetime(2023, 11, 7, 0, 21, 5, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 188, False); alias=default
DEBUG 2024-03-03 10:06:03,246 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 51', 11, 'Player 2', 10, '2023-12-28T16:09:02.098535+01:00'::timestamptz, 777, false) RETURNING "pong_gamedata"."id"; args=('Player 51', 11, 'Player 2', 10, datetime.datetime(2023, 12, 28, 16, 9, 2, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 777, False); alias=default
DEBUG 2024-03-03 10:06:03,248 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 10, 'Player 16', 11, '2023-12-22T19:30:41.098535+01:00'::timestamptz, 814, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 10, 'Player 16', 11, datetime.datetime(2023, 12, 22, 19, 30, 41, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 814, False); alias=default
DEBUG 2024-03-03 10:06:03,249 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 2, 'Player 31', 11, '2023-11-12T23:32:02.098535+01:00'::timestamptz, 894, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 2, 'Player 31', 11, datetime.datetime(2023, 11, 12, 23, 32, 2, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 894, False); alias=default
DEBUG 2024-03-03 10:06:03,250 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 18', 6, '2023-11-26T09:07:07.098535+01:00'::timestamptz, 918, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 18', 6, datetime.datetime(2023, 11, 26, 9, 7, 7, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 918, False); alias=default
DEBUG 2024-03-03 10:06:03,252 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 21', 2, '2023-12-11T15:30:41.098535+01:00'::timestamptz, 618, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 21', 2, datetime.datetime(2023, 12, 11, 15, 30, 41, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 618, False); alias=default
DEBUG 2024-03-03 10:06:03,253 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 47', 4, 'Player 4', 11, '2023-11-02T10:02:39.098535+01:00'::timestamptz, 896, false) RETURNING "pong_gamedata"."id"; args=('Player 47', 4, 'Player 4', 11, datetime.datetime(2023, 11, 2, 10, 2, 39, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 896, False); alias=default
DEBUG 2024-03-03 10:06:03,254 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 48', 1, 'Player 31', 11, '2023-11-24T00:41:28.098535+01:00'::timestamptz, 565, false) RETURNING "pong_gamedata"."id"; args=('Player 48', 1, 'Player 31', 11, datetime.datetime(2023, 11, 24, 0, 41, 28, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 565, False); alias=default
DEBUG 2024-03-03 10:06:03,256 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 11, 'Player 35', 9, '2024-01-08T11:38:36.098535+01:00'::timestamptz, 257, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 11, 'Player 35', 9, datetime.datetime(2024, 1, 8, 11, 38, 36, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 257, False); alias=default
DEBUG 2024-03-03 10:06:03,257 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 8, 'Player 47', 11, '2024-02-10T23:45:24.098535+01:00'::timestamptz, 92, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 8, 'Player 47', 11, datetime.datetime(2024, 2, 10, 23, 45, 24, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 92, False); alias=default
DEBUG 2024-03-03 10:06:03,259 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 11, 'Player 24', 1, '2023-12-25T08:55:46.098535+01:00'::timestamptz, 458, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 11, 'Player 24', 1, datetime.datetime(2023, 12, 25, 8, 55, 46, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 458, False); alias=default
DEBUG 2024-03-03 10:06:03,261 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 51', 6, 'Player 47', 11, '2024-02-23T19:32:23.098535+01:00'::timestamptz, 265, false) RETURNING "pong_gamedata"."id"; args=('Player 51', 6, 'Player 47', 11, datetime.datetime(2024, 2, 23, 19, 32, 23, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 265, False); alias=default
DEBUG 2024-03-03 10:06:03,262 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 56', 9, '2024-01-25T18:17:36.098535+01:00'::timestamptz, 973, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 56', 9, datetime.datetime(2024, 1, 25, 18, 17, 36, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 973, False); alias=default
DEBUG 2024-03-03 10:06:03,264 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 4, 'Player 56', 11, '2024-01-25T18:04:07.098535+01:00'::timestamptz, 882, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 4, 'Player 56', 11, datetime.datetime(2024, 1, 25, 18, 4, 7, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 882, False); alias=default
DEBUG 2024-03-03 10:06:03,265 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,266 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 1, 'Player 0', 11, '2023-12-23T22:09:05.098535+01:00'::timestamptz, 970, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 1, 'Player 0', 11, datetime.datetime(2023, 12, 23, 22, 9, 5, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 970, True); alias=default
DEBUG 2024-03-03 10:06:03,267 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 10', 4, '2023-12-23T21:58:01.098535+01:00'::timestamptz, 175, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 10', 4, datetime.datetime(2023, 12, 23, 21, 58, 1, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 175, True); alias=default
DEBUG 2024-03-03 10:06:03,269 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 12', 3, '2023-12-23T22:09:34.098535+01:00'::timestamptz, 841, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 12', 3, datetime.datetime(2023, 12, 23, 22, 9, 34, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 841, True); alias=default
DEBUG 2024-03-03 10:06:03,270 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2023-12-23T22:09:34.098535+01:00'::timestamptz, 999, '["Player 0", "Player 12", "Player 11", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2023, 12, 23, 22, 9, 34, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 999, <psycopg2._json.Json object at 0x7fd7c581ba10>, '0x0'); alias=default
DEBUG 2024-03-03 10:06:03,271 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 5, 'Player 5', 11, '2024-02-11T18:39:05.098535+01:00'::timestamptz, 387, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 5, 'Player 5', 11, datetime.datetime(2024, 2, 11, 18, 39, 5, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 387, True); alias=default
DEBUG 2024-03-03 10:06:03,273 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 4', 8, '2024-02-11T18:30:39.098535+01:00'::timestamptz, 236, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 4', 8, datetime.datetime(2024, 2, 11, 18, 30, 39, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 236, True); alias=default
DEBUG 2024-03-03 10:06:03,275 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 10, 'Player 3', 11, '2024-02-11T18:42:20.098535+01:00'::timestamptz, 246, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 10, 'Player 3', 11, datetime.datetime(2024, 2, 11, 18, 42, 20, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 246, True); alias=default
DEBUG 2024-03-03 10:06:03,276 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2024-02-11T18:42:20.098535+01:00'::timestamptz, 937, '["Player 3", "Player 5", "Player 12", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2024, 2, 11, 18, 42, 20, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 937, <psycopg2._json.Json object at 0x7fd7c5673170>, '0x0'); alias=default
DEBUG 2024-03-03 10:06:03,278 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 2', 1, '2024-01-13T19:11:15.098535+01:00'::timestamptz, 885, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 2', 1, datetime.datetime(2024, 1, 13, 19, 11, 15, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 885, True); alias=default
DEBUG 2024-03-03 10:06:03,279 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 5', 0, '2024-01-13T19:10:56.098535+01:00'::timestamptz, 617, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 5', 0, datetime.datetime(2024, 1, 13, 19, 10, 56, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 617, True); alias=default
DEBUG 2024-03-03 10:06:03,280 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 3', 1, '2024-01-13T19:12:06.098535+01:00'::timestamptz, 999, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 3', 1, datetime.datetime(2024, 1, 13, 19, 12, 6, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 999, True); alias=default
DEBUG 2024-03-03 10:06:03,281 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2024-01-13T19:12:06.098535+01:00'::timestamptz, 936, '["Player 16", "Player 3", "Player 2", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2024, 1, 13, 19, 12, 6, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 936, <psycopg2._json.Json object at 0x7fd7c581b830>, '0x0'); alias=default
DEBUG 2024-03-03 10:06:03,282 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 12', 0, '2023-11-10T02:18:58.098535+01:00'::timestamptz, 548, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 12', 0, datetime.datetime(2023, 11, 10, 2, 18, 58, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 548, True); alias=default
DEBUG 2024-03-03 10:06:03,284 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 5', 4, '2023-11-10T02:18:11.098535+01:00'::timestamptz, 631, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 5', 4, datetime.datetime(2023, 11, 10, 2, 18, 11, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 631, True); alias=default
DEBUG 2024-03-03 10:06:03,285 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 7', 0, '2023-11-10T02:21:51.098535+01:00'::timestamptz, 236, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 7', 0, datetime.datetime(2023, 11, 10, 2, 21, 51, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 236, True); alias=default
DEBUG 2024-03-03 10:06:03,286 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2023-11-10T02:21:51.098535+01:00'::timestamptz, 851, '["Player 10", "Player 7", "Player 12", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2023, 11, 10, 2, 21, 51, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 851, <psycopg2._json.Json object at 0x7fd7c569da90>, '0x0'); alias=default
DEBUG 2024-03-03 10:06:03,287 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 8, 'Player 1', 11, '2024-02-28T10:52:39.098535+01:00'::timestamptz, 301, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 8, 'Player 1', 11, datetime.datetime(2024, 2, 28, 10, 52, 39, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 301, True); alias=default
DEBUG 2024-03-03 10:06:03,288 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 1, 'Player 5', 11, '2024-02-28T10:58:09.098535+01:00'::timestamptz, 96, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 1, 'Player 5', 11, datetime.datetime(2024, 2, 28, 10, 58, 9, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 96, True); alias=default
DEBUG 2024-03-03 10:06:03,290 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 5', 6, '2024-02-28T10:58:15.098535+01:00'::timestamptz, 235, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 5', 6, datetime.datetime(2024, 2, 28, 10, 58, 15, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 235, True); alias=default
DEBUG 2024-03-03 10:06:03,292 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2024-02-28T10:58:15.098535+01:00'::timestamptz, 637, '["Player 1", "Player 5", "Player 6", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2024, 2, 28, 10, 58, 15, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 637, <psycopg2._json.Json object at 0x7fd7c569e090>, '0x0'); alias=default
DEBUG 2024-03-03 10:06:03,293 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 0, 'Player 4', 11, '2023-11-29T03:02:34.098535+01:00'::timestamptz, 10, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 0, 'Player 4', 11, datetime.datetime(2023, 11, 29, 3, 2, 34, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 10, True); alias=default
DEBUG 2024-03-03 10:06:03,295 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 9, 'Player 16', 11, '2023-11-29T03:05:10.098535+01:00'::timestamptz, 470, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 9, 'Player 16', 11, datetime.datetime(2023, 11, 29, 3, 5, 10, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 470, True); alias=default
DEBUG 2024-03-03 10:06:03,296 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 16', 0, '2023-11-29T03:07:54.098535+01:00'::timestamptz, 957, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 16', 0, datetime.datetime(2023, 11, 29, 3, 7, 54, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 957, True); alias=default
DEBUG 2024-03-03 10:06:03,297 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2023-11-29T03:07:54.098535+01:00'::timestamptz, 634, '["Player 4", "Player 16", "Player 14", "Player 13"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2023, 11, 29, 3, 7, 54, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 634, <psycopg2._json.Json object at 0x7fd7c5683830>, '0x0'); alias=default
DEBUG 2024-03-03 10:06:03,299 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 8', 6, '2024-01-23T07:43:08.098535+01:00'::timestamptz, 351, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 8', 6, datetime.datetime(2024, 1, 23, 7, 43, 8, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 351, True); alias=default
DEBUG 2024-03-03 10:06:03,300 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 9, 'Player 2', 11, '2024-01-23T07:51:20.098535+01:00'::timestamptz, 598, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 9, 'Player 2', 11, datetime.datetime(2024, 1, 23, 7, 51, 20, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 598, True); alias=default
DEBUG 2024-03-03 10:06:03,301 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 5, 'Player 2', 11, '2024-01-23T07:51:41.098535+01:00'::timestamptz, 474, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 5, 'Player 2', 11, datetime.datetime(2024, 1, 23, 7, 51, 41, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 474, True); alias=default
DEBUG 2024-03-03 10:06:03,302 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2024-01-23T07:51:41.098535+01:00'::timestamptz, 864, '["Player 2", "Player 12", "Player 8", "Player 16"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2024, 1, 23, 7, 51, 41, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 864, <psycopg2._json.Json object at 0x7fd7c5673890>, '0x0'); alias=default
DEBUG 2024-03-03 10:06:03,304 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 2', 8, '2023-12-20T19:31:55.098535+01:00'::timestamptz, 352, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 2', 8, datetime.datetime(2023, 12, 20, 19, 31, 55, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 352, True); alias=default
DEBUG 2024-03-03 10:06:03,305 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 19', 1, '2023-12-20T19:32:54.098535+01:00'::timestamptz, 599, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 19', 1, datetime.datetime(2023, 12, 20, 19, 32, 54, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 599, True); alias=default
DEBUG 2024-03-03 10:06:03,306 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 13', 6, '2023-12-20T19:35:30.098535+01:00'::timestamptz, 622, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 13', 6, datetime.datetime(2023, 12, 20, 19, 35, 30, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 622, True); alias=default
DEBUG 2024-03-03 10:06:03,308 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2023-12-20T19:35:30.098535+01:00'::timestamptz, 755, '["Player 6", "Player 13", "Player 2", "Player 19"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2023, 12, 20, 19, 35, 30, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 755, <psycopg2._json.Json object at 0x7fd7c5673890>, '0x0'); alias=default
DEBUG 2024-03-03 10:06:03,310 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 19', 2, '2024-01-20T08:04:18.098535+01:00'::timestamptz, 135, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 19', 2, datetime.datetime(2024, 1, 20, 8, 4, 18, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 135, True); alias=default
DEBUG 2024-03-03 10:06:03,311 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 10', 5, '2024-01-20T08:01:00.098535+01:00'::timestamptz, 71, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 10', 5, datetime.datetime(2024, 1, 20, 8, 1, 0, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 71, True); alias=default
DEBUG 2024-03-03 10:06:03,313 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 12', 6, '2024-01-20T08:15:26.098535+01:00'::timestamptz, 344, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 12', 6, datetime.datetime(2024, 1, 20, 8, 15, 26, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 344, True); alias=default
DEBUG 2024-03-03 10:06:03,314 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2024-01-20T08:15:26.098535+01:00'::timestamptz, 937, '["Player 14", "Player 12", "Player 19", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2024, 1, 20, 8, 15, 26, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 937, <psycopg2._json.Json object at 0x7fd7c569dfa0>, '0x0'); alias=default
DEBUG 2024-03-03 10:06:03,315 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 13', 2, '2023-12-02T22:21:47.098535+01:00'::timestamptz, 937, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 13', 2, datetime.datetime(2023, 12, 2, 22, 21, 47, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 937, True); alias=default
DEBUG 2024-03-03 10:06:03,317 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 3', 3, '2023-12-02T22:21:55.098535+01:00'::timestamptz, 766, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 3', 3, datetime.datetime(2023, 12, 2, 22, 21, 55, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 766, True); alias=default
DEBUG 2024-03-03 10:06:03,318 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 6, 'Player 1', 11, '2023-12-02T22:22:46.098535+01:00'::timestamptz, 773, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 6, 'Player 1', 11, datetime.datetime(2023, 12, 2, 22, 22, 46, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 773, True); alias=default
DEBUG 2024-03-03 10:06:03,319 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2023-12-02T22:22:46.098535+01:00'::timestamptz, 996, '["Player 1", "Player 4", "Player 13", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2023, 12, 2, 22, 22, 46, 98535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 996, <psycopg2._json.Json object at 0x7fd7c569e3f0>, '0x0'); alias=default
DEBUG 2024-03-03 10:06:03,320 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,321 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,322 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 10:06:03,322 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:03,323 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 10:06:03,324 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:03,325 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 10:06:03,327 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 10:06:03,328 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 10:06:03,330 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 10:06:03,330 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:03,331 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 10:06:03,332 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:03,333 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 10:06:03,334 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,335 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,336 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,336 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,338 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,339 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,340 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 10:06:03,340 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:03,341 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 10:06:03,342 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:03,344 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 10:06:03,346 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 10:06:03,347 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:03,347 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 10:06:03,348 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:03,349 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 10:06:03,350 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,351 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,352 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,353 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,354 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,355 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,356 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 10:06:03,357 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:03,357 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 10:06:03,358 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:03,360 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 10:06:03,362 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 10:06:03,362 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:03,363 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 10:06:03,364 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:03,364 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 10:06:03,365 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,366 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,367 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,368 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,369 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,370 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,370 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 10:06:03,371 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:03,371 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 10:06:03,372 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:03,373 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 10:06:03,375 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 10:06:03,377 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 10:06:03,378 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:06:03,378 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 10:06:03,379 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:06:03,380 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 10:06:03,381 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,382 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,383 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,384 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,384 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:06:03,385 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
