DEBUG 2024-02-27 22:36:20,713 utils (0.003) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:36:20,715 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,716 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:36:20,717 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,733 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:36:20,734 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:36:20,734 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,736 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:36:20,737 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 22:36:20,740 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 22:36:20,741 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:36:20,743 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,744 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,745 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,746 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,780 utils (0.009) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 10', 6, '2023-12-02T14:03:01.744649+01:00'::timestamptz, 861, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 10', 6, datetime.datetime(2023, 12, 2, 14, 3, 1, 744649, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 861, True); alias=default
DEBUG 2024-02-27 22:36:20,782 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 15', 4, '2023-12-02T13:51:27.744649+01:00'::timestamptz, 188, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 15', 4, datetime.datetime(2023, 12, 2, 13, 51, 27, 744649, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 188, True); alias=default
DEBUG 2024-02-27 22:36:20,786 utils (0.004) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 13', 3, '2023-12-02T14:04:12.744649+01:00'::timestamptz, 99, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 13', 3, datetime.datetime(2023, 12, 2, 14, 4, 12, 744649, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 99, True); alias=default
DEBUG 2024-02-27 22:36:20,788 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2296, 2297, 2298, '2023-12-02T14:04:12.744649+01:00'::timestamptz, 953, '["Player 1", "Player 13", "Player 10", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2296, 2297, 2298, datetime.datetime(2023, 12, 2, 14, 4, 12, 744649, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 953, <psycopg2._json.Json object at 0x7f4d851224e0>, '0x0'); alias=default
DEBUG 2024-02-27 22:36:20,789 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 2', 6, '2023-11-22T23:56:44.744649+01:00'::timestamptz, 498, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 2', 6, datetime.datetime(2023, 11, 22, 23, 56, 44, 744649, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 498, True); alias=default
DEBUG 2024-02-27 22:36:20,791 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 8, 'Player 13', 11, '2023-11-22T23:57:10.744649+01:00'::timestamptz, 658, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 8, 'Player 13', 11, datetime.datetime(2023, 11, 22, 23, 57, 10, 744649, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 658, True); alias=default
DEBUG 2024-02-27 22:36:20,793 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 13', 3, '2023-11-22T23:57:29.744649+01:00'::timestamptz, 397, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 13', 3, datetime.datetime(2023, 11, 22, 23, 57, 29, 744649, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 397, True); alias=default
DEBUG 2024-02-27 22:36:20,794 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2299, 2300, 2301, '2023-11-22T23:57:29.744649+01:00'::timestamptz, 677, '["Player 0", "Player 13", "Player 2", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2299, 2300, 2301, datetime.datetime(2023, 11, 22, 23, 57, 29, 744649, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 677, <psycopg2._json.Json object at 0x7f4d851228d0>, '0x0'); alias=default
DEBUG 2024-02-27 22:36:20,795 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,796 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,797 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:36:20,798 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 22:36:20,799 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 22:36:20,800 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 22:36:20,801 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 22:36:20,802 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:36:20,803 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,804 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,805 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,806 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,808 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 2', 5, '2024-02-26T12:13:35.804651+01:00'::timestamptz, 698, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 2', 5, datetime.datetime(2024, 2, 26, 12, 13, 35, 804651, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 698, True); alias=default
DEBUG 2024-02-27 22:36:20,809 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 8, 'Player 7', 11, '2024-02-26T12:13:42.804651+01:00'::timestamptz, 492, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 8, 'Player 7', 11, datetime.datetime(2024, 2, 26, 12, 13, 42, 804651, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 492, True); alias=default
DEBUG 2024-02-27 22:36:20,811 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 7', 7, '2024-02-26T12:18:15.804651+01:00'::timestamptz, 697, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 7', 7, datetime.datetime(2024, 2, 26, 12, 18, 15, 804651, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 697, True); alias=default
DEBUG 2024-02-27 22:36:20,812 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2302, 2303, 2304, '2024-02-26T12:18:15.804651+01:00'::timestamptz, 978, '["Player 10", "Player 7", "Player 2", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2302, 2303, 2304, datetime.datetime(2024, 2, 26, 12, 18, 15, 804651, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 978, <psycopg2._json.Json object at 0x7f4d851238c0>, '0x0'); alias=default
DEBUG 2024-02-27 22:36:20,813 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 5', 3, '2023-11-02T02:00:16.804651+01:00'::timestamptz, 737, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 5', 3, datetime.datetime(2023, 11, 2, 2, 0, 16, 804651, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 737, True); alias=default
DEBUG 2024-02-27 22:36:20,814 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 8, 'Player 9', 11, '2023-11-02T01:46:59.804651+01:00'::timestamptz, 13, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 8, 'Player 9', 11, datetime.datetime(2023, 11, 2, 1, 46, 59, 804651, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 13, True); alias=default
DEBUG 2024-02-27 22:36:20,816 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 9', 9, '2023-11-02T02:01:25.804651+01:00'::timestamptz, 288, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 9', 9, datetime.datetime(2023, 11, 2, 2, 1, 25, 804651, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 288, True); alias=default
DEBUG 2024-02-27 22:36:20,816 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2305, 2306, 2307, '2023-11-02T02:01:25.804651+01:00'::timestamptz, 879, '["Player 14", "Player 9", "Player 5", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2305, 2306, 2307, datetime.datetime(2023, 11, 2, 2, 1, 25, 804651, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 879, <psycopg2._json.Json object at 0x7f4d85123fb0>, '0x0'); alias=default
DEBUG 2024-02-27 22:36:20,817 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,818 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,819 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:36:20,820 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 22:36:20,821 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 22:36:20,822 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:36:20,823 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,825 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,826 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,827 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,829 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 8', 6, '2024-01-09T07:18:40.825393+01:00'::timestamptz, 710, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 8', 6, datetime.datetime(2024, 1, 9, 7, 18, 40, 825393, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 710, True); alias=default
DEBUG 2024-02-27 22:36:20,830 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 1', 5, '2024-01-09T07:18:12.825393+01:00'::timestamptz, 905, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 1', 5, datetime.datetime(2024, 1, 9, 7, 18, 12, 825393, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 905, True); alias=default
DEBUG 2024-02-27 22:36:20,831 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 0, 'Player 6', 11, '2024-01-09T07:19:06.825393+01:00'::timestamptz, 717, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 0, 'Player 6', 11, datetime.datetime(2024, 1, 9, 7, 19, 6, 825393, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 717, True); alias=default
DEBUG 2024-02-27 22:36:20,832 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2308, 2309, 2310, '2024-01-09T07:19:06.825393+01:00'::timestamptz, 959, '["Player 6", "Player 12", "Player 8", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2308, 2309, 2310, datetime.datetime(2024, 1, 9, 7, 19, 6, 825393, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 959, <psycopg2._json.Json object at 0x7f4d85134c20>, '0x0'); alias=default
DEBUG 2024-02-27 22:36:20,834 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 3, 'Player 1', 11, '2024-01-05T14:12:44.825393+01:00'::timestamptz, 80, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 3, 'Player 1', 11, datetime.datetime(2024, 1, 5, 14, 12, 44, 825393, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 80, True); alias=default
DEBUG 2024-02-27 22:36:20,835 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 4, 'Player 10', 11, '2024-01-05T14:21:44.825393+01:00'::timestamptz, 534, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 4, 'Player 10', 11, datetime.datetime(2024, 1, 5, 14, 21, 44, 825393, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 534, True); alias=default
DEBUG 2024-02-27 22:36:20,836 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 5, 'Player 10', 11, '2024-01-05T14:27:20.825393+01:00'::timestamptz, 769, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 5, 'Player 10', 11, datetime.datetime(2024, 1, 5, 14, 27, 20, 825393, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 769, True); alias=default
DEBUG 2024-02-27 22:36:20,837 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2311, 2312, 2313, '2024-01-05T14:27:20.825393+01:00'::timestamptz, 956, '["Player 10", "Player 1", "Player 9", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2311, 2312, 2313, datetime.datetime(2024, 1, 5, 14, 27, 20, 825393, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 956, <psycopg2._json.Json object at 0x7f4d85135250>, '0x0'); alias=default
DEBUG 2024-02-27 22:36:20,838 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,839 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,840 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:36:20,841 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 22:36:20,844 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 22:36:20,845 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:36:20,846 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,847 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,848 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,849 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,850 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 4, 'Player 11', 11, '2024-01-21T03:01:05.847450+01:00'::timestamptz, 813, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 4, 'Player 11', 11, datetime.datetime(2024, 1, 21, 3, 1, 5, 847450, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 813, True); alias=default
DEBUG 2024-02-27 22:36:20,851 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 1', 8, '2024-01-21T02:54:55.847450+01:00'::timestamptz, 403, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 1', 8, datetime.datetime(2024, 1, 21, 2, 54, 55, 847450, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 403, True); alias=default
DEBUG 2024-02-27 22:36:20,852 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 1, 'Player 8', 11, '2024-01-21T03:02:51.847450+01:00'::timestamptz, 385, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 1, 'Player 8', 11, datetime.datetime(2024, 1, 21, 3, 2, 51, 847450, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 385, True); alias=default
DEBUG 2024-02-27 22:36:20,853 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2314, 2315, 2316, '2024-01-21T03:02:51.847450+01:00'::timestamptz, 919, '["Player 8", "Player 11", "Player 15", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2314, 2315, 2316, datetime.datetime(2024, 1, 21, 3, 2, 51, 847450, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 919, <psycopg2._json.Json object at 0x7f4d85135970>, '0x0'); alias=default
DEBUG 2024-02-27 22:36:20,854 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 5', 4, '2024-02-19T04:22:41.847450+01:00'::timestamptz, 591, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 5', 4, datetime.datetime(2024, 2, 19, 4, 22, 41, 847450, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 591, True); alias=default
DEBUG 2024-02-27 22:36:20,856 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 3, 'Player 12', 11, '2024-02-19T04:19:26.847450+01:00'::timestamptz, 375, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 3, 'Player 12', 11, datetime.datetime(2024, 2, 19, 4, 19, 26, 847450, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 375, True); alias=default
DEBUG 2024-02-27 22:36:20,857 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 12', 4, '2024-02-19T04:24:17.847450+01:00'::timestamptz, 542, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 12', 4, datetime.datetime(2024, 2, 19, 4, 24, 17, 847450, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 542, True); alias=default
DEBUG 2024-02-27 22:36:20,858 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2317, 2318, 2319, '2024-02-19T04:24:17.847450+01:00'::timestamptz, 687, '["Player 8", "Player 12", "Player 5", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2317, 2318, 2319, datetime.datetime(2024, 2, 19, 4, 24, 17, 847450, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 687, <psycopg2._json.Json object at 0x7f4d851365d0>, '0x0'); alias=default
DEBUG 2024-02-27 22:36:20,860 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,861 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,862 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:36:20,863 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 22:36:20,864 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 22:36:20,865 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 22:36:20,866 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:36:20,867 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,871 utils (0.003) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,872 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,873 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,875 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 6', 1, '2023-11-10T04:45:53.871693+01:00'::timestamptz, 607, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 6', 1, datetime.datetime(2023, 11, 10, 4, 45, 53, 871693, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 607, True); alias=default
DEBUG 2024-02-27 22:36:20,877 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 1, 'Player 15', 11, '2023-11-10T04:44:58.871693+01:00'::timestamptz, 77, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 1, 'Player 15', 11, datetime.datetime(2023, 11, 10, 4, 44, 58, 871693, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 77, True); alias=default
DEBUG 2024-02-27 22:36:20,878 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 10, 'Player 15', 11, '2023-11-10T04:50:32.871693+01:00'::timestamptz, 103, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 10, 'Player 15', 11, datetime.datetime(2023, 11, 10, 4, 50, 32, 871693, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 103, True); alias=default
DEBUG 2024-02-27 22:36:20,879 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2320, 2321, 2322, '2023-11-10T04:50:32.871693+01:00'::timestamptz, 886, '["Player 15", "Player 5", "Player 6", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2320, 2321, 2322, datetime.datetime(2023, 11, 10, 4, 50, 32, 871693, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 886, <psycopg2._json.Json object at 0x7f4d85135d30>, '0x0'); alias=default
DEBUG 2024-02-27 22:36:20,880 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 5', 2, '2024-01-24T02:01:07.871693+01:00'::timestamptz, 593, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 5', 2, datetime.datetime(2024, 1, 24, 2, 1, 7, 871693, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 593, True); alias=default
DEBUG 2024-02-27 22:36:20,882 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 9', 10, '2024-01-24T01:59:41.871693+01:00'::timestamptz, 770, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 9', 10, datetime.datetime(2024, 1, 24, 1, 59, 41, 871693, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 770, True); alias=default
DEBUG 2024-02-27 22:36:20,883 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 5, 'Player 0', 11, '2024-01-24T02:03:07.871693+01:00'::timestamptz, 122, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 5, 'Player 0', 11, datetime.datetime(2024, 1, 24, 2, 3, 7, 871693, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 122, True); alias=default
DEBUG 2024-02-27 22:36:20,884 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2323, 2324, 2325, '2024-01-24T02:03:07.871693+01:00'::timestamptz, 976, '["Player 0", "Player 15", "Player 5", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2323, 2324, 2325, datetime.datetime(2024, 1, 24, 2, 3, 7, 871693, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 976, <psycopg2._json.Json object at 0x7f4d85137290>, '0x0'); alias=default
DEBUG 2024-02-27 22:36:20,885 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:36:20,886 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
