DEBUG 2024-03-03 09:43:39,093 utils (0.003) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,095 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,096 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,097 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,097 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 09:43:39,111 utils (0.014) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:43:39,112 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,113 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,114 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 09:43:39,117 utils (0.002) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:43:39,119 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 09:43:39,121 utils (0.002) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 09:43:39,123 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,128 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T09:43:39.123645+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 9, 43, 39, 123645, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:43:39,129 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,129 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,131 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 09:43:39,134 utils (0.003) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:43:39,139 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 09:43:39,144 utils (0.005) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 09:43:39,146 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 09:43:39,148 utils (0.002) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:43:39,158 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 09:43:39,164 utils (0.005) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:43:39,165 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 09:43:39,167 utils (0.002) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:43:39,168 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 09:43:39,170 utils (0.002) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:43:39,170 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 09:43:39,172 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 09:43:39,173 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 09:43:39,175 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 09:43:39,175 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 09:43:39,178 utils (0.002) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 09:43:39,178 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 09:43:39,180 utils (0.002) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 09:43:39,180 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 09:43:39,182 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 09:43:39,183 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 09:43:39,183 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 09:43:39,184 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 09:43:39,185 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 09:43:39,185 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 09:43:39,187 utils (0.002) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 09:43:39,187 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 09:43:39,189 utils (0.002) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 09:43:39,189 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 09:43:39,191 utils (0.002) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 09:43:39,191 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 09:43:39,193 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 09:43:39,194 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 09:43:39,194 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 09:43:39,195 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 09:43:39,195 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 09:43:39,195 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 09:43:39,197 utils (0.002) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 09:43:39,197 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 09:43:39,199 utils (0.002) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 09:43:39,199 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 09:43:39,201 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 09:43:39,201 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 09:43:39,202 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 09:43:39,202 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 09:43:39,203 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 09:43:39,203 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 09:43:39,205 utils (0.002) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 09:43:39,205 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 09:43:39,208 utils (0.002) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 09:43:39,209 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,210 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,211 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T09:43:39.210746+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 9, 43, 39, 210746, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:43:39,212 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,218 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 09:43:39,222 utils (0.004) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:43:39,223 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 09:43:39,224 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 09:43:39,225 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 09:43:39,226 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 09:43:39,226 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 09:43:39,228 utils (0.002) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 09:43:39,228 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 09:43:39,230 utils (0.002) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 09:43:39,231 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,233 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,234 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T09:43:39.233880+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 9, 43, 39, 233880, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:43:39,235 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,247 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,248 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T09:43:39.248008+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 9, 43, 39, 248008, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:43:39,249 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,250 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,263 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,264 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T09:43:39.263701+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 9, 43, 39, 263701, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:43:39,265 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,265 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,271 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 09:43:39,272 utils (0.000) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 09:43:39,282 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 09:43:39,283 utils (0.000) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 09:43:39,284 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,284 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T09:43:39.284499+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 9, 43, 39, 284499, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:43:39,285 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,286 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,297 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 09:43:39,297 utils (0.000) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 09:43:39,299 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,300 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T09:43:39.299456+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 9, 43, 39, 299456, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:43:39,301 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,301 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,311 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 09:43:39,312 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 09:43:39,313 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,314 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T09:43:39.313854+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 9, 43, 39, 313854, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:43:39,315 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,315 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,324 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,325 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T09:43:39.324553+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 9, 43, 39, 324553, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:43:39,326 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,326 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,334 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 09:43:39,335 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 09:43:39,336 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,336 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T09:43:39.336508+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 9, 43, 39, 336508, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:43:39,337 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,338 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,342 utils (0.004) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,343 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T09:43:39.342802+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 9, 43, 39, 342802, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:43:39,347 utils (0.004) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,347 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,360 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,361 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T09:43:39.361040+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 9, 43, 39, 361040, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:43:39,362 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,362 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,371 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 09:43:39,375 utils (0.004) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 09:43:39,377 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,378 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T09:43:39.377879+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 9, 43, 39, 377879, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:43:39,380 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,380 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,388 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 09:43:39,388 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 09:43:39,390 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,391 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T09:43:39.390843+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 9, 43, 39, 390843, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:43:39,392 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,393 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,402 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 09:43:39,404 utils (0.001) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 09:43:39,406 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,407 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T09:43:39.406224+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 9, 43, 39, 406224, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:43:39,408 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,408 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,418 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,419 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T09:43:39.418632+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 9, 43, 39, 418632, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:43:39,420 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,420 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,431 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 09:43:39,431 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 09:43:39,433 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,435 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T09:43:39.434267+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 9, 43, 39, 434267, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:43:39,436 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,436 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,439 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 09:43:39,444 utils (0.005) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:43:39,446 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 09:43:39,450 utils (0.004) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 09:43:39,452 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,453 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T09:43:39.452539+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 9, 43, 39, 452539, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:43:39,454 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,454 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,456 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 09:43:39,461 utils (0.004) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 09:43:39,461 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 09:43:39,463 utils (0.002) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 09:43:39,463 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 09:43:39,465 utils (0.002) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 09:43:39,466 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,468 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,469 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T09:43:39.468802+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 9, 43, 39, 468802, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 09:43:39,472 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 09:43:39,473 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,492 utils (0.002) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 09:43:39,493 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,494 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 09:43:39,495 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,496 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 09:43:39,500 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 09:43:39,501 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,505 utils (0.004) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 09:43:39,506 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,508 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 09:43:39,510 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,512 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,513 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,574 utils (0.004) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 0', 7, '2024-01-25T17:20:00.512276+01:00'::timestamptz, 673, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 0', 7, datetime.datetime(2024, 1, 25, 17, 20, 0, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 673, False); alias=default
DEBUG 2024-03-03 09:43:39,575 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 8', 6, '2023-12-24T22:18:24.512276+01:00'::timestamptz, 255, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 8', 6, datetime.datetime(2023, 12, 24, 22, 18, 24, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 255, False); alias=default
DEBUG 2024-03-03 09:43:39,577 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 13', 8, '2024-01-15T12:03:49.512276+01:00'::timestamptz, 511, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 13', 8, datetime.datetime(2024, 1, 15, 12, 3, 49, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 511, False); alias=default
DEBUG 2024-03-03 09:43:39,579 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 13', 9, '2024-01-09T18:05:53.512276+01:00'::timestamptz, 67, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 13', 9, datetime.datetime(2024, 1, 9, 18, 5, 53, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 67, False); alias=default
DEBUG 2024-03-03 09:43:39,580 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 2, 'Player 16', 11, '2024-01-21T13:07:08.512276+01:00'::timestamptz, 32, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 2, 'Player 16', 11, datetime.datetime(2024, 1, 21, 13, 7, 8, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 32, False); alias=default
DEBUG 2024-03-03 09:43:39,582 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 2, 'Player 10', 11, '2024-01-10T06:22:13.512276+01:00'::timestamptz, 396, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 2, 'Player 10', 11, datetime.datetime(2024, 1, 10, 6, 22, 13, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 396, False); alias=default
DEBUG 2024-03-03 09:43:39,583 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 10, 'Player 12', 11, '2023-11-04T01:31:38.512276+01:00'::timestamptz, 144, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 10, 'Player 12', 11, datetime.datetime(2023, 11, 4, 1, 31, 38, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 144, False); alias=default
DEBUG 2024-03-03 09:43:39,585 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 6', 4, '2023-12-30T03:29:27.512276+01:00'::timestamptz, 184, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 6', 4, datetime.datetime(2023, 12, 30, 3, 29, 27, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 184, False); alias=default
DEBUG 2024-03-03 09:43:39,587 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 5, 'Player 14', 11, '2023-11-17T07:23:02.512276+01:00'::timestamptz, 553, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 5, 'Player 14', 11, datetime.datetime(2023, 11, 17, 7, 23, 2, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 553, False); alias=default
DEBUG 2024-03-03 09:43:39,588 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 9, 'Player 5', 11, '2023-12-19T20:32:54.512276+01:00'::timestamptz, 798, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 9, 'Player 5', 11, datetime.datetime(2023, 12, 19, 20, 32, 54, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 798, False); alias=default
DEBUG 2024-03-03 09:43:39,590 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 0, 'Player 3', 11, '2023-12-30T13:24:15.512276+01:00'::timestamptz, 219, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 0, 'Player 3', 11, datetime.datetime(2023, 12, 30, 13, 24, 15, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 219, False); alias=default
DEBUG 2024-03-03 09:43:39,592 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 3, 'Player 19', 11, '2023-11-20T05:42:46.512276+01:00'::timestamptz, 704, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 3, 'Player 19', 11, datetime.datetime(2023, 11, 20, 5, 42, 46, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 704, False); alias=default
DEBUG 2024-03-03 09:43:39,594 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 0', 10, '2023-11-18T11:00:32.512276+01:00'::timestamptz, 30, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 0', 10, datetime.datetime(2023, 11, 18, 11, 0, 32, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 30, False); alias=default
DEBUG 2024-03-03 09:43:39,595 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 3', 1, '2024-02-11T02:03:02.512276+01:00'::timestamptz, 205, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 3', 1, datetime.datetime(2024, 2, 11, 2, 3, 2, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 205, False); alias=default
DEBUG 2024-03-03 09:43:39,597 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 7, 'Player 21', 11, '2024-02-26T00:51:42.512276+01:00'::timestamptz, 973, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 7, 'Player 21', 11, datetime.datetime(2024, 2, 26, 0, 51, 42, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 973, False); alias=default
DEBUG 2024-03-03 09:43:39,598 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 21', 8, '2024-02-28T12:24:05.512276+01:00'::timestamptz, 386, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 21', 8, datetime.datetime(2024, 2, 28, 12, 24, 5, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 386, False); alias=default
DEBUG 2024-03-03 09:43:39,600 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 8', 2, '2023-12-02T17:13:49.512276+01:00'::timestamptz, 57, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 8', 2, datetime.datetime(2023, 12, 2, 17, 13, 49, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 57, False); alias=default
DEBUG 2024-03-03 09:43:39,601 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 1, 'Player 6', 11, '2023-12-14T05:52:16.512276+01:00'::timestamptz, 359, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 1, 'Player 6', 11, datetime.datetime(2023, 12, 14, 5, 52, 16, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 359, False); alias=default
DEBUG 2024-03-03 09:43:39,603 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 10, 'Player 1', 11, '2023-11-29T05:01:54.512276+01:00'::timestamptz, 15, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 10, 'Player 1', 11, datetime.datetime(2023, 11, 29, 5, 1, 54, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 15, False); alias=default
DEBUG 2024-03-03 09:43:39,604 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 0, 'Player 4', 11, '2024-02-20T11:13:20.512276+01:00'::timestamptz, 597, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 0, 'Player 4', 11, datetime.datetime(2024, 2, 20, 11, 13, 20, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 597, False); alias=default
DEBUG 2024-03-03 09:43:39,606 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 11', 10, '2024-02-17T18:22:45.512276+01:00'::timestamptz, 17, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 11', 10, datetime.datetime(2024, 2, 17, 18, 22, 45, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 17, False); alias=default
DEBUG 2024-03-03 09:43:39,608 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 21', 1, '2023-11-11T02:07:01.512276+01:00'::timestamptz, 879, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 21', 1, datetime.datetime(2023, 11, 11, 2, 7, 1, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 879, False); alias=default
DEBUG 2024-03-03 09:43:39,609 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 7', 7, '2024-02-14T12:26:02.512276+01:00'::timestamptz, 42, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 7', 7, datetime.datetime(2024, 2, 14, 12, 26, 2, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 42, False); alias=default
DEBUG 2024-03-03 09:43:39,611 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 1', 2, '2024-01-15T05:35:19.512276+01:00'::timestamptz, 373, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 1', 2, datetime.datetime(2024, 1, 15, 5, 35, 19, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 373, False); alias=default
DEBUG 2024-03-03 09:43:39,612 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 17', 10, '2024-02-06T06:17:38.512276+01:00'::timestamptz, 207, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 17', 10, datetime.datetime(2024, 2, 6, 6, 17, 38, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 207, False); alias=default
DEBUG 2024-03-03 09:43:39,614 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 2', 1, '2024-01-21T08:04:11.512276+01:00'::timestamptz, 97, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 2', 1, datetime.datetime(2024, 1, 21, 8, 4, 11, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 97, False); alias=default
DEBUG 2024-03-03 09:43:39,615 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 3, 'Player 27', 11, '2023-11-23T01:17:53.512276+01:00'::timestamptz, 19, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 3, 'Player 27', 11, datetime.datetime(2023, 11, 23, 1, 17, 53, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 19, False); alias=default
DEBUG 2024-03-03 09:43:39,617 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 13', 10, '2023-11-09T14:15:30.512276+01:00'::timestamptz, 498, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 13', 10, datetime.datetime(2023, 11, 9, 14, 15, 30, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 498, False); alias=default
DEBUG 2024-03-03 09:43:39,619 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 26', 2, '2023-12-16T07:06:31.512276+01:00'::timestamptz, 729, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 26', 2, datetime.datetime(2023, 12, 16, 7, 6, 31, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 729, False); alias=default
DEBUG 2024-03-03 09:43:39,621 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 3, 'Player 3', 11, '2024-02-15T18:25:26.512276+01:00'::timestamptz, 9, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 3, 'Player 3', 11, datetime.datetime(2024, 2, 15, 18, 25, 26, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 9, False); alias=default
DEBUG 2024-03-03 09:43:39,623 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 5, 'Player 8', 11, '2024-02-16T02:20:26.512276+01:00'::timestamptz, 667, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 5, 'Player 8', 11, datetime.datetime(2024, 2, 16, 2, 20, 26, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 667, False); alias=default
DEBUG 2024-03-03 09:43:39,624 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 9', 0, '2023-12-01T18:09:00.512276+01:00'::timestamptz, 648, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 9', 0, datetime.datetime(2023, 12, 1, 18, 9, 0, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 648, False); alias=default
DEBUG 2024-03-03 09:43:39,626 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 18', 3, '2024-02-13T07:15:25.512276+01:00'::timestamptz, 214, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 18', 3, datetime.datetime(2024, 2, 13, 7, 15, 25, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 214, False); alias=default
DEBUG 2024-03-03 09:43:39,627 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 9, 'Player 16', 11, '2024-01-12T20:47:06.512276+01:00'::timestamptz, 179, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 9, 'Player 16', 11, datetime.datetime(2024, 1, 12, 20, 47, 6, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 179, False); alias=default
DEBUG 2024-03-03 09:43:39,628 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 4', 1, '2024-01-06T03:13:51.512276+01:00'::timestamptz, 779, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 4', 1, datetime.datetime(2024, 1, 6, 3, 13, 51, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 779, False); alias=default
DEBUG 2024-03-03 09:43:39,629 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 25', 3, '2023-11-07T09:45:03.512276+01:00'::timestamptz, 385, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 25', 3, datetime.datetime(2023, 11, 7, 9, 45, 3, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 385, False); alias=default
DEBUG 2024-03-03 09:43:39,631 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 2, 'Player 1', 11, '2024-02-16T01:52:13.512276+01:00'::timestamptz, 816, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 2, 'Player 1', 11, datetime.datetime(2024, 2, 16, 1, 52, 13, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 816, False); alias=default
DEBUG 2024-03-03 09:43:39,632 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 3', 8, '2024-02-08T16:03:00.512276+01:00'::timestamptz, 664, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 3', 8, datetime.datetime(2024, 2, 8, 16, 3, 0, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 664, False); alias=default
DEBUG 2024-03-03 09:43:39,633 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 3', 3, '2023-11-02T15:28:32.512276+01:00'::timestamptz, 574, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 3', 3, datetime.datetime(2023, 11, 2, 15, 28, 32, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 574, False); alias=default
DEBUG 2024-03-03 09:43:39,634 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 3, 'Player 28', 11, '2024-02-19T21:58:31.512276+01:00'::timestamptz, 165, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 3, 'Player 28', 11, datetime.datetime(2024, 2, 19, 21, 58, 31, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 165, False); alias=default
DEBUG 2024-03-03 09:43:39,635 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 2, 'Player 14', 11, '2024-01-20T17:53:39.512276+01:00'::timestamptz, 269, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 2, 'Player 14', 11, datetime.datetime(2024, 1, 20, 17, 53, 39, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 269, False); alias=default
DEBUG 2024-03-03 09:43:39,637 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 19', 6, '2023-11-11T08:40:05.512276+01:00'::timestamptz, 80, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 19', 6, datetime.datetime(2023, 11, 11, 8, 40, 5, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 80, False); alias=default
DEBUG 2024-03-03 09:43:39,638 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 3, 'Player 3', 11, '2023-11-28T23:02:49.512276+01:00'::timestamptz, 68, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 3, 'Player 3', 11, datetime.datetime(2023, 11, 28, 23, 2, 49, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 68, False); alias=default
DEBUG 2024-03-03 09:43:39,640 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 11, 'Player 12', 2, '2024-01-23T09:50:43.512276+01:00'::timestamptz, 770, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 11, 'Player 12', 2, datetime.datetime(2024, 1, 23, 9, 50, 43, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 770, False); alias=default
DEBUG 2024-03-03 09:43:39,641 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 1, 'Player 5', 11, '2023-11-21T03:06:33.512276+01:00'::timestamptz, 578, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 1, 'Player 5', 11, datetime.datetime(2023, 11, 21, 3, 6, 33, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 578, False); alias=default
DEBUG 2024-03-03 09:43:39,642 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 7, 'Player 11', 11, '2024-02-02T16:34:36.512276+01:00'::timestamptz, 441, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 7, 'Player 11', 11, datetime.datetime(2024, 2, 2, 16, 34, 36, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 441, False); alias=default
DEBUG 2024-03-03 09:43:39,644 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 7, 'Player 10', 11, '2023-12-23T13:33:29.512276+01:00'::timestamptz, 484, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 7, 'Player 10', 11, datetime.datetime(2023, 12, 23, 13, 33, 29, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 484, False); alias=default
DEBUG 2024-03-03 09:43:39,645 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 9, 'Player 30', 11, '2024-02-13T06:08:51.512276+01:00'::timestamptz, 362, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 9, 'Player 30', 11, datetime.datetime(2024, 2, 13, 6, 8, 51, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 362, False); alias=default
DEBUG 2024-03-03 09:43:39,647 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 2', 6, '2024-03-01T10:42:26.512276+01:00'::timestamptz, 913, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 2', 6, datetime.datetime(2024, 3, 1, 10, 42, 26, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 913, False); alias=default
DEBUG 2024-03-03 09:43:39,648 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 8, 'Player 35', 11, '2023-12-29T14:24:53.512276+01:00'::timestamptz, 246, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 8, 'Player 35', 11, datetime.datetime(2023, 12, 29, 14, 24, 53, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 246, False); alias=default
DEBUG 2024-03-03 09:43:39,649 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 1, 'Player 22', 11, '2024-01-11T05:49:28.512276+01:00'::timestamptz, 342, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 1, 'Player 22', 11, datetime.datetime(2024, 1, 11, 5, 49, 28, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 342, False); alias=default
DEBUG 2024-03-03 09:43:39,651 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 9, 'Player 29', 11, '2023-12-15T01:20:32.512276+01:00'::timestamptz, 185, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 9, 'Player 29', 11, datetime.datetime(2023, 12, 15, 1, 20, 32, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 185, False); alias=default
DEBUG 2024-03-03 09:43:39,652 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 8', 7, '2024-01-26T02:30:54.512276+01:00'::timestamptz, 805, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 8', 7, datetime.datetime(2024, 1, 26, 2, 30, 54, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 805, False); alias=default
DEBUG 2024-03-03 09:43:39,653 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 6, 'Player 36', 11, '2023-11-28T12:22:36.512276+01:00'::timestamptz, 934, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 6, 'Player 36', 11, datetime.datetime(2023, 11, 28, 12, 22, 36, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 934, False); alias=default
DEBUG 2024-03-03 09:43:39,655 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 34', 1, '2023-12-16T20:22:10.512276+01:00'::timestamptz, 187, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 34', 1, datetime.datetime(2023, 12, 16, 20, 22, 10, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 187, False); alias=default
DEBUG 2024-03-03 09:43:39,656 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 8, 'Player 39', 11, '2024-01-09T10:34:10.512276+01:00'::timestamptz, 167, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 8, 'Player 39', 11, datetime.datetime(2024, 1, 9, 10, 34, 10, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 167, False); alias=default
DEBUG 2024-03-03 09:43:39,658 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 3, 'Player 35', 11, '2024-01-21T02:51:11.512276+01:00'::timestamptz, 225, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 3, 'Player 35', 11, datetime.datetime(2024, 1, 21, 2, 51, 11, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 225, False); alias=default
DEBUG 2024-03-03 09:43:39,659 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 6', 6, '2024-03-01T09:41:32.512276+01:00'::timestamptz, 466, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 6', 6, datetime.datetime(2024, 3, 1, 9, 41, 32, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 466, False); alias=default
DEBUG 2024-03-03 09:43:39,660 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 9, 'Player 7', 11, '2024-02-13T06:12:15.512276+01:00'::timestamptz, 78, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 9, 'Player 7', 11, datetime.datetime(2024, 2, 13, 6, 12, 15, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 78, False); alias=default
DEBUG 2024-03-03 09:43:39,662 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 8, 'Player 39', 11, '2023-11-10T12:23:43.512276+01:00'::timestamptz, 711, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 8, 'Player 39', 11, datetime.datetime(2023, 11, 10, 12, 23, 43, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 711, False); alias=default
DEBUG 2024-03-03 09:43:39,663 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 2, 'Player 22', 11, '2024-02-11T19:58:42.512276+01:00'::timestamptz, 134, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 2, 'Player 22', 11, datetime.datetime(2024, 2, 11, 19, 58, 42, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 134, False); alias=default
DEBUG 2024-03-03 09:43:39,664 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 11, 'Player 39', 8, '2023-12-08T06:54:15.512276+01:00'::timestamptz, 626, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 11, 'Player 39', 8, datetime.datetime(2023, 12, 8, 6, 54, 15, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 626, False); alias=default
DEBUG 2024-03-03 09:43:39,665 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 9, 'Player 16', 11, '2024-02-24T16:10:29.512276+01:00'::timestamptz, 282, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 9, 'Player 16', 11, datetime.datetime(2024, 2, 24, 16, 10, 29, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 282, False); alias=default
DEBUG 2024-03-03 09:43:39,667 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 29', 1, '2024-01-22T05:59:24.512276+01:00'::timestamptz, 21, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 29', 1, datetime.datetime(2024, 1, 22, 5, 59, 24, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 21, False); alias=default
DEBUG 2024-03-03 09:43:39,668 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 47', 0, 'Player 21', 11, '2024-01-07T08:43:36.512276+01:00'::timestamptz, 546, false) RETURNING "pong_gamedata"."id"; args=('Player 47', 0, 'Player 21', 11, datetime.datetime(2024, 1, 7, 8, 43, 36, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 546, False); alias=default
DEBUG 2024-03-03 09:43:39,669 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 37', 1, '2024-02-22T06:25:43.512276+01:00'::timestamptz, 977, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 37', 1, datetime.datetime(2024, 2, 22, 6, 25, 43, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 977, False); alias=default
DEBUG 2024-03-03 09:43:39,671 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 11, 'Player 23', 4, '2024-02-16T09:06:25.512276+01:00'::timestamptz, 894, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 11, 'Player 23', 4, datetime.datetime(2024, 2, 16, 9, 6, 25, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 894, False); alias=default
DEBUG 2024-03-03 09:43:39,672 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 7', 2, '2024-02-13T16:49:38.512276+01:00'::timestamptz, 781, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 7', 2, datetime.datetime(2024, 2, 13, 16, 49, 38, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 781, False); alias=default
DEBUG 2024-03-03 09:43:39,673 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 4, 'Player 30', 11, '2023-11-01T06:38:21.512276+01:00'::timestamptz, 281, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 4, 'Player 30', 11, datetime.datetime(2023, 11, 1, 6, 38, 21, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 281, False); alias=default
DEBUG 2024-03-03 09:43:39,675 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 11, 'Player 7', 10, '2023-11-20T17:40:17.512276+01:00'::timestamptz, 506, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 11, 'Player 7', 10, datetime.datetime(2023, 11, 20, 17, 40, 17, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 506, False); alias=default
DEBUG 2024-03-03 09:43:39,676 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 0, 'Player 3', 11, '2024-02-06T13:53:49.512276+01:00'::timestamptz, 520, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 0, 'Player 3', 11, datetime.datetime(2024, 2, 6, 13, 53, 49, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 520, False); alias=default
DEBUG 2024-03-03 09:43:39,677 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 51', 9, '2024-01-05T10:29:26.512276+01:00'::timestamptz, 450, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 51', 9, datetime.datetime(2024, 1, 5, 10, 29, 26, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 450, False); alias=default
DEBUG 2024-03-03 09:43:39,679 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 51', 4, 'Player 43', 11, '2024-01-18T04:30:06.512276+01:00'::timestamptz, 70, false) RETURNING "pong_gamedata"."id"; args=('Player 51', 4, 'Player 43', 11, datetime.datetime(2024, 1, 18, 4, 30, 6, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 70, False); alias=default
DEBUG 2024-03-03 09:43:39,680 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 2, 'Player 44', 11, '2024-02-18T06:34:02.512276+01:00'::timestamptz, 704, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 2, 'Player 44', 11, datetime.datetime(2024, 2, 18, 6, 34, 2, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 704, False); alias=default
DEBUG 2024-03-03 09:43:39,681 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 11, 'Player 34', 4, '2023-12-23T08:12:13.512276+01:00'::timestamptz, 451, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 11, 'Player 34', 4, datetime.datetime(2023, 12, 23, 8, 12, 13, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 451, False); alias=default
DEBUG 2024-03-03 09:43:39,682 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 10, 'Player 23', 11, '2024-01-04T00:37:03.512276+01:00'::timestamptz, 742, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 10, 'Player 23', 11, datetime.datetime(2024, 1, 4, 0, 37, 3, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 742, False); alias=default
DEBUG 2024-03-03 09:43:39,684 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 8, 'Player 6', 11, '2024-01-23T18:10:52.512276+01:00'::timestamptz, 898, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 8, 'Player 6', 11, datetime.datetime(2024, 1, 23, 18, 10, 52, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 898, False); alias=default
DEBUG 2024-03-03 09:43:39,685 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 11, 'Player 4', 9, '2024-01-30T11:17:13.512276+01:00'::timestamptz, 69, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 11, 'Player 4', 9, datetime.datetime(2024, 1, 30, 11, 17, 13, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 69, False); alias=default
DEBUG 2024-03-03 09:43:39,686 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 2, 'Player 21', 11, '2023-12-03T21:07:25.512276+01:00'::timestamptz, 219, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 2, 'Player 21', 11, datetime.datetime(2023, 12, 3, 21, 7, 25, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 219, False); alias=default
DEBUG 2024-03-03 09:43:39,687 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 6, 'Player 28', 11, '2024-01-16T11:24:52.512276+01:00'::timestamptz, 280, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 6, 'Player 28', 11, datetime.datetime(2024, 1, 16, 11, 24, 52, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 280, False); alias=default
DEBUG 2024-03-03 09:43:39,689 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 54', 8, 'Player 42', 11, '2023-11-30T20:45:02.512276+01:00'::timestamptz, 406, false) RETURNING "pong_gamedata"."id"; args=('Player 54', 8, 'Player 42', 11, datetime.datetime(2023, 11, 30, 20, 45, 2, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 406, False); alias=default
DEBUG 2024-03-03 09:43:39,691 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 11, 'Player 31', 4, '2024-01-13T05:04:05.512276+01:00'::timestamptz, 431, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 11, 'Player 31', 4, datetime.datetime(2024, 1, 13, 5, 4, 5, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 431, False); alias=default
DEBUG 2024-03-03 09:43:39,692 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 49', 11, 'Player 20', 2, '2023-11-03T12:35:21.512276+01:00'::timestamptz, 801, false) RETURNING "pong_gamedata"."id"; args=('Player 49', 11, 'Player 20', 2, datetime.datetime(2023, 11, 3, 12, 35, 21, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 801, False); alias=default
DEBUG 2024-03-03 09:43:39,694 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 10, 'Player 50', 11, '2023-11-02T00:18:37.512276+01:00'::timestamptz, 473, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 10, 'Player 50', 11, datetime.datetime(2023, 11, 2, 0, 18, 37, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 473, False); alias=default
DEBUG 2024-03-03 09:43:39,695 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 32', 10, '2023-11-07T05:39:08.512276+01:00'::timestamptz, 348, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 32', 10, datetime.datetime(2023, 11, 7, 5, 39, 8, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 348, False); alias=default
DEBUG 2024-03-03 09:43:39,696 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 55', 11, 'Player 36', 3, '2024-01-29T12:19:57.512276+01:00'::timestamptz, 863, false) RETURNING "pong_gamedata"."id"; args=('Player 55', 11, 'Player 36', 3, datetime.datetime(2024, 1, 29, 12, 19, 57, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 863, False); alias=default
DEBUG 2024-03-03 09:43:39,698 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 28', 9, '2024-01-23T01:59:16.512276+01:00'::timestamptz, 421, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 28', 9, datetime.datetime(2024, 1, 23, 1, 59, 16, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 421, False); alias=default
DEBUG 2024-03-03 09:43:39,699 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 3, 'Player 56', 11, '2024-01-04T23:55:36.512276+01:00'::timestamptz, 877, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 3, 'Player 56', 11, datetime.datetime(2024, 1, 4, 23, 55, 36, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 877, False); alias=default
DEBUG 2024-03-03 09:43:39,701 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 1, 'Player 28', 11, '2024-03-01T01:16:58.512276+01:00'::timestamptz, 447, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 1, 'Player 28', 11, datetime.datetime(2024, 3, 1, 1, 16, 58, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 447, False); alias=default
DEBUG 2024-03-03 09:43:39,702 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 33', 6, '2024-01-19T12:04:35.512276+01:00'::timestamptz, 992, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 33', 6, datetime.datetime(2024, 1, 19, 12, 4, 35, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 992, False); alias=default
DEBUG 2024-03-03 09:43:39,703 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 53', 0, '2023-11-12T05:55:06.512276+01:00'::timestamptz, 364, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 53', 0, datetime.datetime(2023, 11, 12, 5, 55, 6, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 364, False); alias=default
DEBUG 2024-03-03 09:43:39,705 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 1, 'Player 55', 11, '2024-02-18T19:15:11.512276+01:00'::timestamptz, 224, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 1, 'Player 55', 11, datetime.datetime(2024, 2, 18, 19, 15, 11, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 224, False); alias=default
DEBUG 2024-03-03 09:43:39,707 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 0', 10, '2023-11-05T15:43:31.512276+01:00'::timestamptz, 402, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 0', 10, datetime.datetime(2023, 11, 5, 15, 43, 31, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 402, False); alias=default
DEBUG 2024-03-03 09:43:39,708 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 34', 4, '2023-12-23T09:31:53.512276+01:00'::timestamptz, 8, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 34', 4, datetime.datetime(2023, 12, 23, 9, 31, 53, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 8, False); alias=default
DEBUG 2024-03-03 09:43:39,709 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 8, 'Player 21', 11, '2024-02-09T19:51:28.512276+01:00'::timestamptz, 106, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 8, 'Player 21', 11, datetime.datetime(2024, 2, 9, 19, 51, 28, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 106, False); alias=default
DEBUG 2024-03-03 09:43:39,710 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 18', 0, '2024-02-03T11:51:13.512276+01:00'::timestamptz, 185, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 18', 0, datetime.datetime(2024, 2, 3, 11, 51, 13, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 185, False); alias=default
DEBUG 2024-03-03 09:43:39,712 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 11, 'Player 42', 2, '2024-01-19T00:07:50.512276+01:00'::timestamptz, 373, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 11, 'Player 42', 2, datetime.datetime(2024, 1, 19, 0, 7, 50, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 373, False); alias=default
DEBUG 2024-03-03 09:43:39,713 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 54', 11, 'Player 61', 3, '2024-01-17T01:44:36.512276+01:00'::timestamptz, 23, false) RETURNING "pong_gamedata"."id"; args=('Player 54', 11, 'Player 61', 3, datetime.datetime(2024, 1, 17, 1, 44, 36, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 23, False); alias=default
DEBUG 2024-03-03 09:43:39,714 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 5', 9, '2024-02-04T21:27:49.512276+01:00'::timestamptz, 370, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 5', 9, datetime.datetime(2024, 2, 4, 21, 27, 49, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 370, False); alias=default
DEBUG 2024-03-03 09:43:39,716 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 1, 'Player 5', 11, '2024-01-13T16:00:40.512276+01:00'::timestamptz, 690, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 1, 'Player 5', 11, datetime.datetime(2024, 1, 13, 16, 0, 40, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 690, False); alias=default
DEBUG 2024-03-03 09:43:39,717 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,718 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 5, 'Player 5', 11, '2023-11-30T04:32:01.512276+01:00'::timestamptz, 588, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 5, 'Player 5', 11, datetime.datetime(2023, 11, 30, 4, 32, 1, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 588, True); alias=default
DEBUG 2024-03-03 09:43:39,719 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 7, 'Player 13', 11, '2023-11-30T04:35:51.512276+01:00'::timestamptz, 207, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 7, 'Player 13', 11, datetime.datetime(2023, 11, 30, 4, 35, 51, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 207, True); alias=default
DEBUG 2024-03-03 09:43:39,721 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 2, 'Player 13', 11, '2023-11-30T04:37:25.512276+01:00'::timestamptz, 360, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 2, 'Player 13', 11, datetime.datetime(2023, 11, 30, 4, 37, 25, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 360, True); alias=default
DEBUG 2024-03-03 09:43:39,723 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2023-11-30T04:37:25.512276+01:00'::timestamptz, 912, '["Player 13", "Player 5", "Player 2", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2023, 11, 30, 4, 37, 25, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 912, <psycopg2._json.Json object at 0x7f895a05e030>, '0x0'); alias=default
DEBUG 2024-03-03 09:43:39,725 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 6, 'Player 10', 11, '2024-01-17T21:29:19.512276+01:00'::timestamptz, 805, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 6, 'Player 10', 11, datetime.datetime(2024, 1, 17, 21, 29, 19, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 805, True); alias=default
DEBUG 2024-03-03 09:43:39,726 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 6, 'Player 15', 11, '2024-01-17T21:30:15.512276+01:00'::timestamptz, 990, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 6, 'Player 15', 11, datetime.datetime(2024, 1, 17, 21, 30, 15, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 990, True); alias=default
DEBUG 2024-03-03 09:43:39,728 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 15', 1, '2024-01-17T21:30:23.512276+01:00'::timestamptz, 136, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 15', 1, datetime.datetime(2024, 1, 17, 21, 30, 23, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 136, True); alias=default
DEBUG 2024-03-03 09:43:39,729 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2024-01-17T21:30:23.512276+01:00'::timestamptz, 998, '["Player 10", "Player 15", "Player 0", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2024, 1, 17, 21, 30, 23, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 998, <psycopg2._json.Json object at 0x7f895a0888f0>, '0x0'); alias=default
DEBUG 2024-03-03 09:43:39,730 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 15', 8, '2023-11-12T23:02:50.512276+01:00'::timestamptz, 138, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 15', 8, datetime.datetime(2023, 11, 12, 23, 2, 50, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 138, True); alias=default
DEBUG 2024-03-03 09:43:39,731 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 13', 2, '2023-11-12T23:01:14.512276+01:00'::timestamptz, 380, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 13', 2, datetime.datetime(2023, 11, 12, 23, 1, 14, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 380, True); alias=default
DEBUG 2024-03-03 09:43:39,732 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 0', 2, '2023-11-12T23:11:10.512276+01:00'::timestamptz, 537, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 0', 2, datetime.datetime(2023, 11, 12, 23, 11, 10, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 537, True); alias=default
DEBUG 2024-03-03 09:43:39,734 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2023-11-12T23:11:10.512276+01:00'::timestamptz, 976, '["Player 10", "Player 0", "Player 15", "Player 13"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2023, 11, 12, 23, 11, 10, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 976, <psycopg2._json.Json object at 0x7f8959eb3b90>, '0x0'); alias=default
DEBUG 2024-03-03 09:43:39,735 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 5, 'Player 17', 11, '2023-12-22T14:43:24.512276+01:00'::timestamptz, 23, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 5, 'Player 17', 11, datetime.datetime(2023, 12, 22, 14, 43, 24, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 23, True); alias=default
DEBUG 2024-03-03 09:43:39,736 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 1, 'Player 12', 11, '2023-12-22T14:50:33.512276+01:00'::timestamptz, 943, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 1, 'Player 12', 11, datetime.datetime(2023, 12, 22, 14, 50, 33, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 943, True); alias=default
DEBUG 2024-03-03 09:43:39,738 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 12', 7, '2023-12-22T14:50:33.512276+01:00'::timestamptz, 353, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 12', 7, datetime.datetime(2023, 12, 22, 14, 50, 33, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 353, True); alias=default
DEBUG 2024-03-03 09:43:39,739 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2023-12-22T14:50:33.512276+01:00'::timestamptz, 943, '["Player 17", "Player 12", "Player 13", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2023, 12, 22, 14, 50, 33, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 943, <psycopg2._json.Json object at 0x7f8959eb3b90>, '0x0'); alias=default
DEBUG 2024-03-03 09:43:39,741 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 17', 10, '2023-11-04T03:20:16.512276+01:00'::timestamptz, 460, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 17', 10, datetime.datetime(2023, 11, 4, 3, 20, 16, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 460, True); alias=default
DEBUG 2024-03-03 09:43:39,742 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 9', 0, '2023-11-04T03:13:11.512276+01:00'::timestamptz, 344, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 9', 0, datetime.datetime(2023, 11, 4, 3, 13, 11, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 344, True); alias=default
DEBUG 2024-03-03 09:43:39,743 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 3, 'Player 3', 11, '2023-11-04T03:20:33.512276+01:00'::timestamptz, 54, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 3, 'Player 3', 11, datetime.datetime(2023, 11, 4, 3, 20, 33, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 54, True); alias=default
DEBUG 2024-03-03 09:43:39,744 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2023-11-04T03:20:33.512276+01:00'::timestamptz, 786, '["Player 3", "Player 12", "Player 17", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2023, 11, 4, 3, 20, 33, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 786, <psycopg2._json.Json object at 0x7f8959f32600>, '0x0'); alias=default
DEBUG 2024-03-03 09:43:39,745 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 6, 'Player 2', 11, '2024-01-01T05:08:27.512276+01:00'::timestamptz, 529, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 6, 'Player 2', 11, datetime.datetime(2024, 1, 1, 5, 8, 27, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 529, True); alias=default
DEBUG 2024-03-03 09:43:39,746 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 11', 7, '2024-01-01T05:02:18.512276+01:00'::timestamptz, 340, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 11', 7, datetime.datetime(2024, 1, 1, 5, 2, 18, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 340, True); alias=default
DEBUG 2024-03-03 09:43:39,747 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 8, 'Player 1', 11, '2024-01-01T05:11:26.512276+01:00'::timestamptz, 537, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 8, 'Player 1', 11, datetime.datetime(2024, 1, 1, 5, 11, 26, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 537, True); alias=default
DEBUG 2024-03-03 09:43:39,749 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2024-01-01T05:11:26.512276+01:00'::timestamptz, 888, '["Player 1", "Player 2", "Player 16", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2024, 1, 1, 5, 11, 26, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 888, <psycopg2._json.Json object at 0x7f8959eb21e0>, '0x0'); alias=default
DEBUG 2024-03-03 09:43:39,750 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 6', 0, '2023-11-13T20:04:03.512276+01:00'::timestamptz, 488, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 6', 0, datetime.datetime(2023, 11, 13, 20, 4, 3, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 488, True); alias=default
DEBUG 2024-03-03 09:43:39,751 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 0, 'Player 9', 11, '2023-11-13T20:04:40.512276+01:00'::timestamptz, 356, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 0, 'Player 9', 11, datetime.datetime(2023, 11, 13, 20, 4, 40, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 356, True); alias=default
DEBUG 2024-03-03 09:43:39,752 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 9', 4, '2023-11-13T20:07:46.512276+01:00'::timestamptz, 618, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 9', 4, datetime.datetime(2023, 11, 13, 20, 7, 46, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 618, True); alias=default
DEBUG 2024-03-03 09:43:39,753 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2023-11-13T20:07:46.512276+01:00'::timestamptz, 711, '["Player 17", "Player 9", "Player 6", "Player 16"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2023, 11, 13, 20, 7, 46, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 711, <psycopg2._json.Json object at 0x7f8959eb3b90>, '0x0'); alias=default
DEBUG 2024-03-03 09:43:39,755 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 13', 10, '2024-02-29T03:24:59.512276+01:00'::timestamptz, 575, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 13', 10, datetime.datetime(2024, 2, 29, 3, 24, 59, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 575, True); alias=default
DEBUG 2024-03-03 09:43:39,756 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 5, 'Player 8', 11, '2024-02-29T03:23:21.512276+01:00'::timestamptz, 843, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 5, 'Player 8', 11, datetime.datetime(2024, 2, 29, 3, 23, 21, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 843, True); alias=default
DEBUG 2024-03-03 09:43:39,758 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 8', 7, '2024-02-29T03:25:54.512276+01:00'::timestamptz, 511, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 8', 7, datetime.datetime(2024, 2, 29, 3, 25, 54, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 511, True); alias=default
DEBUG 2024-03-03 09:43:39,759 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2024-02-29T03:25:54.512276+01:00'::timestamptz, 996, '["Player 2", "Player 8", "Player 13", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2024, 2, 29, 3, 25, 54, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 996, <psycopg2._json.Json object at 0x7f8959ee36e0>, '0x0'); alias=default
DEBUG 2024-03-03 09:43:39,760 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 8, 'Player 1', 11, '2023-11-27T00:28:01.512276+01:00'::timestamptz, 645, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 8, 'Player 1', 11, datetime.datetime(2023, 11, 27, 0, 28, 1, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 645, True); alias=default
DEBUG 2024-03-03 09:43:39,761 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 9, 'Player 12', 11, '2023-11-27T00:30:55.512276+01:00'::timestamptz, 763, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 9, 'Player 12', 11, datetime.datetime(2023, 11, 27, 0, 30, 55, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 763, True); alias=default
DEBUG 2024-03-03 09:43:39,763 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 10, 'Player 12', 11, '2023-11-27T00:31:18.512276+01:00'::timestamptz, 721, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 10, 'Player 12', 11, datetime.datetime(2023, 11, 27, 0, 31, 18, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 721, True); alias=default
DEBUG 2024-03-03 09:43:39,764 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2023-11-27T00:31:18.512276+01:00'::timestamptz, 842, '["Player 12", "Player 1", "Player 14", "Player 13"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2023, 11, 27, 0, 31, 18, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 842, <psycopg2._json.Json object at 0x7f8959eb3350>, '0x0'); alias=default
DEBUG 2024-03-03 09:43:39,765 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 0', 8, '2023-11-17T16:58:08.512276+01:00'::timestamptz, 936, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 0', 8, datetime.datetime(2023, 11, 17, 16, 58, 8, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 936, True); alias=default
DEBUG 2024-03-03 09:43:39,766 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 1', 1, '2023-11-17T16:52:11.512276+01:00'::timestamptz, 381, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 1', 1, datetime.datetime(2023, 11, 17, 16, 52, 11, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 381, True); alias=default
DEBUG 2024-03-03 09:43:39,768 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 4', 5, '2023-11-17T16:58:25.512276+01:00'::timestamptz, 438, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 4', 5, datetime.datetime(2023, 11, 17, 16, 58, 25, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 438, True); alias=default
DEBUG 2024-03-03 09:43:39,769 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2023-11-17T16:58:25.512276+01:00'::timestamptz, 953, '["Player 7", "Player 4", "Player 0", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2023, 11, 17, 16, 58, 25, 512276, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 953, <psycopg2._json.Json object at 0x7f895a05ec90>, '0x0'); alias=default
DEBUG 2024-03-03 09:43:39,770 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,772 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,773 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 09:43:39,773 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,774 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 09:43:39,775 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,776 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 09:43:39,777 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 09:43:39,777 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 09:43:39,779 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 09:43:39,780 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,781 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 09:43:39,782 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,782 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 09:43:39,783 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,784 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,785 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,786 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,787 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,788 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,789 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 09:43:39,790 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,790 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 09:43:39,791 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,792 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 09:43:39,794 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 09:43:39,794 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,795 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 09:43:39,795 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,796 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 09:43:39,797 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,798 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,798 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,799 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,800 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,801 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,801 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 09:43:39,802 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,802 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 09:43:39,803 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,804 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 09:43:39,806 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 09:43:39,806 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,807 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 09:43:39,808 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,809 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 09:43:39,810 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,811 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,811 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,812 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,813 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,814 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,815 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 09:43:39,816 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,816 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 09:43:39,817 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,818 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 09:43:39,819 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 09:43:39,820 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 09:43:39,821 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 09:43:39,822 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 09:43:39,823 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 09:43:39,824 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 09:43:39,825 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,826 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,827 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,828 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,829 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 09:43:39,830 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
