DEBUG 2024-03-03 12:50:35,392 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,393 utils (0.000) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,394 utils (0.000) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,394 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,394 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 12:50:35,403 utils (0.009) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:50:35,404 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,404 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,405 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 12:50:35,407 utils (0.001) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:50:35,408 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 12:50:35,410 utils (0.001) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 12:50:35,410 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,412 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T12:50:35.411048+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 12, 50, 35, 411048, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:50:35,413 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,413 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,414 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 12:50:35,416 utils (0.002) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:50:35,418 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 12:50:35,420 utils (0.002) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 12:50:35,421 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 12:50:35,423 utils (0.002) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:50:35,429 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 12:50:35,432 utils (0.003) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:50:35,433 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 12:50:35,434 utils (0.001) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:50:35,434 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 12:50:35,435 utils (0.001) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:50:35,435 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 12:50:35,436 utils (0.001) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 12:50:35,436 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 12:50:35,437 utils (0.001) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 12:50:35,437 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 12:50:35,438 utils (0.001) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 12:50:35,438 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 12:50:35,440 utils (0.001) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 12:50:35,440 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 12:50:35,442 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 12:50:35,443 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 12:50:35,444 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 12:50:35,444 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 12:50:35,445 utils (0.000) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 12:50:35,445 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 12:50:35,446 utils (0.001) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 12:50:35,446 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 12:50:35,447 utils (0.001) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 12:50:35,447 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 12:50:35,448 utils (0.001) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 12:50:35,448 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 12:50:35,449 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 12:50:35,449 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 12:50:35,450 utils (0.000) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 12:50:35,450 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 12:50:35,450 utils (0.000) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 12:50:35,450 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 12:50:35,451 utils (0.001) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 12:50:35,451 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 12:50:35,452 utils (0.001) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 12:50:35,452 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 12:50:35,453 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 12:50:35,453 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 12:50:35,453 utils (0.000) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 12:50:35,453 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 12:50:35,453 utils (0.000) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 12:50:35,454 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 12:50:35,454 utils (0.001) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 12:50:35,454 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 12:50:35,455 utils (0.001) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 12:50:35,456 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,459 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,460 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T12:50:35.459659+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 12, 50, 35, 459659, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:50:35,461 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,465 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 12:50:35,468 utils (0.002) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:50:35,468 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 12:50:35,468 utils (0.000) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 12:50:35,468 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 12:50:35,469 utils (0.000) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 12:50:35,469 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 12:50:35,470 utils (0.001) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 12:50:35,470 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 12:50:35,471 utils (0.001) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 12:50:35,472 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,473 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,474 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T12:50:35.473684+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 12, 50, 35, 473684, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:50:35,475 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,481 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,482 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T12:50:35.481939+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 12, 50, 35, 481939, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:50:35,482 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,482 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,487 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,488 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T12:50:35.487635+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 12, 50, 35, 487635, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:50:35,488 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,488 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,494 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 12:50:35,495 utils (0.001) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 12:50:35,501 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 12:50:35,502 utils (0.000) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 12:50:35,503 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,503 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T12:50:35.503328+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 12, 50, 35, 503328, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:50:35,504 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,504 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,510 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 12:50:35,511 utils (0.001) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 12:50:35,513 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,513 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T12:50:35.513153+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 12, 50, 35, 513153, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:50:35,513 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,514 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,520 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 12:50:35,520 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 12:50:35,521 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,522 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T12:50:35.521595+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 12, 50, 35, 521595, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:50:35,523 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,523 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,531 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,532 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T12:50:35.531767+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 12, 50, 35, 531767, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:50:35,532 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,532 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,536 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 12:50:35,537 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 12:50:35,537 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,538 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T12:50:35.537873+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 12, 50, 35, 537873, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:50:35,538 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,539 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,540 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,541 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T12:50:35.540531+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 12, 50, 35, 540531, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:50:35,542 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,542 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,549 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,549 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T12:50:35.549649+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 12, 50, 35, 549649, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:50:35,550 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,550 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,554 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 12:50:35,557 utils (0.003) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 12:50:35,560 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,561 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T12:50:35.560771+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 12, 50, 35, 560771, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:50:35,562 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,562 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,566 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 12:50:35,567 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 12:50:35,567 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,568 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T12:50:35.568035+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 12, 50, 35, 568035, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:50:35,568 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,568 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,573 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 12:50:35,575 utils (0.002) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 12:50:35,578 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,579 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T12:50:35.578510+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 12, 50, 35, 578510, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:50:35,579 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,579 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,584 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,584 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T12:50:35.584472+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 12, 50, 35, 584472, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:50:35,585 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,585 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,589 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 12:50:35,590 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 12:50:35,592 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,593 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T12:50:35.592755+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 12, 50, 35, 592755, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:50:35,594 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,595 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,596 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 12:50:35,599 utils (0.003) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:50:35,600 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 12:50:35,602 utils (0.002) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 12:50:35,603 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,603 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T12:50:35.603575+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 12, 50, 35, 603575, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:50:35,604 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,604 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,605 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 12:50:35,609 utils (0.003) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 12:50:35,610 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 12:50:35,612 utils (0.002) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 12:50:35,612 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 12:50:35,613 utils (0.001) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 12:50:35,614 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,615 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,615 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T12:50:35.615412+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 12, 50, 35, 615412, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 12:50:35,616 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 12:50:35,617 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,627 utils (0.002) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 12:50:35,627 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,628 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 12:50:35,629 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,629 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 12:50:35,631 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 12:50:35,632 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,632 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 12:50:35,633 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,633 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 12:50:35,634 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,635 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,635 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,651 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 3, 'Player 14', 11, '2023-11-23T15:54:33.635359+01:00'::timestamptz, 988, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 3, 'Player 14', 11, datetime.datetime(2023, 11, 23, 15, 54, 33, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 988, False); alias=default
DEBUG 2024-03-03 12:50:35,652 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 11', 4, '2023-11-10T12:59:50.635359+01:00'::timestamptz, 195, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 11', 4, datetime.datetime(2023, 11, 10, 12, 59, 50, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 195, False); alias=default
DEBUG 2024-03-03 12:50:35,653 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 1, 'Player 9', 11, '2023-11-06T10:26:31.635359+01:00'::timestamptz, 162, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 1, 'Player 9', 11, datetime.datetime(2023, 11, 6, 10, 26, 31, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 162, False); alias=default
DEBUG 2024-03-03 12:50:35,653 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 7', 9, '2023-12-31T15:34:02.635359+01:00'::timestamptz, 71, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 7', 9, datetime.datetime(2023, 12, 31, 15, 34, 2, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 71, False); alias=default
DEBUG 2024-03-03 12:50:35,654 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 9, 'Player 12', 11, '2023-12-04T21:32:01.635359+01:00'::timestamptz, 50, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 9, 'Player 12', 11, datetime.datetime(2023, 12, 4, 21, 32, 1, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 50, False); alias=default
DEBUG 2024-03-03 12:50:35,655 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 1', 10, '2024-01-04T15:41:18.635359+01:00'::timestamptz, 979, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 1', 10, datetime.datetime(2024, 1, 4, 15, 41, 18, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 979, False); alias=default
DEBUG 2024-03-03 12:50:35,655 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 0', 3, '2023-12-09T18:23:06.635359+01:00'::timestamptz, 504, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 0', 3, datetime.datetime(2023, 12, 9, 18, 23, 6, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 504, False); alias=default
DEBUG 2024-03-03 12:50:35,656 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 13', 8, '2024-01-07T14:12:33.635359+01:00'::timestamptz, 6, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 13', 8, datetime.datetime(2024, 1, 7, 14, 12, 33, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 6, False); alias=default
DEBUG 2024-03-03 12:50:35,657 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 14', 0, '2023-12-12T09:14:34.635359+01:00'::timestamptz, 509, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 14', 0, datetime.datetime(2023, 12, 12, 9, 14, 34, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 509, False); alias=default
DEBUG 2024-03-03 12:50:35,657 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 7, 'Player 11', 11, '2023-11-05T23:02:48.635359+01:00'::timestamptz, 860, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 7, 'Player 11', 11, datetime.datetime(2023, 11, 5, 23, 2, 48, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 860, False); alias=default
DEBUG 2024-03-03 12:50:35,658 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 9', 2, '2024-01-07T19:53:58.635359+01:00'::timestamptz, 242, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 9', 2, datetime.datetime(2024, 1, 7, 19, 53, 58, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 242, False); alias=default
DEBUG 2024-03-03 12:50:35,659 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 2', 7, '2023-11-10T12:20:44.635359+01:00'::timestamptz, 314, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 2', 7, datetime.datetime(2023, 11, 10, 12, 20, 44, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 314, False); alias=default
DEBUG 2024-03-03 12:50:35,660 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 4', 7, '2024-01-16T10:51:50.635359+01:00'::timestamptz, 814, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 4', 7, datetime.datetime(2024, 1, 16, 10, 51, 50, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 814, False); alias=default
DEBUG 2024-03-03 12:50:35,660 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 2', 3, '2024-01-06T00:12:57.635359+01:00'::timestamptz, 850, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 2', 3, datetime.datetime(2024, 1, 6, 0, 12, 57, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 850, False); alias=default
DEBUG 2024-03-03 12:50:35,661 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 5', 6, '2024-02-07T12:09:31.635359+01:00'::timestamptz, 326, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 5', 6, datetime.datetime(2024, 2, 7, 12, 9, 31, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 326, False); alias=default
DEBUG 2024-03-03 12:50:35,662 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 2', 5, '2023-12-30T08:02:01.635359+01:00'::timestamptz, 942, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 2', 5, datetime.datetime(2023, 12, 30, 8, 2, 1, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 942, False); alias=default
DEBUG 2024-03-03 12:50:35,662 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 2, 'Player 20', 11, '2023-12-01T13:02:29.635359+01:00'::timestamptz, 17, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 2, 'Player 20', 11, datetime.datetime(2023, 12, 1, 13, 2, 29, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 17, False); alias=default
DEBUG 2024-03-03 12:50:35,663 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 0', 4, '2023-12-19T16:33:29.635359+01:00'::timestamptz, 851, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 0', 4, datetime.datetime(2023, 12, 19, 16, 33, 29, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 851, False); alias=default
DEBUG 2024-03-03 12:50:35,664 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 5, 'Player 17', 11, '2024-01-26T22:26:52.635359+01:00'::timestamptz, 521, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 5, 'Player 17', 11, datetime.datetime(2024, 1, 26, 22, 26, 52, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 521, False); alias=default
DEBUG 2024-03-03 12:50:35,664 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 8', 4, '2024-02-26T18:08:02.635359+01:00'::timestamptz, 433, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 8', 4, datetime.datetime(2024, 2, 26, 18, 8, 2, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 433, False); alias=default
DEBUG 2024-03-03 12:50:35,665 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 17', 10, '2023-11-08T15:19:55.635359+01:00'::timestamptz, 48, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 17', 10, datetime.datetime(2023, 11, 8, 15, 19, 55, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 48, False); alias=default
DEBUG 2024-03-03 12:50:35,666 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 24', 4, '2024-02-15T03:30:34.635359+01:00'::timestamptz, 844, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 24', 4, datetime.datetime(2024, 2, 15, 3, 30, 34, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 844, False); alias=default
DEBUG 2024-03-03 12:50:35,666 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 25', 0, '2024-01-12T01:50:25.635359+01:00'::timestamptz, 234, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 25', 0, datetime.datetime(2024, 1, 12, 1, 50, 25, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 234, False); alias=default
DEBUG 2024-03-03 12:50:35,667 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 7, 'Player 16', 11, '2023-11-16T06:24:39.635359+01:00'::timestamptz, 577, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 7, 'Player 16', 11, datetime.datetime(2023, 11, 16, 6, 24, 39, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 577, False); alias=default
DEBUG 2024-03-03 12:50:35,667 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 9, 'Player 13', 11, '2024-01-28T05:32:30.635359+01:00'::timestamptz, 552, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 9, 'Player 13', 11, datetime.datetime(2024, 1, 28, 5, 32, 30, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 552, False); alias=default
DEBUG 2024-03-03 12:50:35,668 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 5, 'Player 23', 11, '2023-11-19T12:42:33.635359+01:00'::timestamptz, 148, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 5, 'Player 23', 11, datetime.datetime(2023, 11, 19, 12, 42, 33, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 148, False); alias=default
DEBUG 2024-03-03 12:50:35,669 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 22', 1, '2023-12-11T19:58:49.635359+01:00'::timestamptz, 992, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 22', 1, datetime.datetime(2023, 12, 11, 19, 58, 49, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 992, False); alias=default
DEBUG 2024-03-03 12:50:35,669 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 26', 8, '2024-02-12T23:45:47.635359+01:00'::timestamptz, 5, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 26', 8, datetime.datetime(2024, 2, 12, 23, 45, 47, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 5, False); alias=default
DEBUG 2024-03-03 12:50:35,670 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 11', 7, '2023-12-22T05:33:00.635359+01:00'::timestamptz, 944, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 11', 7, datetime.datetime(2023, 12, 22, 5, 33, 0, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 944, False); alias=default
DEBUG 2024-03-03 12:50:35,671 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 5', 4, '2023-12-11T10:49:55.635359+01:00'::timestamptz, 884, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 5', 4, datetime.datetime(2023, 12, 11, 10, 49, 55, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 884, False); alias=default
DEBUG 2024-03-03 12:50:35,671 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 5, 'Player 0', 11, '2023-12-02T13:53:15.635359+01:00'::timestamptz, 186, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 5, 'Player 0', 11, datetime.datetime(2023, 12, 2, 13, 53, 15, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 186, False); alias=default
DEBUG 2024-03-03 12:50:35,672 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 6, 'Player 13', 11, '2023-12-23T05:16:21.635359+01:00'::timestamptz, 454, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 6, 'Player 13', 11, datetime.datetime(2023, 12, 23, 5, 16, 21, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 454, False); alias=default
DEBUG 2024-03-03 12:50:35,673 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 5, 'Player 23', 11, '2023-11-24T23:32:06.635359+01:00'::timestamptz, 547, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 5, 'Player 23', 11, datetime.datetime(2023, 11, 24, 23, 32, 6, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 547, False); alias=default
DEBUG 2024-03-03 12:50:35,674 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 3, 'Player 27', 11, '2023-12-15T18:50:39.635359+01:00'::timestamptz, 390, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 3, 'Player 27', 11, datetime.datetime(2023, 12, 15, 18, 50, 39, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 390, False); alias=default
DEBUG 2024-03-03 12:50:35,674 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 17', 2, '2023-12-13T00:04:51.635359+01:00'::timestamptz, 386, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 17', 2, datetime.datetime(2023, 12, 13, 0, 4, 51, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 386, False); alias=default
DEBUG 2024-03-03 12:50:35,675 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 11, 'Player 25', 6, '2023-12-04T21:25:57.635359+01:00'::timestamptz, 960, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 11, 'Player 25', 6, datetime.datetime(2023, 12, 4, 21, 25, 57, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 960, False); alias=default
DEBUG 2024-03-03 12:50:35,675 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 0, 'Player 31', 11, '2024-02-24T14:42:38.635359+01:00'::timestamptz, 494, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 0, 'Player 31', 11, datetime.datetime(2024, 2, 24, 14, 42, 38, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 494, False); alias=default
DEBUG 2024-03-03 12:50:35,676 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 19', 8, '2023-11-15T06:12:57.635359+01:00'::timestamptz, 539, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 19', 8, datetime.datetime(2023, 11, 15, 6, 12, 57, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 539, False); alias=default
DEBUG 2024-03-03 12:50:35,677 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 2, 'Player 14', 11, '2024-01-18T12:28:25.635359+01:00'::timestamptz, 337, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 2, 'Player 14', 11, datetime.datetime(2024, 1, 18, 12, 28, 25, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 337, False); alias=default
DEBUG 2024-03-03 12:50:35,677 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 10, 'Player 6', 11, '2023-12-11T06:25:34.635359+01:00'::timestamptz, 598, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 10, 'Player 6', 11, datetime.datetime(2023, 12, 11, 6, 25, 34, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 598, False); alias=default
DEBUG 2024-03-03 12:50:35,678 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 15', 3, '2024-02-23T19:16:04.635359+01:00'::timestamptz, 499, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 15', 3, datetime.datetime(2024, 2, 23, 19, 16, 4, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 499, False); alias=default
DEBUG 2024-03-03 12:50:35,679 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 3, 'Player 10', 11, '2024-02-09T03:06:39.635359+01:00'::timestamptz, 194, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 3, 'Player 10', 11, datetime.datetime(2024, 2, 9, 3, 6, 39, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 194, False); alias=default
DEBUG 2024-03-03 12:50:35,679 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 26', 9, '2024-02-02T05:44:38.635359+01:00'::timestamptz, 214, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 26', 9, datetime.datetime(2024, 2, 2, 5, 44, 38, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 214, False); alias=default
DEBUG 2024-03-03 12:50:35,680 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 11, 'Player 22', 10, '2023-11-17T12:32:10.635359+01:00'::timestamptz, 531, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 11, 'Player 22', 10, datetime.datetime(2023, 11, 17, 12, 32, 10, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 531, False); alias=default
DEBUG 2024-03-03 12:50:35,680 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 9, 'Player 32', 11, '2023-12-25T20:48:36.635359+01:00'::timestamptz, 837, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 9, 'Player 32', 11, datetime.datetime(2023, 12, 25, 20, 48, 36, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 837, False); alias=default
DEBUG 2024-03-03 12:50:35,681 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 1, 'Player 3', 11, '2023-12-02T01:18:35.635359+01:00'::timestamptz, 554, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 1, 'Player 3', 11, datetime.datetime(2023, 12, 2, 1, 18, 35, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 554, False); alias=default
DEBUG 2024-03-03 12:50:35,682 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 15', 0, '2023-12-11T16:14:41.635359+01:00'::timestamptz, 169, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 15', 0, datetime.datetime(2023, 12, 11, 16, 14, 41, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 169, False); alias=default
DEBUG 2024-03-03 12:50:35,682 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 12', 6, '2024-01-12T11:42:24.635359+01:00'::timestamptz, 657, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 12', 6, datetime.datetime(2024, 1, 12, 11, 42, 24, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 657, False); alias=default
DEBUG 2024-03-03 12:50:35,683 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 7, 'Player 12', 11, '2024-02-07T20:14:20.635359+01:00'::timestamptz, 62, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 7, 'Player 12', 11, datetime.datetime(2024, 2, 7, 20, 14, 20, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 62, False); alias=default
DEBUG 2024-03-03 12:50:35,683 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 4, 'Player 17', 11, '2024-02-17T20:55:20.635359+01:00'::timestamptz, 531, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 4, 'Player 17', 11, datetime.datetime(2024, 2, 17, 20, 55, 20, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 531, False); alias=default
DEBUG 2024-03-03 12:50:35,684 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 6', 8, '2023-11-06T13:49:37.635359+01:00'::timestamptz, 638, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 6', 8, datetime.datetime(2023, 11, 6, 13, 49, 37, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 638, False); alias=default
DEBUG 2024-03-03 12:50:35,685 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 29', 9, '2023-12-11T11:26:33.635359+01:00'::timestamptz, 541, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 29', 9, datetime.datetime(2023, 12, 11, 11, 26, 33, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 541, False); alias=default
DEBUG 2024-03-03 12:50:35,685 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 7', 8, '2024-02-22T09:57:02.635359+01:00'::timestamptz, 114, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 7', 8, datetime.datetime(2024, 2, 22, 9, 57, 2, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 114, False); alias=default
DEBUG 2024-03-03 12:50:35,686 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 11, 'Player 2', 0, '2023-12-10T13:56:38.635359+01:00'::timestamptz, 937, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 11, 'Player 2', 0, datetime.datetime(2023, 12, 10, 13, 56, 38, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 937, False); alias=default
DEBUG 2024-03-03 12:50:35,687 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 35', 6, '2024-01-19T20:42:25.635359+01:00'::timestamptz, 217, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 35', 6, datetime.datetime(2024, 1, 19, 20, 42, 25, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 217, False); alias=default
DEBUG 2024-03-03 12:50:35,687 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 5, 'Player 33', 11, '2024-02-02T20:54:28.635359+01:00'::timestamptz, 282, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 5, 'Player 33', 11, datetime.datetime(2024, 2, 2, 20, 54, 28, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 282, False); alias=default
DEBUG 2024-03-03 12:50:35,688 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 5', 7, '2024-02-08T19:40:48.635359+01:00'::timestamptz, 413, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 5', 7, datetime.datetime(2024, 2, 8, 19, 40, 48, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 413, False); alias=default
DEBUG 2024-03-03 12:50:35,688 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 11, 'Player 39', 0, '2023-12-09T18:34:51.635359+01:00'::timestamptz, 447, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 11, 'Player 39', 0, datetime.datetime(2023, 12, 9, 18, 34, 51, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 447, False); alias=default
DEBUG 2024-03-03 12:50:35,689 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 11, 'Player 20', 4, '2024-01-05T22:34:23.635359+01:00'::timestamptz, 742, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 11, 'Player 20', 4, datetime.datetime(2024, 1, 5, 22, 34, 23, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 742, False); alias=default
DEBUG 2024-03-03 12:50:35,690 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 33', 8, '2024-01-18T02:58:41.635359+01:00'::timestamptz, 528, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 33', 8, datetime.datetime(2024, 1, 18, 2, 58, 41, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 528, False); alias=default
DEBUG 2024-03-03 12:50:35,690 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 11, 'Player 17', 7, '2024-01-02T19:57:08.635359+01:00'::timestamptz, 629, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 11, 'Player 17', 7, datetime.datetime(2024, 1, 2, 19, 57, 8, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 629, False); alias=default
DEBUG 2024-03-03 12:50:35,691 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 6, 'Player 22', 11, '2024-02-25T02:52:43.635359+01:00'::timestamptz, 846, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 6, 'Player 22', 11, datetime.datetime(2024, 2, 25, 2, 52, 43, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 846, False); alias=default
DEBUG 2024-03-03 12:50:35,692 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 11, 'Player 15', 7, '2023-12-30T23:45:51.635359+01:00'::timestamptz, 46, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 11, 'Player 15', 7, datetime.datetime(2023, 12, 30, 23, 45, 51, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 46, False); alias=default
DEBUG 2024-03-03 12:50:35,692 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 11, 'Player 34', 1, '2023-11-08T23:39:00.635359+01:00'::timestamptz, 727, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 11, 'Player 34', 1, datetime.datetime(2023, 11, 8, 23, 39, 0, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 727, False); alias=default
DEBUG 2024-03-03 12:50:35,693 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 1', 9, '2023-11-12T01:57:53.635359+01:00'::timestamptz, 751, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 1', 9, datetime.datetime(2023, 11, 12, 1, 57, 53, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 751, False); alias=default
DEBUG 2024-03-03 12:50:35,693 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 17', 0, '2023-11-06T09:13:06.635359+01:00'::timestamptz, 764, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 17', 0, datetime.datetime(2023, 11, 6, 9, 13, 6, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 764, False); alias=default
DEBUG 2024-03-03 12:50:35,694 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 6, 'Player 34', 11, '2023-12-24T09:37:57.635359+01:00'::timestamptz, 651, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 6, 'Player 34', 11, datetime.datetime(2023, 12, 24, 9, 37, 57, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 651, False); alias=default
DEBUG 2024-03-03 12:50:35,695 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 21', 10, '2023-11-09T11:05:43.635359+01:00'::timestamptz, 394, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 21', 10, datetime.datetime(2023, 11, 9, 11, 5, 43, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 394, False); alias=default
DEBUG 2024-03-03 12:50:35,695 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 11, 'Player 7', 4, '2024-03-03T14:49:17.635359+01:00'::timestamptz, 985, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 11, 'Player 7', 4, datetime.datetime(2024, 3, 3, 14, 49, 17, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 985, False); alias=default
DEBUG 2024-03-03 12:50:35,696 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 48', 0, 'Player 8', 11, '2023-11-27T15:41:57.635359+01:00'::timestamptz, 265, false) RETURNING "pong_gamedata"."id"; args=('Player 48', 0, 'Player 8', 11, datetime.datetime(2023, 11, 27, 15, 41, 57, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 265, False); alias=default
DEBUG 2024-03-03 12:50:35,697 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 2, 'Player 28', 11, '2023-12-01T00:31:08.635359+01:00'::timestamptz, 607, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 2, 'Player 28', 11, datetime.datetime(2023, 12, 1, 0, 31, 8, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 607, False); alias=default
DEBUG 2024-03-03 12:50:35,697 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 1, 'Player 20', 11, '2024-01-16T12:33:58.635359+01:00'::timestamptz, 129, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 1, 'Player 20', 11, datetime.datetime(2024, 1, 16, 12, 33, 58, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 129, False); alias=default
DEBUG 2024-03-03 12:50:35,698 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 2, 'Player 19', 11, '2023-11-03T05:15:59.635359+01:00'::timestamptz, 257, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 2, 'Player 19', 11, datetime.datetime(2023, 11, 3, 5, 15, 59, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 257, False); alias=default
DEBUG 2024-03-03 12:50:35,699 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 6, 'Player 39', 11, '2023-12-15T12:37:56.635359+01:00'::timestamptz, 767, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 6, 'Player 39', 11, datetime.datetime(2023, 12, 15, 12, 37, 56, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 767, False); alias=default
DEBUG 2024-03-03 12:50:35,699 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 49', 11, 'Player 0', 6, '2024-01-02T16:34:34.635359+01:00'::timestamptz, 461, false) RETURNING "pong_gamedata"."id"; args=('Player 49', 11, 'Player 0', 6, datetime.datetime(2024, 1, 2, 16, 34, 34, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 461, False); alias=default
DEBUG 2024-03-03 12:50:35,700 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 0, 'Player 46', 11, '2024-01-21T19:22:46.635359+01:00'::timestamptz, 843, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 0, 'Player 46', 11, datetime.datetime(2024, 1, 21, 19, 22, 46, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 843, False); alias=default
DEBUG 2024-03-03 12:50:35,700 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 7, 'Player 30', 11, '2023-12-04T06:21:15.635359+01:00'::timestamptz, 175, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 7, 'Player 30', 11, datetime.datetime(2023, 12, 4, 6, 21, 15, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 175, False); alias=default
DEBUG 2024-03-03 12:50:35,701 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 1, 'Player 24', 11, '2023-12-22T22:23:40.635359+01:00'::timestamptz, 315, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 1, 'Player 24', 11, datetime.datetime(2023, 12, 22, 22, 23, 40, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 315, False); alias=default
DEBUG 2024-03-03 12:50:35,702 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 54', 11, 'Player 11', 9, '2024-01-07T22:39:45.635359+01:00'::timestamptz, 90, false) RETURNING "pong_gamedata"."id"; args=('Player 54', 11, 'Player 11', 9, datetime.datetime(2024, 1, 7, 22, 39, 45, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 90, False); alias=default
DEBUG 2024-03-03 12:50:35,702 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 7, 'Player 41', 11, '2023-12-26T21:46:20.635359+01:00'::timestamptz, 103, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 7, 'Player 41', 11, datetime.datetime(2023, 12, 26, 21, 46, 20, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 103, False); alias=default
DEBUG 2024-03-03 12:50:35,703 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 7', 7, '2024-02-14T12:43:54.635359+01:00'::timestamptz, 876, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 7', 7, datetime.datetime(2024, 2, 14, 12, 43, 54, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 876, False); alias=default
DEBUG 2024-03-03 12:50:35,704 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 37', 9, '2023-11-09T09:54:54.635359+01:00'::timestamptz, 879, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 37', 9, datetime.datetime(2023, 11, 9, 9, 54, 54, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 879, False); alias=default
DEBUG 2024-03-03 12:50:35,704 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 50', 0, 'Player 51', 11, '2023-11-09T11:24:41.635359+01:00'::timestamptz, 499, false) RETURNING "pong_gamedata"."id"; args=('Player 50', 0, 'Player 51', 11, datetime.datetime(2023, 11, 9, 11, 24, 41, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 499, False); alias=default
DEBUG 2024-03-03 12:50:35,705 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 1', 4, '2024-01-07T02:31:30.635359+01:00'::timestamptz, 45, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 1', 4, datetime.datetime(2024, 1, 7, 2, 31, 30, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 45, False); alias=default
DEBUG 2024-03-03 12:50:35,705 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 4, 'Player 1', 11, '2024-01-15T14:13:26.635359+01:00'::timestamptz, 525, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 4, 'Player 1', 11, datetime.datetime(2024, 1, 15, 14, 13, 26, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 525, False); alias=default
DEBUG 2024-03-03 12:50:35,706 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 37', 8, '2023-11-11T20:43:37.635359+01:00'::timestamptz, 309, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 37', 8, datetime.datetime(2023, 11, 11, 20, 43, 37, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 309, False); alias=default
DEBUG 2024-03-03 12:50:35,707 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 55', 11, 'Player 10', 8, '2024-02-11T10:09:42.635359+01:00'::timestamptz, 450, false) RETURNING "pong_gamedata"."id"; args=('Player 55', 11, 'Player 10', 8, datetime.datetime(2024, 2, 11, 10, 9, 42, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 450, False); alias=default
DEBUG 2024-03-03 12:50:35,707 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 3, 'Player 11', 11, '2024-02-09T12:20:00.635359+01:00'::timestamptz, 277, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 3, 'Player 11', 11, datetime.datetime(2024, 2, 9, 12, 20, 0, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 277, False); alias=default
DEBUG 2024-03-03 12:50:35,708 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 57', 11, 'Player 51', 8, '2023-12-15T10:42:16.635359+01:00'::timestamptz, 299, false) RETURNING "pong_gamedata"."id"; args=('Player 57', 11, 'Player 51', 8, datetime.datetime(2023, 12, 15, 10, 42, 16, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 299, False); alias=default
DEBUG 2024-03-03 12:50:35,709 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 11, 'Player 7', 6, '2023-12-23T00:49:34.635359+01:00'::timestamptz, 379, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 11, 'Player 7', 6, datetime.datetime(2023, 12, 23, 0, 49, 34, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 379, False); alias=default
DEBUG 2024-03-03 12:50:35,709 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 11, 'Player 17', 1, '2023-11-04T22:28:14.635359+01:00'::timestamptz, 140, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 11, 'Player 17', 1, datetime.datetime(2023, 11, 4, 22, 28, 14, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 140, False); alias=default
DEBUG 2024-03-03 12:50:35,710 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 46', 11, 'Player 31', 10, '2024-02-11T20:36:42.635359+01:00'::timestamptz, 477, false) RETURNING "pong_gamedata"."id"; args=('Player 46', 11, 'Player 31', 10, datetime.datetime(2024, 2, 11, 20, 36, 42, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 477, False); alias=default
DEBUG 2024-03-03 12:50:35,710 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 11, 'Player 28', 2, '2024-01-27T08:12:00.635359+01:00'::timestamptz, 624, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 11, 'Player 28', 2, datetime.datetime(2024, 1, 27, 8, 12, 0, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 624, False); alias=default
DEBUG 2024-03-03 12:50:35,711 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 6, 'Player 3', 11, '2023-12-16T14:42:53.635359+01:00'::timestamptz, 750, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 6, 'Player 3', 11, datetime.datetime(2023, 12, 16, 14, 42, 53, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 750, False); alias=default
DEBUG 2024-03-03 12:50:35,712 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 49', 11, 'Player 53', 7, '2023-11-23T11:08:28.635359+01:00'::timestamptz, 396, false) RETURNING "pong_gamedata"."id"; args=('Player 49', 11, 'Player 53', 7, datetime.datetime(2023, 11, 23, 11, 8, 28, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 396, False); alias=default
DEBUG 2024-03-03 12:50:35,712 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 11, 'Player 30', 5, '2023-11-27T19:37:54.635359+01:00'::timestamptz, 876, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 11, 'Player 30', 5, datetime.datetime(2023, 11, 27, 19, 37, 54, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 876, False); alias=default
DEBUG 2024-03-03 12:50:35,713 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 7, 'Player 44', 11, '2024-01-27T01:23:44.635359+01:00'::timestamptz, 171, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 7, 'Player 44', 11, datetime.datetime(2024, 1, 27, 1, 23, 44, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 171, False); alias=default
DEBUG 2024-03-03 12:50:35,714 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 6, 'Player 3', 11, '2023-12-24T16:12:35.635359+01:00'::timestamptz, 186, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 6, 'Player 3', 11, datetime.datetime(2023, 12, 24, 16, 12, 35, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 186, False); alias=default
DEBUG 2024-03-03 12:50:35,714 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 61', 8, 'Player 6', 11, '2023-11-23T08:37:51.635359+01:00'::timestamptz, 991, false) RETURNING "pong_gamedata"."id"; args=('Player 61', 8, 'Player 6', 11, datetime.datetime(2023, 11, 23, 8, 37, 51, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 991, False); alias=default
DEBUG 2024-03-03 12:50:35,715 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 53', 2, '2024-02-01T19:37:43.635359+01:00'::timestamptz, 828, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 53', 2, datetime.datetime(2024, 2, 1, 19, 37, 43, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 828, False); alias=default
DEBUG 2024-03-03 12:50:35,716 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,716 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 8, 'Player 10', 11, '2023-12-18T21:05:16.635359+01:00'::timestamptz, 669, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 8, 'Player 10', 11, datetime.datetime(2023, 12, 18, 21, 5, 16, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 669, True); alias=default
DEBUG 2024-03-03 12:50:35,717 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 3, 'Player 11', 11, '2023-12-18T21:03:44.635359+01:00'::timestamptz, 837, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 3, 'Player 11', 11, datetime.datetime(2023, 12, 18, 21, 3, 44, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 837, True); alias=default
DEBUG 2024-03-03 12:50:35,717 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 11', 7, '2023-12-18T21:05:33.635359+01:00'::timestamptz, 248, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 11', 7, datetime.datetime(2023, 12, 18, 21, 5, 33, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 248, True); alias=default
DEBUG 2024-03-03 12:50:35,718 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2023-12-18T21:05:33.635359+01:00'::timestamptz, 946, '["Player 10", "Player 11", "Player 2", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2023, 12, 18, 21, 5, 33, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 946, <psycopg2._json.Json object at 0x7f472cc569f0>, '0x0'); alias=default
DEBUG 2024-03-03 12:50:35,719 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 12', 3, '2023-11-01T05:48:17.635359+01:00'::timestamptz, 930, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 12', 3, datetime.datetime(2023, 11, 1, 5, 48, 17, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 930, True); alias=default
DEBUG 2024-03-03 12:50:35,719 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 15', 8, '2023-11-01T05:48:35.635359+01:00'::timestamptz, 910, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 15', 8, datetime.datetime(2023, 11, 1, 5, 48, 35, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 910, True); alias=default
DEBUG 2024-03-03 12:50:35,720 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 5, 'Player 2', 11, '2023-11-01T05:49:07.635359+01:00'::timestamptz, 739, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 5, 'Player 2', 11, datetime.datetime(2023, 11, 1, 5, 49, 7, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 739, True); alias=default
DEBUG 2024-03-03 12:50:35,721 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2023-11-01T05:49:07.635359+01:00'::timestamptz, 980, '["Player 2", "Player 6", "Player 12", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2023, 11, 1, 5, 49, 7, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 980, <psycopg2._json.Json object at 0x7f472cabe7e0>, '0x0'); alias=default
DEBUG 2024-03-03 12:50:35,721 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 10, 'Player 3', 11, '2023-12-07T15:18:03.635359+01:00'::timestamptz, 976, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 10, 'Player 3', 11, datetime.datetime(2023, 12, 7, 15, 18, 3, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 976, True); alias=default
DEBUG 2024-03-03 12:50:35,722 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 8, 'Player 12', 11, '2023-12-07T15:13:21.635359+01:00'::timestamptz, 707, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 8, 'Player 12', 11, datetime.datetime(2023, 12, 7, 15, 13, 21, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 707, True); alias=default
DEBUG 2024-03-03 12:50:35,723 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 12', 10, '2023-12-07T15:18:13.635359+01:00'::timestamptz, 88, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 12', 10, datetime.datetime(2023, 12, 7, 15, 18, 13, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 88, True); alias=default
DEBUG 2024-03-03 12:50:35,723 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2023-12-07T15:18:13.635359+01:00'::timestamptz, 999, '["Player 3", "Player 12", "Player 16", "Player 13"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2023, 12, 7, 15, 18, 13, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 999, <psycopg2._json.Json object at 0x7f472cabf8c0>, '0x0'); alias=default
DEBUG 2024-03-03 12:50:35,724 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 10, 'Player 1', 11, '2024-01-27T21:40:16.635359+01:00'::timestamptz, 571, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 10, 'Player 1', 11, datetime.datetime(2024, 1, 27, 21, 40, 16, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 571, True); alias=default
DEBUG 2024-03-03 12:50:35,724 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 9', 4, '2024-01-27T21:40:22.635359+01:00'::timestamptz, 349, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 9', 4, datetime.datetime(2024, 1, 27, 21, 40, 22, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 349, True); alias=default
DEBUG 2024-03-03 12:50:35,725 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 1, 'Player 15', 11, '2024-01-27T21:46:42.635359+01:00'::timestamptz, 500, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 1, 'Player 15', 11, datetime.datetime(2024, 1, 27, 21, 46, 42, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 500, True); alias=default
DEBUG 2024-03-03 12:50:35,726 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2024-01-27T21:46:42.635359+01:00'::timestamptz, 957, '["Player 15", "Player 1", "Player 2", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2024, 1, 27, 21, 46, 42, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 957, <psycopg2._json.Json object at 0x7f472cabffe0>, '0x0'); alias=default
DEBUG 2024-03-03 12:50:35,726 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 8, 'Player 3', 11, '2023-12-08T12:35:03.635359+01:00'::timestamptz, 798, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 8, 'Player 3', 11, datetime.datetime(2023, 12, 8, 12, 35, 3, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 798, True); alias=default
DEBUG 2024-03-03 12:50:35,727 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 9, 'Player 9', 11, '2023-12-08T12:32:46.635359+01:00'::timestamptz, 698, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 9, 'Player 9', 11, datetime.datetime(2023, 12, 8, 12, 32, 46, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 698, True); alias=default
DEBUG 2024-03-03 12:50:35,727 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 9', 2, '2023-12-08T12:37:17.635359+01:00'::timestamptz, 858, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 9', 2, datetime.datetime(2023, 12, 8, 12, 37, 17, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 858, True); alias=default
DEBUG 2024-03-03 12:50:35,728 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2023-12-08T12:37:17.635359+01:00'::timestamptz, 969, '["Player 3", "Player 9", "Player 2", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2023, 12, 8, 12, 37, 17, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 969, <psycopg2._json.Json object at 0x7f472cca6570>, '0x0'); alias=default
DEBUG 2024-03-03 12:50:35,729 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 4, 'Player 12', 11, '2023-12-30T12:02:00.635359+01:00'::timestamptz, 755, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 4, 'Player 12', 11, datetime.datetime(2023, 12, 30, 12, 2, 0, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 755, True); alias=default
DEBUG 2024-03-03 12:50:35,729 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 10, 'Player 1', 11, '2023-12-30T12:00:28.635359+01:00'::timestamptz, 264, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 10, 'Player 1', 11, datetime.datetime(2023, 12, 30, 12, 0, 28, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 264, True); alias=default
DEBUG 2024-03-03 12:50:35,730 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 3, 'Player 1', 11, '2023-12-30T12:04:42.635359+01:00'::timestamptz, 731, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 3, 'Player 1', 11, datetime.datetime(2023, 12, 30, 12, 4, 42, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 731, True); alias=default
DEBUG 2024-03-03 12:50:35,730 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2023-12-30T12:04:42.635359+01:00'::timestamptz, 917, '["Player 1", "Player 12", "Player 6", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2023, 12, 30, 12, 4, 42, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 917, <psycopg2._json.Json object at 0x7f472cb28050>, '0x0'); alias=default
DEBUG 2024-03-03 12:50:35,731 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 1, 'Player 13', 11, '2023-12-15T09:29:05.635359+01:00'::timestamptz, 546, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 1, 'Player 13', 11, datetime.datetime(2023, 12, 15, 9, 29, 5, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 546, True); alias=default
DEBUG 2024-03-03 12:50:35,732 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 9, 'Player 6', 11, '2023-12-15T09:23:14.635359+01:00'::timestamptz, 293, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 9, 'Player 6', 11, datetime.datetime(2023, 12, 15, 9, 23, 14, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 293, True); alias=default
DEBUG 2024-03-03 12:50:35,732 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 0, 'Player 6', 11, '2023-12-15T09:30:42.635359+01:00'::timestamptz, 760, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 0, 'Player 6', 11, datetime.datetime(2023, 12, 15, 9, 30, 42, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 760, True); alias=default
DEBUG 2024-03-03 12:50:35,733 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2023-12-15T09:30:42.635359+01:00'::timestamptz, 741, '["Player 6", "Player 13", "Player 14", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2023, 12, 15, 9, 30, 42, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 741, <psycopg2._json.Json object at 0x7f472cad91f0>, '0x0'); alias=default
DEBUG 2024-03-03 12:50:35,733 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 0, 'Player 6', 11, '2024-02-18T06:26:45.635359+01:00'::timestamptz, 628, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 0, 'Player 6', 11, datetime.datetime(2024, 2, 18, 6, 26, 45, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 628, True); alias=default
DEBUG 2024-03-03 12:50:35,734 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 0, 'Player 2', 11, '2024-02-18T06:26:06.635359+01:00'::timestamptz, 859, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 0, 'Player 2', 11, datetime.datetime(2024, 2, 18, 6, 26, 6, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 859, True); alias=default
DEBUG 2024-03-03 12:50:35,735 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 2', 8, '2024-02-18T06:27:32.635359+01:00'::timestamptz, 187, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 2', 8, datetime.datetime(2024, 2, 18, 6, 27, 32, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 187, True); alias=default
DEBUG 2024-03-03 12:50:35,735 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2024-02-18T06:27:32.635359+01:00'::timestamptz, 945, '["Player 6", "Player 2", "Player 0", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2024, 2, 18, 6, 27, 32, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 945, <psycopg2._json.Json object at 0x7f472cadb290>, '0x0'); alias=default
DEBUG 2024-03-03 12:50:35,736 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 5', 4, '2023-11-19T08:19:20.635359+01:00'::timestamptz, 870, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 5', 4, datetime.datetime(2023, 11, 19, 8, 19, 20, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 870, True); alias=default
DEBUG 2024-03-03 12:50:35,736 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 12', 6, '2023-11-19T08:06:05.635359+01:00'::timestamptz, 115, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 12', 6, datetime.datetime(2023, 11, 19, 8, 6, 5, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 115, True); alias=default
DEBUG 2024-03-03 12:50:35,737 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 15', 7, '2023-11-19T08:20:41.635359+01:00'::timestamptz, 766, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 15', 7, datetime.datetime(2023, 11, 19, 8, 20, 41, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 766, True); alias=default
DEBUG 2024-03-03 12:50:35,738 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2023-11-19T08:20:41.635359+01:00'::timestamptz, 991, '["Player 9", "Player 15", "Player 5", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2023, 11, 19, 8, 20, 41, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 991, <psycopg2._json.Json object at 0x7f472cada870>, '0x0'); alias=default
DEBUG 2024-03-03 12:50:35,738 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 10, 'Player 5', 11, '2023-11-20T07:30:29.635359+01:00'::timestamptz, 127, true) RETURNING "pong_gamedata"."id"; args=('Player 18', 10, 'Player 5', 11, datetime.datetime(2023, 11, 20, 7, 30, 29, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 127, True); alias=default
DEBUG 2024-03-03 12:50:35,739 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 4', 5, '2023-11-20T07:26:09.635359+01:00'::timestamptz, 447, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 4', 5, datetime.datetime(2023, 11, 20, 7, 26, 9, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 447, True); alias=default
DEBUG 2024-03-03 12:50:35,740 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 2, 'Player 2', 11, '2023-11-20T07:33:01.635359+01:00'::timestamptz, 757, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 2, 'Player 2', 11, datetime.datetime(2023, 11, 20, 7, 33, 1, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 757, True); alias=default
DEBUG 2024-03-03 12:50:35,740 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2023-11-20T07:33:01.635359+01:00'::timestamptz, 859, '["Player 2", "Player 5", "Player 18", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2023, 11, 20, 7, 33, 1, 635359, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 859, <psycopg2._json.Json object at 0x7f472cada0c0>, '0x0'); alias=default
DEBUG 2024-03-03 12:50:35,741 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,741 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,742 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 12:50:35,742 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,742 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 12:50:35,743 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,743 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 12:50:35,744 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 12:50:35,744 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 12:50:35,745 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 12:50:35,746 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,746 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 12:50:35,747 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,747 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 12:50:35,747 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,748 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,748 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,749 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,749 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,750 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,750 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 12:50:35,750 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,751 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 12:50:35,751 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,751 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 12:50:35,752 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 12:50:35,752 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,753 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 12:50:35,753 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,754 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 12:50:35,754 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,754 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,755 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,755 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,756 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,756 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,757 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 12:50:35,757 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,757 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 12:50:35,758 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,758 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 12:50:35,759 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 12:50:35,759 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,760 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 12:50:35,760 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,760 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 12:50:35,761 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,761 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,762 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,762 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,763 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,763 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,764 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 12:50:35,764 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,764 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 12:50:35,764 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,765 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 12:50:35,765 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 12:50:35,766 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 12:50:35,766 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 12:50:35,767 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 12:50:35,767 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 12:50:35,768 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 12:50:35,768 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,769 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,769 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,769 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,770 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 12:50:35,770 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
