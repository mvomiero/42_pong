DEBUG 2024-02-27 22:17:33,183 utils (0.004) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:17:33,185 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,187 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:17:33,187 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,203 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:17:33,204 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:17:33,205 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,206 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:17:33,207 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 22:17:33,210 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 22:17:33,211 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:17:33,212 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,214 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,216 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,217 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,253 utils (0.010) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 12', 0, '2023-11-14T10:53:56.214742+01:00'::timestamptz, 885, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 12', 0, datetime.datetime(2023, 11, 14, 10, 53, 56, 214742, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 885, True); alias=default
DEBUG 2024-02-27 22:17:33,254 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 3, 'Player 8', 11, '2023-11-14T10:55:02.214742+01:00'::timestamptz, 944, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 3, 'Player 8', 11, datetime.datetime(2023, 11, 14, 10, 55, 2, 214742, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 944, True); alias=default
DEBUG 2024-02-27 22:17:33,256 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 1, 'Player 8', 11, '2023-11-14T10:55:47.214742+01:00'::timestamptz, 840, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 1, 'Player 8', 11, datetime.datetime(2023, 11, 14, 10, 55, 47, 214742, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 840, True); alias=default
DEBUG 2024-02-27 22:17:33,256 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2021, 2022, 2023, '2023-11-14T10:55:47.214742+01:00'::timestamptz, 996, '["Player 8", "Player 14", "Player 12", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2021, 2022, 2023, datetime.datetime(2023, 11, 14, 10, 55, 47, 214742, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 996, <psycopg2._json.Json object at 0x7f911b3b48c0>, '0x0'); alias=default
DEBUG 2024-02-27 22:17:33,258 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 8, 'Player 1', 11, '2023-12-24T13:34:09.214742+01:00'::timestamptz, 230, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 8, 'Player 1', 11, datetime.datetime(2023, 12, 24, 13, 34, 9, 214742, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 230, True); alias=default
DEBUG 2024-02-27 22:17:33,259 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 4, 'Player 9', 11, '2023-12-24T13:43:25.214742+01:00'::timestamptz, 572, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 4, 'Player 9', 11, datetime.datetime(2023, 12, 24, 13, 43, 25, 214742, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 572, True); alias=default
DEBUG 2024-02-27 22:17:33,261 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 9, 'Player 9', 11, '2023-12-24T13:44:46.214742+01:00'::timestamptz, 270, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 9, 'Player 9', 11, datetime.datetime(2023, 12, 24, 13, 44, 46, 214742, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 270, True); alias=default
DEBUG 2024-02-27 22:17:33,261 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2024, 2025, 2026, '2023-12-24T13:44:46.214742+01:00'::timestamptz, 867, '["Player 9", "Player 1", "Player 7", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2024, 2025, 2026, datetime.datetime(2023, 12, 24, 13, 44, 46, 214742, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 867, <psycopg2._json.Json object at 0x7f911876b590>, '0x0'); alias=default
DEBUG 2024-02-27 22:17:33,263 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,264 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,266 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:17:33,267 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 22:17:33,268 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 22:17:33,269 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 22:17:33,270 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 22:17:33,271 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:17:33,272 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,273 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,274 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,275 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,276 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 10, 'Player 8', 11, '2024-01-03T05:25:19.273521+01:00'::timestamptz, 901, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 10, 'Player 8', 11, datetime.datetime(2024, 1, 3, 5, 25, 19, 273521, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 901, True); alias=default
DEBUG 2024-02-27 22:17:33,277 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 12', 8, '2024-01-03T05:25:37.273521+01:00'::timestamptz, 352, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 12', 8, datetime.datetime(2024, 1, 3, 5, 25, 37, 273521, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 352, True); alias=default
DEBUG 2024-02-27 22:17:33,279 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 6, 'Player 0', 11, '2024-01-03T05:26:40.273521+01:00'::timestamptz, 642, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 6, 'Player 0', 11, datetime.datetime(2024, 1, 3, 5, 26, 40, 273521, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 642, True); alias=default
DEBUG 2024-02-27 22:17:33,280 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2027, 2028, 2029, '2024-01-03T05:26:40.273521+01:00'::timestamptz, 982, '["Player 0", "Player 8", "Player 7", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2027, 2028, 2029, datetime.datetime(2024, 1, 3, 5, 26, 40, 273521, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 982, <psycopg2._json.Json object at 0x7f9118590590>, '0x0'); alias=default
DEBUG 2024-02-27 22:17:33,281 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 0, 'Player 8', 11, '2024-01-12T06:50:58.273521+01:00'::timestamptz, 607, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 0, 'Player 8', 11, datetime.datetime(2024, 1, 12, 6, 50, 58, 273521, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 607, True); alias=default
DEBUG 2024-02-27 22:17:33,283 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 10, 'Player 4', 11, '2024-01-12T06:49:56.273521+01:00'::timestamptz, 734, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 10, 'Player 4', 11, datetime.datetime(2024, 1, 12, 6, 49, 56, 273521, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 734, True); alias=default
DEBUG 2024-02-27 22:17:33,285 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 4', 7, '2024-01-12T06:51:58.273521+01:00'::timestamptz, 33, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 4', 7, datetime.datetime(2024, 1, 12, 6, 51, 58, 273521, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 33, True); alias=default
DEBUG 2024-02-27 22:17:33,285 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2030, 2031, 2032, '2024-01-12T06:51:58.273521+01:00'::timestamptz, 856, '["Player 8", "Player 4", "Player 6", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2030, 2031, 2032, datetime.datetime(2024, 1, 12, 6, 51, 58, 273521, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 856, <psycopg2._json.Json object at 0x7f9118590890>, '0x0'); alias=default
DEBUG 2024-02-27 22:17:33,286 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,287 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,288 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:17:33,289 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 22:17:33,290 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 22:17:33,291 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:17:33,292 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,293 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,294 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,295 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,296 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 3, 'Player 2', 11, '2023-12-13T07:06:21.293715+01:00'::timestamptz, 141, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 3, 'Player 2', 11, datetime.datetime(2023, 12, 13, 7, 6, 21, 293715, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 141, True); alias=default
DEBUG 2024-02-27 22:17:33,298 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 10, 'Player 12', 11, '2023-12-13T07:05:06.293715+01:00'::timestamptz, 147, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 10, 'Player 12', 11, datetime.datetime(2023, 12, 13, 7, 5, 6, 293715, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 147, True); alias=default
DEBUG 2024-02-27 22:17:33,300 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 6, 'Player 12', 11, '2023-12-13T07:18:46.293715+01:00'::timestamptz, 326, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 6, 'Player 12', 11, datetime.datetime(2023, 12, 13, 7, 18, 46, 293715, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 326, True); alias=default
DEBUG 2024-02-27 22:17:33,301 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2033, 2034, 2035, '2023-12-13T07:18:46.293715+01:00'::timestamptz, 967, '["Player 12", "Player 2", "Player 8", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2033, 2034, 2035, datetime.datetime(2023, 12, 13, 7, 18, 46, 293715, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 967, <psycopg2._json.Json object at 0x7f91185910a0>, '0x0'); alias=default
DEBUG 2024-02-27 22:17:33,302 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 5, 'Player 2', 11, '2023-12-19T06:37:34.293715+01:00'::timestamptz, 827, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 5, 'Player 2', 11, datetime.datetime(2023, 12, 19, 6, 37, 34, 293715, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 827, True); alias=default
DEBUG 2024-02-27 22:17:33,303 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 11', 10, '2023-12-19T06:29:44.293715+01:00'::timestamptz, 353, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 11', 10, datetime.datetime(2023, 12, 19, 6, 29, 44, 293715, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 353, True); alias=default
DEBUG 2024-02-27 22:17:33,305 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 0, 'Player 0', 11, '2023-12-19T06:38:09.293715+01:00'::timestamptz, 593, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 0, 'Player 0', 11, datetime.datetime(2023, 12, 19, 6, 38, 9, 293715, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 593, True); alias=default
DEBUG 2024-02-27 22:17:33,305 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2036, 2037, 2038, '2023-12-19T06:38:09.293715+01:00'::timestamptz, 862, '["Player 0", "Player 2", "Player 5", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2036, 2037, 2038, datetime.datetime(2023, 12, 19, 6, 38, 9, 293715, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 862, <psycopg2._json.Json object at 0x7f9118592210>, '0x0'); alias=default
DEBUG 2024-02-27 22:17:33,306 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,307 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,308 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:17:33,309 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 22:17:33,310 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 22:17:33,311 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:17:33,312 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,312 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,313 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,315 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,317 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 10, 'Player 12', 11, '2023-11-29T23:48:33.313158+01:00'::timestamptz, 876, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 10, 'Player 12', 11, datetime.datetime(2023, 11, 29, 23, 48, 33, 313158, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 876, True); alias=default
DEBUG 2024-02-27 22:17:33,318 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 7', 8, '2023-11-29T23:42:16.313158+01:00'::timestamptz, 224, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 7', 8, datetime.datetime(2023, 11, 29, 23, 42, 16, 313158, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 224, True); alias=default
DEBUG 2024-02-27 22:17:33,320 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 1, 'Player 1', 11, '2023-11-29T23:50:32.313158+01:00'::timestamptz, 222, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 1, 'Player 1', 11, datetime.datetime(2023, 11, 29, 23, 50, 32, 313158, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 222, True); alias=default
DEBUG 2024-02-27 22:17:33,321 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2039, 2040, 2041, '2023-11-29T23:50:32.313158+01:00'::timestamptz, 995, '["Player 1", "Player 12", "Player 15", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2039, 2040, 2041, datetime.datetime(2023, 11, 29, 23, 50, 32, 313158, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 995, <psycopg2._json.Json object at 0x7f9118590a40>, '0x0'); alias=default
DEBUG 2024-02-27 22:17:33,322 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 7', 8, '2024-02-15T10:00:38.313158+01:00'::timestamptz, 391, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 7', 8, datetime.datetime(2024, 2, 15, 10, 0, 38, 313158, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 391, True); alias=default
DEBUG 2024-02-27 22:17:33,323 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 6', 1, '2024-02-15T10:04:39.313158+01:00'::timestamptz, 641, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 6', 1, datetime.datetime(2024, 2, 15, 10, 4, 39, 313158, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 641, True); alias=default
DEBUG 2024-02-27 22:17:33,325 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 12', 9, '2024-02-15T10:08:07.313158+01:00'::timestamptz, 542, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 12', 9, datetime.datetime(2024, 2, 15, 10, 8, 7, 313158, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 542, True); alias=default
DEBUG 2024-02-27 22:17:33,325 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2042, 2043, 2044, '2024-02-15T10:08:07.313158+01:00'::timestamptz, 849, '["Player 4", "Player 12", "Player 7", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2042, 2043, 2044, datetime.datetime(2024, 2, 15, 10, 8, 7, 313158, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 849, <psycopg2._json.Json object at 0x7f9118593140>, '0x0'); alias=default
DEBUG 2024-02-27 22:17:33,326 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,327 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,328 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:17:33,329 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 22:17:33,331 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 22:17:33,334 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 22:17:33,335 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:17:33,336 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,337 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,337 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,338 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,340 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 2', 8, '2024-01-03T23:21:41.337203+01:00'::timestamptz, 581, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 2', 8, datetime.datetime(2024, 1, 3, 23, 21, 41, 337203, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 581, True); alias=default
DEBUG 2024-02-27 22:17:33,341 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 5', 10, '2024-01-03T23:22:35.337203+01:00'::timestamptz, 953, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 5', 10, datetime.datetime(2024, 1, 3, 23, 22, 35, 337203, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 953, True); alias=default
DEBUG 2024-02-27 22:17:33,342 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 10, 'Player 9', 11, '2024-01-03T23:22:49.337203+01:00'::timestamptz, 49, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 10, 'Player 9', 11, datetime.datetime(2024, 1, 3, 23, 22, 49, 337203, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 49, True); alias=default
DEBUG 2024-02-27 22:17:33,343 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2045, 2046, 2047, '2024-01-03T23:22:49.337203+01:00'::timestamptz, 967, '["Player 9", "Player 3", "Player 2", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2045, 2046, 2047, datetime.datetime(2024, 1, 3, 23, 22, 49, 337203, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 967, <psycopg2._json.Json object at 0x7f91185919d0>, '0x0'); alias=default
DEBUG 2024-02-27 22:17:33,344 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 0, 'Player 2', 11, '2024-02-25T17:33:27.337203+01:00'::timestamptz, 877, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 0, 'Player 2', 11, datetime.datetime(2024, 2, 25, 17, 33, 27, 337203, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 877, True); alias=default
DEBUG 2024-02-27 22:17:33,346 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 3', 0, '2024-02-25T17:29:15.337203+01:00'::timestamptz, 60, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 3', 0, datetime.datetime(2024, 2, 25, 17, 29, 15, 337203, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 60, True); alias=default
DEBUG 2024-02-27 22:17:33,347 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 10, 'Player 0', 11, '2024-02-25T17:34:42.337203+01:00'::timestamptz, 373, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 10, 'Player 0', 11, datetime.datetime(2024, 2, 25, 17, 34, 42, 337203, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 373, True); alias=default
DEBUG 2024-02-27 22:17:33,348 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2048, 2049, 2050, '2024-02-25T17:34:42.337203+01:00'::timestamptz, 952, '["Player 0", "Player 2", "Player 9", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2048, 2049, 2050, datetime.datetime(2024, 2, 25, 17, 34, 42, 337203, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 952, <psycopg2._json.Json object at 0x7f91185917f0>, '0x0'); alias=default
DEBUG 2024-02-27 22:17:33,350 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:17:33,351 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
