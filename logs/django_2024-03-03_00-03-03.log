DEBUG 2024-03-03 00:03:04,951 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:04,953 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:04,954 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:04,954 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:04,954 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 00:03:04,968 utils (0.014) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:03:04,970 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:04,970 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:04,971 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 00:03:04,974 utils (0.003) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:03:04,976 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 00:03:04,978 utils (0.002) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 00:03:04,979 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:04,982 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T00:03:04.980170+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 0, 3, 4, 980170, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:03:04,983 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:04,983 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:04,985 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 00:03:04,988 utils (0.003) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:03:04,991 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 00:03:04,995 utils (0.004) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 00:03:04,996 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:03:04,999 utils (0.002) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:03:05,006 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 00:03:05,011 utils (0.005) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:03:05,012 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:03:05,015 utils (0.003) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:03:05,016 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:03:05,018 utils (0.002) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:03:05,019 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 00:03:05,021 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 00:03:05,021 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:03:05,022 utils (0.001) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:03:05,022 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 00:03:05,024 utils (0.002) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 00:03:05,025 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 00:03:05,027 utils (0.002) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 00:03:05,027 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 00:03:05,029 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:03:05,029 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:03:05,030 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:03:05,030 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:03:05,031 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:03:05,031 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 00:03:05,033 utils (0.002) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 00:03:05,033 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 00:03:05,035 utils (0.002) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:03:05,035 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 00:03:05,037 utils (0.002) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 00:03:05,037 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 00:03:05,039 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 00:03:05,039 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:03:05,040 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:03:05,040 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:03:05,041 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:03:05,041 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 00:03:05,043 utils (0.002) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 00:03:05,043 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 00:03:05,045 utils (0.002) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 00:03:05,045 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 00:03:05,047 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:03:05,047 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:03:05,047 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:03:05,048 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:03:05,048 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:03:05,048 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 00:03:05,050 utils (0.002) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 00:03:05,050 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 00:03:05,052 utils (0.002) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:03:05,053 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,054 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:05,055 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T00:03:05.054821+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 0, 3, 5, 54821, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:03:05,056 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,063 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:03:05,067 utils (0.004) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:03:05,068 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:03:05,069 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:03:05,069 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:03:05,069 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:03:05,070 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 00:03:05,072 utils (0.002) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 00:03:05,072 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 00:03:05,074 utils (0.002) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 00:03:05,075 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,077 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:05,090 utils (0.012) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T00:03:05.078164+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 0, 3, 5, 78164, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:03:05,091 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,102 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:05,103 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T00:03:05.103006+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 0, 3, 5, 103006, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:03:05,107 utils (0.004) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,108 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,119 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:05,120 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T00:03:05.119693+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 0, 3, 5, 119693, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:03:05,123 utils (0.002) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,123 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,131 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 00:03:05,132 utils (0.000) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 00:03:05,144 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 00:03:05,145 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 00:03:05,146 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:05,148 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T00:03:05.147234+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 0, 3, 5, 147234, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:03:05,154 utils (0.006) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,154 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,164 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 00:03:05,165 utils (0.001) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 00:03:05,167 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:05,168 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T00:03:05.167752+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 0, 3, 5, 167752, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:03:05,169 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,169 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,182 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 00:03:05,182 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 00:03:05,184 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:05,185 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T00:03:05.184450+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 0, 3, 5, 184450, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:03:05,190 utils (0.005) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,191 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,201 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:05,201 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T00:03:05.201377+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 0, 3, 5, 201377, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:03:05,202 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,202 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,212 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 00:03:05,213 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 00:03:05,214 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:05,216 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T00:03:05.215090+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 0, 3, 5, 215090, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:03:05,217 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,217 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,218 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:05,219 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T00:03:05.218974+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 0, 3, 5, 218974, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:03:05,220 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,220 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,234 utils (0.003) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:05,235 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T00:03:05.234585+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 0, 3, 5, 234585, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:03:05,236 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,236 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,247 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:03:05,251 utils (0.004) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:03:05,253 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:05,254 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T00:03:05.253844+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 0, 3, 5, 253844, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:03:05,255 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,255 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,265 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:03:05,266 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:03:05,269 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:05,270 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T00:03:05.269561+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 0, 3, 5, 269561, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:03:05,272 utils (0.002) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,273 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,282 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:03:05,284 utils (0.001) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:03:05,285 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:05,286 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T00:03:05.286205+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 0, 3, 5, 286205, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:03:05,287 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,288 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,296 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:05,297 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T00:03:05.296718+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 0, 3, 5, 296718, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:03:05,298 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,298 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,308 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:03:05,309 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:03:05,311 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:05,312 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T00:03:05.312029+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 0, 3, 5, 312029, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:03:05,314 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,314 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,315 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 00:03:05,320 utils (0.005) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:03:05,322 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 00:03:05,330 utils (0.007) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 00:03:05,332 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:05,333 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T00:03:05.333057+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 0, 3, 5, 333057, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:03:05,336 utils (0.003) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,336 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,337 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 00:03:05,342 utils (0.005) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:03:05,343 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 00:03:05,345 utils (0.002) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 00:03:05,345 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 00:03:05,348 utils (0.002) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 00:03:05,348 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,350 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:05,352 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T00:03:05.351124+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 0, 3, 5, 351124, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:03:05,354 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:03:05,355 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,374 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 00:03:05,374 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,375 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 00:03:05,376 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,378 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 00:03:05,382 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 00:03:05,382 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,383 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 00:03:05,385 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,386 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 00:03:05,387 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,388 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,390 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,422 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 12', 8, '2024-01-21T19:39:02.389140+01:00'::timestamptz, 368, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 12', 8, datetime.datetime(2024, 1, 21, 19, 39, 2, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 368, False); alias=default
DEBUG 2024-03-03 00:03:05,424 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 6', 0, '2024-01-07T22:15:31.389140+01:00'::timestamptz, 225, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 6', 0, datetime.datetime(2024, 1, 7, 22, 15, 31, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 225, False); alias=default
DEBUG 2024-03-03 00:03:05,425 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 3', 8, '2024-01-20T00:34:08.389140+01:00'::timestamptz, 239, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 3', 8, datetime.datetime(2024, 1, 20, 0, 34, 8, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 239, False); alias=default
DEBUG 2024-03-03 00:03:05,427 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 2', 8, '2024-02-03T00:22:18.389140+01:00'::timestamptz, 323, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 2', 8, datetime.datetime(2024, 2, 3, 0, 22, 18, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 323, False); alias=default
DEBUG 2024-03-03 00:03:05,429 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 1', 9, '2024-03-01T04:23:30.389140+01:00'::timestamptz, 342, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 1', 9, datetime.datetime(2024, 3, 1, 4, 23, 30, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 342, False); alias=default
DEBUG 2024-03-03 00:03:05,431 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 8', 9, '2024-02-16T17:41:04.389140+01:00'::timestamptz, 669, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 8', 9, datetime.datetime(2024, 2, 16, 17, 41, 4, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 669, False); alias=default
DEBUG 2024-03-03 00:03:05,432 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 10', 4, '2023-12-30T06:22:54.389140+01:00'::timestamptz, 264, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 10', 4, datetime.datetime(2023, 12, 30, 6, 22, 54, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 264, False); alias=default
DEBUG 2024-03-03 00:03:05,433 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 2, 'Player 1', 11, '2023-11-28T13:12:18.389140+01:00'::timestamptz, 681, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 2, 'Player 1', 11, datetime.datetime(2023, 11, 28, 13, 12, 18, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 681, False); alias=default
DEBUG 2024-03-03 00:03:05,434 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 5, 'Player 7', 11, '2023-12-20T16:59:40.389140+01:00'::timestamptz, 111, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 5, 'Player 7', 11, datetime.datetime(2023, 12, 20, 16, 59, 40, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 111, False); alias=default
DEBUG 2024-03-03 00:03:05,436 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 15', 9, '2023-11-01T19:21:25.389140+01:00'::timestamptz, 312, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 15', 9, datetime.datetime(2023, 11, 1, 19, 21, 25, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 312, False); alias=default
DEBUG 2024-03-03 00:03:05,437 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 0', 7, '2024-02-03T03:13:25.389140+01:00'::timestamptz, 481, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 0', 7, datetime.datetime(2024, 2, 3, 3, 13, 25, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 481, False); alias=default
DEBUG 2024-03-03 00:03:05,438 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 2', 3, '2023-11-02T23:33:23.389140+01:00'::timestamptz, 146, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 2', 3, datetime.datetime(2023, 11, 2, 23, 33, 23, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 146, False); alias=default
DEBUG 2024-03-03 00:03:05,440 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 16', 3, '2023-11-13T18:36:08.389140+01:00'::timestamptz, 752, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 16', 3, datetime.datetime(2023, 11, 13, 18, 36, 8, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 752, False); alias=default
DEBUG 2024-03-03 00:03:05,441 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 10, 'Player 20', 11, '2023-12-25T16:43:09.389140+01:00'::timestamptz, 474, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 10, 'Player 20', 11, datetime.datetime(2023, 12, 25, 16, 43, 9, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 474, False); alias=default
DEBUG 2024-03-03 00:03:05,443 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 13', 4, '2023-11-29T03:49:33.389140+01:00'::timestamptz, 384, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 13', 4, datetime.datetime(2023, 11, 29, 3, 49, 33, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 384, False); alias=default
DEBUG 2024-03-03 00:03:05,445 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 6, 'Player 13', 11, '2024-02-23T11:28:09.389140+01:00'::timestamptz, 852, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 6, 'Player 13', 11, datetime.datetime(2024, 2, 23, 11, 28, 9, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 852, False); alias=default
DEBUG 2024-03-03 00:03:05,446 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 10', 6, '2024-02-09T20:57:10.389140+01:00'::timestamptz, 787, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 10', 6, datetime.datetime(2024, 2, 9, 20, 57, 10, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 787, False); alias=default
DEBUG 2024-03-03 00:03:05,448 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 0', 4, '2023-11-27T21:08:24.389140+01:00'::timestamptz, 820, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 0', 4, datetime.datetime(2023, 11, 27, 21, 8, 24, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 820, False); alias=default
DEBUG 2024-03-03 00:03:05,449 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 6, 'Player 6', 11, '2023-12-30T10:36:18.389140+01:00'::timestamptz, 165, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 6, 'Player 6', 11, datetime.datetime(2023, 12, 30, 10, 36, 18, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 165, False); alias=default
DEBUG 2024-03-03 00:03:05,450 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 3', 3, '2023-12-02T21:03:46.389140+01:00'::timestamptz, 876, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 3', 3, datetime.datetime(2023, 12, 2, 21, 3, 46, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 876, False); alias=default
DEBUG 2024-03-03 00:03:05,451 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 9, 'Player 18', 11, '2023-12-16T13:12:21.389140+01:00'::timestamptz, 413, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 9, 'Player 18', 11, datetime.datetime(2023, 12, 16, 13, 12, 21, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 413, False); alias=default
DEBUG 2024-03-03 00:03:05,452 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 1, 'Player 19', 11, '2024-01-07T10:23:57.389140+01:00'::timestamptz, 851, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 1, 'Player 19', 11, datetime.datetime(2024, 1, 7, 10, 23, 57, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 851, False); alias=default
DEBUG 2024-03-03 00:03:05,454 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 2', 4, '2024-02-22T23:32:48.389140+01:00'::timestamptz, 308, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 2', 4, datetime.datetime(2024, 2, 22, 23, 32, 48, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 308, False); alias=default
DEBUG 2024-03-03 00:03:05,456 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 6', 3, '2024-01-24T10:06:27.389140+01:00'::timestamptz, 827, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 6', 3, datetime.datetime(2024, 1, 24, 10, 6, 27, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 827, False); alias=default
DEBUG 2024-03-03 00:03:05,457 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 6, 'Player 19', 11, '2024-01-09T14:47:46.389140+01:00'::timestamptz, 300, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 6, 'Player 19', 11, datetime.datetime(2024, 1, 9, 14, 47, 46, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 300, False); alias=default
DEBUG 2024-03-03 00:03:05,459 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 7, 'Player 24', 11, '2024-02-09T03:46:03.389140+01:00'::timestamptz, 5, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 7, 'Player 24', 11, datetime.datetime(2024, 2, 9, 3, 46, 3, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 5, False); alias=default
DEBUG 2024-03-03 00:03:05,461 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 2, 'Player 22', 11, '2024-01-16T13:11:50.389140+01:00'::timestamptz, 659, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 2, 'Player 22', 11, datetime.datetime(2024, 1, 16, 13, 11, 50, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 659, False); alias=default
DEBUG 2024-03-03 00:03:05,462 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 0, 'Player 10', 11, '2023-11-08T22:08:08.389140+01:00'::timestamptz, 32, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 0, 'Player 10', 11, datetime.datetime(2023, 11, 8, 22, 8, 8, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 32, False); alias=default
DEBUG 2024-03-03 00:03:05,464 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 4, 'Player 25', 11, '2023-11-08T11:11:09.389140+01:00'::timestamptz, 659, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 4, 'Player 25', 11, datetime.datetime(2023, 11, 8, 11, 11, 9, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 659, False); alias=default
DEBUG 2024-03-03 00:03:05,465 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 7, 'Player 24', 11, '2023-11-18T11:46:03.389140+01:00'::timestamptz, 93, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 7, 'Player 24', 11, datetime.datetime(2023, 11, 18, 11, 46, 3, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 93, False); alias=default
DEBUG 2024-03-03 00:03:05,466 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 1', 10, '2023-11-10T17:34:44.389140+01:00'::timestamptz, 968, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 1', 10, datetime.datetime(2023, 11, 10, 17, 34, 44, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 968, False); alias=default
DEBUG 2024-03-03 00:03:05,467 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 24', 9, '2023-12-01T18:11:42.389140+01:00'::timestamptz, 411, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 24', 9, datetime.datetime(2023, 12, 1, 18, 11, 42, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 411, False); alias=default
DEBUG 2024-03-03 00:03:05,468 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 1, 'Player 29', 11, '2023-12-07T00:40:44.389140+01:00'::timestamptz, 426, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 1, 'Player 29', 11, datetime.datetime(2023, 12, 7, 0, 40, 44, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 426, False); alias=default
DEBUG 2024-03-03 00:03:05,470 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 3, 'Player 19', 11, '2024-01-16T22:20:16.389140+01:00'::timestamptz, 410, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 3, 'Player 19', 11, datetime.datetime(2024, 1, 16, 22, 20, 16, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 410, False); alias=default
DEBUG 2024-03-03 00:03:05,471 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 3', 3, '2023-12-23T07:02:33.389140+01:00'::timestamptz, 731, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 3', 3, datetime.datetime(2023, 12, 23, 7, 2, 33, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 731, False); alias=default
DEBUG 2024-03-03 00:03:05,472 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 8', 6, '2024-02-14T08:35:31.389140+01:00'::timestamptz, 535, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 8', 6, datetime.datetime(2024, 2, 14, 8, 35, 31, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 535, False); alias=default
DEBUG 2024-03-03 00:03:05,475 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 9', 6, '2024-01-26T15:38:04.389140+01:00'::timestamptz, 123, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 9', 6, datetime.datetime(2024, 1, 26, 15, 38, 4, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 123, False); alias=default
DEBUG 2024-03-03 00:03:05,477 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 1, 'Player 7', 11, '2024-01-09T20:47:44.389140+01:00'::timestamptz, 495, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 1, 'Player 7', 11, datetime.datetime(2024, 1, 9, 20, 47, 44, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 495, False); alias=default
DEBUG 2024-03-03 00:03:05,478 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 6, 'Player 7', 11, '2023-11-09T14:10:22.389140+01:00'::timestamptz, 49, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 6, 'Player 7', 11, datetime.datetime(2023, 11, 9, 14, 10, 22, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 49, False); alias=default
DEBUG 2024-03-03 00:03:05,480 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 28', 1, '2023-12-20T02:11:08.389140+01:00'::timestamptz, 417, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 28', 1, datetime.datetime(2023, 12, 20, 2, 11, 8, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 417, False); alias=default
DEBUG 2024-03-03 00:03:05,481 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 6', 10, '2023-12-21T12:10:07.389140+01:00'::timestamptz, 660, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 6', 10, datetime.datetime(2023, 12, 21, 12, 10, 7, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 660, False); alias=default
DEBUG 2024-03-03 00:03:05,482 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 2', 0, '2024-02-27T01:41:15.389140+01:00'::timestamptz, 568, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 2', 0, datetime.datetime(2024, 2, 27, 1, 41, 15, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 568, False); alias=default
DEBUG 2024-03-03 00:03:05,484 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 11, 'Player 0', 9, '2023-11-24T18:34:54.389140+01:00'::timestamptz, 439, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 11, 'Player 0', 9, datetime.datetime(2023, 11, 24, 18, 34, 54, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 439, False); alias=default
DEBUG 2024-03-03 00:03:05,485 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 26', 4, '2023-11-26T04:11:10.389140+01:00'::timestamptz, 298, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 26', 4, datetime.datetime(2023, 11, 26, 4, 11, 10, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 298, False); alias=default
DEBUG 2024-03-03 00:03:05,486 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 30', 6, '2024-01-23T05:45:58.389140+01:00'::timestamptz, 657, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 30', 6, datetime.datetime(2024, 1, 23, 5, 45, 58, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 657, False); alias=default
DEBUG 2024-03-03 00:03:05,488 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 4', 8, '2023-11-16T00:38:59.389140+01:00'::timestamptz, 426, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 4', 8, datetime.datetime(2023, 11, 16, 0, 38, 59, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 426, False); alias=default
DEBUG 2024-03-03 00:03:05,489 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 3', 2, '2023-12-12T16:42:38.389140+01:00'::timestamptz, 823, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 3', 2, datetime.datetime(2023, 12, 12, 16, 42, 38, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 823, False); alias=default
DEBUG 2024-03-03 00:03:05,491 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 7, 'Player 7', 11, '2024-01-27T00:00:10.389140+01:00'::timestamptz, 620, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 7, 'Player 7', 11, datetime.datetime(2024, 1, 27, 0, 0, 10, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 620, False); alias=default
DEBUG 2024-03-03 00:03:05,492 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 10, 'Player 35', 11, '2024-01-01T19:42:09.389140+01:00'::timestamptz, 348, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 10, 'Player 35', 11, datetime.datetime(2024, 1, 1, 19, 42, 9, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 348, False); alias=default
DEBUG 2024-03-03 00:03:05,494 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 25', 0, '2024-02-17T14:05:26.389140+01:00'::timestamptz, 510, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 25', 0, datetime.datetime(2024, 2, 17, 14, 5, 26, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 510, False); alias=default
DEBUG 2024-03-03 00:03:05,495 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 3', 0, '2024-02-04T10:04:19.389140+01:00'::timestamptz, 741, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 3', 0, datetime.datetime(2024, 2, 4, 10, 4, 19, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 741, False); alias=default
DEBUG 2024-03-03 00:03:05,496 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 4, 'Player 38', 11, '2024-01-31T10:01:38.389140+01:00'::timestamptz, 516, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 4, 'Player 38', 11, datetime.datetime(2024, 1, 31, 10, 1, 38, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 516, False); alias=default
DEBUG 2024-03-03 00:03:05,497 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 10, 'Player 16', 11, '2023-12-03T22:53:31.389140+01:00'::timestamptz, 123, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 10, 'Player 16', 11, datetime.datetime(2023, 12, 3, 22, 53, 31, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 123, False); alias=default
DEBUG 2024-03-03 00:03:05,499 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 29', 0, '2024-02-23T22:26:13.389140+01:00'::timestamptz, 304, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 29', 0, datetime.datetime(2024, 2, 23, 22, 26, 13, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 304, False); alias=default
DEBUG 2024-03-03 00:03:05,500 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 6, 'Player 0', 11, '2024-02-03T13:24:17.389140+01:00'::timestamptz, 429, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 6, 'Player 0', 11, datetime.datetime(2024, 2, 3, 13, 24, 17, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 429, False); alias=default
DEBUG 2024-03-03 00:03:05,501 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 43', 4, '2023-12-05T08:42:26.389140+01:00'::timestamptz, 103, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 43', 4, datetime.datetime(2023, 12, 5, 8, 42, 26, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 103, False); alias=default
DEBUG 2024-03-03 00:03:05,502 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 11, 'Player 33', 7, '2024-01-22T01:19:27.389140+01:00'::timestamptz, 61, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 11, 'Player 33', 7, datetime.datetime(2024, 1, 22, 1, 19, 27, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 61, False); alias=default
DEBUG 2024-03-03 00:03:05,504 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 14', 2, '2023-11-16T02:26:22.389140+01:00'::timestamptz, 848, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 14', 2, datetime.datetime(2023, 11, 16, 2, 26, 22, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 848, False); alias=default
DEBUG 2024-03-03 00:03:05,505 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 12', 4, '2023-11-09T00:43:15.389140+01:00'::timestamptz, 59, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 12', 4, datetime.datetime(2023, 11, 9, 0, 43, 15, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 59, False); alias=default
DEBUG 2024-03-03 00:03:05,507 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 11, 'Player 12', 3, '2024-02-06T10:38:26.389140+01:00'::timestamptz, 884, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 11, 'Player 12', 3, datetime.datetime(2024, 2, 6, 10, 38, 26, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 884, False); alias=default
DEBUG 2024-03-03 00:03:05,509 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 11, 'Player 34', 6, '2024-02-01T20:57:32.389140+01:00'::timestamptz, 976, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 11, 'Player 34', 6, datetime.datetime(2024, 2, 1, 20, 57, 32, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 976, False); alias=default
DEBUG 2024-03-03 00:03:05,510 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 9', 2, '2023-12-20T09:22:14.389140+01:00'::timestamptz, 987, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 9', 2, datetime.datetime(2023, 12, 20, 9, 22, 14, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 987, False); alias=default
DEBUG 2024-03-03 00:03:05,512 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 11, 'Player 43', 10, '2024-01-04T21:13:13.389140+01:00'::timestamptz, 610, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 11, 'Player 43', 10, datetime.datetime(2024, 1, 4, 21, 13, 13, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 610, False); alias=default
DEBUG 2024-03-03 00:03:05,513 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 42', 7, '2023-11-04T09:05:54.389140+01:00'::timestamptz, 985, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 42', 7, datetime.datetime(2023, 11, 4, 9, 5, 54, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 985, False); alias=default
DEBUG 2024-03-03 00:03:05,514 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 35', 3, '2024-02-29T00:22:21.389140+01:00'::timestamptz, 423, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 35', 3, datetime.datetime(2024, 2, 29, 0, 22, 21, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 423, False); alias=default
DEBUG 2024-03-03 00:03:05,516 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 7, 'Player 19', 11, '2024-01-16T20:42:05.389140+01:00'::timestamptz, 958, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 7, 'Player 19', 11, datetime.datetime(2024, 1, 16, 20, 42, 5, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 958, False); alias=default
DEBUG 2024-03-03 00:03:05,517 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 10, 'Player 40', 11, '2023-11-25T12:23:40.389140+01:00'::timestamptz, 804, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 10, 'Player 40', 11, datetime.datetime(2023, 11, 25, 12, 23, 40, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 804, False); alias=default
DEBUG 2024-03-03 00:03:05,518 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 9, 'Player 34', 11, '2023-11-12T20:23:40.389140+01:00'::timestamptz, 620, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 9, 'Player 34', 11, datetime.datetime(2023, 11, 12, 20, 23, 40, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 620, False); alias=default
DEBUG 2024-03-03 00:03:05,520 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 49', 8, '2024-01-08T12:11:16.389140+01:00'::timestamptz, 414, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 49', 8, datetime.datetime(2024, 1, 8, 12, 11, 16, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 414, False); alias=default
DEBUG 2024-03-03 00:03:05,521 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 15', 7, '2024-01-03T22:29:06.389140+01:00'::timestamptz, 185, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 15', 7, datetime.datetime(2024, 1, 3, 22, 29, 6, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 185, False); alias=default
DEBUG 2024-03-03 00:03:05,524 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 32', 6, '2024-01-09T17:34:20.389140+01:00'::timestamptz, 458, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 32', 6, datetime.datetime(2024, 1, 9, 17, 34, 20, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 458, False); alias=default
DEBUG 2024-03-03 00:03:05,525 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 4, 'Player 42', 11, '2023-12-18T12:25:23.389140+01:00'::timestamptz, 675, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 4, 'Player 42', 11, datetime.datetime(2023, 12, 18, 12, 25, 23, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 675, False); alias=default
DEBUG 2024-03-03 00:03:05,528 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 9, 'Player 31', 11, '2023-11-21T13:13:06.389140+01:00'::timestamptz, 903, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 9, 'Player 31', 11, datetime.datetime(2023, 11, 21, 13, 13, 6, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 903, False); alias=default
DEBUG 2024-03-03 00:03:05,529 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 11, 'Player 48', 5, '2024-01-13T12:23:06.389140+01:00'::timestamptz, 535, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 11, 'Player 48', 5, datetime.datetime(2024, 1, 13, 12, 23, 6, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 535, False); alias=default
DEBUG 2024-03-03 00:03:05,531 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 7, 'Player 24', 11, '2023-11-12T06:03:43.389140+01:00'::timestamptz, 269, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 7, 'Player 24', 11, datetime.datetime(2023, 11, 12, 6, 3, 43, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 269, False); alias=default
DEBUG 2024-03-03 00:03:05,532 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 1, 'Player 50', 11, '2023-12-11T06:02:45.389140+01:00'::timestamptz, 163, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 1, 'Player 50', 11, datetime.datetime(2023, 12, 11, 6, 2, 45, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 163, False); alias=default
DEBUG 2024-03-03 00:03:05,534 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 37', 0, '2024-02-22T20:14:33.389140+01:00'::timestamptz, 289, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 37', 0, datetime.datetime(2024, 2, 22, 20, 14, 33, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 289, False); alias=default
DEBUG 2024-03-03 00:03:05,536 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 3', 7, '2024-02-05T14:16:45.389140+01:00'::timestamptz, 535, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 3', 7, datetime.datetime(2024, 2, 5, 14, 16, 45, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 535, False); alias=default
DEBUG 2024-03-03 00:03:05,537 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 6, 'Player 34', 11, '2023-12-25T06:30:31.389140+01:00'::timestamptz, 456, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 6, 'Player 34', 11, datetime.datetime(2023, 12, 25, 6, 30, 31, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 456, False); alias=default
DEBUG 2024-03-03 00:03:05,539 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 0, 'Player 38', 11, '2024-02-14T18:36:52.389140+01:00'::timestamptz, 339, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 0, 'Player 38', 11, datetime.datetime(2024, 2, 14, 18, 36, 52, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 339, False); alias=default
DEBUG 2024-03-03 00:03:05,540 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 0, 'Player 27', 11, '2024-02-08T16:23:15.389140+01:00'::timestamptz, 739, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 0, 'Player 27', 11, datetime.datetime(2024, 2, 8, 16, 23, 15, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 739, False); alias=default
DEBUG 2024-03-03 00:03:05,542 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 48', 1, '2024-01-22T17:00:22.389140+01:00'::timestamptz, 337, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 48', 1, datetime.datetime(2024, 1, 22, 17, 0, 22, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 337, False); alias=default
DEBUG 2024-03-03 00:03:05,543 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 11, 'Player 54', 8, '2024-02-06T07:41:15.389140+01:00'::timestamptz, 877, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 11, 'Player 54', 8, datetime.datetime(2024, 2, 6, 7, 41, 15, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 877, False); alias=default
DEBUG 2024-03-03 00:03:05,545 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 11, 'Player 0', 3, '2024-02-04T04:23:19.389140+01:00'::timestamptz, 593, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 11, 'Player 0', 3, datetime.datetime(2024, 2, 4, 4, 23, 19, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 593, False); alias=default
DEBUG 2024-03-03 00:03:05,546 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 46', 10, 'Player 48', 11, '2023-12-27T12:36:14.389140+01:00'::timestamptz, 84, false) RETURNING "pong_gamedata"."id"; args=('Player 46', 10, 'Player 48', 11, datetime.datetime(2023, 12, 27, 12, 36, 14, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 84, False); alias=default
DEBUG 2024-03-03 00:03:05,547 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 11, 'Player 54', 5, '2023-12-30T20:08:55.389140+01:00'::timestamptz, 344, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 11, 'Player 54', 5, datetime.datetime(2023, 12, 30, 20, 8, 55, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 344, False); alias=default
DEBUG 2024-03-03 00:03:05,548 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 53', 8, 'Player 28', 11, '2024-03-02T17:14:15.389140+01:00'::timestamptz, 823, false) RETURNING "pong_gamedata"."id"; args=('Player 53', 8, 'Player 28', 11, datetime.datetime(2024, 3, 2, 17, 14, 15, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 823, False); alias=default
DEBUG 2024-03-03 00:03:05,550 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 56', 0, 'Player 6', 11, '2023-11-18T21:39:44.389140+01:00'::timestamptz, 320, false) RETURNING "pong_gamedata"."id"; args=('Player 56', 0, 'Player 6', 11, datetime.datetime(2023, 11, 18, 21, 39, 44, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 320, False); alias=default
DEBUG 2024-03-03 00:03:05,552 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 39', 6, '2023-11-23T13:56:49.389140+01:00'::timestamptz, 108, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 39', 6, datetime.datetime(2023, 11, 23, 13, 56, 49, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 108, False); alias=default
DEBUG 2024-03-03 00:03:05,553 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 3, 'Player 7', 11, '2024-01-12T05:22:03.389140+01:00'::timestamptz, 386, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 3, 'Player 7', 11, datetime.datetime(2024, 1, 12, 5, 22, 3, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 386, False); alias=default
DEBUG 2024-03-03 00:03:05,554 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 9, 'Player 16', 11, '2023-11-11T12:30:52.389140+01:00'::timestamptz, 408, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 9, 'Player 16', 11, datetime.datetime(2023, 11, 11, 12, 30, 52, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 408, False); alias=default
DEBUG 2024-03-03 00:03:05,556 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 3, 'Player 5', 11, '2024-01-02T05:17:16.389140+01:00'::timestamptz, 609, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 3, 'Player 5', 11, datetime.datetime(2024, 1, 2, 5, 17, 16, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 609, False); alias=default
DEBUG 2024-03-03 00:03:05,557 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 11, 'Player 30', 0, '2024-02-29T16:07:07.389140+01:00'::timestamptz, 989, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 11, 'Player 30', 0, datetime.datetime(2024, 2, 29, 16, 7, 7, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 989, False); alias=default
DEBUG 2024-03-03 00:03:05,559 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 11, 'Player 27', 2, '2024-01-04T10:46:01.389140+01:00'::timestamptz, 167, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 11, 'Player 27', 2, datetime.datetime(2024, 1, 4, 10, 46, 1, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 167, False); alias=default
DEBUG 2024-03-03 00:03:05,561 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 5, 'Player 34', 11, '2024-02-07T12:39:29.389140+01:00'::timestamptz, 86, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 5, 'Player 34', 11, datetime.datetime(2024, 2, 7, 12, 39, 29, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 86, False); alias=default
DEBUG 2024-03-03 00:03:05,562 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 0, 'Player 16', 11, '2024-01-12T23:18:38.389140+01:00'::timestamptz, 183, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 0, 'Player 16', 11, datetime.datetime(2024, 1, 12, 23, 18, 38, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 183, False); alias=default
DEBUG 2024-03-03 00:03:05,563 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 55', 11, 'Player 17', 6, '2023-12-30T06:18:25.389140+01:00'::timestamptz, 865, false) RETURNING "pong_gamedata"."id"; args=('Player 55', 11, 'Player 17', 6, datetime.datetime(2023, 12, 30, 6, 18, 25, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 865, False); alias=default
DEBUG 2024-03-03 00:03:05,565 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 59', 6, 'Player 53', 11, '2023-12-16T21:56:08.389140+01:00'::timestamptz, 424, false) RETURNING "pong_gamedata"."id"; args=('Player 59', 6, 'Player 53', 11, datetime.datetime(2023, 12, 16, 21, 56, 8, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 424, False); alias=default
DEBUG 2024-03-03 00:03:05,566 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 50', 3, 'Player 7', 11, '2023-12-27T19:26:24.389140+01:00'::timestamptz, 22, false) RETURNING "pong_gamedata"."id"; args=('Player 50', 3, 'Player 7', 11, datetime.datetime(2023, 12, 27, 19, 26, 24, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 22, False); alias=default
DEBUG 2024-03-03 00:03:05,567 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 12', 0, '2023-11-07T23:28:44.389140+01:00'::timestamptz, 434, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 12', 0, datetime.datetime(2023, 11, 7, 23, 28, 44, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 434, False); alias=default
DEBUG 2024-03-03 00:03:05,568 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,570 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 7, 'Player 8', 11, '2023-11-17T13:38:51.389140+01:00'::timestamptz, 337, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 7, 'Player 8', 11, datetime.datetime(2023, 11, 17, 13, 38, 51, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 337, True); alias=default
DEBUG 2024-03-03 00:03:05,571 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 6, 'Player 11', 11, '2023-11-17T13:39:30.389140+01:00'::timestamptz, 770, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 6, 'Player 11', 11, datetime.datetime(2023, 11, 17, 13, 39, 30, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 770, True); alias=default
DEBUG 2024-03-03 00:03:05,572 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 10, 'Player 11', 11, '2023-11-17T13:42:38.389140+01:00'::timestamptz, 49, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 10, 'Player 11', 11, datetime.datetime(2023, 11, 17, 13, 42, 38, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 49, True); alias=default
DEBUG 2024-03-03 00:03:05,574 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2023-11-17T13:42:38.389140+01:00'::timestamptz, 958, '["Player 11", "Player 8", "Player 5", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2023, 11, 17, 13, 42, 38, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 958, <psycopg2._json.Json object at 0x7f76a37ced20>, '0x0'); alias=default
DEBUG 2024-03-03 00:03:05,576 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 9', 8, '2024-01-18T04:24:02.389140+01:00'::timestamptz, 165, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 9', 8, datetime.datetime(2024, 1, 18, 4, 24, 2, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 165, True); alias=default
DEBUG 2024-03-03 00:03:05,577 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 4', 7, '2024-01-18T04:28:53.389140+01:00'::timestamptz, 331, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 4', 7, datetime.datetime(2024, 1, 18, 4, 28, 53, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 331, True); alias=default
DEBUG 2024-03-03 00:03:05,579 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 1, 'Player 10', 11, '2024-01-18T04:31:31.389140+01:00'::timestamptz, 593, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 1, 'Player 10', 11, datetime.datetime(2024, 1, 18, 4, 31, 31, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 593, True); alias=default
DEBUG 2024-03-03 00:03:05,580 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2024-01-18T04:31:31.389140+01:00'::timestamptz, 614, '["Player 10", "Player 1", "Player 9", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2024, 1, 18, 4, 31, 31, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 614, <psycopg2._json.Json object at 0x7f76a3636f00>, '0x0'); alias=default
DEBUG 2024-03-03 00:03:05,581 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 3', 4, '2023-12-31T12:15:03.389140+01:00'::timestamptz, 905, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 3', 4, datetime.datetime(2023, 12, 31, 12, 15, 3, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 905, True); alias=default
DEBUG 2024-03-03 00:03:05,583 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 8, 'Player 11', 11, '2023-12-31T12:14:25.389140+01:00'::timestamptz, 824, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 8, 'Player 11', 11, datetime.datetime(2023, 12, 31, 12, 14, 25, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 824, True); alias=default
DEBUG 2024-03-03 00:03:05,584 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 11', 9, '2023-12-31T12:16:05.389140+01:00'::timestamptz, 996, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 11', 9, datetime.datetime(2023, 12, 31, 12, 16, 5, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 996, True); alias=default
DEBUG 2024-03-03 00:03:05,585 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2023-12-31T12:16:05.389140+01:00'::timestamptz, 967, '["Player 12", "Player 11", "Player 3", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2023, 12, 31, 12, 16, 5, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 967, <psycopg2._json.Json object at 0x7f76a36512b0>, '0x0'); alias=default
DEBUG 2024-03-03 00:03:05,587 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 5, 'Player 0', 11, '2023-11-14T00:10:12.389140+01:00'::timestamptz, 791, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 5, 'Player 0', 11, datetime.datetime(2023, 11, 14, 0, 10, 12, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 791, True); alias=default
DEBUG 2024-03-03 00:03:05,588 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 8, 'Player 14', 11, '2023-11-14T00:00:15.389140+01:00'::timestamptz, 302, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 8, 'Player 14', 11, datetime.datetime(2023, 11, 14, 0, 0, 15, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 302, True); alias=default
DEBUG 2024-03-03 00:03:05,589 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 14', 3, '2023-11-14T00:11:43.389140+01:00'::timestamptz, 21, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 14', 3, datetime.datetime(2023, 11, 14, 0, 11, 43, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 21, True); alias=default
DEBUG 2024-03-03 00:03:05,591 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2023-11-14T00:11:43.389140+01:00'::timestamptz, 990, '["Player 0", "Player 14", "Player 13", "Player 17"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2023, 11, 14, 0, 11, 43, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 990, <psycopg2._json.Json object at 0x7f76a3653050>, '0x0'); alias=default
DEBUG 2024-03-03 00:03:05,593 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 4', 3, '2024-02-17T18:17:43.389140+01:00'::timestamptz, 193, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 4', 3, datetime.datetime(2024, 2, 17, 18, 17, 43, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 193, True); alias=default
DEBUG 2024-03-03 00:03:05,594 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 17', 6, '2024-02-17T18:24:57.389140+01:00'::timestamptz, 509, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 17', 6, datetime.datetime(2024, 2, 17, 18, 24, 57, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 509, True); alias=default
DEBUG 2024-03-03 00:03:05,595 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 6, 'Player 11', 11, '2024-02-17T18:30:59.389140+01:00'::timestamptz, 508, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 6, 'Player 11', 11, datetime.datetime(2024, 2, 17, 18, 30, 59, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 508, True); alias=default
DEBUG 2024-03-03 00:03:05,597 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2024-02-17T18:30:59.389140+01:00'::timestamptz, 989, '["Player 11", "Player 12", "Player 4", "Player 17"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2024, 2, 17, 18, 30, 59, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 989, <psycopg2._json.Json object at 0x7f76a3651cd0>, '0x0'); alias=default
DEBUG 2024-03-03 00:03:05,598 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 13', 6, '2024-02-19T01:41:51.389140+01:00'::timestamptz, 661, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 13', 6, datetime.datetime(2024, 2, 19, 1, 41, 51, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 661, True); alias=default
DEBUG 2024-03-03 00:03:05,599 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 3, 'Player 17', 11, '2024-02-19T01:37:47.389140+01:00'::timestamptz, 366, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 3, 'Player 17', 11, datetime.datetime(2024, 2, 19, 1, 37, 47, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 366, True); alias=default
DEBUG 2024-03-03 00:03:05,601 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 17', 6, '2024-02-19T01:45:11.389140+01:00'::timestamptz, 136, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 17', 6, datetime.datetime(2024, 2, 19, 1, 45, 11, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 136, True); alias=default
DEBUG 2024-03-03 00:03:05,602 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2024-02-19T01:45:11.389140+01:00'::timestamptz, 861, '["Player 10", "Player 17", "Player 13", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2024, 2, 19, 1, 45, 11, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 861, <psycopg2._json.Json object at 0x7f76a3653a10>, '0x0'); alias=default
DEBUG 2024-03-03 00:03:05,603 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 17', 4, '2024-02-11T16:09:33.389140+01:00'::timestamptz, 853, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 17', 4, datetime.datetime(2024, 2, 11, 16, 9, 33, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 853, True); alias=default
DEBUG 2024-03-03 00:03:05,605 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 2', 10, '2024-02-11T16:12:00.389140+01:00'::timestamptz, 965, true) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 2', 10, datetime.datetime(2024, 2, 11, 16, 12, 0, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 965, True); alias=default
DEBUG 2024-03-03 00:03:05,606 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 6, 'Player 18', 11, '2024-02-11T16:12:00.389140+01:00'::timestamptz, 572, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 6, 'Player 18', 11, datetime.datetime(2024, 2, 11, 16, 12, 0, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 572, True); alias=default
DEBUG 2024-03-03 00:03:05,607 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2024-02-11T16:12:00.389140+01:00'::timestamptz, 1000, '["Player 18", "Player 5", "Player 17", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2024, 2, 11, 16, 12, 0, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 1000, <psycopg2._json.Json object at 0x7f76a3652840>, '0x0'); alias=default
DEBUG 2024-03-03 00:03:05,609 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 6', 1, '2024-01-08T14:06:49.389140+01:00'::timestamptz, 834, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 6', 1, datetime.datetime(2024, 1, 8, 14, 6, 49, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 834, True); alias=default
DEBUG 2024-03-03 00:03:05,611 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 19', 8, '2024-01-08T14:01:24.389140+01:00'::timestamptz, 567, true) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 19', 8, datetime.datetime(2024, 1, 8, 14, 1, 24, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 567, True); alias=default
DEBUG 2024-03-03 00:03:05,612 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 7, 'Player 18', 11, '2024-01-08T14:07:11.389140+01:00'::timestamptz, 418, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 7, 'Player 18', 11, datetime.datetime(2024, 1, 8, 14, 7, 11, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 418, True); alias=default
DEBUG 2024-03-03 00:03:05,613 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2024-01-08T14:07:11.389140+01:00'::timestamptz, 914, '["Player 18", "Player 4", "Player 6", "Player 19"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2024, 1, 8, 14, 7, 11, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 914, <psycopg2._json.Json object at 0x7f76a3651ac0>, '0x0'); alias=default
DEBUG 2024-03-03 00:03:05,614 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 9, 'Player 4', 11, '2024-03-01T07:25:55.389140+01:00'::timestamptz, 76, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 9, 'Player 4', 11, datetime.datetime(2024, 3, 1, 7, 25, 55, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 76, True); alias=default
DEBUG 2024-03-03 00:03:05,616 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 9, 'Player 19', 11, '2024-03-01T07:32:38.389140+01:00'::timestamptz, 181, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 9, 'Player 19', 11, datetime.datetime(2024, 3, 1, 7, 32, 38, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 181, True); alias=default
DEBUG 2024-03-03 00:03:05,617 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 3, 'Player 19', 11, '2024-03-01T07:33:41.389140+01:00'::timestamptz, 119, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 3, 'Player 19', 11, datetime.datetime(2024, 3, 1, 7, 33, 41, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 119, True); alias=default
DEBUG 2024-03-03 00:03:05,618 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2024-03-01T07:33:41.389140+01:00'::timestamptz, 542, '["Player 19", "Player 4", "Player 16", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2024, 3, 1, 7, 33, 41, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 542, <psycopg2._json.Json object at 0x7f76a3651700>, '0x0'); alias=default
DEBUG 2024-03-03 00:03:05,620 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 3, 'Player 13', 11, '2024-02-06T18:51:09.389140+01:00'::timestamptz, 682, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 3, 'Player 13', 11, datetime.datetime(2024, 2, 6, 18, 51, 9, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 682, True); alias=default
DEBUG 2024-03-03 00:03:05,621 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 5', 10, '2024-02-06T18:53:45.389140+01:00'::timestamptz, 648, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 5', 10, datetime.datetime(2024, 2, 6, 18, 53, 45, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 648, True); alias=default
DEBUG 2024-03-03 00:03:05,622 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 0, 'Player 12', 11, '2024-02-06T18:54:29.389140+01:00'::timestamptz, 574, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 0, 'Player 12', 11, datetime.datetime(2024, 2, 6, 18, 54, 29, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 574, True); alias=default
DEBUG 2024-03-03 00:03:05,624 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2024-02-06T18:54:29.389140+01:00'::timestamptz, 882, '["Player 12", "Player 13", "Player 2", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2024, 2, 6, 18, 54, 29, 389140, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 882, <psycopg2._json.Json object at 0x7f76a36852b0>, '0x0'); alias=default
DEBUG 2024-03-03 00:03:05,626 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,627 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,628 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 00:03:05,628 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,629 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 00:03:05,629 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,630 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 00:03:05,631 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 00:03:05,632 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 00:03:05,634 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 00:03:05,635 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,635 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 00:03:05,637 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,637 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 00:03:05,638 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,639 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,640 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,642 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,643 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,644 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,645 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 00:03:05,645 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,646 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 00:03:05,646 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,647 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 00:03:05,650 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 00:03:05,651 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,652 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 00:03:05,653 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,654 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 00:03:05,655 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,657 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,659 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,661 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,669 utils (0.007) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,674 utils (0.005) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,680 utils (0.005) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 00:03:05,680 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,682 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 00:03:05,683 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,684 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 00:03:05,687 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 00:03:05,688 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,688 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 00:03:05,690 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,691 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 00:03:05,693 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,694 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,696 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,697 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,698 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,699 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,701 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 00:03:05,701 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,702 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 00:03:05,703 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,704 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 00:03:05,705 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 00:03:05,708 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 00:03:05,709 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:03:05,710 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 00:03:05,711 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:03:05,712 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 00:03:05,713 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,714 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,715 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,717 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,719 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:03:05,720 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
