(0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
(0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
(0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
(0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
(0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
(0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
(0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) DELETE FROM "pong_gamedata"; args=(); alias=default
(0.006) COMMIT; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) DELETE FROM "pong_tournamentdata"; args=(); alias=default
(0.000) COMMIT; args=None; alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 5, 'Player 2', 11, '2024-02-20T02:38:59.896894+01:00'::timestamptz, 243, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 5, 'Player 2', 11, datetime.datetime(2024, 2, 20, 2, 38, 59, 896894, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 243, False); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 15', 6, '2024-02-02T18:58:33.896894+01:00'::timestamptz, 304, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 15', 6, datetime.datetime(2024, 2, 2, 18, 58, 33, 896894, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 304, False); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 5', 3, '2023-11-04T18:05:16.896894+01:00'::timestamptz, 148, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 5', 3, datetime.datetime(2023, 11, 4, 18, 5, 16, 896894, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 148, True); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 8, 'Player 7', 11, '2023-11-04T18:08:33.896894+01:00'::timestamptz, 709, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 8, 'Player 7', 11, datetime.datetime(2023, 11, 4, 18, 8, 33, 896894, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 709, True); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 7, 'Player 7', 11, '2023-11-04T18:10:17.896894+01:00'::timestamptz, 810, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 7, 'Player 7', 11, datetime.datetime(2023, 11, 4, 18, 10, 17, 896894, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 810, True); alias=default
(0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 27, 28, 29, '2023-11-04T18:10:17.896894+01:00'::timestamptz, 813, '["Player 7", "Player 1", "Player 5", "Player 2"]', 'aavvsdfsd') RETURNING "pong_tournamentdata"."id"; args=(0, 27, 28, 29, datetime.datetime(2023, 11, 4, 18, 10, 17, 896894, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 813, <psycopg2._json.Json object at 0x7fd6310a7e60>, 'aavvsdfsd'); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) DELETE FROM "pong_gamedata"; args=(); alias=default
(0.000) COMMIT; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) DELETE FROM "pong_tournamentdata"; args=(); alias=default
(0.000) COMMIT; args=None; alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 1, 'Player 9', 11, '2023-12-16T17:25:44.973410+01:00'::timestamptz, 987, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 1, 'Player 9', 11, datetime.datetime(2023, 12, 16, 17, 25, 44, 973410, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 987, False); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 8', 1, '2024-02-13T06:48:37.973410+01:00'::timestamptz, 123, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 8', 1, datetime.datetime(2024, 2, 13, 6, 48, 37, 973410, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 123, False); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 1, 'Player 5', 11, '2023-12-23T05:13:06.973410+01:00'::timestamptz, 354, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 1, 'Player 5', 11, datetime.datetime(2023, 12, 23, 5, 13, 6, 973410, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 354, True); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 9', 9, '2023-12-23T05:12:36.973410+01:00'::timestamptz, 289, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 9', 9, datetime.datetime(2023, 12, 23, 5, 12, 36, 973410, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 289, True); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 9, 'Player 15', 11, '2023-12-23T05:13:49.973410+01:00'::timestamptz, 998, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 9, 'Player 15', 11, datetime.datetime(2023, 12, 23, 5, 13, 49, 973410, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 998, True); alias=default
(0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 32, 33, 34, '2023-12-23T05:13:49.973410+01:00'::timestamptz, 397, '["Player 15", "Player 5", "Player 1", "Player 9"]', 'aavvsdfsd') RETURNING "pong_tournamentdata"."id"; args=(0, 32, 33, 34, datetime.datetime(2023, 12, 23, 5, 13, 49, 973410, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 397, <psycopg2._json.Json object at 0x7fd630ed1af0>, 'aavvsdfsd'); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) DELETE FROM "pong_gamedata"; args=(); alias=default
(0.000) COMMIT; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) DELETE FROM "pong_tournamentdata"; args=(); alias=default
(0.000) COMMIT; args=None; alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 3, 'Player 8', 11, '2023-11-20T17:30:42.042260+01:00'::timestamptz, 464, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 3, 'Player 8', 11, datetime.datetime(2023, 11, 20, 17, 30, 42, 42260, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 464, False); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 9, 'Player 8', 11, '2024-01-08T14:09:44.042260+01:00'::timestamptz, 150, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 9, 'Player 8', 11, datetime.datetime(2024, 1, 8, 14, 9, 44, 42260, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 150, False); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 7', 6, '2023-12-30T00:49:24.042260+01:00'::timestamptz, 672, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 7', 6, datetime.datetime(2023, 12, 30, 0, 49, 24, 42260, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 672, True); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 14', 10, '2023-12-30T00:47:02.042260+01:00'::timestamptz, 576, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 14', 10, datetime.datetime(2023, 12, 30, 0, 47, 2, 42260, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 576, True); alias=default
(0.003) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 0', 6, '2023-12-30T00:52:06.042260+01:00'::timestamptz, 914, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 0', 6, datetime.datetime(2023, 12, 30, 0, 52, 6, 42260, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 914, True); alias=default
(0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 37, 38, 39, '2023-12-30T00:52:06.042260+01:00'::timestamptz, 880, '["Player 3", "Player 0", "Player 7", "Player 14"]', 'aavvsdfsd') RETURNING "pong_tournamentdata"."id"; args=(0, 37, 38, 39, datetime.datetime(2023, 12, 30, 0, 52, 6, 42260, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 880, <psycopg2._json.Json object at 0x7fd6310a6390>, 'aavvsdfsd'); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) DELETE FROM "pong_gamedata"; args=(); alias=default
(0.000) COMMIT; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) DELETE FROM "pong_tournamentdata"; args=(); alias=default
(0.000) COMMIT; args=None; alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 9', 6, '2024-01-08T06:23:18.107876+01:00'::timestamptz, 756, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 9', 6, datetime.datetime(2024, 1, 8, 6, 23, 18, 107876, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 756, False); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 5, 'Player 5', 11, '2023-12-02T02:17:03.107876+01:00'::timestamptz, 742, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 5, 'Player 5', 11, datetime.datetime(2023, 12, 2, 2, 17, 3, 107876, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 742, False); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 7', 4, '2024-01-09T14:35:40.107876+01:00'::timestamptz, 643, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 7', 4, datetime.datetime(2024, 1, 9, 14, 35, 40, 107876, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 643, True); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 5, 'Player 3', 11, '2024-01-09T14:37:39.107876+01:00'::timestamptz, 747, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 5, 'Player 3', 11, datetime.datetime(2024, 1, 9, 14, 37, 39, 107876, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 747, True); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 6, 'Player 3', 11, '2024-01-09T14:40:26.107876+01:00'::timestamptz, 432, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 6, 'Player 3', 11, datetime.datetime(2024, 1, 9, 14, 40, 26, 107876, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 432, True); alias=default
(0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 42, 43, 44, '2024-01-09T14:40:26.107876+01:00'::timestamptz, 929, '["Player 3", "Player 11", "Player 7", "Player 14"]', 'aavvsdfsd') RETURNING "pong_tournamentdata"."id"; args=(0, 42, 43, 44, datetime.datetime(2024, 1, 9, 14, 40, 26, 107876, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 929, <psycopg2._json.Json object at 0x7fd630ed0bc0>, 'aavvsdfsd'); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
(0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) DELETE FROM "pong_gamedata"; args=(); alias=default
(0.000) COMMIT; args=None; alias=default
(0.000) BEGIN; args=None; alias=default
(0.000) DELETE FROM "pong_tournamentdata"; args=(); alias=default
(0.000) COMMIT; args=None; alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 1', 5, '2024-01-06T12:21:17.170003+01:00'::timestamptz, 876, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 1', 5, datetime.datetime(2024, 1, 6, 12, 21, 17, 170003, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 876, False); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 12', 10, '2024-01-18T01:25:07.170003+01:00'::timestamptz, 116, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 12', 10, datetime.datetime(2024, 1, 18, 1, 25, 7, 170003, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 116, False); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 5, 'Player 0', 11, '2024-01-29T14:19:56.170003+01:00'::timestamptz, 283, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 5, 'Player 0', 11, datetime.datetime(2024, 1, 29, 14, 19, 56, 170003, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 283, True); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 7, 'Player 3', 11, '2024-01-29T14:19:41.170003+01:00'::timestamptz, 407, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 7, 'Player 3', 11, datetime.datetime(2024, 1, 29, 14, 19, 41, 170003, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 407, True); alias=default
(0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 1, 'Player 3', 11, '2024-01-29T14:22:43.170003+01:00'::timestamptz, 371, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 1, 'Player 3', 11, datetime.datetime(2024, 1, 29, 14, 22, 43, 170003, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 371, True); alias=default
(0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 47, 48, 49, '2024-01-29T14:22:43.170003+01:00'::timestamptz, 589, '["Player 3", "Player 0", "Player 9", "Player 12"]', 'aavvsdfsd') RETURNING "pong_tournamentdata"."id"; args=(0, 47, 48, 49, datetime.datetime(2024, 1, 29, 14, 22, 43, 170003, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 589, <psycopg2._json.Json object at 0x7fd630ee4500>, 'aavvsdfsd'); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
(0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
