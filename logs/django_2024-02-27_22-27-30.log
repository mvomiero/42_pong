DEBUG 2024-02-27 22:27:32,289 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:27:32,292 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,293 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:27:32,295 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,312 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:27:32,314 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:27:32,314 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,316 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:27:32,317 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 22:27:32,319 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 22:27:32,320 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:27:32,322 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,323 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,324 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,325 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,365 utils (0.009) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 14', 6, '2024-01-31T05:28:43.323242+01:00'::timestamptz, 418, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 14', 6, datetime.datetime(2024, 1, 31, 5, 28, 43, 323242, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 418, True); alias=default
DEBUG 2024-02-27 22:27:32,376 utils (0.010) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 8, 'Player 0', 11, '2024-01-31T05:30:50.323242+01:00'::timestamptz, 562, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 8, 'Player 0', 11, datetime.datetime(2024, 1, 31, 5, 30, 50, 323242, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 562, True); alias=default
DEBUG 2024-02-27 22:27:32,386 utils (0.010) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 2, 'Player 0', 11, '2024-01-31T05:34:55.323242+01:00'::timestamptz, 194, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 2, 'Player 0', 11, datetime.datetime(2024, 1, 31, 5, 34, 55, 323242, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 194, True); alias=default
DEBUG 2024-02-27 22:27:32,388 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2143, 2144, 2145, '2024-01-31T05:34:55.323242+01:00'::timestamptz, 807, '["Player 0", "Player 4", "Player 14", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2143, 2144, 2145, datetime.datetime(2024, 1, 31, 5, 34, 55, 323242, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 807, <psycopg2._json.Json object at 0x7ffb19103080>, '0x0'); alias=default
DEBUG 2024-02-27 22:27:32,393 utils (0.005) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 8, 'Player 2', 11, '2024-02-07T21:38:29.323242+01:00'::timestamptz, 567, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 8, 'Player 2', 11, datetime.datetime(2024, 2, 7, 21, 38, 29, 323242, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 567, True); alias=default
DEBUG 2024-02-27 22:27:32,398 utils (0.004) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 8, 'Player 15', 11, '2024-02-07T21:37:34.323242+01:00'::timestamptz, 460, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 8, 'Player 15', 11, datetime.datetime(2024, 2, 7, 21, 37, 34, 323242, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 460, True); alias=default
DEBUG 2024-02-27 22:27:32,400 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 15', 9, '2024-02-07T21:42:06.323242+01:00'::timestamptz, 601, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 15', 9, datetime.datetime(2024, 2, 7, 21, 42, 6, 323242, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 601, True); alias=default
DEBUG 2024-02-27 22:27:32,400 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2146, 2147, 2148, '2024-02-07T21:42:06.323242+01:00'::timestamptz, 784, '["Player 2", "Player 15", "Player 10", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2146, 2147, 2148, datetime.datetime(2024, 2, 7, 21, 42, 6, 323242, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 784, <psycopg2._json.Json object at 0x7ffb19103500>, '0x0'); alias=default
DEBUG 2024-02-27 22:27:32,401 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,402 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,403 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:27:32,404 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 22:27:32,405 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 22:27:32,406 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 22:27:32,408 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 22:27:32,410 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:27:32,412 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,413 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,414 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,415 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,417 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 10, 'Player 10', 11, '2023-12-01T11:19:45.413704+01:00'::timestamptz, 806, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 10, 'Player 10', 11, datetime.datetime(2023, 12, 1, 11, 19, 45, 413704, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 806, True); alias=default
DEBUG 2024-02-27 22:27:32,418 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 3, 'Player 11', 11, '2023-12-01T11:19:43.413704+01:00'::timestamptz, 193, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 3, 'Player 11', 11, datetime.datetime(2023, 12, 1, 11, 19, 43, 413704, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 193, True); alias=default
DEBUG 2024-02-27 22:27:32,419 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 1, 'Player 11', 11, '2023-12-01T11:20:53.413704+01:00'::timestamptz, 438, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 1, 'Player 11', 11, datetime.datetime(2023, 12, 1, 11, 20, 53, 413704, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 438, True); alias=default
DEBUG 2024-02-27 22:27:32,420 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2149, 2150, 2151, '2023-12-01T11:20:53.413704+01:00'::timestamptz, 874, '["Player 11", "Player 10", "Player 7", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2149, 2150, 2151, datetime.datetime(2023, 12, 1, 11, 20, 53, 413704, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 874, <psycopg2._json.Json object at 0x7ffb18f28680>, '0x0'); alias=default
DEBUG 2024-02-27 22:27:32,421 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 7, 'Player 4', 11, '2023-12-18T08:19:29.413704+01:00'::timestamptz, 895, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 7, 'Player 4', 11, datetime.datetime(2023, 12, 18, 8, 19, 29, 413704, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 895, True); alias=default
DEBUG 2024-02-27 22:27:32,423 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 6, 'Player 10', 11, '2023-12-18T08:19:34.413704+01:00'::timestamptz, 917, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 6, 'Player 10', 11, datetime.datetime(2023, 12, 18, 8, 19, 34, 413704, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 917, True); alias=default
DEBUG 2024-02-27 22:27:32,424 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 10', 3, '2023-12-18T08:20:04.413704+01:00'::timestamptz, 25, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 10', 3, datetime.datetime(2023, 12, 18, 8, 20, 4, 413704, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 25, True); alias=default
DEBUG 2024-02-27 22:27:32,425 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2152, 2153, 2154, '2023-12-18T08:20:04.413704+01:00'::timestamptz, 947, '["Player 4", "Player 10", "Player 9", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2152, 2153, 2154, datetime.datetime(2023, 12, 18, 8, 20, 4, 413704, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 947, <psycopg2._json.Json object at 0x7ffb18f28950>, '0x0'); alias=default
DEBUG 2024-02-27 22:27:32,426 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,426 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,427 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:27:32,428 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 22:27:32,431 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 22:27:32,432 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:27:32,433 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,434 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,435 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,436 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,438 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 9, 'Player 4', 11, '2024-01-03T13:42:41.434796+01:00'::timestamptz, 107, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 9, 'Player 4', 11, datetime.datetime(2024, 1, 3, 13, 42, 41, 434796, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 107, True); alias=default
DEBUG 2024-02-27 22:27:32,439 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 0', 8, '2024-01-03T13:37:16.434796+01:00'::timestamptz, 375, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 0', 8, datetime.datetime(2024, 1, 3, 13, 37, 16, 434796, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 375, True); alias=default
DEBUG 2024-02-27 22:27:32,440 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 0, 'Player 14', 11, '2024-01-03T13:45:37.434796+01:00'::timestamptz, 733, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 0, 'Player 14', 11, datetime.datetime(2024, 1, 3, 13, 45, 37, 434796, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 733, True); alias=default
DEBUG 2024-02-27 22:27:32,441 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2155, 2156, 2157, '2024-01-03T13:45:37.434796+01:00'::timestamptz, 876, '["Player 14", "Player 4", "Player 15", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2155, 2156, 2157, datetime.datetime(2024, 1, 3, 13, 45, 37, 434796, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 876, <psycopg2._json.Json object at 0x7ffb19063f20>, '0x0'); alias=default
DEBUG 2024-02-27 22:27:32,443 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 8, 'Player 0', 11, '2023-11-02T23:50:54.434796+01:00'::timestamptz, 698, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 8, 'Player 0', 11, datetime.datetime(2023, 11, 2, 23, 50, 54, 434796, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 698, True); alias=default
DEBUG 2024-02-27 22:27:32,444 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 8, 'Player 10', 11, '2023-11-02T23:48:29.434796+01:00'::timestamptz, 420, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 8, 'Player 10', 11, datetime.datetime(2023, 11, 2, 23, 48, 29, 434796, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 420, True); alias=default
DEBUG 2024-02-27 22:27:32,445 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 10', 8, '2023-11-02T23:51:10.434796+01:00'::timestamptz, 730, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 10', 8, datetime.datetime(2023, 11, 2, 23, 51, 10, 434796, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 730, True); alias=default
DEBUG 2024-02-27 22:27:32,447 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2158, 2159, 2160, '2023-11-02T23:51:10.434796+01:00'::timestamptz, 714, '["Player 0", "Player 10", "Player 7", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2158, 2159, 2160, datetime.datetime(2023, 11, 2, 23, 51, 10, 434796, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 714, <psycopg2._json.Json object at 0x7ffb18f29eb0>, '0x0'); alias=default
DEBUG 2024-02-27 22:27:32,448 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,450 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,451 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:27:32,452 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 22:27:32,453 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 22:27:32,454 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:27:32,455 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,456 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,457 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,458 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,459 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 1', 7, '2023-11-08T11:20:03.456414+01:00'::timestamptz, 42, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 1', 7, datetime.datetime(2023, 11, 8, 11, 20, 3, 456414, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 42, True); alias=default
DEBUG 2024-02-27 22:27:32,460 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 9, 'Player 3', 11, '2023-11-08T11:25:04.456414+01:00'::timestamptz, 827, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 9, 'Player 3', 11, datetime.datetime(2023, 11, 8, 11, 25, 4, 456414, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 827, True); alias=default
DEBUG 2024-02-27 22:27:32,462 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 2, 'Player 3', 11, '2023-11-08T11:26:07.456414+01:00'::timestamptz, 778, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 2, 'Player 3', 11, datetime.datetime(2023, 11, 8, 11, 26, 7, 456414, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 778, True); alias=default
DEBUG 2024-02-27 22:27:32,463 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2161, 2162, 2163, '2023-11-08T11:26:07.456414+01:00'::timestamptz, 890, '["Player 3", "Player 6", "Player 1", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2161, 2162, 2163, datetime.datetime(2023, 11, 8, 11, 26, 7, 456414, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 890, <psycopg2._json.Json object at 0x7ffb18f2a4e0>, '0x0'); alias=default
DEBUG 2024-02-27 22:27:32,465 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 2', 7, '2023-11-10T13:54:14.456414+01:00'::timestamptz, 161, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 2', 7, datetime.datetime(2023, 11, 10, 13, 54, 14, 456414, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 161, True); alias=default
DEBUG 2024-02-27 22:27:32,467 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 8', 7, '2023-11-10T13:55:11.456414+01:00'::timestamptz, 164, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 8', 7, datetime.datetime(2023, 11, 10, 13, 55, 11, 456414, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 164, True); alias=default
DEBUG 2024-02-27 22:27:32,468 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 8, 'Player 12', 11, '2023-11-10T14:05:22.456414+01:00'::timestamptz, 898, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 8, 'Player 12', 11, datetime.datetime(2023, 11, 10, 14, 5, 22, 456414, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 898, True); alias=default
DEBUG 2024-02-27 22:27:32,469 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2164, 2165, 2166, '2023-11-10T14:05:22.456414+01:00'::timestamptz, 829, '["Player 12", "Player 15", "Player 2", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2164, 2165, 2166, datetime.datetime(2023, 11, 10, 14, 5, 22, 456414, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 829, <psycopg2._json.Json object at 0x7ffb18f2b350>, '0x0'); alias=default
DEBUG 2024-02-27 22:27:32,470 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,471 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,472 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:27:32,473 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 22:27:32,474 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 22:27:32,476 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 22:27:32,476 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:27:32,477 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,478 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,479 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,481 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,483 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 8, 'Player 2', 11, '2023-12-18T14:18:13.478723+01:00'::timestamptz, 893, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 8, 'Player 2', 11, datetime.datetime(2023, 12, 18, 14, 18, 13, 478723, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 893, True); alias=default
DEBUG 2024-02-27 22:27:32,485 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 0, 'Player 10', 11, '2023-12-18T14:06:58.478723+01:00'::timestamptz, 167, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 0, 'Player 10', 11, datetime.datetime(2023, 12, 18, 14, 6, 58, 478723, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 167, True); alias=default
DEBUG 2024-02-27 22:27:32,486 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 5, 'Player 10', 11, '2023-12-18T14:19:46.478723+01:00'::timestamptz, 601, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 5, 'Player 10', 11, datetime.datetime(2023, 12, 18, 14, 19, 46, 478723, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 601, True); alias=default
DEBUG 2024-02-27 22:27:32,487 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2167, 2168, 2169, '2023-12-18T14:19:46.478723+01:00'::timestamptz, 986, '["Player 10", "Player 2", "Player 7", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2167, 2168, 2169, datetime.datetime(2023, 12, 18, 14, 19, 46, 478723, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 986, <psycopg2._json.Json object at 0x7ffb19103b60>, '0x0'); alias=default
DEBUG 2024-02-27 22:27:32,488 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 4, 'Player 13', 11, '2024-01-26T07:19:48.478723+01:00'::timestamptz, 930, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 4, 'Player 13', 11, datetime.datetime(2024, 1, 26, 7, 19, 48, 478723, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 930, True); alias=default
DEBUG 2024-02-27 22:27:32,489 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 10, 'Player 14', 11, '2024-01-26T07:16:40.478723+01:00'::timestamptz, 737, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 10, 'Player 14', 11, datetime.datetime(2024, 1, 26, 7, 16, 40, 478723, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 737, True); alias=default
DEBUG 2024-02-27 22:27:32,491 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 6, 'Player 14', 11, '2024-01-26T07:20:25.478723+01:00'::timestamptz, 925, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 6, 'Player 14', 11, datetime.datetime(2024, 1, 26, 7, 20, 25, 478723, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 925, True); alias=default
DEBUG 2024-02-27 22:27:32,491 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2170, 2171, 2172, '2024-01-26T07:20:25.478723+01:00'::timestamptz, 967, '["Player 14", "Player 13", "Player 8", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2170, 2171, 2172, datetime.datetime(2024, 1, 26, 7, 20, 25, 478723, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 967, <psycopg2._json.Json object at 0x7ffb18f293d0>, '0x0'); alias=default
DEBUG 2024-02-27 22:27:32,492 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:27:32,493 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
