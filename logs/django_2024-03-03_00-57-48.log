DEBUG 2024-03-03 00:57:50,010 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,012 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,014 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,015 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,015 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 00:57:50,021 utils (0.006) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:57:50,022 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,022 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,023 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 00:57:50,026 utils (0.002) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:57:50,029 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 00:57:50,031 utils (0.002) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 00:57:50,033 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,036 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T00:57:50.034383+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 0, 57, 50, 34383, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:57:50,037 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,037 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,039 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 00:57:50,042 utils (0.003) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:57:50,048 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 00:57:50,053 utils (0.005) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 00:57:50,055 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:57:50,058 utils (0.003) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:57:50,066 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 00:57:50,070 utils (0.004) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:57:50,071 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:57:50,073 utils (0.002) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:57:50,074 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:57:50,076 utils (0.002) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:57:50,077 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 00:57:50,080 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 00:57:50,080 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:57:50,082 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:57:50,082 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 00:57:50,085 utils (0.002) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 00:57:50,086 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 00:57:50,089 utils (0.003) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 00:57:50,089 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 00:57:50,091 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:57:50,092 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:57:50,093 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:57:50,093 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:57:50,094 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:57:50,094 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 00:57:50,096 utils (0.002) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 00:57:50,096 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 00:57:50,098 utils (0.002) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:57:50,098 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 00:57:50,100 utils (0.002) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 00:57:50,100 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 00:57:50,102 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 00:57:50,102 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:57:50,103 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:57:50,104 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:57:50,105 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:57:50,106 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 00:57:50,108 utils (0.002) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 00:57:50,108 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 00:57:50,110 utils (0.002) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 00:57:50,110 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 00:57:50,112 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:57:50,112 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:57:50,113 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:57:50,113 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:57:50,114 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:57:50,114 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 00:57:50,116 utils (0.002) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 00:57:50,116 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 00:57:50,118 utils (0.002) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:57:50,119 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,121 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,123 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T00:57:50.122238+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 0, 57, 50, 122238, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:57:50,123 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,130 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:57:50,134 utils (0.004) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:57:50,135 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:57:50,136 utils (0.002) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:57:50,137 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:57:50,138 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:57:50,138 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 00:57:50,141 utils (0.002) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 00:57:50,141 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 00:57:50,143 utils (0.002) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 00:57:50,144 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,146 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,148 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T00:57:50.146846+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 0, 57, 50, 146846, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:57:50,148 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,160 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,160 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T00:57:50.160390+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 0, 57, 50, 160390, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:57:50,161 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,161 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,172 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,174 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T00:57:50.173047+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 0, 57, 50, 173047, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:57:50,175 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,175 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,186 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 00:57:50,190 utils (0.004) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 00:57:50,208 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 00:57:50,209 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 00:57:50,212 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,213 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T00:57:50.212991+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 0, 57, 50, 212991, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:57:50,216 utils (0.002) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,217 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,231 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 00:57:50,233 utils (0.001) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 00:57:50,235 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,236 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T00:57:50.235940+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 0, 57, 50, 235940, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:57:50,237 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,238 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,256 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 00:57:50,257 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 00:57:50,258 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,260 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T00:57:50.259266+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 0, 57, 50, 259266, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:57:50,261 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,262 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,273 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,273 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T00:57:50.273287+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 0, 57, 50, 273287, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:57:50,274 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,274 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,282 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 00:57:50,283 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 00:57:50,285 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,286 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T00:57:50.285566+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 0, 57, 50, 285566, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:57:50,288 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,288 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,291 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,292 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T00:57:50.291594+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 0, 57, 50, 291594, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:57:50,293 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,293 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,304 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,305 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T00:57:50.304871+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 0, 57, 50, 304871, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:57:50,306 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,306 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,313 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:57:50,318 utils (0.004) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:57:50,320 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,321 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T00:57:50.321266+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 0, 57, 50, 321266, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:57:50,323 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,323 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,328 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:57:50,329 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:57:50,331 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,332 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T00:57:50.331765+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 0, 57, 50, 331765, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:57:50,333 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,334 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,341 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:57:50,342 utils (0.001) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:57:50,343 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,344 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T00:57:50.344203+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 0, 57, 50, 344203, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:57:50,345 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,346 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,359 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,359 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T00:57:50.359448+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 0, 57, 50, 359448, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:57:50,360 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,361 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,369 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:57:50,370 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:57:50,371 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,372 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T00:57:50.371772+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 0, 57, 50, 371772, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:57:50,373 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,373 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,375 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 00:57:50,381 utils (0.006) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:57:50,384 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 00:57:50,390 utils (0.006) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 00:57:50,392 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,392 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T00:57:50.392420+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 0, 57, 50, 392420, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:57:50,393 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,394 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,395 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 00:57:50,400 utils (0.004) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:57:50,400 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 00:57:50,402 utils (0.002) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 00:57:50,403 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 00:57:50,405 utils (0.002) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 00:57:50,406 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,407 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,409 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T00:57:50.408069+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 0, 57, 50, 408069, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:57:50,410 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:57:50,411 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,432 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 00:57:50,433 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,435 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 00:57:50,436 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,438 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 00:57:50,442 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 00:57:50,442 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,444 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 00:57:50,445 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,446 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 00:57:50,448 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,450 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,451 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,480 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 3', 2, '2024-02-06T03:15:45.450572+01:00'::timestamptz, 767, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 3', 2, datetime.datetime(2024, 2, 6, 3, 15, 45, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 767, False); alias=default
DEBUG 2024-03-03 00:57:50,482 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 13', 7, '2024-02-06T20:18:03.450572+01:00'::timestamptz, 291, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 13', 7, datetime.datetime(2024, 2, 6, 20, 18, 3, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 291, False); alias=default
DEBUG 2024-03-03 00:57:50,484 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 5, 'Player 6', 11, '2023-11-10T14:57:59.450572+01:00'::timestamptz, 7, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 5, 'Player 6', 11, datetime.datetime(2023, 11, 10, 14, 57, 59, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 7, False); alias=default
DEBUG 2024-03-03 00:57:50,486 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 9', 8, '2024-01-04T09:56:56.450572+01:00'::timestamptz, 834, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 9', 8, datetime.datetime(2024, 1, 4, 9, 56, 56, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 834, False); alias=default
DEBUG 2024-03-03 00:57:50,488 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 12', 6, '2024-02-11T13:36:45.450572+01:00'::timestamptz, 701, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 12', 6, datetime.datetime(2024, 2, 11, 13, 36, 45, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 701, False); alias=default
DEBUG 2024-03-03 00:57:50,489 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 5', 9, '2023-12-24T21:22:16.450572+01:00'::timestamptz, 134, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 5', 9, datetime.datetime(2023, 12, 24, 21, 22, 16, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 134, False); alias=default
DEBUG 2024-03-03 00:57:50,491 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 17', 8, '2024-01-24T05:34:27.450572+01:00'::timestamptz, 931, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 17', 8, datetime.datetime(2024, 1, 24, 5, 34, 27, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 931, False); alias=default
DEBUG 2024-03-03 00:57:50,492 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 10, 'Player 15', 11, '2023-11-15T03:00:33.450572+01:00'::timestamptz, 203, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 10, 'Player 15', 11, datetime.datetime(2023, 11, 15, 3, 0, 33, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 203, False); alias=default
DEBUG 2024-03-03 00:57:50,493 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 3, 'Player 10', 11, '2023-11-24T16:21:23.450572+01:00'::timestamptz, 343, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 3, 'Player 10', 11, datetime.datetime(2023, 11, 24, 16, 21, 23, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 343, False); alias=default
DEBUG 2024-03-03 00:57:50,494 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 13', 9, '2024-02-02T21:18:14.450572+01:00'::timestamptz, 516, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 13', 9, datetime.datetime(2024, 2, 2, 21, 18, 14, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 516, False); alias=default
DEBUG 2024-03-03 00:57:50,496 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 0', 3, '2023-11-23T15:34:49.450572+01:00'::timestamptz, 976, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 0', 3, datetime.datetime(2023, 11, 23, 15, 34, 49, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 976, False); alias=default
DEBUG 2024-03-03 00:57:50,497 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 1', 9, '2023-12-23T08:17:54.450572+01:00'::timestamptz, 41, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 1', 9, datetime.datetime(2023, 12, 23, 8, 17, 54, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 41, False); alias=default
DEBUG 2024-03-03 00:57:50,498 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 7, 'Player 17', 11, '2024-02-18T14:52:39.450572+01:00'::timestamptz, 206, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 7, 'Player 17', 11, datetime.datetime(2024, 2, 18, 14, 52, 39, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 206, False); alias=default
DEBUG 2024-03-03 00:57:50,500 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 21', 7, '2023-12-23T18:11:28.450572+01:00'::timestamptz, 853, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 21', 7, datetime.datetime(2023, 12, 23, 18, 11, 28, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 853, False); alias=default
DEBUG 2024-03-03 00:57:50,502 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 2', 1, '2024-01-02T15:08:31.450572+01:00'::timestamptz, 854, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 2', 1, datetime.datetime(2024, 1, 2, 15, 8, 31, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 854, False); alias=default
DEBUG 2024-03-03 00:57:50,504 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 20', 6, '2023-12-03T10:06:32.450572+01:00'::timestamptz, 280, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 20', 6, datetime.datetime(2023, 12, 3, 10, 6, 32, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 280, False); alias=default
DEBUG 2024-03-03 00:57:50,505 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 4, 'Player 0', 11, '2023-12-27T06:40:05.450572+01:00'::timestamptz, 968, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 4, 'Player 0', 11, datetime.datetime(2023, 12, 27, 6, 40, 5, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 968, False); alias=default
DEBUG 2024-03-03 00:57:50,506 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 5, 'Player 6', 11, '2023-11-02T07:10:08.450572+01:00'::timestamptz, 597, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 5, 'Player 6', 11, datetime.datetime(2023, 11, 2, 7, 10, 8, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 597, False); alias=default
DEBUG 2024-03-03 00:57:50,508 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 0', 6, '2024-02-26T19:57:05.450572+01:00'::timestamptz, 18, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 0', 6, datetime.datetime(2024, 2, 26, 19, 57, 5, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 18, False); alias=default
DEBUG 2024-03-03 00:57:50,509 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 23', 4, '2024-01-11T08:09:58.450572+01:00'::timestamptz, 704, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 23', 4, datetime.datetime(2024, 1, 11, 8, 9, 58, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 704, False); alias=default
DEBUG 2024-03-03 00:57:50,510 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 3, 'Player 2', 11, '2023-11-28T15:10:33.450572+01:00'::timestamptz, 187, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 3, 'Player 2', 11, datetime.datetime(2023, 11, 28, 15, 10, 33, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 187, False); alias=default
DEBUG 2024-03-03 00:57:50,512 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 8, 'Player 18', 11, '2023-12-25T17:05:33.450572+01:00'::timestamptz, 893, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 8, 'Player 18', 11, datetime.datetime(2023, 12, 25, 17, 5, 33, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 893, False); alias=default
DEBUG 2024-03-03 00:57:50,513 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 1, 'Player 12', 11, '2023-12-06T13:57:40.450572+01:00'::timestamptz, 466, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 1, 'Player 12', 11, datetime.datetime(2023, 12, 6, 13, 57, 40, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 466, False); alias=default
DEBUG 2024-03-03 00:57:50,514 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 6', 10, '2023-11-05T01:25:57.450572+01:00'::timestamptz, 870, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 6', 10, datetime.datetime(2023, 11, 5, 1, 25, 57, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 870, False); alias=default
DEBUG 2024-03-03 00:57:50,515 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 4, 'Player 20', 11, '2024-02-07T13:36:56.450572+01:00'::timestamptz, 567, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 4, 'Player 20', 11, datetime.datetime(2024, 2, 7, 13, 36, 56, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 567, False); alias=default
DEBUG 2024-03-03 00:57:50,516 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 27', 2, '2023-12-07T21:47:06.450572+01:00'::timestamptz, 677, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 27', 2, datetime.datetime(2023, 12, 7, 21, 47, 6, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 677, False); alias=default
DEBUG 2024-03-03 00:57:50,518 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 7, 'Player 15', 11, '2023-11-16T06:08:08.450572+01:00'::timestamptz, 122, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 7, 'Player 15', 11, datetime.datetime(2023, 11, 16, 6, 8, 8, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 122, False); alias=default
DEBUG 2024-03-03 00:57:50,520 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 28', 9, '2023-12-30T19:32:09.450572+01:00'::timestamptz, 754, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 28', 9, datetime.datetime(2023, 12, 30, 19, 32, 9, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 754, False); alias=default
DEBUG 2024-03-03 00:57:50,522 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 9', 1, '2024-02-27T10:31:56.450572+01:00'::timestamptz, 955, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 9', 1, datetime.datetime(2024, 2, 27, 10, 31, 56, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 955, False); alias=default
DEBUG 2024-03-03 00:57:50,523 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 0, 'Player 29', 11, '2023-11-03T19:42:38.450572+01:00'::timestamptz, 705, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 0, 'Player 29', 11, datetime.datetime(2023, 11, 3, 19, 42, 38, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 705, False); alias=default
DEBUG 2024-03-03 00:57:50,524 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 11, 'Player 22', 7, '2024-02-02T04:25:34.450572+01:00'::timestamptz, 694, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 11, 'Player 22', 7, datetime.datetime(2024, 2, 2, 4, 25, 34, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 694, False); alias=default
DEBUG 2024-03-03 00:57:50,526 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 10, 'Player 18', 11, '2024-01-26T15:03:03.450572+01:00'::timestamptz, 735, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 10, 'Player 18', 11, datetime.datetime(2024, 1, 26, 15, 3, 3, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 735, False); alias=default
DEBUG 2024-03-03 00:57:50,527 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 28', 4, '2024-01-30T23:46:20.450572+01:00'::timestamptz, 449, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 28', 4, datetime.datetime(2024, 1, 30, 23, 46, 20, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 449, False); alias=default
DEBUG 2024-03-03 00:57:50,528 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 0, 'Player 13', 11, '2024-01-07T00:40:18.450572+01:00'::timestamptz, 80, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 0, 'Player 13', 11, datetime.datetime(2024, 1, 7, 0, 40, 18, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 80, False); alias=default
DEBUG 2024-03-03 00:57:50,529 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 10, 'Player 3', 11, '2024-02-14T15:20:34.450572+01:00'::timestamptz, 836, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 10, 'Player 3', 11, datetime.datetime(2024, 2, 14, 15, 20, 34, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 836, False); alias=default
DEBUG 2024-03-03 00:57:50,531 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 7', 2, '2024-01-03T03:48:52.450572+01:00'::timestamptz, 100, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 7', 2, datetime.datetime(2024, 1, 3, 3, 48, 52, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 100, False); alias=default
DEBUG 2024-03-03 00:57:50,532 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 0, 'Player 23', 11, '2023-11-24T09:17:16.450572+01:00'::timestamptz, 775, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 0, 'Player 23', 11, datetime.datetime(2023, 11, 24, 9, 17, 16, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 775, False); alias=default
DEBUG 2024-03-03 00:57:50,533 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 5, 'Player 18', 11, '2023-11-16T09:58:57.450572+01:00'::timestamptz, 886, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 5, 'Player 18', 11, datetime.datetime(2023, 11, 16, 9, 58, 57, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 886, False); alias=default
DEBUG 2024-03-03 00:57:50,535 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 4, 'Player 0', 11, '2023-12-16T02:29:24.450572+01:00'::timestamptz, 202, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 4, 'Player 0', 11, datetime.datetime(2023, 12, 16, 2, 29, 24, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 202, False); alias=default
DEBUG 2024-03-03 00:57:50,537 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 8', 7, '2023-12-02T03:00:00.450572+01:00'::timestamptz, 524, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 8', 7, datetime.datetime(2023, 12, 2, 3, 0, 0, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 524, False); alias=default
DEBUG 2024-03-03 00:57:50,539 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 9', 5, '2024-01-15T18:18:02.450572+01:00'::timestamptz, 276, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 9', 5, datetime.datetime(2024, 1, 15, 18, 18, 2, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 276, False); alias=default
DEBUG 2024-03-03 00:57:50,540 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 11, 'Player 30', 8, '2024-02-06T21:03:45.450572+01:00'::timestamptz, 749, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 11, 'Player 30', 8, datetime.datetime(2024, 2, 6, 21, 3, 45, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 749, False); alias=default
DEBUG 2024-03-03 00:57:50,541 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 5, 'Player 29', 11, '2024-03-01T10:50:32.450572+01:00'::timestamptz, 427, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 5, 'Player 29', 11, datetime.datetime(2024, 3, 1, 10, 50, 32, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 427, False); alias=default
DEBUG 2024-03-03 00:57:50,542 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 0, 'Player 10', 11, '2023-11-13T06:08:06.450572+01:00'::timestamptz, 139, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 0, 'Player 10', 11, datetime.datetime(2023, 11, 13, 6, 8, 6, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 139, False); alias=default
DEBUG 2024-03-03 00:57:50,543 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 26', 7, '2023-11-26T22:59:09.450572+01:00'::timestamptz, 865, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 26', 7, datetime.datetime(2023, 11, 26, 22, 59, 9, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 865, False); alias=default
DEBUG 2024-03-03 00:57:50,545 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 33', 4, '2024-01-20T23:28:38.450572+01:00'::timestamptz, 152, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 33', 4, datetime.datetime(2024, 1, 20, 23, 28, 38, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 152, False); alias=default
DEBUG 2024-03-03 00:57:50,546 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 0, 'Player 14', 11, '2024-03-03T01:52:40.450572+01:00'::timestamptz, 658, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 0, 'Player 14', 11, datetime.datetime(2024, 3, 3, 1, 52, 40, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 658, False); alias=default
DEBUG 2024-03-03 00:57:50,547 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 0, 'Player 21', 11, '2023-11-02T13:58:24.450572+01:00'::timestamptz, 385, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 0, 'Player 21', 11, datetime.datetime(2023, 11, 2, 13, 58, 24, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 385, False); alias=default
DEBUG 2024-03-03 00:57:50,548 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 8, 'Player 35', 11, '2023-12-21T23:26:57.450572+01:00'::timestamptz, 338, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 8, 'Player 35', 11, datetime.datetime(2023, 12, 21, 23, 26, 57, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 338, False); alias=default
DEBUG 2024-03-03 00:57:50,549 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 7, 'Player 37', 11, '2024-01-17T15:44:37.450572+01:00'::timestamptz, 719, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 7, 'Player 37', 11, datetime.datetime(2024, 1, 17, 15, 44, 37, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 719, False); alias=default
DEBUG 2024-03-03 00:57:50,551 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 40', 7, '2024-02-07T03:01:42.450572+01:00'::timestamptz, 718, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 40', 7, datetime.datetime(2024, 2, 7, 3, 1, 42, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 718, False); alias=default
DEBUG 2024-03-03 00:57:50,552 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 26', 9, '2023-11-01T10:59:11.450572+01:00'::timestamptz, 999, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 26', 9, datetime.datetime(2023, 11, 1, 10, 59, 11, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 999, False); alias=default
DEBUG 2024-03-03 00:57:50,554 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 0, 'Player 17', 11, '2023-12-24T18:28:58.450572+01:00'::timestamptz, 459, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 0, 'Player 17', 11, datetime.datetime(2023, 12, 24, 18, 28, 58, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 459, False); alias=default
DEBUG 2024-03-03 00:57:50,556 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 27', 3, '2023-12-13T16:17:31.450572+01:00'::timestamptz, 818, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 27', 3, datetime.datetime(2023, 12, 13, 16, 17, 31, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 818, False); alias=default
DEBUG 2024-03-03 00:57:50,558 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 42', 1, '2024-02-01T08:09:34.450572+01:00'::timestamptz, 524, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 42', 1, datetime.datetime(2024, 2, 1, 8, 9, 34, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 524, False); alias=default
DEBUG 2024-03-03 00:57:50,559 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 13', 1, '2023-12-16T19:41:06.450572+01:00'::timestamptz, 885, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 13', 1, datetime.datetime(2023, 12, 16, 19, 41, 6, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 885, False); alias=default
DEBUG 2024-03-03 00:57:50,560 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 7, 'Player 34', 11, '2024-01-29T11:52:14.450572+01:00'::timestamptz, 337, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 7, 'Player 34', 11, datetime.datetime(2024, 1, 29, 11, 52, 14, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 337, False); alias=default
DEBUG 2024-03-03 00:57:50,561 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 10, 'Player 14', 11, '2023-12-03T22:37:33.450572+01:00'::timestamptz, 820, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 10, 'Player 14', 11, datetime.datetime(2023, 12, 3, 22, 37, 33, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 820, False); alias=default
DEBUG 2024-03-03 00:57:50,563 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 5, 'Player 22', 11, '2023-11-23T16:47:42.450572+01:00'::timestamptz, 532, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 5, 'Player 22', 11, datetime.datetime(2023, 11, 23, 16, 47, 42, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 532, False); alias=default
DEBUG 2024-03-03 00:57:50,564 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 8, 'Player 12', 11, '2023-11-07T16:36:33.450572+01:00'::timestamptz, 702, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 8, 'Player 12', 11, datetime.datetime(2023, 11, 7, 16, 36, 33, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 702, False); alias=default
DEBUG 2024-03-03 00:57:50,566 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 15', 1, '2023-11-30T10:14:00.450572+01:00'::timestamptz, 433, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 15', 1, datetime.datetime(2023, 11, 30, 10, 14, 0, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 433, False); alias=default
DEBUG 2024-03-03 00:57:50,567 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 39', 4, '2024-01-29T06:00:34.450572+01:00'::timestamptz, 836, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 39', 4, datetime.datetime(2024, 1, 29, 6, 0, 34, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 836, False); alias=default
DEBUG 2024-03-03 00:57:50,568 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 10', 3, '2023-12-30T21:43:21.450572+01:00'::timestamptz, 715, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 10', 3, datetime.datetime(2023, 12, 30, 21, 43, 21, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 715, False); alias=default
DEBUG 2024-03-03 00:57:50,570 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 2, 'Player 18', 11, '2023-11-11T16:30:14.450572+01:00'::timestamptz, 878, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 2, 'Player 18', 11, datetime.datetime(2023, 11, 11, 16, 30, 14, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 878, False); alias=default
DEBUG 2024-03-03 00:57:50,572 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 6', 10, '2024-01-02T18:28:22.450572+01:00'::timestamptz, 452, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 6', 10, datetime.datetime(2024, 1, 2, 18, 28, 22, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 452, False); alias=default
DEBUG 2024-03-03 00:57:50,574 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 7, 'Player 16', 11, '2024-02-19T18:27:43.450572+01:00'::timestamptz, 104, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 7, 'Player 16', 11, datetime.datetime(2024, 2, 19, 18, 27, 43, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 104, False); alias=default
DEBUG 2024-03-03 00:57:50,575 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 46', 11, 'Player 35', 4, '2023-12-13T21:11:20.450572+01:00'::timestamptz, 433, false) RETURNING "pong_gamedata"."id"; args=('Player 46', 11, 'Player 35', 4, datetime.datetime(2023, 12, 13, 21, 11, 20, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 433, False); alias=default
DEBUG 2024-03-03 00:57:50,576 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 0', 3, '2023-11-22T15:53:10.450572+01:00'::timestamptz, 134, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 0', 3, datetime.datetime(2023, 11, 22, 15, 53, 10, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 134, False); alias=default
DEBUG 2024-03-03 00:57:50,578 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 47', 2, 'Player 37', 11, '2023-11-27T06:15:13.450572+01:00'::timestamptz, 485, false) RETURNING "pong_gamedata"."id"; args=('Player 47', 2, 'Player 37', 11, datetime.datetime(2023, 11, 27, 6, 15, 13, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 485, False); alias=default
DEBUG 2024-03-03 00:57:50,579 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 1, 'Player 43', 11, '2024-02-13T03:20:47.450572+01:00'::timestamptz, 848, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 1, 'Player 43', 11, datetime.datetime(2024, 2, 13, 3, 20, 47, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 848, False); alias=default
DEBUG 2024-03-03 00:57:50,580 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 4, 'Player 39', 11, '2023-12-05T11:33:19.450572+01:00'::timestamptz, 876, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 4, 'Player 39', 11, datetime.datetime(2023, 12, 5, 11, 33, 19, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 876, False); alias=default
DEBUG 2024-03-03 00:57:50,582 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 2, 'Player 47', 11, '2023-11-11T06:06:51.450572+01:00'::timestamptz, 346, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 2, 'Player 47', 11, datetime.datetime(2023, 11, 11, 6, 6, 51, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 346, False); alias=default
DEBUG 2024-03-03 00:57:50,583 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 11, 'Player 46', 1, '2023-11-17T00:15:51.450572+01:00'::timestamptz, 129, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 11, 'Player 46', 1, datetime.datetime(2023, 11, 17, 0, 15, 51, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 129, False); alias=default
DEBUG 2024-03-03 00:57:50,584 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 7, 'Player 39', 11, '2023-11-25T22:25:17.450572+01:00'::timestamptz, 218, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 7, 'Player 39', 11, datetime.datetime(2023, 11, 25, 22, 25, 17, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 218, False); alias=default
DEBUG 2024-03-03 00:57:50,586 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 6, 'Player 45', 11, '2024-01-17T04:57:45.450572+01:00'::timestamptz, 98, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 6, 'Player 45', 11, datetime.datetime(2024, 1, 17, 4, 57, 45, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 98, False); alias=default
DEBUG 2024-03-03 00:57:50,588 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 42', 10, '2024-02-26T20:14:24.450572+01:00'::timestamptz, 384, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 42', 10, datetime.datetime(2024, 2, 26, 20, 14, 24, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 384, False); alias=default
DEBUG 2024-03-03 00:57:50,590 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 26', 10, '2023-12-28T13:57:10.450572+01:00'::timestamptz, 611, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 26', 10, datetime.datetime(2023, 12, 28, 13, 57, 10, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 611, False); alias=default
DEBUG 2024-03-03 00:57:50,591 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 2', 1, '2023-11-29T21:50:48.450572+01:00'::timestamptz, 723, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 2', 1, datetime.datetime(2023, 11, 29, 21, 50, 48, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 723, False); alias=default
DEBUG 2024-03-03 00:57:50,593 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 6, 'Player 18', 11, '2023-11-17T05:08:29.450572+01:00'::timestamptz, 150, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 6, 'Player 18', 11, datetime.datetime(2023, 11, 17, 5, 8, 29, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 150, False); alias=default
DEBUG 2024-03-03 00:57:50,594 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 7, 'Player 11', 11, '2024-01-01T02:14:46.450572+01:00'::timestamptz, 574, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 7, 'Player 11', 11, datetime.datetime(2024, 1, 1, 2, 14, 46, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 574, False); alias=default
DEBUG 2024-03-03 00:57:50,595 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 3, 'Player 4', 11, '2024-02-11T23:20:19.450572+01:00'::timestamptz, 797, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 3, 'Player 4', 11, datetime.datetime(2024, 2, 11, 23, 20, 19, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 797, False); alias=default
DEBUG 2024-03-03 00:57:50,597 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 11, 'Player 40', 1, '2023-12-29T02:42:42.450572+01:00'::timestamptz, 778, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 11, 'Player 40', 1, datetime.datetime(2023, 12, 29, 2, 42, 42, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 778, False); alias=default
DEBUG 2024-03-03 00:57:50,598 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 7', 9, '2024-02-05T18:44:29.450572+01:00'::timestamptz, 253, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 7', 9, datetime.datetime(2024, 2, 5, 18, 44, 29, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 253, False); alias=default
DEBUG 2024-03-03 00:57:50,600 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 7, 'Player 56', 11, '2023-11-03T11:10:18.450572+01:00'::timestamptz, 377, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 7, 'Player 56', 11, datetime.datetime(2023, 11, 3, 11, 10, 18, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 377, False); alias=default
DEBUG 2024-03-03 00:57:50,601 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 5', 10, '2024-01-03T08:47:19.450572+01:00'::timestamptz, 942, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 5', 10, datetime.datetime(2024, 1, 3, 8, 47, 19, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 942, False); alias=default
DEBUG 2024-03-03 00:57:50,602 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 50', 6, 'Player 8', 11, '2023-11-20T16:27:10.450572+01:00'::timestamptz, 908, false) RETURNING "pong_gamedata"."id"; args=('Player 50', 6, 'Player 8', 11, datetime.datetime(2023, 11, 20, 16, 27, 10, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 908, False); alias=default
DEBUG 2024-03-03 00:57:50,603 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 9, 'Player 38', 11, '2024-02-24T17:31:45.450572+01:00'::timestamptz, 45, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 9, 'Player 38', 11, datetime.datetime(2024, 2, 24, 17, 31, 45, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 45, False); alias=default
DEBUG 2024-03-03 00:57:50,605 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 8, 'Player 0', 11, '2023-12-31T07:00:41.450572+01:00'::timestamptz, 974, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 8, 'Player 0', 11, datetime.datetime(2023, 12, 31, 7, 0, 41, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 974, False); alias=default
DEBUG 2024-03-03 00:57:50,607 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 58', 8, 'Player 23', 11, '2023-12-07T16:04:37.450572+01:00'::timestamptz, 653, false) RETURNING "pong_gamedata"."id"; args=('Player 58', 8, 'Player 23', 11, datetime.datetime(2023, 12, 7, 16, 4, 37, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 653, False); alias=default
DEBUG 2024-03-03 00:57:50,609 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 10, 'Player 12', 11, '2024-02-10T07:55:57.450572+01:00'::timestamptz, 328, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 10, 'Player 12', 11, datetime.datetime(2024, 2, 10, 7, 55, 57, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 328, False); alias=default
DEBUG 2024-03-03 00:57:50,610 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 55', 5, 'Player 25', 11, '2024-01-10T16:41:34.450572+01:00'::timestamptz, 284, false) RETURNING "pong_gamedata"."id"; args=('Player 55', 5, 'Player 25', 11, datetime.datetime(2024, 1, 10, 16, 41, 34, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 284, False); alias=default
DEBUG 2024-03-03 00:57:50,611 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 11, 'Player 45', 10, '2024-02-06T21:58:50.450572+01:00'::timestamptz, 904, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 11, 'Player 45', 10, datetime.datetime(2024, 2, 6, 21, 58, 50, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 904, False); alias=default
DEBUG 2024-03-03 00:57:50,613 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 11, 'Player 22', 9, '2024-02-21T11:50:42.450572+01:00'::timestamptz, 764, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 11, 'Player 22', 9, datetime.datetime(2024, 2, 21, 11, 50, 42, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 764, False); alias=default
DEBUG 2024-03-03 00:57:50,614 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 9, 'Player 0', 11, '2024-02-05T16:26:50.450572+01:00'::timestamptz, 93, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 9, 'Player 0', 11, datetime.datetime(2024, 2, 5, 16, 26, 50, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 93, False); alias=default
DEBUG 2024-03-03 00:57:50,615 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 47', 11, 'Player 26', 10, '2024-02-29T19:49:07.450572+01:00'::timestamptz, 360, false) RETURNING "pong_gamedata"."id"; args=('Player 47', 11, 'Player 26', 10, datetime.datetime(2024, 2, 29, 19, 49, 7, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 360, False); alias=default
DEBUG 2024-03-03 00:57:50,616 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 7', 9, '2024-01-15T06:57:34.450572+01:00'::timestamptz, 987, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 7', 9, datetime.datetime(2024, 1, 15, 6, 57, 34, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 987, False); alias=default
DEBUG 2024-03-03 00:57:50,617 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 58', 8, '2024-02-04T07:17:43.450572+01:00'::timestamptz, 609, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 58', 8, datetime.datetime(2024, 2, 4, 7, 17, 43, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 609, False); alias=default
DEBUG 2024-03-03 00:57:50,619 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 56', 8, '2023-11-20T16:20:22.450572+01:00'::timestamptz, 770, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 56', 8, datetime.datetime(2023, 11, 20, 16, 20, 22, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 770, False); alias=default
DEBUG 2024-03-03 00:57:50,620 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 7, 'Player 19', 11, '2023-12-31T20:06:07.450572+01:00'::timestamptz, 938, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 7, 'Player 19', 11, datetime.datetime(2023, 12, 31, 20, 6, 7, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 938, False); alias=default
DEBUG 2024-03-03 00:57:50,622 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 51', 5, 'Player 35', 11, '2023-11-10T05:58:06.450572+01:00'::timestamptz, 694, false) RETURNING "pong_gamedata"."id"; args=('Player 51', 5, 'Player 35', 11, datetime.datetime(2023, 11, 10, 5, 58, 6, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 694, False); alias=default
DEBUG 2024-03-03 00:57:50,624 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,626 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 0, 'Player 5', 11, '2023-11-12T06:10:48.450572+01:00'::timestamptz, 949, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 0, 'Player 5', 11, datetime.datetime(2023, 11, 12, 6, 10, 48, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 949, True); alias=default
DEBUG 2024-03-03 00:57:50,627 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 7, 'Player 7', 11, '2023-11-12T06:07:35.450572+01:00'::timestamptz, 39, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 7, 'Player 7', 11, datetime.datetime(2023, 11, 12, 6, 7, 35, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 39, True); alias=default
DEBUG 2024-03-03 00:57:50,628 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 7', 6, '2023-11-12T06:11:34.450572+01:00'::timestamptz, 306, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 7', 6, datetime.datetime(2023, 11, 12, 6, 11, 34, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 306, True); alias=default
DEBUG 2024-03-03 00:57:50,630 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2023-11-12T06:11:34.450572+01:00'::timestamptz, 995, '["Player 5", "Player 7", "Player 1", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2023, 11, 12, 6, 11, 34, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 995, <psycopg2._json.Json object at 0x7f1994a1de80>, '0x0'); alias=default
DEBUG 2024-03-03 00:57:50,631 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 14', 8, '2023-12-31T07:41:08.450572+01:00'::timestamptz, 924, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 14', 8, datetime.datetime(2023, 12, 31, 7, 41, 8, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 924, True); alias=default
DEBUG 2024-03-03 00:57:50,632 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 6, 'Player 5', 11, '2023-12-31T07:41:02.450572+01:00'::timestamptz, 883, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 6, 'Player 5', 11, datetime.datetime(2023, 12, 31, 7, 41, 2, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 883, True); alias=default
DEBUG 2024-03-03 00:57:50,634 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 5', 9, '2023-12-31T07:41:55.450572+01:00'::timestamptz, 115, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 5', 9, datetime.datetime(2023, 12, 31, 7, 41, 55, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 115, True); alias=default
DEBUG 2024-03-03 00:57:50,635 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2023-12-31T07:41:55.450572+01:00'::timestamptz, 971, '["Player 13", "Player 5", "Player 14", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2023, 12, 31, 7, 41, 55, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 971, <psycopg2._json.Json object at 0x7f1994991670>, '0x0'); alias=default
DEBUG 2024-03-03 00:57:50,636 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 1, 'Player 10', 11, '2023-12-22T17:37:23.450572+01:00'::timestamptz, 186, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 1, 'Player 10', 11, datetime.datetime(2023, 12, 22, 17, 37, 23, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 186, True); alias=default
DEBUG 2024-03-03 00:57:50,638 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 3, 'Player 2', 11, '2023-12-22T17:38:50.450572+01:00'::timestamptz, 434, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 3, 'Player 2', 11, datetime.datetime(2023, 12, 22, 17, 38, 50, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 434, True); alias=default
DEBUG 2024-03-03 00:57:50,640 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 5, 'Player 2', 11, '2023-12-22T17:42:07.450572+01:00'::timestamptz, 168, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 5, 'Player 2', 11, datetime.datetime(2023, 12, 22, 17, 42, 7, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 168, True); alias=default
DEBUG 2024-03-03 00:57:50,641 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2023-12-22T17:42:07.450572+01:00'::timestamptz, 631, '["Player 2", "Player 10", "Player 7", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2023, 12, 22, 17, 42, 7, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 631, <psycopg2._json.Json object at 0x7f19947f8bf0>, '0x0'); alias=default
DEBUG 2024-03-03 00:57:50,643 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 7, 'Player 2', 11, '2023-11-04T05:55:59.450572+01:00'::timestamptz, 453, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 7, 'Player 2', 11, datetime.datetime(2023, 11, 4, 5, 55, 59, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 453, True); alias=default
DEBUG 2024-03-03 00:57:50,644 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 14', 4, '2023-11-04T06:02:06.450572+01:00'::timestamptz, 490, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 14', 4, datetime.datetime(2023, 11, 4, 6, 2, 6, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 490, True); alias=default
DEBUG 2024-03-03 00:57:50,645 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 1', 2, '2023-11-04T06:03:34.450572+01:00'::timestamptz, 268, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 1', 2, datetime.datetime(2023, 11, 4, 6, 3, 34, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 268, True); alias=default
DEBUG 2024-03-03 00:57:50,647 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2023-11-04T06:03:34.450572+01:00'::timestamptz, 908, '["Player 2", "Player 1", "Player 10", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2023, 11, 4, 6, 3, 34, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 908, <psycopg2._json.Json object at 0x7f19947f82c0>, '0x0'); alias=default
DEBUG 2024-03-03 00:57:50,648 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 8, 'Player 5', 11, '2023-11-15T13:22:51.450572+01:00'::timestamptz, 631, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 8, 'Player 5', 11, datetime.datetime(2023, 11, 15, 13, 22, 51, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 631, True); alias=default
DEBUG 2024-03-03 00:57:50,649 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 14', 4, '2023-11-15T13:24:01.450572+01:00'::timestamptz, 947, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 14', 4, datetime.datetime(2023, 11, 15, 13, 24, 1, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 947, True); alias=default
DEBUG 2024-03-03 00:57:50,651 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 11', 6, '2023-11-15T13:24:13.450572+01:00'::timestamptz, 688, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 11', 6, datetime.datetime(2023, 11, 15, 13, 24, 13, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 688, True); alias=default
DEBUG 2024-03-03 00:57:50,652 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2023-11-15T13:24:13.450572+01:00'::timestamptz, 959, '["Player 5", "Player 11", "Player 15", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2023, 11, 15, 13, 24, 13, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 959, <psycopg2._json.Json object at 0x7f19947f9f10>, '0x0'); alias=default
DEBUG 2024-03-03 00:57:50,653 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 6', 10, '2024-01-09T02:59:53.450572+01:00'::timestamptz, 965, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 6', 10, datetime.datetime(2024, 1, 9, 2, 59, 53, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 965, True); alias=default
DEBUG 2024-03-03 00:57:50,655 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 16', 1, '2024-01-09T02:52:42.450572+01:00'::timestamptz, 456, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 16', 1, datetime.datetime(2024, 1, 9, 2, 52, 42, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 456, True); alias=default
DEBUG 2024-03-03 00:57:50,657 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 17', 3, '2024-01-09T03:00:06.450572+01:00'::timestamptz, 839, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 17', 3, datetime.datetime(2024, 1, 9, 3, 0, 6, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 839, True); alias=default
DEBUG 2024-03-03 00:57:50,659 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2024-01-09T03:00:06.450572+01:00'::timestamptz, 978, '["Player 4", "Player 17", "Player 6", "Player 16"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2024, 1, 9, 3, 0, 6, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 978, <psycopg2._json.Json object at 0x7f19947fa8d0>, '0x0'); alias=default
DEBUG 2024-03-03 00:57:50,660 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 7', 8, '2024-02-04T00:46:01.450572+01:00'::timestamptz, 133, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 7', 8, datetime.datetime(2024, 2, 4, 0, 46, 1, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 133, True); alias=default
DEBUG 2024-03-03 00:57:50,662 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 7, 'Player 17', 11, '2024-02-04T00:53:52.450572+01:00'::timestamptz, 947, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 7, 'Player 17', 11, datetime.datetime(2024, 2, 4, 0, 53, 52, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 947, True); alias=default
DEBUG 2024-03-03 00:57:50,663 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 7, 'Player 17', 11, '2024-02-04T00:54:07.450572+01:00'::timestamptz, 967, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 7, 'Player 17', 11, datetime.datetime(2024, 2, 4, 0, 54, 7, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 967, True); alias=default
DEBUG 2024-03-03 00:57:50,664 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2024-02-04T00:54:07.450572+01:00'::timestamptz, 962, '["Player 17", "Player 0", "Player 7", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2024, 2, 4, 0, 54, 7, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 962, <psycopg2._json.Json object at 0x7f19947fb3b0>, '0x0'); alias=default
DEBUG 2024-03-03 00:57:50,665 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 4, 'Player 12', 11, '2024-03-02T13:34:33.450572+01:00'::timestamptz, 43, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 4, 'Player 12', 11, datetime.datetime(2024, 3, 2, 13, 34, 33, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 43, True); alias=default
DEBUG 2024-03-03 00:57:50,667 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 9', 9, '2024-03-02T13:43:00.450572+01:00'::timestamptz, 299, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 9', 9, datetime.datetime(2024, 3, 2, 13, 43, 0, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 299, True); alias=default
DEBUG 2024-03-03 00:57:50,668 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 14', 2, '2024-03-02T13:44:51.450572+01:00'::timestamptz, 482, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 14', 2, datetime.datetime(2024, 3, 2, 13, 44, 51, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 482, True); alias=default
DEBUG 2024-03-03 00:57:50,670 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2024-03-02T13:44:51.450572+01:00'::timestamptz, 661, '["Player 12", "Player 14", "Player 4", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2024, 3, 2, 13, 44, 51, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 661, <psycopg2._json.Json object at 0x7f19947fb3b0>, '0x0'); alias=default
DEBUG 2024-03-03 00:57:50,672 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 19', 6, '2023-11-14T11:40:22.450572+01:00'::timestamptz, 818, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 19', 6, datetime.datetime(2023, 11, 14, 11, 40, 22, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 818, True); alias=default
DEBUG 2024-03-03 00:57:50,674 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 6, 'Player 13', 11, '2023-11-14T11:40:45.450572+01:00'::timestamptz, 498, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 6, 'Player 13', 11, datetime.datetime(2023, 11, 14, 11, 40, 45, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 498, True); alias=default
DEBUG 2024-03-03 00:57:50,675 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 13', 7, '2023-11-14T11:43:19.450572+01:00'::timestamptz, 983, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 13', 7, datetime.datetime(2023, 11, 14, 11, 43, 19, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 983, True); alias=default
DEBUG 2024-03-03 00:57:50,676 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2023-11-14T11:43:19.450572+01:00'::timestamptz, 995, '["Player 17", "Player 13", "Player 19", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2023, 11, 14, 11, 43, 19, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 995, <psycopg2._json.Json object at 0x7f19947fb3b0>, '0x0'); alias=default
DEBUG 2024-03-03 00:57:50,678 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 3', 2, '2024-01-28T23:41:14.450572+01:00'::timestamptz, 882, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 3', 2, datetime.datetime(2024, 1, 28, 23, 41, 14, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 882, True); alias=default
DEBUG 2024-03-03 00:57:50,679 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 4, 'Player 2', 11, '2024-01-28T23:40:54.450572+01:00'::timestamptz, 600, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 4, 'Player 2', 11, datetime.datetime(2024, 1, 28, 23, 40, 54, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 600, True); alias=default
DEBUG 2024-03-03 00:57:50,681 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 2', 2, '2024-01-28T23:41:51.450572+01:00'::timestamptz, 678, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 2', 2, datetime.datetime(2024, 1, 28, 23, 41, 51, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 678, True); alias=default
DEBUG 2024-03-03 00:57:50,682 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2024-01-28T23:41:51.450572+01:00'::timestamptz, 919, '["Player 11", "Player 2", "Player 3", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2024, 1, 28, 23, 41, 51, 450572, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 919, <psycopg2._json.Json object at 0x7f19947fbc80>, '0x0'); alias=default
DEBUG 2024-03-03 00:57:50,683 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,684 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,685 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 00:57:50,685 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,685 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 00:57:50,686 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,688 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 00:57:50,690 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 00:57:50,692 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 00:57:50,694 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 00:57:50,694 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,695 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 00:57:50,696 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,696 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 00:57:50,697 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,698 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,699 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,700 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,701 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,701 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,702 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 00:57:50,703 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,704 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 00:57:50,705 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,707 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 00:57:50,708 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 00:57:50,709 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,709 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 00:57:50,710 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,711 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 00:57:50,712 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,713 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,713 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,715 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,715 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,716 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,717 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 00:57:50,717 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,718 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 00:57:50,718 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,719 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 00:57:50,723 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 00:57:50,724 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,725 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 00:57:50,726 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,726 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 00:57:50,727 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,728 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,730 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,731 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,732 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,733 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,734 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 00:57:50,734 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,734 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 00:57:50,735 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,736 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 00:57:50,738 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 00:57:50,741 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 00:57:50,742 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:57:50,743 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 00:57:50,744 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:57:50,744 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 00:57:50,745 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,746 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,747 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,748 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,750 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:57:50,751 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
