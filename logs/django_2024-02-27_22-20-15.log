DEBUG 2024-02-27 22:20:16,960 utils (0.005) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:20:16,963 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:20:16,964 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:20:16,965 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:20:16,993 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:20:16,994 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:20:16,995 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:20:16,997 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:20:16,998 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 22:20:17,003 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 22:20:17,004 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:20:17,005 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,007 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,008 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,009 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,039 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 8, 'Player 14', 11, '2023-12-31T04:58:30.007376+01:00'::timestamptz, 964, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 8, 'Player 14', 11, datetime.datetime(2023, 12, 31, 4, 58, 30, 7376, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 964, True); alias=default
DEBUG 2024-02-27 22:20:17,040 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 5', 8, '2023-12-31T04:48:04.007376+01:00'::timestamptz, 309, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 5', 8, datetime.datetime(2023, 12, 31, 4, 48, 4, 7376, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 309, True); alias=default
DEBUG 2024-02-27 22:20:17,042 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 3, 'Player 8', 11, '2023-12-31T04:59:04.007376+01:00'::timestamptz, 847, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 3, 'Player 8', 11, datetime.datetime(2023, 12, 31, 4, 59, 4, 7376, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 847, True); alias=default
DEBUG 2024-02-27 22:20:17,043 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2053, 2054, 2055, '2023-12-31T04:59:04.007376+01:00'::timestamptz, 998, '["Player 8", "Player 14", "Player 7", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2053, 2054, 2055, datetime.datetime(2023, 12, 31, 4, 59, 4, 7376, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 998, <psycopg2._json.Json object at 0x7fa7aad02e10>, '0x0'); alias=default
DEBUG 2024-02-27 22:20:17,044 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 8, 'Player 5', 11, '2023-12-10T19:52:41.007376+01:00'::timestamptz, 393, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 8, 'Player 5', 11, datetime.datetime(2023, 12, 10, 19, 52, 41, 7376, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 393, True); alias=default
DEBUG 2024-02-27 22:20:17,045 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 11', 1, '2023-12-10T19:56:43.007376+01:00'::timestamptz, 370, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 11', 1, datetime.datetime(2023, 12, 10, 19, 56, 43, 7376, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 370, True); alias=default
DEBUG 2024-02-27 22:20:17,046 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 2', 8, '2023-12-10T20:01:45.007376+01:00'::timestamptz, 667, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 2', 8, datetime.datetime(2023, 12, 10, 20, 1, 45, 7376, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 667, True); alias=default
DEBUG 2024-02-27 22:20:17,047 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2056, 2057, 2058, '2023-12-10T20:01:45.007376+01:00'::timestamptz, 937, '["Player 5", "Player 2", "Player 13", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2056, 2057, 2058, datetime.datetime(2023, 12, 10, 20, 1, 45, 7376, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 937, <psycopg2._json.Json object at 0x7fa7aad03200>, '0x0'); alias=default
DEBUG 2024-02-27 22:20:17,048 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,050 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,051 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:20:17,053 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 22:20:17,054 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 22:20:17,056 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 22:20:17,058 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 22:20:17,059 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:20:17,061 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,061 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,062 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,063 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,065 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 5', 5, '2024-02-26T21:05:33.062099+01:00'::timestamptz, 232, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 5', 5, datetime.datetime(2024, 2, 26, 21, 5, 33, 62099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 232, True); alias=default
DEBUG 2024-02-27 22:20:17,066 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 7, 'Player 7', 11, '2024-02-26T21:03:23.062099+01:00'::timestamptz, 484, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 7, 'Player 7', 11, datetime.datetime(2024, 2, 26, 21, 3, 23, 62099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 484, True); alias=default
DEBUG 2024-02-27 22:20:17,068 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 7', 5, '2024-02-26T21:10:25.062099+01:00'::timestamptz, 760, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 7', 5, datetime.datetime(2024, 2, 26, 21, 10, 25, 62099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 760, True); alias=default
DEBUG 2024-02-27 22:20:17,070 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2059, 2060, 2061, '2024-02-26T21:10:25.062099+01:00'::timestamptz, 906, '["Player 1", "Player 7", "Player 5", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2059, 2060, 2061, datetime.datetime(2024, 2, 26, 21, 10, 25, 62099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 906, <psycopg2._json.Json object at 0x7fa7aad03fb0>, '0x0'); alias=default
DEBUG 2024-02-27 22:20:17,071 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 1, 'Player 13', 11, '2024-01-19T00:54:36.062099+01:00'::timestamptz, 317, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 1, 'Player 13', 11, datetime.datetime(2024, 1, 19, 0, 54, 36, 62099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 317, True); alias=default
DEBUG 2024-02-27 22:20:17,073 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 6', 9, '2024-01-19T00:57:52.062099+01:00'::timestamptz, 587, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 6', 9, datetime.datetime(2024, 1, 19, 0, 57, 52, 62099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 587, True); alias=default
DEBUG 2024-02-27 22:20:17,074 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 12', 3, '2024-01-19T01:04:05.062099+01:00'::timestamptz, 492, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 12', 3, datetime.datetime(2024, 1, 19, 1, 4, 5, 62099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 492, True); alias=default
DEBUG 2024-02-27 22:20:17,075 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2062, 2063, 2064, '2024-01-19T01:04:05.062099+01:00'::timestamptz, 960, '["Player 13", "Player 12", "Player 7", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2062, 2063, 2064, datetime.datetime(2024, 1, 19, 1, 4, 5, 62099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 960, <psycopg2._json.Json object at 0x7fa7aab2c560>, '0x0'); alias=default
DEBUG 2024-02-27 22:20:17,076 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,076 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,077 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:20:17,078 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 22:20:17,080 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 22:20:17,081 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:20:17,082 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,083 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,085 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,086 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,088 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 5', 8, '2024-01-12T19:19:52.083973+01:00'::timestamptz, 475, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 5', 8, datetime.datetime(2024, 1, 12, 19, 19, 52, 83973, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 475, True); alias=default
DEBUG 2024-02-27 22:20:17,090 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 8, 'Player 11', 11, '2024-01-12T19:19:35.083973+01:00'::timestamptz, 79, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 8, 'Player 11', 11, datetime.datetime(2024, 1, 12, 19, 19, 35, 83973, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 79, True); alias=default
DEBUG 2024-02-27 22:20:17,091 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 2, 'Player 11', 11, '2024-01-12T19:24:31.083973+01:00'::timestamptz, 58, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 2, 'Player 11', 11, datetime.datetime(2024, 1, 12, 19, 24, 31, 83973, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 58, True); alias=default
DEBUG 2024-02-27 22:20:17,092 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2065, 2066, 2067, '2024-01-12T19:24:31.083973+01:00'::timestamptz, 754, '["Player 11", "Player 15", "Player 5", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2065, 2066, 2067, datetime.datetime(2024, 1, 12, 19, 24, 31, 83973, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 754, <psycopg2._json.Json object at 0x7fa7aad03650>, '0x0'); alias=default
DEBUG 2024-02-27 22:20:17,093 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 7', 5, '2023-11-10T07:56:56.083973+01:00'::timestamptz, 858, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 7', 5, datetime.datetime(2023, 11, 10, 7, 56, 56, 83973, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 858, True); alias=default
DEBUG 2024-02-27 22:20:17,094 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 8', 9, '2023-11-10T07:55:55.083973+01:00'::timestamptz, 672, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 8', 9, datetime.datetime(2023, 11, 10, 7, 55, 55, 83973, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 672, True); alias=default
DEBUG 2024-02-27 22:20:17,096 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 15', 9, '2023-11-10T07:57:44.083973+01:00'::timestamptz, 71, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 15', 9, datetime.datetime(2023, 11, 10, 7, 57, 44, 83973, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 71, True); alias=default
DEBUG 2024-02-27 22:20:17,096 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2068, 2069, 2070, '2023-11-10T07:57:44.083973+01:00'::timestamptz, 906, '["Player 2", "Player 15", "Player 7", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2068, 2069, 2070, datetime.datetime(2023, 11, 10, 7, 57, 44, 83973, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 906, <psycopg2._json.Json object at 0x7fa7aab2d9a0>, '0x0'); alias=default
DEBUG 2024-02-27 22:20:17,097 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,098 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,099 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:20:17,101 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 22:20:17,103 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 22:20:17,104 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:20:17,105 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,106 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,107 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,108 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,109 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 6', 6, '2024-01-12T15:27:10.106820+01:00'::timestamptz, 323, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 6', 6, datetime.datetime(2024, 1, 12, 15, 27, 10, 106820, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 323, True); alias=default
DEBUG 2024-02-27 22:20:17,111 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 2', 7, '2024-01-12T15:28:03.106820+01:00'::timestamptz, 945, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 2', 7, datetime.datetime(2024, 1, 12, 15, 28, 3, 106820, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 945, True); alias=default
DEBUG 2024-02-27 22:20:17,112 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 1, 'Player 5', 11, '2024-01-12T15:28:20.106820+01:00'::timestamptz, 191, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 1, 'Player 5', 11, datetime.datetime(2024, 1, 12, 15, 28, 20, 106820, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 191, True); alias=default
DEBUG 2024-02-27 22:20:17,113 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2071, 2072, 2073, '2024-01-12T15:28:20.106820+01:00'::timestamptz, 962, '["Player 5", "Player 15", "Player 6", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2071, 2072, 2073, datetime.datetime(2024, 1, 12, 15, 28, 20, 106820, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 962, <psycopg2._json.Json object at 0x7fa7aab2e750>, '0x0'); alias=default
DEBUG 2024-02-27 22:20:17,114 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 4, 'Player 7', 11, '2023-12-11T21:18:20.106820+01:00'::timestamptz, 473, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 4, 'Player 7', 11, datetime.datetime(2023, 12, 11, 21, 18, 20, 106820, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 473, True); alias=default
DEBUG 2024-02-27 22:20:17,116 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 3, 'Player 5', 11, '2023-12-11T21:20:53.106820+01:00'::timestamptz, 566, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 3, 'Player 5', 11, datetime.datetime(2023, 12, 11, 21, 20, 53, 106820, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 566, True); alias=default
DEBUG 2024-02-27 22:20:17,118 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 1, 'Player 5', 11, '2023-12-11T21:25:39.106820+01:00'::timestamptz, 323, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 1, 'Player 5', 11, datetime.datetime(2023, 12, 11, 21, 25, 39, 106820, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 323, True); alias=default
DEBUG 2024-02-27 22:20:17,120 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2074, 2075, 2076, '2023-12-11T21:25:39.106820+01:00'::timestamptz, 912, '["Player 5", "Player 7", "Player 12", "Player 13"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2074, 2075, 2076, datetime.datetime(2023, 12, 11, 21, 25, 39, 106820, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 912, <psycopg2._json.Json object at 0x7fa7aab2ecc0>, '0x0'); alias=default
DEBUG 2024-02-27 22:20:17,121 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,122 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,122 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:20:17,123 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 22:20:17,124 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 22:20:17,126 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 22:20:17,127 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:20:17,128 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,128 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,129 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,130 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,132 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 0, 'Player 2', 11, '2024-02-26T17:41:36.129099+01:00'::timestamptz, 505, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 0, 'Player 2', 11, datetime.datetime(2024, 2, 26, 17, 41, 36, 129099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 505, True); alias=default
DEBUG 2024-02-27 22:20:17,133 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 7, 'Player 8', 11, '2024-02-26T17:44:42.129099+01:00'::timestamptz, 733, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 7, 'Player 8', 11, datetime.datetime(2024, 2, 26, 17, 44, 42, 129099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 733, True); alias=default
DEBUG 2024-02-27 22:20:17,135 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 8', 10, '2024-02-26T17:45:57.129099+01:00'::timestamptz, 889, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 8', 10, datetime.datetime(2024, 2, 26, 17, 45, 57, 129099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 889, True); alias=default
DEBUG 2024-02-27 22:20:17,137 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2077, 2078, 2079, '2024-02-26T17:45:57.129099+01:00'::timestamptz, 808, '["Player 2", "Player 8", "Player 10", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2077, 2078, 2079, datetime.datetime(2024, 2, 26, 17, 45, 57, 129099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 808, <psycopg2._json.Json object at 0x7fa7aab2dd90>, '0x0'); alias=default
DEBUG 2024-02-27 22:20:17,138 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 5', 1, '2023-12-30T02:34:32.129099+01:00'::timestamptz, 840, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 5', 1, datetime.datetime(2023, 12, 30, 2, 34, 32, 129099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 840, True); alias=default
DEBUG 2024-02-27 22:20:17,139 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 3', 1, '2023-12-30T02:31:11.129099+01:00'::timestamptz, 325, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 3', 1, datetime.datetime(2023, 12, 30, 2, 31, 11, 129099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 325, True); alias=default
DEBUG 2024-02-27 22:20:17,141 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 7', 9, '2023-12-30T02:36:43.129099+01:00'::timestamptz, 844, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 7', 9, datetime.datetime(2023, 12, 30, 2, 36, 43, 129099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 844, True); alias=default
DEBUG 2024-02-27 22:20:17,141 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2080, 2081, 2082, '2023-12-30T02:36:43.129099+01:00'::timestamptz, 971, '["Player 8", "Player 7", "Player 5", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2080, 2081, 2082, datetime.datetime(2023, 12, 30, 2, 36, 43, 129099, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 971, <psycopg2._json.Json object at 0x7fa7aab2f6b0>, '0x0'); alias=default
DEBUG 2024-02-27 22:20:17,142 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:20:17,143 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
