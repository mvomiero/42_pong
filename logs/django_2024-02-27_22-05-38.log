DEBUG 2024-02-27 22:05:40,205 utils (0.003) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:05:40,207 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,208 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:05:40,209 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,229 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:05:40,230 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:05:40,230 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,232 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:05:40,233 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 22:05:40,237 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 22:05:40,238 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:05:40,240 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,241 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,241 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,242 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,280 utils (0.010) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 13', 1, '2023-12-29T11:00:39.241203+01:00'::timestamptz, 341, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 13', 1, datetime.datetime(2023, 12, 29, 11, 0, 39, 241203, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 341, True); alias=default
DEBUG 2024-02-27 22:05:40,293 utils (0.013) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 7', 8, '2023-12-29T11:06:59.241203+01:00'::timestamptz, 64, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 7', 8, datetime.datetime(2023, 12, 29, 11, 6, 59, 241203, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 64, True); alias=default
DEBUG 2024-02-27 22:05:40,297 utils (0.004) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 3, 'Player 12', 11, '2023-12-29T11:08:52.241203+01:00'::timestamptz, 472, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 3, 'Player 12', 11, datetime.datetime(2023, 12, 29, 11, 8, 52, 241203, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 472, True); alias=default
DEBUG 2024-02-27 22:05:40,299 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1960, 1961, 1962, '2023-12-29T11:08:52.241203+01:00'::timestamptz, 834, '["Player 12", "Player 4", "Player 13", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1960, 1961, 1962, datetime.datetime(2023, 12, 29, 11, 8, 52, 241203, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 834, <psycopg2._json.Json object at 0x7f699d416750>, '0x0'); alias=default
DEBUG 2024-02-27 22:05:40,300 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 9', 3, '2024-02-03T09:42:32.241203+01:00'::timestamptz, 997, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 9', 3, datetime.datetime(2024, 2, 3, 9, 42, 32, 241203, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 997, True); alias=default
DEBUG 2024-02-27 22:05:40,302 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 3', 9, '2024-02-03T09:40:44.241203+01:00'::timestamptz, 857, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 3', 9, datetime.datetime(2024, 2, 3, 9, 40, 44, 241203, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 857, True); alias=default
DEBUG 2024-02-27 22:05:40,303 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 6', 6, '2024-02-03T09:42:32.241203+01:00'::timestamptz, 851, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 6', 6, datetime.datetime(2024, 2, 3, 9, 42, 32, 241203, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 851, True); alias=default
DEBUG 2024-02-27 22:05:40,305 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1963, 1964, 1965, '2024-02-03T09:42:32.241203+01:00'::timestamptz, 997, '["Player 14", "Player 6", "Player 9", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1963, 1964, 1965, datetime.datetime(2024, 2, 3, 9, 42, 32, 241203, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 997, <psycopg2._json.Json object at 0x7f699d416bd0>, '0x0'); alias=default
DEBUG 2024-02-27 22:05:40,306 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,307 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,308 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:05:40,309 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 22:05:40,311 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 22:05:40,312 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 22:05:40,315 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 22:05:40,316 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:05:40,317 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,318 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,320 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,321 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,323 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 5, 'Player 5', 11, '2024-01-07T06:10:45.318864+01:00'::timestamptz, 871, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 5, 'Player 5', 11, datetime.datetime(2024, 1, 7, 6, 10, 45, 318864, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 871, True); alias=default
DEBUG 2024-02-27 22:05:40,325 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 7', 8, '2024-01-07T06:04:35.318864+01:00'::timestamptz, 552, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 7', 8, datetime.datetime(2024, 1, 7, 6, 4, 35, 318864, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 552, True); alias=default
DEBUG 2024-02-27 22:05:40,326 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 11', 7, '2024-01-07T06:10:56.318864+01:00'::timestamptz, 978, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 11', 7, datetime.datetime(2024, 1, 7, 6, 10, 56, 318864, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 978, True); alias=default
DEBUG 2024-02-27 22:05:40,328 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1966, 1967, 1968, '2024-01-07T06:10:56.318864+01:00'::timestamptz, 933, '["Player 5", "Player 11", "Player 9", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1966, 1967, 1968, datetime.datetime(2024, 1, 7, 6, 10, 56, 318864, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 933, <psycopg2._json.Json object at 0x7f699d417680>, '0x0'); alias=default
DEBUG 2024-02-27 22:05:40,330 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 10', 6, '2023-12-29T22:34:59.318864+01:00'::timestamptz, 944, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 10', 6, datetime.datetime(2023, 12, 29, 22, 34, 59, 318864, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 944, True); alias=default
DEBUG 2024-02-27 22:05:40,331 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 2, 'Player 11', 11, '2023-12-29T22:26:31.318864+01:00'::timestamptz, 265, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 2, 'Player 11', 11, datetime.datetime(2023, 12, 29, 22, 26, 31, 318864, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 265, True); alias=default
DEBUG 2024-02-27 22:05:40,333 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 1, 'Player 11', 11, '2023-12-29T22:35:37.318864+01:00'::timestamptz, 580, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 1, 'Player 11', 11, datetime.datetime(2023, 12, 29, 22, 35, 37, 318864, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 580, True); alias=default
DEBUG 2024-02-27 22:05:40,334 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1969, 1970, 1971, '2023-12-29T22:35:37.318864+01:00'::timestamptz, 982, '["Player 11", "Player 4", "Player 10", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1969, 1970, 1971, datetime.datetime(2023, 12, 29, 22, 35, 37, 318864, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 982, <psycopg2._json.Json object at 0x7f699d23c590>, '0x0'); alias=default
DEBUG 2024-02-27 22:05:40,335 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,336 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,337 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:05:40,339 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 22:05:40,342 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 22:05:40,343 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:05:40,344 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,346 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,347 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,349 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,350 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 0, 'Player 11', 11, '2024-02-11T22:37:30.346401+01:00'::timestamptz, 678, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 0, 'Player 11', 11, datetime.datetime(2024, 2, 11, 22, 37, 30, 346401, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 678, True); alias=default
DEBUG 2024-02-27 22:05:40,352 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 1, 'Player 8', 11, '2024-02-11T22:39:10.346401+01:00'::timestamptz, 701, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 1, 'Player 8', 11, datetime.datetime(2024, 2, 11, 22, 39, 10, 346401, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 701, True); alias=default
DEBUG 2024-02-27 22:05:40,354 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 3, 'Player 8', 11, '2024-02-11T22:39:56.346401+01:00'::timestamptz, 555, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 3, 'Player 8', 11, datetime.datetime(2024, 2, 11, 22, 39, 56, 346401, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 555, True); alias=default
DEBUG 2024-02-27 22:05:40,355 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1972, 1973, 1974, '2024-02-11T22:39:56.346401+01:00'::timestamptz, 824, '["Player 8", "Player 11", "Player 9", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1972, 1973, 1974, datetime.datetime(2024, 2, 11, 22, 39, 56, 346401, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 824, <psycopg2._json.Json object at 0x7f699d23d1f0>, '0x0'); alias=default
DEBUG 2024-02-27 22:05:40,358 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 1, 'Player 8', 11, '2024-01-03T17:02:13.346401+01:00'::timestamptz, 832, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 1, 'Player 8', 11, datetime.datetime(2024, 1, 3, 17, 2, 13, 346401, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 832, True); alias=default
DEBUG 2024-02-27 22:05:40,359 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 2', 8, '2024-01-03T17:02:22.346401+01:00'::timestamptz, 800, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 2', 8, datetime.datetime(2024, 1, 3, 17, 2, 22, 346401, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 800, True); alias=default
DEBUG 2024-02-27 22:05:40,361 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 10, 'Player 14', 11, '2024-01-03T17:03:23.346401+01:00'::timestamptz, 31, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 10, 'Player 14', 11, datetime.datetime(2024, 1, 3, 17, 3, 23, 346401, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 31, True); alias=default
DEBUG 2024-02-27 22:05:40,362 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1975, 1976, 1977, '2024-01-03T17:03:23.346401+01:00'::timestamptz, 902, '["Player 14", "Player 8", "Player 1", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1975, 1976, 1977, datetime.datetime(2024, 1, 3, 17, 3, 23, 346401, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 902, <psycopg2._json.Json object at 0x7f699d23d580>, '0x0'); alias=default
DEBUG 2024-02-27 22:05:40,364 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,366 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,368 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:05:40,370 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 22:05:40,374 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 22:05:40,375 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:05:40,377 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,378 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,380 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,381 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,383 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 10', 6, '2023-12-22T15:09:05.378927+01:00'::timestamptz, 699, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 10', 6, datetime.datetime(2023, 12, 22, 15, 9, 5, 378927, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 699, True); alias=default
DEBUG 2024-02-27 22:05:40,384 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 8', 2, '2023-12-22T15:05:53.378927+01:00'::timestamptz, 581, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 8', 2, datetime.datetime(2023, 12, 22, 15, 5, 53, 378927, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 581, True); alias=default
DEBUG 2024-02-27 22:05:40,386 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 10, 'Player 5', 11, '2023-12-22T15:11:45.378927+01:00'::timestamptz, 472, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 10, 'Player 5', 11, datetime.datetime(2023, 12, 22, 15, 11, 45, 378927, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 472, True); alias=default
DEBUG 2024-02-27 22:05:40,390 utils (0.002) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1978, 1979, 1980, '2023-12-22T15:11:45.378927+01:00'::timestamptz, 933, '["Player 5", "Player 0", "Player 10", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1978, 1979, 1980, datetime.datetime(2023, 12, 22, 15, 11, 45, 378927, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 933, <psycopg2._json.Json object at 0x7f69a00020f0>, '0x0'); alias=default
DEBUG 2024-02-27 22:05:40,392 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 4', 3, '2024-01-07T21:44:37.378927+01:00'::timestamptz, 586, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 4', 3, datetime.datetime(2024, 1, 7, 21, 44, 37, 378927, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 586, True); alias=default
DEBUG 2024-02-27 22:05:40,394 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 2, 'Player 2', 11, '2024-01-07T21:42:29.378927+01:00'::timestamptz, 677, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 2, 'Player 2', 11, datetime.datetime(2024, 1, 7, 21, 42, 29, 378927, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 677, True); alias=default
DEBUG 2024-02-27 22:05:40,395 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 1, 'Player 2', 11, '2024-01-07T21:44:39.378927+01:00'::timestamptz, 801, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 1, 'Player 2', 11, datetime.datetime(2024, 1, 7, 21, 44, 39, 378927, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 801, True); alias=default
DEBUG 2024-02-27 22:05:40,396 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1981, 1982, 1983, '2024-01-07T21:44:39.378927+01:00'::timestamptz, 807, '["Player 2", "Player 15", "Player 4", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1981, 1982, 1983, datetime.datetime(2024, 1, 7, 21, 44, 39, 378927, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 807, <psycopg2._json.Json object at 0x7f699d23ef90>, '0x0'); alias=default
DEBUG 2024-02-27 22:05:40,397 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,398 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,399 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:05:40,400 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 22:05:40,401 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 22:05:40,403 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 22:05:40,404 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:05:40,407 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,408 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,410 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,411 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,412 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 3, 'Player 13', 11, '2024-02-27T05:17:21.409081+01:00'::timestamptz, 198, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 3, 'Player 13', 11, datetime.datetime(2024, 2, 27, 5, 17, 21, 409081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 198, True); alias=default
DEBUG 2024-02-27 22:05:40,414 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 4, 'Player 1', 11, '2024-02-27T05:13:50.409081+01:00'::timestamptz, 123, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 4, 'Player 1', 11, datetime.datetime(2024, 2, 27, 5, 13, 50, 409081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 123, True); alias=default
DEBUG 2024-02-27 22:05:40,415 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 2, 'Player 1', 11, '2024-02-27T05:23:46.409081+01:00'::timestamptz, 88, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 2, 'Player 1', 11, datetime.datetime(2024, 2, 27, 5, 23, 46, 409081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 88, True); alias=default
DEBUG 2024-02-27 22:05:40,416 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1984, 1985, 1986, '2024-02-27T05:23:46.409081+01:00'::timestamptz, 719, '["Player 1", "Player 13", "Player 15", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1984, 1985, 1986, datetime.datetime(2024, 2, 27, 5, 23, 46, 409081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 719, <psycopg2._json.Json object at 0x7f69a0002060>, '0x0'); alias=default
DEBUG 2024-02-27 22:05:40,417 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 14', 4, '2024-01-14T04:11:46.409081+01:00'::timestamptz, 645, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 14', 4, datetime.datetime(2024, 1, 14, 4, 11, 46, 409081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 645, True); alias=default
DEBUG 2024-02-27 22:05:40,418 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 5', 9, '2024-01-14T04:05:50.409081+01:00'::timestamptz, 423, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 5', 9, datetime.datetime(2024, 1, 14, 4, 5, 50, 409081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 423, True); alias=default
DEBUG 2024-02-27 22:05:40,420 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 1', 6, '2024-01-14T04:15:08.409081+01:00'::timestamptz, 42, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 1', 6, datetime.datetime(2024, 1, 14, 4, 15, 8, 409081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 42, True); alias=default
DEBUG 2024-02-27 22:05:40,421 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1987, 1988, 1989, '2024-01-14T04:15:08.409081+01:00'::timestamptz, 981, '["Player 3", "Player 1", "Player 14", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1987, 1988, 1989, datetime.datetime(2024, 1, 14, 4, 15, 8, 409081, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 981, <psycopg2._json.Json object at 0x7f699d23f410>, '0x0'); alias=default
DEBUG 2024-02-27 22:05:40,423 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:05:40,424 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
