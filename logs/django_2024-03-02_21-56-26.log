DEBUG 2024-03-02 21:56:27,623 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,625 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,626 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,627 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:27,627 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-02 21:56:27,647 utils (0.020) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-02 21:56:27,649 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:27,649 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:27,651 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-02 21:56:27,654 utils (0.002) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-02 21:56:27,656 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-02 21:56:27,658 utils (0.002) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-02 21:56:27,659 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,663 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-02T21:56:27.660430+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 2, 21, 56, 27, 660430, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 21:56:27,664 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:27,664 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:27,667 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-02 21:56:27,670 utils (0.003) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-02 21:56:27,674 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-02 21:56:27,678 utils (0.004) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-02 21:56:27,679 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-02 21:56:27,682 utils (0.002) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-02 21:56:27,690 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-02 21:56:27,695 utils (0.005) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-02 21:56:27,696 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-02 21:56:27,700 utils (0.004) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-02 21:56:27,702 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-02 21:56:27,707 utils (0.005) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-02 21:56:27,707 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-02 21:56:27,710 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-02 21:56:27,710 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 21:56:27,712 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 21:56:27,712 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-02 21:56:27,714 utils (0.002) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-02 21:56:27,714 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-02 21:56:27,716 utils (0.002) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-02 21:56:27,717 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-02 21:56:27,719 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-02 21:56:27,719 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 21:56:27,720 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 21:56:27,721 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 21:56:27,722 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 21:56:27,722 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-02 21:56:27,724 utils (0.002) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-02 21:56:27,724 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-02 21:56:27,726 utils (0.002) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-02 21:56:27,726 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-02 21:56:27,730 utils (0.003) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-02 21:56:27,730 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-02 21:56:27,732 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-02 21:56:27,733 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 21:56:27,734 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 21:56:27,735 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 21:56:27,736 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 21:56:27,736 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-02 21:56:27,738 utils (0.002) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-02 21:56:27,739 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-02 21:56:27,741 utils (0.002) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-02 21:56:27,741 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-02 21:56:27,744 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-02 21:56:27,744 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 21:56:27,746 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 21:56:27,746 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 21:56:27,749 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 21:56:27,749 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-02 21:56:27,751 utils (0.002) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-02 21:56:27,752 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-02 21:56:27,754 utils (0.002) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-02 21:56:27,755 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:27,757 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,759 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-02T21:56:27.758025+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 2, 21, 56, 27, 758025, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 21:56:27,759 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:27,767 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-02 21:56:27,772 utils (0.005) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-02 21:56:27,773 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 21:56:27,774 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 21:56:27,774 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 21:56:27,775 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 21:56:27,775 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-02 21:56:27,777 utils (0.002) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-02 21:56:27,777 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-02 21:56:27,779 utils (0.002) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-02 21:56:27,780 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:27,782 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,783 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-02T21:56:27.782524+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 2, 21, 56, 27, 782524, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 21:56:27,783 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:27,792 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,793 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-02T21:56:27.792377+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 2, 21, 56, 27, 792377, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 21:56:27,793 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:27,794 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:27,805 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,806 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-02T21:56:27.806087+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 2, 21, 56, 27, 806087, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 21:56:27,807 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:27,807 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:27,816 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-02 21:56:27,817 utils (0.001) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-02 21:56:27,828 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-02 21:56:27,829 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-02 21:56:27,830 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,831 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-02T21:56:27.831165+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 2, 21, 56, 27, 831165, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 21:56:27,832 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:27,832 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:27,841 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-02 21:56:27,841 utils (0.001) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-02 21:56:27,843 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,845 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-02T21:56:27.844401+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 2, 21, 56, 27, 844401, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 21:56:27,846 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:27,846 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:27,857 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-02 21:56:27,857 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-02 21:56:27,859 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,859 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-02T21:56:27.859251+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 2, 21, 56, 27, 859251, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 21:56:27,860 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:27,860 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:27,871 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,872 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-02T21:56:27.871595+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 2, 21, 56, 27, 871595, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 21:56:27,874 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:27,874 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:27,881 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-02 21:56:27,882 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-02 21:56:27,883 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,884 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-02T21:56:27.883573+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 2, 21, 56, 27, 883573, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 21:56:27,886 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:27,886 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:27,888 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,889 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-02T21:56:27.888972+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 2, 21, 56, 27, 888972, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 21:56:27,890 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:27,890 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:27,902 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,903 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-02T21:56:27.903172+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 2, 21, 56, 27, 903172, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 21:56:27,904 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:27,905 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:27,913 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-02 21:56:27,916 utils (0.003) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-02 21:56:27,918 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,919 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-02T21:56:27.918905+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 2, 21, 56, 27, 918905, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 21:56:27,921 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:27,921 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:27,929 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-02 21:56:27,930 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-02 21:56:27,931 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,933 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-02T21:56:27.932324+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 2, 21, 56, 27, 932324, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 21:56:27,935 utils (0.002) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:27,936 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:27,943 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-02 21:56:27,945 utils (0.002) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-02 21:56:27,947 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,948 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-02T21:56:27.947494+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 2, 21, 56, 27, 947494, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 21:56:27,949 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:27,949 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:27,964 utils (0.006) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,965 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-02T21:56:27.964569+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 2, 21, 56, 27, 964569, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 21:56:27,968 utils (0.003) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:27,969 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:27,980 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-02 21:56:27,980 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-02 21:56:27,982 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:27,983 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-02T21:56:27.982792+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 2, 21, 56, 27, 982792, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 21:56:27,984 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:27,984 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:27,987 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-02 21:56:27,999 utils (0.012) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-02 21:56:28,001 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-02 21:56:28,007 utils (0.006) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-02 21:56:28,009 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:28,010 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-02T21:56:28.010075+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 2, 21, 56, 28, 10075, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 21:56:28,014 utils (0.003) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:28,014 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:28,016 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-02 21:56:28,023 utils (0.007) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-02 21:56:28,023 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-02 21:56:28,031 utils (0.007) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-02 21:56:28,031 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-02 21:56:28,036 utils (0.005) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-02 21:56:28,037 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:28,039 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:28,042 utils (0.002) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-02T21:56:28.039971+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 2, 21, 56, 28, 39971, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 21:56:28,045 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 21:56:28,047 utils (0.001) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,067 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-02 21:56:28,067 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:28,069 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-02 21:56:28,071 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:28,072 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-02 21:56:28,076 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-02 21:56:28,077 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:28,078 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-02 21:56:28,080 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:28,081 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-02 21:56:28,083 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,085 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,087 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,132 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 7', 2, '2024-02-06T16:48:49.085989+01:00'::timestamptz, 31, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 7', 2, datetime.datetime(2024, 2, 6, 16, 48, 49, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 31, False); alias=default
DEBUG 2024-03-02 21:56:28,133 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 6, 'Player 3', 11, '2024-02-11T13:53:54.085989+01:00'::timestamptz, 590, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 6, 'Player 3', 11, datetime.datetime(2024, 2, 11, 13, 53, 54, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 590, False); alias=default
DEBUG 2024-03-02 21:56:28,135 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 6', 9, '2023-12-09T02:54:44.085989+01:00'::timestamptz, 730, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 6', 9, datetime.datetime(2023, 12, 9, 2, 54, 44, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 730, False); alias=default
DEBUG 2024-03-02 21:56:28,137 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 8, 'Player 11', 11, '2023-11-09T02:53:57.085989+01:00'::timestamptz, 715, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 8, 'Player 11', 11, datetime.datetime(2023, 11, 9, 2, 53, 57, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 715, False); alias=default
DEBUG 2024-03-02 21:56:28,139 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 8, 'Player 3', 11, '2024-02-12T22:28:26.085989+01:00'::timestamptz, 670, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 8, 'Player 3', 11, datetime.datetime(2024, 2, 12, 22, 28, 26, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 670, False); alias=default
DEBUG 2024-03-02 21:56:28,141 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 5, 'Player 4', 11, '2023-12-14T20:13:25.085989+01:00'::timestamptz, 502, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 5, 'Player 4', 11, datetime.datetime(2023, 12, 14, 20, 13, 25, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 502, False); alias=default
DEBUG 2024-03-02 21:56:28,143 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 7', 1, '2024-01-29T16:52:42.085989+01:00'::timestamptz, 603, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 7', 1, datetime.datetime(2024, 1, 29, 16, 52, 42, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 603, False); alias=default
DEBUG 2024-03-02 21:56:28,144 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 6', 8, '2024-01-28T04:55:22.085989+01:00'::timestamptz, 819, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 6', 8, datetime.datetime(2024, 1, 28, 4, 55, 22, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 819, False); alias=default
DEBUG 2024-03-02 21:56:28,146 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 18', 4, '2024-01-31T01:10:28.085989+01:00'::timestamptz, 960, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 18', 4, datetime.datetime(2024, 1, 31, 1, 10, 28, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 960, False); alias=default
DEBUG 2024-03-02 21:56:28,147 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 0, 'Player 9', 11, '2024-02-19T16:22:10.085989+01:00'::timestamptz, 408, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 0, 'Player 9', 11, datetime.datetime(2024, 2, 19, 16, 22, 10, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 408, False); alias=default
DEBUG 2024-03-02 21:56:28,150 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 12', 3, '2023-12-21T22:48:28.085989+01:00'::timestamptz, 510, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 12', 3, datetime.datetime(2023, 12, 21, 22, 48, 28, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 510, False); alias=default
DEBUG 2024-03-02 21:56:28,151 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 2, 'Player 10', 11, '2023-11-29T03:59:49.085989+01:00'::timestamptz, 502, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 2, 'Player 10', 11, datetime.datetime(2023, 11, 29, 3, 59, 49, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 502, False); alias=default
DEBUG 2024-03-02 21:56:28,153 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 12', 10, '2024-01-27T07:54:07.085989+01:00'::timestamptz, 889, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 12', 10, datetime.datetime(2024, 1, 27, 7, 54, 7, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 889, False); alias=default
DEBUG 2024-03-02 21:56:28,154 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 11', 6, '2023-11-03T03:11:17.085989+01:00'::timestamptz, 655, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 11', 6, datetime.datetime(2023, 11, 3, 3, 11, 17, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 655, False); alias=default
DEBUG 2024-03-02 21:56:28,155 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 14', 9, '2024-01-17T06:22:26.085989+01:00'::timestamptz, 185, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 14', 9, datetime.datetime(2024, 1, 17, 6, 22, 26, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 185, False); alias=default
DEBUG 2024-03-02 21:56:28,156 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 8, 'Player 5', 11, '2024-01-31T09:10:28.085989+01:00'::timestamptz, 750, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 8, 'Player 5', 11, datetime.datetime(2024, 1, 31, 9, 10, 28, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 750, False); alias=default
DEBUG 2024-03-02 21:56:28,157 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 3, 'Player 17', 11, '2023-12-05T03:55:04.085989+01:00'::timestamptz, 798, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 3, 'Player 17', 11, datetime.datetime(2023, 12, 5, 3, 55, 4, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 798, False); alias=default
DEBUG 2024-03-02 21:56:28,159 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 10, 'Player 0', 11, '2024-01-20T04:45:14.085989+01:00'::timestamptz, 273, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 10, 'Player 0', 11, datetime.datetime(2024, 1, 20, 4, 45, 14, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 273, False); alias=default
DEBUG 2024-03-02 21:56:28,160 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 4', 6, '2024-01-06T15:27:02.085989+01:00'::timestamptz, 321, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 4', 6, datetime.datetime(2024, 1, 6, 15, 27, 2, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 321, False); alias=default
DEBUG 2024-03-02 21:56:28,161 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 24', 8, '2023-11-23T04:33:16.085989+01:00'::timestamptz, 973, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 24', 8, datetime.datetime(2023, 11, 23, 4, 33, 16, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 973, False); alias=default
DEBUG 2024-03-02 21:56:28,162 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 8', 5, '2024-01-07T13:51:03.085989+01:00'::timestamptz, 817, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 8', 5, datetime.datetime(2024, 1, 7, 13, 51, 3, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 817, False); alias=default
DEBUG 2024-03-02 21:56:28,164 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 8, 'Player 11', 11, '2023-11-25T18:04:38.085989+01:00'::timestamptz, 46, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 8, 'Player 11', 11, datetime.datetime(2023, 11, 25, 18, 4, 38, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 46, False); alias=default
DEBUG 2024-03-02 21:56:28,165 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 2', 3, '2023-11-15T04:54:32.085989+01:00'::timestamptz, 406, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 2', 3, datetime.datetime(2023, 11, 15, 4, 54, 32, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 406, False); alias=default
DEBUG 2024-03-02 21:56:28,166 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 0, 'Player 11', 11, '2023-12-02T02:37:46.085989+01:00'::timestamptz, 320, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 0, 'Player 11', 11, datetime.datetime(2023, 12, 2, 2, 37, 46, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 320, False); alias=default
DEBUG 2024-03-02 21:56:28,167 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 4, 'Player 14', 11, '2024-01-20T06:16:34.085989+01:00'::timestamptz, 13, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 4, 'Player 14', 11, datetime.datetime(2024, 1, 20, 6, 16, 34, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 13, False); alias=default
DEBUG 2024-03-02 21:56:28,169 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 14', 6, '2024-01-05T18:19:44.085989+01:00'::timestamptz, 392, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 14', 6, datetime.datetime(2024, 1, 5, 18, 19, 44, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 392, False); alias=default
DEBUG 2024-03-02 21:56:28,170 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 2, 'Player 6', 11, '2024-03-01T11:15:15.085989+01:00'::timestamptz, 259, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 2, 'Player 6', 11, datetime.datetime(2024, 3, 1, 11, 15, 15, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 259, False); alias=default
DEBUG 2024-03-02 21:56:28,171 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 5, 'Player 23', 11, '2023-11-13T17:19:39.085989+01:00'::timestamptz, 237, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 5, 'Player 23', 11, datetime.datetime(2023, 11, 13, 17, 19, 39, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 237, False); alias=default
DEBUG 2024-03-02 21:56:28,172 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 4', 6, '2023-12-05T18:04:34.085989+01:00'::timestamptz, 79, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 4', 6, datetime.datetime(2023, 12, 5, 18, 4, 34, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 79, False); alias=default
DEBUG 2024-03-02 21:56:28,174 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 9, 'Player 15', 11, '2024-02-25T21:53:28.085989+01:00'::timestamptz, 283, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 9, 'Player 15', 11, datetime.datetime(2024, 2, 25, 21, 53, 28, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 283, False); alias=default
DEBUG 2024-03-02 21:56:28,175 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 3', 3, '2024-02-18T08:14:06.085989+01:00'::timestamptz, 133, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 3', 3, datetime.datetime(2024, 2, 18, 8, 14, 6, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 133, False); alias=default
DEBUG 2024-03-02 21:56:28,176 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 29', 6, '2024-01-28T09:45:53.085989+01:00'::timestamptz, 365, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 29', 6, datetime.datetime(2024, 1, 28, 9, 45, 53, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 365, False); alias=default
DEBUG 2024-03-02 21:56:28,177 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 7, 'Player 13', 11, '2024-01-25T05:24:48.085989+01:00'::timestamptz, 654, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 7, 'Player 13', 11, datetime.datetime(2024, 1, 25, 5, 24, 48, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 654, False); alias=default
DEBUG 2024-03-02 21:56:28,179 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 15', 10, '2023-12-10T14:19:07.085989+01:00'::timestamptz, 233, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 15', 10, datetime.datetime(2023, 12, 10, 14, 19, 7, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 233, False); alias=default
DEBUG 2024-03-02 21:56:28,180 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 22', 3, '2023-11-19T08:35:18.085989+01:00'::timestamptz, 661, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 22', 3, datetime.datetime(2023, 11, 19, 8, 35, 18, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 661, False); alias=default
DEBUG 2024-03-02 21:56:28,181 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 6', 8, '2024-01-22T02:51:29.085989+01:00'::timestamptz, 319, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 6', 8, datetime.datetime(2024, 1, 22, 2, 51, 29, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 319, False); alias=default
DEBUG 2024-03-02 21:56:28,182 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 29', 6, '2024-02-20T21:44:41.085989+01:00'::timestamptz, 830, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 29', 6, datetime.datetime(2024, 2, 20, 21, 44, 41, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 830, False); alias=default
DEBUG 2024-03-02 21:56:28,184 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 9, 'Player 8', 11, '2024-02-21T16:01:41.085989+01:00'::timestamptz, 781, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 9, 'Player 8', 11, datetime.datetime(2024, 2, 21, 16, 1, 41, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 781, False); alias=default
DEBUG 2024-03-02 21:56:28,188 utils (0.004) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 6, 'Player 3', 11, '2023-11-27T23:54:46.085989+01:00'::timestamptz, 374, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 6, 'Player 3', 11, datetime.datetime(2023, 11, 27, 23, 54, 46, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 374, False); alias=default
DEBUG 2024-03-02 21:56:28,190 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 29', 10, '2023-12-19T22:23:20.085989+01:00'::timestamptz, 797, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 29', 10, datetime.datetime(2023, 12, 19, 22, 23, 20, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 797, False); alias=default
DEBUG 2024-03-02 21:56:28,191 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 11, 'Player 35', 2, '2024-02-10T22:22:22.085989+01:00'::timestamptz, 342, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 11, 'Player 35', 2, datetime.datetime(2024, 2, 10, 22, 22, 22, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 342, False); alias=default
DEBUG 2024-03-02 21:56:28,192 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 2', 10, '2023-12-12T22:08:43.085989+01:00'::timestamptz, 203, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 2', 10, datetime.datetime(2023, 12, 12, 22, 8, 43, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 203, False); alias=default
DEBUG 2024-03-02 21:56:28,193 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 1, 'Player 13', 11, '2024-01-24T00:47:38.085989+01:00'::timestamptz, 385, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 1, 'Player 13', 11, datetime.datetime(2024, 1, 24, 0, 47, 38, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 385, False); alias=default
DEBUG 2024-03-02 21:56:28,194 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 24', 9, '2023-11-19T13:35:50.085989+01:00'::timestamptz, 762, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 24', 9, datetime.datetime(2023, 11, 19, 13, 35, 50, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 762, False); alias=default
DEBUG 2024-03-02 21:56:28,196 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 11', 0, '2024-02-29T17:56:30.085989+01:00'::timestamptz, 404, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 11', 0, datetime.datetime(2024, 2, 29, 17, 56, 30, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 404, False); alias=default
DEBUG 2024-03-02 21:56:28,197 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 11', 2, '2024-01-06T02:38:17.085989+01:00'::timestamptz, 169, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 11', 2, datetime.datetime(2024, 1, 6, 2, 38, 17, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 169, False); alias=default
DEBUG 2024-03-02 21:56:28,198 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 24', 6, '2023-11-06T20:06:14.085989+01:00'::timestamptz, 847, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 24', 6, datetime.datetime(2023, 11, 6, 20, 6, 14, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 847, False); alias=default
DEBUG 2024-03-02 21:56:28,200 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 5, 'Player 6', 11, '2023-11-03T12:33:25.085989+01:00'::timestamptz, 587, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 5, 'Player 6', 11, datetime.datetime(2023, 11, 3, 12, 33, 25, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 587, False); alias=default
DEBUG 2024-03-02 21:56:28,201 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 11, 'Player 19', 1, '2024-01-31T18:48:57.085989+01:00'::timestamptz, 328, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 11, 'Player 19', 1, datetime.datetime(2024, 1, 31, 18, 48, 57, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 328, False); alias=default
DEBUG 2024-03-02 21:56:28,202 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 19', 10, '2024-02-15T23:38:57.085989+01:00'::timestamptz, 635, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 19', 10, datetime.datetime(2024, 2, 15, 23, 38, 57, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 635, False); alias=default
DEBUG 2024-03-02 21:56:28,204 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 32', 10, '2024-01-28T15:28:22.085989+01:00'::timestamptz, 752, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 32', 10, datetime.datetime(2024, 1, 28, 15, 28, 22, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 752, False); alias=default
DEBUG 2024-03-02 21:56:28,205 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 9, 'Player 13', 11, '2024-01-03T17:02:47.085989+01:00'::timestamptz, 875, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 9, 'Player 13', 11, datetime.datetime(2024, 1, 3, 17, 2, 47, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 875, False); alias=default
DEBUG 2024-03-02 21:56:28,206 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 2, 'Player 0', 11, '2023-11-08T04:22:07.085989+01:00'::timestamptz, 994, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 2, 'Player 0', 11, datetime.datetime(2023, 11, 8, 4, 22, 7, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 994, False); alias=default
DEBUG 2024-03-02 21:56:28,208 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 5, 'Player 27', 11, '2023-11-16T04:53:21.085989+01:00'::timestamptz, 58, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 5, 'Player 27', 11, datetime.datetime(2023, 11, 16, 4, 53, 21, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 58, False); alias=default
DEBUG 2024-03-02 21:56:28,209 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 10, 'Player 11', 11, '2024-01-30T14:37:49.085989+01:00'::timestamptz, 203, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 10, 'Player 11', 11, datetime.datetime(2024, 1, 30, 14, 37, 49, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 203, False); alias=default
DEBUG 2024-03-02 21:56:28,210 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 11, 'Player 11', 2, '2023-12-25T10:10:36.085989+01:00'::timestamptz, 757, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 11, 'Player 11', 2, datetime.datetime(2023, 12, 25, 10, 10, 36, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 757, False); alias=default
DEBUG 2024-03-02 21:56:28,212 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 10', 7, '2024-01-06T22:57:38.085989+01:00'::timestamptz, 262, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 10', 7, datetime.datetime(2024, 1, 6, 22, 57, 38, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 262, False); alias=default
DEBUG 2024-03-02 21:56:28,213 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 17', 7, '2023-11-17T23:38:39.085989+01:00'::timestamptz, 841, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 17', 7, datetime.datetime(2023, 11, 17, 23, 38, 39, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 841, False); alias=default
DEBUG 2024-03-02 21:56:28,215 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 9, 'Player 36', 11, '2024-01-14T21:38:45.085989+01:00'::timestamptz, 30, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 9, 'Player 36', 11, datetime.datetime(2024, 1, 14, 21, 38, 45, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 30, False); alias=default
DEBUG 2024-03-02 21:56:28,216 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 2, 'Player 28', 11, '2024-01-07T23:04:56.085989+01:00'::timestamptz, 46, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 2, 'Player 28', 11, datetime.datetime(2024, 1, 7, 23, 4, 56, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 46, False); alias=default
DEBUG 2024-03-02 21:56:28,217 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 11, 'Player 3', 8, '2024-01-02T11:19:11.085989+01:00'::timestamptz, 76, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 11, 'Player 3', 8, datetime.datetime(2024, 1, 2, 11, 19, 11, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 76, False); alias=default
DEBUG 2024-03-02 21:56:28,219 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 11, 'Player 22', 3, '2023-11-21T12:24:56.085989+01:00'::timestamptz, 813, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 11, 'Player 22', 3, datetime.datetime(2023, 11, 21, 12, 24, 56, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 813, False); alias=default
DEBUG 2024-03-02 21:56:28,220 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 11, 'Player 35', 1, '2024-02-18T03:04:50.085989+01:00'::timestamptz, 562, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 11, 'Player 35', 1, datetime.datetime(2024, 2, 18, 3, 4, 50, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 562, False); alias=default
DEBUG 2024-03-02 21:56:28,221 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 12', 1, '2024-01-12T14:25:02.085989+01:00'::timestamptz, 515, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 12', 1, datetime.datetime(2024, 1, 12, 14, 25, 2, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 515, False); alias=default
DEBUG 2024-03-02 21:56:28,222 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 11, 'Player 2', 9, '2024-02-22T23:36:56.085989+01:00'::timestamptz, 556, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 11, 'Player 2', 9, datetime.datetime(2024, 2, 22, 23, 36, 56, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 556, False); alias=default
DEBUG 2024-03-02 21:56:28,223 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 11, 'Player 46', 0, '2024-01-01T02:14:20.085989+01:00'::timestamptz, 367, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 11, 'Player 46', 0, datetime.datetime(2024, 1, 1, 2, 14, 20, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 367, False); alias=default
DEBUG 2024-03-02 21:56:28,225 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 11, 'Player 29', 1, '2023-11-15T07:02:38.085989+01:00'::timestamptz, 801, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 11, 'Player 29', 1, datetime.datetime(2023, 11, 15, 7, 2, 38, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 801, False); alias=default
DEBUG 2024-03-02 21:56:28,226 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 6', 7, '2024-01-09T04:02:25.085989+01:00'::timestamptz, 971, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 6', 7, datetime.datetime(2024, 1, 9, 4, 2, 25, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 971, False); alias=default
DEBUG 2024-03-02 21:56:28,227 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 1, 'Player 10', 11, '2024-01-20T12:25:14.085989+01:00'::timestamptz, 160, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 1, 'Player 10', 11, datetime.datetime(2024, 1, 20, 12, 25, 14, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 160, False); alias=default
DEBUG 2024-03-02 21:56:28,228 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 49', 11, 'Player 42', 7, '2023-12-21T18:59:09.085989+01:00'::timestamptz, 954, false) RETURNING "pong_gamedata"."id"; args=('Player 49', 11, 'Player 42', 7, datetime.datetime(2023, 12, 21, 18, 59, 9, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 954, False); alias=default
DEBUG 2024-03-02 21:56:28,229 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 22', 0, '2024-01-27T08:32:28.085989+01:00'::timestamptz, 694, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 22', 0, datetime.datetime(2024, 1, 27, 8, 32, 28, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 694, False); alias=default
DEBUG 2024-03-02 21:56:28,231 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 11, 'Player 32', 9, '2024-01-21T07:02:21.085989+01:00'::timestamptz, 494, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 11, 'Player 32', 9, datetime.datetime(2024, 1, 21, 7, 2, 21, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 494, False); alias=default
DEBUG 2024-03-02 21:56:28,232 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 11, 'Player 14', 5, '2024-01-05T00:33:12.085989+01:00'::timestamptz, 745, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 11, 'Player 14', 5, datetime.datetime(2024, 1, 5, 0, 33, 12, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 745, False); alias=default
DEBUG 2024-03-02 21:56:28,233 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 11, 'Player 15', 9, '2023-12-22T01:46:28.085989+01:00'::timestamptz, 605, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 11, 'Player 15', 9, datetime.datetime(2023, 12, 22, 1, 46, 28, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 605, False); alias=default
DEBUG 2024-03-02 21:56:28,234 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 0, 'Player 18', 11, '2023-12-28T05:36:25.085989+01:00'::timestamptz, 267, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 0, 'Player 18', 11, datetime.datetime(2023, 12, 28, 5, 36, 25, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 267, False); alias=default
DEBUG 2024-03-02 21:56:28,236 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 49', 6, '2024-01-05T10:40:42.085989+01:00'::timestamptz, 148, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 49', 6, datetime.datetime(2024, 1, 5, 10, 40, 42, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 148, False); alias=default
DEBUG 2024-03-02 21:56:28,237 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 5', 1, '2023-12-29T02:08:21.085989+01:00'::timestamptz, 705, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 5', 1, datetime.datetime(2023, 12, 29, 2, 8, 21, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 705, False); alias=default
DEBUG 2024-03-02 21:56:28,238 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 10, 'Player 19', 11, '2023-12-18T03:54:21.085989+01:00'::timestamptz, 295, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 10, 'Player 19', 11, datetime.datetime(2023, 12, 18, 3, 54, 21, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 295, False); alias=default
DEBUG 2024-03-02 21:56:28,239 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 47', 4, 'Player 31', 11, '2024-01-27T06:17:56.085989+01:00'::timestamptz, 136, false) RETURNING "pong_gamedata"."id"; args=('Player 47', 4, 'Player 31', 11, datetime.datetime(2024, 1, 27, 6, 17, 56, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 136, False); alias=default
DEBUG 2024-03-02 21:56:28,241 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 54', 11, 'Player 21', 5, '2023-12-21T15:54:06.085989+01:00'::timestamptz, 801, false) RETURNING "pong_gamedata"."id"; args=('Player 54', 11, 'Player 21', 5, datetime.datetime(2023, 12, 21, 15, 54, 6, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 801, False); alias=default
DEBUG 2024-03-02 21:56:28,242 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 50', 10, 'Player 5', 11, '2024-02-10T11:50:01.085989+01:00'::timestamptz, 205, false) RETURNING "pong_gamedata"."id"; args=('Player 50', 10, 'Player 5', 11, datetime.datetime(2024, 2, 10, 11, 50, 1, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 205, False); alias=default
DEBUG 2024-03-02 21:56:28,243 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 11, 'Player 20', 1, '2024-02-12T00:16:07.085989+01:00'::timestamptz, 748, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 11, 'Player 20', 1, datetime.datetime(2024, 2, 12, 0, 16, 7, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 748, False); alias=default
DEBUG 2024-03-02 21:56:28,245 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 0, 'Player 13', 11, '2023-12-31T15:14:46.085989+01:00'::timestamptz, 43, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 0, 'Player 13', 11, datetime.datetime(2023, 12, 31, 15, 14, 46, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 43, False); alias=default
DEBUG 2024-03-02 21:56:28,246 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 10, 'Player 19', 11, '2024-02-07T23:13:46.085989+01:00'::timestamptz, 109, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 10, 'Player 19', 11, datetime.datetime(2024, 2, 7, 23, 13, 46, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 109, False); alias=default
DEBUG 2024-03-02 21:56:28,247 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 10, 'Player 17', 11, '2024-02-01T02:29:22.085989+01:00'::timestamptz, 359, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 10, 'Player 17', 11, datetime.datetime(2024, 2, 1, 2, 29, 22, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 359, False); alias=default
DEBUG 2024-03-02 21:56:28,248 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 49', 11, 'Player 6', 6, '2023-12-29T19:08:38.085989+01:00'::timestamptz, 302, false) RETURNING "pong_gamedata"."id"; args=('Player 49', 11, 'Player 6', 6, datetime.datetime(2023, 12, 29, 19, 8, 38, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 302, False); alias=default
DEBUG 2024-03-02 21:56:28,250 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 52', 2, 'Player 28', 11, '2023-11-05T02:59:02.085989+01:00'::timestamptz, 56, false) RETURNING "pong_gamedata"."id"; args=('Player 52', 2, 'Player 28', 11, datetime.datetime(2023, 11, 5, 2, 59, 2, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 56, False); alias=default
DEBUG 2024-03-02 21:56:28,251 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 8, 'Player 36', 11, '2024-01-31T07:42:08.085989+01:00'::timestamptz, 494, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 8, 'Player 36', 11, datetime.datetime(2024, 1, 31, 7, 42, 8, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 494, False); alias=default
DEBUG 2024-03-02 21:56:28,252 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 53', 9, 'Player 33', 11, '2024-03-02T11:18:25.085989+01:00'::timestamptz, 240, false) RETURNING "pong_gamedata"."id"; args=('Player 53', 9, 'Player 33', 11, datetime.datetime(2024, 3, 2, 11, 18, 25, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 240, False); alias=default
DEBUG 2024-03-02 21:56:28,254 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 11, 'Player 31', 5, '2023-11-29T14:29:28.085989+01:00'::timestamptz, 118, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 11, 'Player 31', 5, datetime.datetime(2023, 11, 29, 14, 29, 28, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 118, False); alias=default
DEBUG 2024-03-02 21:56:28,255 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 8, 'Player 4', 11, '2023-12-26T06:40:57.085989+01:00'::timestamptz, 394, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 8, 'Player 4', 11, datetime.datetime(2023, 12, 26, 6, 40, 57, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 394, False); alias=default
DEBUG 2024-03-02 21:56:28,256 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 56', 8, 'Player 59', 11, '2024-02-10T00:12:57.085989+01:00'::timestamptz, 577, false) RETURNING "pong_gamedata"."id"; args=('Player 56', 8, 'Player 59', 11, datetime.datetime(2024, 2, 10, 0, 12, 57, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 577, False); alias=default
DEBUG 2024-03-02 21:56:28,258 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 9, 'Player 21', 11, '2023-11-10T18:11:53.085989+01:00'::timestamptz, 282, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 9, 'Player 21', 11, datetime.datetime(2023, 11, 10, 18, 11, 53, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 282, False); alias=default
DEBUG 2024-03-02 21:56:28,259 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 49', 5, 'Player 53', 11, '2024-02-27T21:18:09.085989+01:00'::timestamptz, 438, false) RETURNING "pong_gamedata"."id"; args=('Player 49', 5, 'Player 53', 11, datetime.datetime(2024, 2, 27, 21, 18, 9, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 438, False); alias=default
DEBUG 2024-03-02 21:56:28,260 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 8, 'Player 17', 11, '2024-02-07T22:31:57.085989+01:00'::timestamptz, 942, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 8, 'Player 17', 11, datetime.datetime(2024, 2, 7, 22, 31, 57, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 942, False); alias=default
DEBUG 2024-03-02 21:56:28,261 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 10, 'Player 58', 11, '2024-02-21T05:28:56.085989+01:00'::timestamptz, 677, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 10, 'Player 58', 11, datetime.datetime(2024, 2, 21, 5, 28, 56, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 677, False); alias=default
DEBUG 2024-03-02 21:56:28,262 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 63', 5, 'Player 14', 11, '2023-12-02T11:08:31.085989+01:00'::timestamptz, 88, false) RETURNING "pong_gamedata"."id"; args=('Player 63', 5, 'Player 14', 11, datetime.datetime(2023, 12, 2, 11, 8, 31, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 88, False); alias=default
DEBUG 2024-03-02 21:56:28,264 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 11, 'Player 5', 2, '2023-12-27T15:15:06.085989+01:00'::timestamptz, 547, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 11, 'Player 5', 2, datetime.datetime(2023, 12, 27, 15, 15, 6, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 547, False); alias=default
DEBUG 2024-03-02 21:56:28,265 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 6', 5, '2024-02-16T21:01:22.085989+01:00'::timestamptz, 920, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 6', 5, datetime.datetime(2024, 2, 16, 21, 1, 22, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 920, False); alias=default
DEBUG 2024-03-02 21:56:28,266 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 10, 'Player 65', 11, '2024-01-14T03:34:59.085989+01:00'::timestamptz, 131, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 10, 'Player 65', 11, datetime.datetime(2024, 1, 14, 3, 34, 59, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 131, False); alias=default
DEBUG 2024-03-02 21:56:28,267 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,268 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 6', 5, '2023-11-04T11:38:18.085989+01:00'::timestamptz, 593, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 6', 5, datetime.datetime(2023, 11, 4, 11, 38, 18, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 593, True); alias=default
DEBUG 2024-03-02 21:56:28,269 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 7, 'Player 8', 11, '2023-11-04T11:41:06.085989+01:00'::timestamptz, 800, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 7, 'Player 8', 11, datetime.datetime(2023, 11, 4, 11, 41, 6, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 800, True); alias=default
DEBUG 2024-03-02 21:56:28,271 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 8', 9, '2023-11-04T11:43:15.085989+01:00'::timestamptz, 163, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 8', 9, datetime.datetime(2023, 11, 4, 11, 43, 15, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 163, True); alias=default
DEBUG 2024-03-02 21:56:28,272 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2023-11-04T11:43:15.085989+01:00'::timestamptz, 929, '["Player 3", "Player 8", "Player 6", "Player 13"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2023, 11, 4, 11, 43, 15, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 929, <psycopg2._json.Json object at 0x7fc89de73f80>, '0x0'); alias=default
DEBUG 2024-03-02 21:56:28,273 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 12', 3, '2024-01-15T21:10:11.085989+01:00'::timestamptz, 959, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 12', 3, datetime.datetime(2024, 1, 15, 21, 10, 11, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 959, True); alias=default
DEBUG 2024-03-02 21:56:28,274 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 9', 6, '2024-01-15T21:09:18.085989+01:00'::timestamptz, 791, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 9', 6, datetime.datetime(2024, 1, 15, 21, 9, 18, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 791, True); alias=default
DEBUG 2024-03-02 21:56:28,275 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 8, 'Player 7', 11, '2024-01-15T21:10:47.085989+01:00'::timestamptz, 764, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 8, 'Player 7', 11, datetime.datetime(2024, 1, 15, 21, 10, 47, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 764, True); alias=default
DEBUG 2024-03-02 21:56:28,277 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2024-01-15T21:10:47.085989+01:00'::timestamptz, 995, '["Player 7", "Player 15", "Player 12", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2024, 1, 15, 21, 10, 47, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 995, <psycopg2._json.Json object at 0x7fc89dcc8080>, '0x0'); alias=default
DEBUG 2024-03-02 21:56:28,278 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 16', 3, '2024-01-04T15:40:17.085989+01:00'::timestamptz, 403, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 16', 3, datetime.datetime(2024, 1, 4, 15, 40, 17, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 403, True); alias=default
DEBUG 2024-03-02 21:56:28,279 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 7', 4, '2024-01-04T15:37:23.085989+01:00'::timestamptz, 641, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 7', 4, datetime.datetime(2024, 1, 4, 15, 37, 23, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 641, True); alias=default
DEBUG 2024-03-02 21:56:28,280 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 5, 'Player 12', 11, '2024-01-04T15:43:21.085989+01:00'::timestamptz, 566, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 5, 'Player 12', 11, datetime.datetime(2024, 1, 4, 15, 43, 21, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 566, True); alias=default
DEBUG 2024-03-02 21:56:28,281 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2024-01-04T15:43:21.085989+01:00'::timestamptz, 999, '["Player 12", "Player 11", "Player 16", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2024, 1, 4, 15, 43, 21, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 999, <psycopg2._json.Json object at 0x7fc89dcf9940>, '0x0'); alias=default
DEBUG 2024-03-02 21:56:28,282 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 7, 'Player 7', 11, '2024-01-08T15:58:42.085989+01:00'::timestamptz, 302, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 7, 'Player 7', 11, datetime.datetime(2024, 1, 8, 15, 58, 42, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 302, True); alias=default
DEBUG 2024-03-02 21:56:28,283 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 1', 5, '2024-01-08T15:51:40.085989+01:00'::timestamptz, 26, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 1', 5, datetime.datetime(2024, 1, 8, 15, 51, 40, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 26, True); alias=default
DEBUG 2024-03-02 21:56:28,284 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 4, 'Player 0', 11, '2024-01-08T16:04:09.085989+01:00'::timestamptz, 670, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 4, 'Player 0', 11, datetime.datetime(2024, 1, 8, 16, 4, 9, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 670, True); alias=default
DEBUG 2024-03-02 21:56:28,286 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2024-01-08T16:04:09.085989+01:00'::timestamptz, 775, '["Player 0", "Player 7", "Player 13", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2024, 1, 8, 16, 4, 9, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 775, <psycopg2._json.Json object at 0x7fc89de72060>, '0x0'); alias=default
DEBUG 2024-03-02 21:56:28,287 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 7, 'Player 13', 11, '2024-02-23T19:07:02.085989+01:00'::timestamptz, 242, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 7, 'Player 13', 11, datetime.datetime(2024, 2, 23, 19, 7, 2, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 242, True); alias=default
DEBUG 2024-03-02 21:56:28,288 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 10', 2, '2024-02-23T19:09:40.085989+01:00'::timestamptz, 650, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 10', 2, datetime.datetime(2024, 2, 23, 19, 9, 40, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 650, True); alias=default
DEBUG 2024-03-02 21:56:28,289 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 5', 0, '2024-02-23T19:15:21.085989+01:00'::timestamptz, 569, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 5', 0, datetime.datetime(2024, 2, 23, 19, 15, 21, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 569, True); alias=default
DEBUG 2024-03-02 21:56:28,290 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2024-02-23T19:15:21.085989+01:00'::timestamptz, 991, '["Player 13", "Player 5", "Player 0", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2024, 2, 23, 19, 15, 21, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 991, <psycopg2._json.Json object at 0x7fc89de73770>, '0x0'); alias=default
DEBUG 2024-03-02 21:56:28,292 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 4, 'Player 14', 11, '2023-11-29T21:03:30.085989+01:00'::timestamptz, 673, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 4, 'Player 14', 11, datetime.datetime(2023, 11, 29, 21, 3, 30, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 673, True); alias=default
DEBUG 2024-03-02 21:56:28,302 utils (0.010) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 3, 'Player 11', 11, '2023-11-29T21:04:04.085989+01:00'::timestamptz, 957, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 3, 'Player 11', 11, datetime.datetime(2023, 11, 29, 21, 4, 4, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 957, True); alias=default
DEBUG 2024-03-02 21:56:28,309 utils (0.006) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 11', 7, '2023-11-29T21:04:05.085989+01:00'::timestamptz, 246, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 11', 7, datetime.datetime(2023, 11, 29, 21, 4, 5, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 246, True); alias=default
DEBUG 2024-03-02 21:56:28,310 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2023-11-29T21:04:05.085989+01:00'::timestamptz, 958, '["Player 14", "Player 11", "Player 7", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2023, 11, 29, 21, 4, 5, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 958, <psycopg2._json.Json object at 0x7fc89dcfac00>, '0x0'); alias=default
DEBUG 2024-03-02 21:56:28,312 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 4', 1, '2024-01-20T19:19:38.085989+01:00'::timestamptz, 690, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 4', 1, datetime.datetime(2024, 1, 20, 19, 19, 38, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 690, True); alias=default
DEBUG 2024-03-02 21:56:28,314 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 0, 'Player 9', 11, '2024-01-20T19:17:46.085989+01:00'::timestamptz, 200, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 0, 'Player 9', 11, datetime.datetime(2024, 1, 20, 19, 17, 46, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 200, True); alias=default
DEBUG 2024-03-02 21:56:28,315 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 4, 'Player 9', 11, '2024-01-20T19:21:58.085989+01:00'::timestamptz, 448, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 4, 'Player 9', 11, datetime.datetime(2024, 1, 20, 19, 21, 58, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 448, True); alias=default
DEBUG 2024-03-02 21:56:28,317 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2024-01-20T19:21:58.085989+01:00'::timestamptz, 830, '["Player 9", "Player 6", "Player 4", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2024, 1, 20, 19, 21, 58, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 830, <psycopg2._json.Json object at 0x7fc89dcfbb00>, '0x0'); alias=default
DEBUG 2024-03-02 21:56:28,318 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 0', 8, '2024-01-20T13:18:46.085989+01:00'::timestamptz, 828, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 0', 8, datetime.datetime(2024, 1, 20, 13, 18, 46, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 828, True); alias=default
DEBUG 2024-03-02 21:56:28,320 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 8', 9, '2024-01-20T13:18:18.085989+01:00'::timestamptz, 803, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 8', 9, datetime.datetime(2024, 1, 20, 13, 18, 18, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 803, True); alias=default
DEBUG 2024-03-02 21:56:28,321 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 10, 'Player 4', 11, '2024-01-20T13:20:30.085989+01:00'::timestamptz, 76, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 10, 'Player 4', 11, datetime.datetime(2024, 1, 20, 13, 20, 30, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 76, True); alias=default
DEBUG 2024-03-02 21:56:28,323 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2024-01-20T13:20:30.085989+01:00'::timestamptz, 935, '["Player 4", "Player 1", "Player 0", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2024, 1, 20, 13, 20, 30, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 935, <psycopg2._json.Json object at 0x7fc89dcc8080>, '0x0'); alias=default
DEBUG 2024-03-02 21:56:28,324 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 12', 2, '2024-01-18T03:05:23.085989+01:00'::timestamptz, 638, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 12', 2, datetime.datetime(2024, 1, 18, 3, 5, 23, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 638, True); alias=default
DEBUG 2024-03-02 21:56:28,325 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 16', 6, '2024-01-18T03:08:31.085989+01:00'::timestamptz, 707, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 16', 6, datetime.datetime(2024, 1, 18, 3, 8, 31, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 707, True); alias=default
DEBUG 2024-03-02 21:56:28,327 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 7', 7, '2024-01-18T03:08:50.085989+01:00'::timestamptz, 917, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 7', 7, datetime.datetime(2024, 1, 18, 3, 8, 50, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 917, True); alias=default
DEBUG 2024-03-02 21:56:28,329 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2024-01-18T03:08:50.085989+01:00'::timestamptz, 845, '["Player 17", "Player 7", "Player 12", "Player 16"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2024, 1, 18, 3, 8, 50, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 845, <psycopg2._json.Json object at 0x7fc89dcc8080>, '0x0'); alias=default
DEBUG 2024-03-02 21:56:28,330 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 8', 9, '2023-12-05T02:16:04.085989+01:00'::timestamptz, 913, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 8', 9, datetime.datetime(2023, 12, 5, 2, 16, 4, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 913, True); alias=default
DEBUG 2024-03-02 21:56:28,332 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 18', 8, '2023-12-05T02:16:07.085989+01:00'::timestamptz, 905, true) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 18', 8, datetime.datetime(2023, 12, 5, 2, 16, 7, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 905, True); alias=default
DEBUG 2024-03-02 21:56:28,333 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 5, 'Player 19', 11, '2023-12-05T02:16:08.085989+01:00'::timestamptz, 478, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 5, 'Player 19', 11, datetime.datetime(2023, 12, 5, 2, 16, 8, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 478, True); alias=default
DEBUG 2024-03-02 21:56:28,334 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2023-12-05T02:16:08.085989+01:00'::timestamptz, 917, '["Player 19", "Player 12", "Player 8", "Player 18"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2023, 12, 5, 2, 16, 8, 85989, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 917, <psycopg2._json.Json object at 0x7fc89dd1c2c0>, '0x0'); alias=default
DEBUG 2024-03-02 21:56:28,335 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,336 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,337 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-02 21:56:28,337 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:28,338 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-02 21:56:28,339 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:28,340 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-02 21:56:28,341 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-02 21:56:28,342 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-02 21:56:28,344 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-02 21:56:28,344 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:28,345 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-02 21:56:28,346 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:28,347 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-02 21:56:28,348 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,349 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,350 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,351 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,352 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,353 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,353 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-02 21:56:28,354 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:28,354 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-02 21:56:28,355 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:28,356 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-02 21:56:28,358 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-02 21:56:28,358 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:28,359 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-02 21:56:28,360 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:28,361 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-02 21:56:28,362 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,363 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,364 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,365 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,366 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,367 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,367 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-02 21:56:28,368 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:28,368 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-02 21:56:28,369 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:28,370 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-02 21:56:28,371 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-02 21:56:28,372 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:28,373 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-02 21:56:28,374 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:28,375 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-02 21:56:28,376 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,376 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,377 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,378 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,380 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,381 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,382 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-02 21:56:28,382 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:28,383 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-02 21:56:28,383 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:28,384 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-02 21:56:28,385 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-02 21:56:28,387 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-02 21:56:28,387 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 21:56:28,388 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-02 21:56:28,389 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 21:56:28,390 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-02 21:56:28,391 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,392 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,392 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,393 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,395 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 21:56:28,396 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
