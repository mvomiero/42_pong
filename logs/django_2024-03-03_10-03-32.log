DEBUG 2024-03-03 10:03:34,265 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,266 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,268 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,268 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,269 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 10:03:34,284 utils (0.015) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:03:34,285 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,286 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,288 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 10:03:34,292 utils (0.004) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:03:34,295 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 10:03:34,298 utils (0.002) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 10:03:34,299 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,304 utils (0.002) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T10:03:34.300259+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 10, 3, 34, 300259, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:03:34,306 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,306 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,309 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 10:03:34,312 utils (0.003) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:03:34,318 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 10:03:34,323 utils (0.005) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 10:03:34,325 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:03:34,330 utils (0.005) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:03:34,340 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 10:03:34,346 utils (0.005) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:03:34,347 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:03:34,350 utils (0.003) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:03:34,351 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:03:34,354 utils (0.003) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:03:34,355 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 10:03:34,358 utils (0.003) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 10:03:34,358 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:03:34,361 utils (0.003) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:03:34,362 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 10:03:34,364 utils (0.002) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 10:03:34,364 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 10:03:34,366 utils (0.002) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 10:03:34,366 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 10:03:34,368 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:03:34,368 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:03:34,370 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:03:34,370 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:03:34,372 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:03:34,372 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 10:03:34,374 utils (0.002) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 10:03:34,374 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 10:03:34,376 utils (0.002) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:03:34,377 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 10:03:34,379 utils (0.002) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 10:03:34,379 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 10:03:34,381 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 10:03:34,381 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:03:34,382 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:03:34,382 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:03:34,383 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:03:34,383 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 10:03:34,385 utils (0.002) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 10:03:34,386 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 10:03:34,388 utils (0.002) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 10:03:34,388 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 10:03:34,390 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:03:34,390 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:03:34,391 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:03:34,391 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:03:34,392 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:03:34,392 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 10:03:34,394 utils (0.002) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 10:03:34,394 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 10:03:34,396 utils (0.002) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 10:03:34,397 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,398 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,400 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T10:03:34.399009+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 10, 3, 34, 399009, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:03:34,400 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,410 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 10:03:34,414 utils (0.005) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:03:34,415 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:03:34,416 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:03:34,416 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 10:03:34,418 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 10:03:34,418 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 10:03:34,421 utils (0.003) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 10:03:34,422 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 10:03:34,424 utils (0.002) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 10:03:34,425 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,426 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,428 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T10:03:34.427332+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 10, 3, 34, 427332, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:03:34,428 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,439 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,440 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T10:03:34.439711+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 10, 3, 34, 439711, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:03:34,441 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,441 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,452 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,453 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T10:03:34.453132+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 10, 3, 34, 453132, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:03:34,455 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,455 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,464 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 10:03:34,464 utils (0.000) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 10:03:34,475 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 10:03:34,476 utils (0.000) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 10:03:34,477 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,478 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T10:03:34.477933+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 10, 3, 34, 477933, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:03:34,479 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,479 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,490 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 10:03:34,492 utils (0.001) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 10:03:34,494 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,494 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T10:03:34.494433+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 10, 3, 34, 494433, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:03:34,495 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,495 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,509 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 10:03:34,510 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 10:03:34,511 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,512 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T10:03:34.512047+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 10, 3, 34, 512047, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:03:34,514 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,514 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,526 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,528 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T10:03:34.526425+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 10, 3, 34, 526425, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:03:34,529 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,529 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,538 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 10:03:34,539 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 10:03:34,541 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,543 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T10:03:34.542275+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 10, 3, 34, 542275, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:03:34,544 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,544 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,546 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,547 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T10:03:34.546530+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 10, 3, 34, 546530, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:03:34,547 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,548 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,561 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,562 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T10:03:34.561399+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 10, 3, 34, 561399, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:03:34,563 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,563 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,574 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:03:34,578 utils (0.004) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:03:34,579 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,580 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T10:03:34.580318+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 10, 3, 34, 580318, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:03:34,582 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,582 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,590 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:03:34,591 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:03:34,593 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,594 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T10:03:34.593903+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 10, 3, 34, 593903, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:03:34,595 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,596 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,608 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:03:34,610 utils (0.002) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:03:34,611 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,612 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T10:03:34.612246+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 10, 3, 34, 612246, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:03:34,614 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,614 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,626 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,627 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T10:03:34.627115+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 10, 3, 34, 627115, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:03:34,628 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,629 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,638 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 10:03:34,638 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 10:03:34,640 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,641 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T10:03:34.640663+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 10, 3, 34, 640663, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:03:34,642 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,642 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,644 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 10:03:34,650 utils (0.006) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:03:34,652 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 10:03:34,658 utils (0.006) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 10:03:34,660 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,661 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T10:03:34.660488+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 10, 3, 34, 660488, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:03:34,662 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,663 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,664 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 10:03:34,669 utils (0.005) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 10:03:34,670 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 10:03:34,672 utils (0.002) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 10:03:34,672 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 10:03:34,673 utils (0.002) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 10:03:34,674 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,676 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,677 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T10:03:34.676523+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 10, 3, 34, 676523, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 10:03:34,678 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 10:03:34,679 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,697 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 10:03:34,698 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,699 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 10:03:34,700 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,702 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 10:03:34,706 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 10:03:34,706 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,707 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 10:03:34,708 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,710 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 10:03:34,712 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,714 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,716 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,744 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 1, 'Player 8', 11, '2023-12-18T10:24:06.714650+01:00'::timestamptz, 319, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 1, 'Player 8', 11, datetime.datetime(2023, 12, 18, 10, 24, 6, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 319, False); alias=default
DEBUG 2024-03-03 10:03:34,746 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 6', 3, '2023-12-10T07:47:20.714650+01:00'::timestamptz, 99, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 6', 3, datetime.datetime(2023, 12, 10, 7, 47, 20, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 99, False); alias=default
DEBUG 2024-03-03 10:03:34,747 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 9, 'Player 12', 11, '2023-12-26T06:39:50.714650+01:00'::timestamptz, 284, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 9, 'Player 12', 11, datetime.datetime(2023, 12, 26, 6, 39, 50, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 284, False); alias=default
DEBUG 2024-03-03 10:03:34,749 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 8, 'Player 12', 11, '2023-12-08T06:19:27.714650+01:00'::timestamptz, 466, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 8, 'Player 12', 11, datetime.datetime(2023, 12, 8, 6, 19, 27, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 466, False); alias=default
DEBUG 2024-03-03 10:03:34,750 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 1, 'Player 11', 11, '2024-02-05T03:54:38.714650+01:00'::timestamptz, 98, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 1, 'Player 11', 11, datetime.datetime(2024, 2, 5, 3, 54, 38, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 98, False); alias=default
DEBUG 2024-03-03 10:03:34,752 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 10, 'Player 5', 11, '2024-02-05T12:14:16.714650+01:00'::timestamptz, 962, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 10, 'Player 5', 11, datetime.datetime(2024, 2, 5, 12, 14, 16, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 962, False); alias=default
DEBUG 2024-03-03 10:03:34,753 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 13', 0, '2023-11-07T18:46:42.714650+01:00'::timestamptz, 961, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 13', 0, datetime.datetime(2023, 11, 7, 18, 46, 42, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 961, False); alias=default
DEBUG 2024-03-03 10:03:34,754 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 14', 4, '2024-01-16T16:01:12.714650+01:00'::timestamptz, 538, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 14', 4, datetime.datetime(2024, 1, 16, 16, 1, 12, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 538, False); alias=default
DEBUG 2024-03-03 10:03:34,756 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 9, 'Player 1', 11, '2023-11-12T03:06:59.714650+01:00'::timestamptz, 335, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 9, 'Player 1', 11, datetime.datetime(2023, 11, 12, 3, 6, 59, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 335, False); alias=default
DEBUG 2024-03-03 10:03:34,757 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 9', 8, '2023-12-30T19:47:46.714650+01:00'::timestamptz, 227, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 9', 8, datetime.datetime(2023, 12, 30, 19, 47, 46, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 227, False); alias=default
DEBUG 2024-03-03 10:03:34,758 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 6, 'Player 8', 11, '2024-02-04T00:05:54.714650+01:00'::timestamptz, 77, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 6, 'Player 8', 11, datetime.datetime(2024, 2, 4, 0, 5, 54, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 77, False); alias=default
DEBUG 2024-03-03 10:03:34,760 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 8, 'Player 4', 11, '2023-11-19T12:39:49.714650+01:00'::timestamptz, 557, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 8, 'Player 4', 11, datetime.datetime(2023, 11, 19, 12, 39, 49, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 557, False); alias=default
DEBUG 2024-03-03 10:03:34,761 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 6, 'Player 11', 11, '2024-03-03T07:10:03.714650+01:00'::timestamptz, 692, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 6, 'Player 11', 11, datetime.datetime(2024, 3, 3, 7, 10, 3, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 692, False); alias=default
DEBUG 2024-03-03 10:03:34,762 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 2, 'Player 2', 11, '2023-11-11T19:03:13.714650+01:00'::timestamptz, 936, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 2, 'Player 2', 11, datetime.datetime(2023, 11, 11, 19, 3, 13, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 936, False); alias=default
DEBUG 2024-03-03 10:03:34,763 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 5, 'Player 22', 11, '2023-12-24T10:31:25.714650+01:00'::timestamptz, 600, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 5, 'Player 22', 11, datetime.datetime(2023, 12, 24, 10, 31, 25, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 600, False); alias=default
DEBUG 2024-03-03 10:03:34,765 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 4, 'Player 13', 11, '2023-11-22T05:17:29.714650+01:00'::timestamptz, 372, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 4, 'Player 13', 11, datetime.datetime(2023, 11, 22, 5, 17, 29, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 372, False); alias=default
DEBUG 2024-03-03 10:03:34,767 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 23', 2, '2024-01-24T03:29:47.714650+01:00'::timestamptz, 476, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 23', 2, datetime.datetime(2024, 1, 24, 3, 29, 47, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 476, False); alias=default
DEBUG 2024-03-03 10:03:34,769 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 9, 'Player 21', 11, '2023-11-27T18:56:11.714650+01:00'::timestamptz, 194, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 9, 'Player 21', 11, datetime.datetime(2023, 11, 27, 18, 56, 11, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 194, False); alias=default
DEBUG 2024-03-03 10:03:34,770 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 7', 8, '2024-03-02T09:48:32.714650+01:00'::timestamptz, 372, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 7', 8, datetime.datetime(2024, 3, 2, 9, 48, 32, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 372, False); alias=default
DEBUG 2024-03-03 10:03:34,771 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 10, 'Player 7', 11, '2024-01-13T13:15:29.714650+01:00'::timestamptz, 344, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 10, 'Player 7', 11, datetime.datetime(2024, 1, 13, 13, 15, 29, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 344, False); alias=default
DEBUG 2024-03-03 10:03:34,773 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 6, 'Player 16', 11, '2024-01-07T04:40:27.714650+01:00'::timestamptz, 104, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 6, 'Player 16', 11, datetime.datetime(2024, 1, 7, 4, 40, 27, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 104, False); alias=default
DEBUG 2024-03-03 10:03:34,774 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 10, 'Player 3', 11, '2023-12-01T17:35:31.714650+01:00'::timestamptz, 918, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 10, 'Player 3', 11, datetime.datetime(2023, 12, 1, 17, 35, 31, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 918, False); alias=default
DEBUG 2024-03-03 10:03:34,775 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 8, 'Player 7', 11, '2024-02-23T23:38:02.714650+01:00'::timestamptz, 956, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 8, 'Player 7', 11, datetime.datetime(2024, 2, 23, 23, 38, 2, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 956, False); alias=default
DEBUG 2024-03-03 10:03:34,777 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 2, 'Player 26', 11, '2024-02-14T07:15:03.714650+01:00'::timestamptz, 742, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 2, 'Player 26', 11, datetime.datetime(2024, 2, 14, 7, 15, 3, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 742, False); alias=default
DEBUG 2024-03-03 10:03:34,778 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 8', 8, '2024-02-08T03:19:38.714650+01:00'::timestamptz, 953, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 8', 8, datetime.datetime(2024, 2, 8, 3, 19, 38, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 953, False); alias=default
DEBUG 2024-03-03 10:03:34,779 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 19', 10, '2024-01-12T20:14:50.714650+01:00'::timestamptz, 582, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 19', 10, datetime.datetime(2024, 1, 12, 20, 14, 50, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 582, False); alias=default
DEBUG 2024-03-03 10:03:34,780 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 21', 3, '2023-12-22T07:54:58.714650+01:00'::timestamptz, 892, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 21', 3, datetime.datetime(2023, 12, 22, 7, 54, 58, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 892, False); alias=default
DEBUG 2024-03-03 10:03:34,782 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 3', 2, '2023-12-25T19:28:27.714650+01:00'::timestamptz, 517, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 3', 2, datetime.datetime(2023, 12, 25, 19, 28, 27, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 517, False); alias=default
DEBUG 2024-03-03 10:03:34,784 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 6', 6, '2024-02-21T12:29:10.714650+01:00'::timestamptz, 620, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 6', 6, datetime.datetime(2024, 2, 21, 12, 29, 10, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 620, False); alias=default
DEBUG 2024-03-03 10:03:34,786 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 7', 10, '2023-11-18T04:27:14.714650+01:00'::timestamptz, 358, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 7', 10, datetime.datetime(2023, 11, 18, 4, 27, 14, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 358, False); alias=default
DEBUG 2024-03-03 10:03:34,787 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 11, 'Player 10', 1, '2023-12-15T13:38:07.714650+01:00'::timestamptz, 570, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 11, 'Player 10', 1, datetime.datetime(2023, 12, 15, 13, 38, 7, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 570, False); alias=default
DEBUG 2024-03-03 10:03:34,788 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 9, 'Player 16', 11, '2024-01-08T04:54:57.714650+01:00'::timestamptz, 110, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 9, 'Player 16', 11, datetime.datetime(2024, 1, 8, 4, 54, 57, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 110, False); alias=default
DEBUG 2024-03-03 10:03:34,790 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 1', 9, '2023-11-12T22:55:41.714650+01:00'::timestamptz, 298, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 1', 9, datetime.datetime(2023, 11, 12, 22, 55, 41, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 298, False); alias=default
DEBUG 2024-03-03 10:03:34,791 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 3, 'Player 22', 11, '2024-02-07T23:30:05.714650+01:00'::timestamptz, 874, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 3, 'Player 22', 11, datetime.datetime(2024, 2, 7, 23, 30, 5, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 874, False); alias=default
DEBUG 2024-03-03 10:03:34,793 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 10, 'Player 5', 11, '2024-02-19T14:28:31.714650+01:00'::timestamptz, 394, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 10, 'Player 5', 11, datetime.datetime(2024, 2, 19, 14, 28, 31, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 394, False); alias=default
DEBUG 2024-03-03 10:03:34,794 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 0', 1, '2024-01-27T01:52:45.714650+01:00'::timestamptz, 15, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 0', 1, datetime.datetime(2024, 1, 27, 1, 52, 45, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 15, False); alias=default
DEBUG 2024-03-03 10:03:34,795 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 11, 'Player 13', 1, '2023-12-11T22:24:15.714650+01:00'::timestamptz, 402, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 11, 'Player 13', 1, datetime.datetime(2023, 12, 11, 22, 24, 15, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 402, False); alias=default
DEBUG 2024-03-03 10:03:34,796 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 2, 'Player 32', 11, '2024-01-15T21:48:52.714650+01:00'::timestamptz, 599, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 2, 'Player 32', 11, datetime.datetime(2024, 1, 15, 21, 48, 52, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 599, False); alias=default
DEBUG 2024-03-03 10:03:34,798 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 3, 'Player 8', 11, '2024-02-07T21:09:43.714650+01:00'::timestamptz, 775, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 3, 'Player 8', 11, datetime.datetime(2024, 2, 7, 21, 9, 43, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 775, False); alias=default
DEBUG 2024-03-03 10:03:34,799 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 11, 'Player 23', 5, '2023-12-06T19:15:19.714650+01:00'::timestamptz, 237, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 11, 'Player 23', 5, datetime.datetime(2023, 12, 6, 19, 15, 19, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 237, False); alias=default
DEBUG 2024-03-03 10:03:34,801 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 5, 'Player 18', 11, '2024-02-04T16:35:36.714650+01:00'::timestamptz, 29, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 5, 'Player 18', 11, datetime.datetime(2024, 2, 4, 16, 35, 36, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 29, False); alias=default
DEBUG 2024-03-03 10:03:34,803 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 7, 'Player 13', 11, '2023-11-11T15:24:25.714650+01:00'::timestamptz, 425, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 7, 'Player 13', 11, datetime.datetime(2023, 11, 11, 15, 24, 25, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 425, False); alias=default
DEBUG 2024-03-03 10:03:34,804 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 21', 8, '2024-01-27T14:08:43.714650+01:00'::timestamptz, 74, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 21', 8, datetime.datetime(2024, 1, 27, 14, 8, 43, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 74, False); alias=default
DEBUG 2024-03-03 10:03:34,806 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 1, 'Player 37', 11, '2024-01-17T01:26:02.714650+01:00'::timestamptz, 865, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 1, 'Player 37', 11, datetime.datetime(2024, 1, 17, 1, 26, 2, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 865, False); alias=default
DEBUG 2024-03-03 10:03:34,807 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 0, 'Player 29', 11, '2024-02-23T01:57:27.714650+01:00'::timestamptz, 464, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 0, 'Player 29', 11, datetime.datetime(2024, 2, 23, 1, 57, 27, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 464, False); alias=default
DEBUG 2024-03-03 10:03:34,808 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 8, 'Player 13', 11, '2023-11-10T09:39:44.714650+01:00'::timestamptz, 860, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 8, 'Player 13', 11, datetime.datetime(2023, 11, 10, 9, 39, 44, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 860, False); alias=default
DEBUG 2024-03-03 10:03:34,809 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 11, 'Player 28', 1, '2024-02-27T13:57:10.714650+01:00'::timestamptz, 313, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 11, 'Player 28', 1, datetime.datetime(2024, 2, 27, 13, 57, 10, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 313, False); alias=default
DEBUG 2024-03-03 10:03:34,810 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 6, 'Player 24', 11, '2024-01-26T18:46:48.714650+01:00'::timestamptz, 465, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 6, 'Player 24', 11, datetime.datetime(2024, 1, 26, 18, 46, 48, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 465, False); alias=default
DEBUG 2024-03-03 10:03:34,812 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 31', 5, '2024-03-02T09:31:04.714650+01:00'::timestamptz, 427, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 31', 5, datetime.datetime(2024, 3, 2, 9, 31, 4, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 427, False); alias=default
DEBUG 2024-03-03 10:03:34,813 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 0', 8, '2023-12-03T20:18:51.714650+01:00'::timestamptz, 215, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 0', 8, datetime.datetime(2023, 12, 3, 20, 18, 51, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 215, False); alias=default
DEBUG 2024-03-03 10:03:34,814 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 1, 'Player 24', 11, '2024-02-03T02:36:44.714650+01:00'::timestamptz, 712, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 1, 'Player 24', 11, datetime.datetime(2024, 2, 3, 2, 36, 44, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 712, False); alias=default
DEBUG 2024-03-03 10:03:34,815 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 10', 0, '2023-11-12T09:01:47.714650+01:00'::timestamptz, 124, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 10', 0, datetime.datetime(2023, 11, 12, 9, 1, 47, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 124, False); alias=default
DEBUG 2024-03-03 10:03:34,817 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 11, 'Player 29', 7, '2024-01-19T09:16:26.714650+01:00'::timestamptz, 302, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 11, 'Player 29', 7, datetime.datetime(2024, 1, 19, 9, 16, 26, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 302, False); alias=default
DEBUG 2024-03-03 10:03:34,818 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 4, 'Player 38', 11, '2024-02-04T11:50:03.714650+01:00'::timestamptz, 962, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 4, 'Player 38', 11, datetime.datetime(2024, 2, 4, 11, 50, 3, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 962, False); alias=default
DEBUG 2024-03-03 10:03:34,820 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 10, 'Player 22', 11, '2024-01-07T06:03:38.714650+01:00'::timestamptz, 675, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 10, 'Player 22', 11, datetime.datetime(2024, 1, 7, 6, 3, 38, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 675, False); alias=default
DEBUG 2024-03-03 10:03:34,822 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 20', 8, '2023-11-03T00:21:45.714650+01:00'::timestamptz, 533, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 20', 8, datetime.datetime(2023, 11, 3, 0, 21, 45, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 533, False); alias=default
DEBUG 2024-03-03 10:03:34,823 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 10, 'Player 33', 11, '2024-02-11T02:14:37.714650+01:00'::timestamptz, 569, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 10, 'Player 33', 11, datetime.datetime(2024, 2, 11, 2, 14, 37, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 569, False); alias=default
DEBUG 2024-03-03 10:03:34,824 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 11, 'Player 28', 3, '2023-12-02T17:01:12.714650+01:00'::timestamptz, 600, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 11, 'Player 28', 3, datetime.datetime(2023, 12, 2, 17, 1, 12, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 600, False); alias=default
DEBUG 2024-03-03 10:03:34,825 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 1, 'Player 0', 11, '2023-11-10T03:55:54.714650+01:00'::timestamptz, 125, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 1, 'Player 0', 11, datetime.datetime(2023, 11, 10, 3, 55, 54, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 125, False); alias=default
DEBUG 2024-03-03 10:03:34,827 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 1, 'Player 3', 11, '2023-12-25T10:34:40.714650+01:00'::timestamptz, 469, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 1, 'Player 3', 11, datetime.datetime(2023, 12, 25, 10, 34, 40, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 469, False); alias=default
DEBUG 2024-03-03 10:03:34,828 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 11, 'Player 38', 3, '2023-11-30T04:47:51.714650+01:00'::timestamptz, 575, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 11, 'Player 38', 3, datetime.datetime(2023, 11, 30, 4, 47, 51, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 575, False); alias=default
DEBUG 2024-03-03 10:03:34,829 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 11, 'Player 39', 5, '2024-02-22T20:05:31.714650+01:00'::timestamptz, 500, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 11, 'Player 39', 5, datetime.datetime(2024, 2, 22, 20, 5, 31, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 500, False); alias=default
DEBUG 2024-03-03 10:03:34,831 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 6, 'Player 14', 11, '2023-12-26T03:11:11.714650+01:00'::timestamptz, 62, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 6, 'Player 14', 11, datetime.datetime(2023, 12, 26, 3, 11, 11, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 62, False); alias=default
DEBUG 2024-03-03 10:03:34,832 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 12', 8, '2023-12-21T15:34:16.714650+01:00'::timestamptz, 665, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 12', 8, datetime.datetime(2023, 12, 21, 15, 34, 16, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 665, False); alias=default
DEBUG 2024-03-03 10:03:34,834 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 45', 10, '2023-12-02T22:47:12.714650+01:00'::timestamptz, 119, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 45', 10, datetime.datetime(2023, 12, 2, 22, 47, 12, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 119, False); alias=default
DEBUG 2024-03-03 10:03:34,835 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 7, 'Player 33', 11, '2023-12-10T20:09:44.714650+01:00'::timestamptz, 941, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 7, 'Player 33', 11, datetime.datetime(2023, 12, 10, 20, 9, 44, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 941, False); alias=default
DEBUG 2024-03-03 10:03:34,837 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 11, 'Player 26', 4, '2024-01-10T11:06:43.714650+01:00'::timestamptz, 426, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 11, 'Player 26', 4, datetime.datetime(2024, 1, 10, 11, 6, 43, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 426, False); alias=default
DEBUG 2024-03-03 10:03:34,839 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 11, 'Player 26', 1, '2023-12-30T15:35:23.714650+01:00'::timestamptz, 430, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 11, 'Player 26', 1, datetime.datetime(2023, 12, 30, 15, 35, 23, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 430, False); alias=default
DEBUG 2024-03-03 10:03:34,840 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 46', 4, '2024-02-12T08:14:04.714650+01:00'::timestamptz, 176, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 46', 4, datetime.datetime(2024, 2, 12, 8, 14, 4, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 176, False); alias=default
DEBUG 2024-03-03 10:03:34,841 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 4, 'Player 14', 11, '2024-02-26T20:21:37.714650+01:00'::timestamptz, 37, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 4, 'Player 14', 11, datetime.datetime(2024, 2, 26, 20, 21, 37, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 37, False); alias=default
DEBUG 2024-03-03 10:03:34,843 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 22', 2, '2024-02-06T05:50:03.714650+01:00'::timestamptz, 926, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 22', 2, datetime.datetime(2024, 2, 6, 5, 50, 3, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 926, False); alias=default
DEBUG 2024-03-03 10:03:34,844 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 10', 2, '2023-12-03T08:53:10.714650+01:00'::timestamptz, 879, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 10', 2, datetime.datetime(2023, 12, 3, 8, 53, 10, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 879, False); alias=default
DEBUG 2024-03-03 10:03:34,845 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 11, 'Player 10', 3, '2023-11-26T11:16:29.714650+01:00'::timestamptz, 445, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 11, 'Player 10', 3, datetime.datetime(2023, 11, 26, 11, 16, 29, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 445, False); alias=default
DEBUG 2024-03-03 10:03:34,846 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 10, 'Player 24', 11, '2024-01-17T15:19:53.714650+01:00'::timestamptz, 96, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 10, 'Player 24', 11, datetime.datetime(2024, 1, 17, 15, 19, 53, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 96, False); alias=default
DEBUG 2024-03-03 10:03:34,848 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 52', 11, 'Player 32', 10, '2024-01-20T15:39:56.714650+01:00'::timestamptz, 468, false) RETURNING "pong_gamedata"."id"; args=('Player 52', 11, 'Player 32', 10, datetime.datetime(2024, 1, 20, 15, 39, 56, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 468, False); alias=default
DEBUG 2024-03-03 10:03:34,849 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 31', 6, '2024-02-17T06:59:24.714650+01:00'::timestamptz, 661, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 31', 6, datetime.datetime(2024, 2, 17, 6, 59, 24, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 661, False); alias=default
DEBUG 2024-03-03 10:03:34,851 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 11, 'Player 53', 3, '2024-01-26T19:18:29.714650+01:00'::timestamptz, 470, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 11, 'Player 53', 3, datetime.datetime(2024, 1, 26, 19, 18, 29, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 470, False); alias=default
DEBUG 2024-03-03 10:03:34,852 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 19', 7, '2024-02-26T18:51:13.714650+01:00'::timestamptz, 881, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 19', 7, datetime.datetime(2024, 2, 26, 18, 51, 13, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 881, False); alias=default
DEBUG 2024-03-03 10:03:34,854 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 25', 6, '2023-11-11T05:51:31.714650+01:00'::timestamptz, 686, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 25', 6, datetime.datetime(2023, 11, 11, 5, 51, 31, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 686, False); alias=default
DEBUG 2024-03-03 10:03:34,855 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 37', 8, '2024-02-18T10:41:57.714650+01:00'::timestamptz, 354, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 37', 8, datetime.datetime(2024, 2, 18, 10, 41, 57, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 354, False); alias=default
DEBUG 2024-03-03 10:03:34,857 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 11, 'Player 33', 1, '2024-01-23T07:48:38.714650+01:00'::timestamptz, 832, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 11, 'Player 33', 1, datetime.datetime(2024, 1, 23, 7, 48, 38, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 832, False); alias=default
DEBUG 2024-03-03 10:03:34,858 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 41', 4, '2024-01-05T14:21:39.714650+01:00'::timestamptz, 12, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 41', 4, datetime.datetime(2024, 1, 5, 14, 21, 39, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 12, False); alias=default
DEBUG 2024-03-03 10:03:34,859 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 10, 'Player 2', 11, '2023-11-01T22:30:24.714650+01:00'::timestamptz, 774, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 10, 'Player 2', 11, datetime.datetime(2023, 11, 1, 22, 30, 24, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 774, False); alias=default
DEBUG 2024-03-03 10:03:34,861 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 6, 'Player 2', 11, '2024-02-15T23:58:13.714650+01:00'::timestamptz, 475, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 6, 'Player 2', 11, datetime.datetime(2024, 2, 15, 23, 58, 13, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 475, False); alias=default
DEBUG 2024-03-03 10:03:34,862 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 49', 11, 'Player 32', 4, '2023-12-09T01:36:26.714650+01:00'::timestamptz, 679, false) RETURNING "pong_gamedata"."id"; args=('Player 49', 11, 'Player 32', 4, datetime.datetime(2023, 12, 9, 1, 36, 26, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 679, False); alias=default
DEBUG 2024-03-03 10:03:34,863 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 3, 'Player 3', 11, '2023-12-11T01:40:15.714650+01:00'::timestamptz, 576, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 3, 'Player 3', 11, datetime.datetime(2023, 12, 11, 1, 40, 15, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 576, False); alias=default
DEBUG 2024-03-03 10:03:34,864 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 9, 'Player 12', 11, '2024-01-15T22:05:46.714650+01:00'::timestamptz, 782, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 9, 'Player 12', 11, datetime.datetime(2024, 1, 15, 22, 5, 46, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 782, False); alias=default
DEBUG 2024-03-03 10:03:34,865 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 38', 8, '2024-01-20T23:27:45.714650+01:00'::timestamptz, 585, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 38', 8, datetime.datetime(2024, 1, 20, 23, 27, 45, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 585, False); alias=default
DEBUG 2024-03-03 10:03:34,867 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 49', 9, 'Player 29', 11, '2023-12-17T17:29:50.714650+01:00'::timestamptz, 225, false) RETURNING "pong_gamedata"."id"; args=('Player 49', 9, 'Player 29', 11, datetime.datetime(2023, 12, 17, 17, 29, 50, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 225, False); alias=default
DEBUG 2024-03-03 10:03:34,869 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 9, 'Player 42', 11, '2024-02-04T04:28:09.714650+01:00'::timestamptz, 835, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 9, 'Player 42', 11, datetime.datetime(2024, 2, 4, 4, 28, 9, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 835, False); alias=default
DEBUG 2024-03-03 10:03:34,870 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 53', 1, 'Player 14', 11, '2024-01-01T09:43:11.714650+01:00'::timestamptz, 488, false) RETURNING "pong_gamedata"."id"; args=('Player 53', 1, 'Player 14', 11, datetime.datetime(2024, 1, 1, 9, 43, 11, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 488, False); alias=default
DEBUG 2024-03-03 10:03:34,872 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 11, 'Player 9', 9, '2023-11-08T00:32:50.714650+01:00'::timestamptz, 290, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 11, 'Player 9', 9, datetime.datetime(2023, 11, 8, 0, 32, 50, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 290, False); alias=default
DEBUG 2024-03-03 10:03:34,873 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 7, 'Player 59', 11, '2024-02-03T05:18:39.714650+01:00'::timestamptz, 953, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 7, 'Player 59', 11, datetime.datetime(2024, 2, 3, 5, 18, 39, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 953, False); alias=default
DEBUG 2024-03-03 10:03:34,874 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 60', 11, 'Player 47', 5, '2024-02-15T15:20:39.714650+01:00'::timestamptz, 612, false) RETURNING "pong_gamedata"."id"; args=('Player 60', 11, 'Player 47', 5, datetime.datetime(2024, 2, 15, 15, 20, 39, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 612, False); alias=default
DEBUG 2024-03-03 10:03:34,876 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 8, 'Player 58', 11, '2023-11-17T21:31:45.714650+01:00'::timestamptz, 180, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 8, 'Player 58', 11, datetime.datetime(2023, 11, 17, 21, 31, 45, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 180, False); alias=default
DEBUG 2024-03-03 10:03:34,877 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 61', 5, 'Player 28', 11, '2024-01-24T11:49:05.714650+01:00'::timestamptz, 542, false) RETURNING "pong_gamedata"."id"; args=('Player 61', 5, 'Player 28', 11, datetime.datetime(2024, 1, 24, 11, 49, 5, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 542, False); alias=default
DEBUG 2024-03-03 10:03:34,878 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 60', 11, 'Player 21', 9, '2023-12-06T12:06:25.714650+01:00'::timestamptz, 557, false) RETURNING "pong_gamedata"."id"; args=('Player 60', 11, 'Player 21', 9, datetime.datetime(2023, 12, 6, 12, 6, 25, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 557, False); alias=default
DEBUG 2024-03-03 10:03:34,880 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 10, 'Player 38', 11, '2023-11-06T05:08:00.714650+01:00'::timestamptz, 666, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 10, 'Player 38', 11, datetime.datetime(2023, 11, 6, 5, 8, 0, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 666, False); alias=default
DEBUG 2024-03-03 10:03:34,881 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 34', 1, '2023-12-31T23:13:33.714650+01:00'::timestamptz, 597, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 34', 1, datetime.datetime(2023, 12, 31, 23, 13, 33, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 597, False); alias=default
DEBUG 2024-03-03 10:03:34,882 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 8, 'Player 46', 11, '2024-02-08T13:22:04.714650+01:00'::timestamptz, 486, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 8, 'Player 46', 11, datetime.datetime(2024, 2, 8, 13, 22, 4, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 486, False); alias=default
DEBUG 2024-03-03 10:03:34,884 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,886 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 6', 9, '2023-12-01T16:58:10.714650+01:00'::timestamptz, 884, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 6', 9, datetime.datetime(2023, 12, 1, 16, 58, 10, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 884, True); alias=default
DEBUG 2024-03-03 10:03:34,887 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 0, 'Player 5', 11, '2023-12-01T16:56:14.714650+01:00'::timestamptz, 864, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 0, 'Player 5', 11, datetime.datetime(2023, 12, 1, 16, 56, 14, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 864, True); alias=default
DEBUG 2024-03-03 10:03:34,888 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 0, 'Player 5', 11, '2023-12-01T16:58:27.714650+01:00'::timestamptz, 272, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 0, 'Player 5', 11, datetime.datetime(2023, 12, 1, 16, 58, 27, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 272, True); alias=default
DEBUG 2024-03-03 10:03:34,890 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2023-12-01T16:58:27.714650+01:00'::timestamptz, 997, '["Player 5", "Player 1", "Player 6", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2023, 12, 1, 16, 58, 27, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 997, <psycopg2._json.Json object at 0x7fb69436d160>, '0x0'); alias=default
DEBUG 2024-03-03 10:03:34,891 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 9', 4, '2023-12-31T09:43:16.714650+01:00'::timestamptz, 363, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 9', 4, datetime.datetime(2023, 12, 31, 9, 43, 16, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 363, True); alias=default
DEBUG 2024-03-03 10:03:34,892 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 10, 'Player 13', 11, '2023-12-31T09:43:54.714650+01:00'::timestamptz, 894, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 10, 'Player 13', 11, datetime.datetime(2023, 12, 31, 9, 43, 54, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 894, True); alias=default
DEBUG 2024-03-03 10:03:34,894 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 13', 7, '2023-12-31T09:44:35.714650+01:00'::timestamptz, 584, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 13', 7, datetime.datetime(2023, 12, 31, 9, 44, 35, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 584, True); alias=default
DEBUG 2024-03-03 10:03:34,895 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2023-12-31T09:44:35.714650+01:00'::timestamptz, 935, '["Player 12", "Player 13", "Player 9", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2023, 12, 31, 9, 44, 35, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 935, <psycopg2._json.Json object at 0x7fb69437c590>, '0x0'); alias=default
DEBUG 2024-03-03 10:03:34,896 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 3, 'Player 14', 11, '2023-11-26T18:22:51.714650+01:00'::timestamptz, 389, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 3, 'Player 14', 11, datetime.datetime(2023, 11, 26, 18, 22, 51, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 389, True); alias=default
DEBUG 2024-03-03 10:03:34,897 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 9', 1, '2023-11-26T18:26:16.714650+01:00'::timestamptz, 722, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 9', 1, datetime.datetime(2023, 11, 26, 18, 26, 16, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 722, True); alias=default
DEBUG 2024-03-03 10:03:34,899 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 2', 2, '2023-11-26T18:29:37.714650+01:00'::timestamptz, 461, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 2', 2, datetime.datetime(2023, 11, 26, 18, 29, 37, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 461, True); alias=default
DEBUG 2024-03-03 10:03:34,900 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2023-11-26T18:29:37.714650+01:00'::timestamptz, 923, '["Player 14", "Player 2", "Player 0", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2023, 11, 26, 18, 29, 37, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 923, <psycopg2._json.Json object at 0x7fb69437d370>, '0x0'); alias=default
DEBUG 2024-03-03 10:03:34,901 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 0', 10, '2024-02-27T19:46:28.714650+01:00'::timestamptz, 852, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 0', 10, datetime.datetime(2024, 2, 27, 19, 46, 28, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 852, True); alias=default
DEBUG 2024-03-03 10:03:34,903 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 2, 'Player 14', 11, '2024-02-27T19:43:17.714650+01:00'::timestamptz, 118, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 2, 'Player 14', 11, datetime.datetime(2024, 2, 27, 19, 43, 17, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 118, True); alias=default
DEBUG 2024-03-03 10:03:34,905 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 14', 10, '2024-02-27T19:47:16.714650+01:00'::timestamptz, 940, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 14', 10, datetime.datetime(2024, 2, 27, 19, 47, 16, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 940, True); alias=default
DEBUG 2024-03-03 10:03:34,906 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2024-02-27T19:47:16.714650+01:00'::timestamptz, 900, '["Player 4", "Player 14", "Player 0", "Player 17"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2024, 2, 27, 19, 47, 16, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 900, <psycopg2._json.Json object at 0x7fb69436d6a0>, '0x0'); alias=default
DEBUG 2024-03-03 10:03:34,908 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 8, 'Player 0', 11, '2023-12-09T06:15:28.714650+01:00'::timestamptz, 721, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 8, 'Player 0', 11, datetime.datetime(2023, 12, 9, 6, 15, 28, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 721, True); alias=default
DEBUG 2024-03-03 10:03:34,909 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 1', 1, '2023-12-09T06:10:42.714650+01:00'::timestamptz, 478, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 1', 1, datetime.datetime(2023, 12, 9, 6, 10, 42, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 478, True); alias=default
DEBUG 2024-03-03 10:03:34,911 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 2, 'Player 7', 11, '2023-12-09T06:17:25.714650+01:00'::timestamptz, 329, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 2, 'Player 7', 11, datetime.datetime(2023, 12, 9, 6, 17, 25, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 329, True); alias=default
DEBUG 2024-03-03 10:03:34,912 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2023-12-09T06:17:25.714650+01:00'::timestamptz, 881, '["Player 7", "Player 0", "Player 6", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2023, 12, 9, 6, 17, 25, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 881, <psycopg2._json.Json object at 0x7fb694516d20>, '0x0'); alias=default
DEBUG 2024-03-03 10:03:34,913 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 15', 10, '2024-02-04T21:05:07.714650+01:00'::timestamptz, 166, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 15', 10, datetime.datetime(2024, 2, 4, 21, 5, 7, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 166, True); alias=default
DEBUG 2024-03-03 10:03:34,915 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 4', 4, '2024-02-04T21:06:53.714650+01:00'::timestamptz, 228, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 4', 4, datetime.datetime(2024, 2, 4, 21, 6, 53, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 228, True); alias=default
DEBUG 2024-03-03 10:03:34,916 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 0, 'Player 5', 11, '2024-02-04T21:15:22.714650+01:00'::timestamptz, 439, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 0, 'Player 5', 11, datetime.datetime(2024, 2, 4, 21, 15, 22, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 439, True); alias=default
DEBUG 2024-03-03 10:03:34,917 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2024-02-04T21:15:22.714650+01:00'::timestamptz, 781, '["Player 5", "Player 7", "Player 15", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2024, 2, 4, 21, 15, 22, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 781, <psycopg2._json.Json object at 0x7fb69437d370>, '0x0'); alias=default
DEBUG 2024-03-03 10:03:34,919 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 8, 'Player 16', 11, '2023-12-25T10:59:59.714650+01:00'::timestamptz, 571, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 8, 'Player 16', 11, datetime.datetime(2023, 12, 25, 10, 59, 59, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 571, True); alias=default
DEBUG 2024-03-03 10:03:34,921 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 15', 10, '2023-12-25T10:57:07.714650+01:00'::timestamptz, 422, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 15', 10, datetime.datetime(2023, 12, 25, 10, 57, 7, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 422, True); alias=default
DEBUG 2024-03-03 10:03:34,922 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 1, 'Player 9', 11, '2023-12-25T11:04:34.714650+01:00'::timestamptz, 287, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 1, 'Player 9', 11, datetime.datetime(2023, 12, 25, 11, 4, 34, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 287, True); alias=default
DEBUG 2024-03-03 10:03:34,924 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2023-12-25T11:04:34.714650+01:00'::timestamptz, 869, '["Player 9", "Player 16", "Player 1", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2023, 12, 25, 11, 4, 34, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 869, <psycopg2._json.Json object at 0x7fb6943cd400>, '0x0'); alias=default
DEBUG 2024-03-03 10:03:34,925 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 2', 5, '2023-12-11T02:37:03.714650+01:00'::timestamptz, 991, true) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 2', 5, datetime.datetime(2023, 12, 11, 2, 37, 3, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 991, True); alias=default
DEBUG 2024-03-03 10:03:34,926 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 4, 'Player 0', 11, '2023-12-11T02:35:49.714650+01:00'::timestamptz, 329, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 4, 'Player 0', 11, datetime.datetime(2023, 12, 11, 2, 35, 49, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 329, True); alias=default
DEBUG 2024-03-03 10:03:34,928 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 8, 'Player 0', 11, '2023-12-11T02:37:10.714650+01:00'::timestamptz, 876, true) RETURNING "pong_gamedata"."id"; args=('Player 18', 8, 'Player 0', 11, datetime.datetime(2023, 12, 11, 2, 37, 10, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 876, True); alias=default
DEBUG 2024-03-03 10:03:34,929 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2023-12-11T02:37:10.714650+01:00'::timestamptz, 998, '["Player 0", "Player 18", "Player 2", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2023, 12, 11, 2, 37, 10, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 998, <psycopg2._json.Json object at 0x7fb6943ed5e0>, '0x0'); alias=default
DEBUG 2024-03-03 10:03:34,930 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 14', 0, '2023-12-13T10:03:47.714650+01:00'::timestamptz, 713, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 14', 0, datetime.datetime(2023, 12, 13, 10, 3, 47, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 713, True); alias=default
DEBUG 2024-03-03 10:03:34,931 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 8', 8, '2023-12-13T10:04:10.714650+01:00'::timestamptz, 401, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 8', 8, datetime.datetime(2023, 12, 13, 10, 4, 10, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 401, True); alias=default
DEBUG 2024-03-03 10:03:34,933 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 1, 'Player 5', 11, '2023-12-13T10:08:02.714650+01:00'::timestamptz, 417, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 1, 'Player 5', 11, datetime.datetime(2023, 12, 13, 10, 8, 2, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 417, True); alias=default
DEBUG 2024-03-03 10:03:34,935 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2023-12-13T10:08:02.714650+01:00'::timestamptz, 968, '["Player 5", "Player 12", "Player 14", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2023, 12, 13, 10, 8, 2, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 968, <psycopg2._json.Json object at 0x7fb694399e50>, '0x0'); alias=default
DEBUG 2024-03-03 10:03:34,936 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 10', 2, '2023-12-25T20:58:36.714650+01:00'::timestamptz, 963, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 10', 2, datetime.datetime(2023, 12, 25, 20, 58, 36, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 963, True); alias=default
DEBUG 2024-03-03 10:03:34,938 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 11', 0, '2023-12-25T20:45:32.714650+01:00'::timestamptz, 43, true) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 11', 0, datetime.datetime(2023, 12, 25, 20, 45, 32, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 43, True); alias=default
DEBUG 2024-03-03 10:03:34,939 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 19', 8, '2023-12-25T20:59:00.714650+01:00'::timestamptz, 450, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 19', 8, datetime.datetime(2023, 12, 25, 20, 59, 0, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 450, True); alias=default
DEBUG 2024-03-03 10:03:34,941 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2023-12-25T20:59:00.714650+01:00'::timestamptz, 987, '["Player 16", "Player 19", "Player 10", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2023, 12, 25, 20, 59, 0, 714650, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 987, <psycopg2._json.Json object at 0x7fb69439a900>, '0x0'); alias=default
DEBUG 2024-03-03 10:03:34,942 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,942 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,943 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 10:03:34,944 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,944 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 10:03:34,945 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,946 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 10:03:34,947 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 10:03:34,948 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 10:03:34,950 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 10:03:34,951 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,952 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 10:03:34,954 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,955 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 10:03:34,956 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,957 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,958 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,958 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,959 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,960 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,961 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 10:03:34,961 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,962 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 10:03:34,962 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,963 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 10:03:34,965 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 10:03:34,965 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,966 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 10:03:34,967 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,968 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 10:03:34,969 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,971 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,973 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,974 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,976 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,977 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,978 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 10:03:34,978 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,979 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 10:03:34,979 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,980 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 10:03:34,982 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 10:03:34,983 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,984 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 10:03:34,985 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,986 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 10:03:34,988 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,989 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,990 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,991 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,991 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,992 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:03:34,994 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 10:03:34,994 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:34,995 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 10:03:34,996 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:34,997 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 10:03:34,998 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 10:03:34,999 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 10:03:35,000 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 10:03:35,001 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 10:03:35,003 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 10:03:35,004 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 10:03:35,005 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:03:35,006 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:03:35,007 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:03:35,008 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 10:03:35,009 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 10:03:35,011 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
