DEBUG 2024-02-27 21:55:26,419 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:55:26,421 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,422 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:55:26,423 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,439 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:55:26,440 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:55:26,440 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,442 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:55:26,443 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 21:55:26,446 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 21:55:26,447 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:55:26,449 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,450 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,451 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,451 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,485 utils (0.010) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 12', 4, '2024-02-26T23:19:56.450331+01:00'::timestamptz, 269, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 12', 4, datetime.datetime(2024, 2, 26, 23, 19, 56, 450331, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 269, True); alias=default
DEBUG 2024-02-27 21:55:26,486 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 8, 'Player 9', 11, '2024-02-26T23:10:55.450331+01:00'::timestamptz, 203, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 8, 'Player 9', 11, datetime.datetime(2024, 2, 26, 23, 10, 55, 450331, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 203, True); alias=default
DEBUG 2024-02-27 21:55:26,488 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 2, 'Player 9', 11, '2024-02-26T23:20:56.450331+01:00'::timestamptz, 963, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 2, 'Player 9', 11, datetime.datetime(2024, 2, 26, 23, 20, 56, 450331, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 963, True); alias=default
DEBUG 2024-02-27 21:55:26,489 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1896, 1897, 1898, '2024-02-26T23:20:56.450331+01:00'::timestamptz, 804, '["Player 9", "Player 14", "Player 12", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1896, 1897, 1898, datetime.datetime(2024, 2, 26, 23, 20, 56, 450331, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 804, <psycopg2._json.Json object at 0x7f138bf12870>, '0x0'); alias=default
DEBUG 2024-02-27 21:55:26,490 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 8, 'Player 8', 11, '2023-11-26T16:03:45.450331+01:00'::timestamptz, 742, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 8, 'Player 8', 11, datetime.datetime(2023, 11, 26, 16, 3, 45, 450331, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 742, True); alias=default
DEBUG 2024-02-27 21:55:26,491 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 5', 7, '2023-11-26T16:06:01.450331+01:00'::timestamptz, 868, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 5', 7, datetime.datetime(2023, 11, 26, 16, 6, 1, 450331, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 868, True); alias=default
DEBUG 2024-02-27 21:55:26,493 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 6', 9, '2023-11-26T16:07:59.450331+01:00'::timestamptz, 397, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 6', 9, datetime.datetime(2023, 11, 26, 16, 7, 59, 450331, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 397, True); alias=default
DEBUG 2024-02-27 21:55:26,494 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1899, 1900, 1901, '2023-11-26T16:07:59.450331+01:00'::timestamptz, 996, '["Player 8", "Player 6", "Player 12", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1899, 1900, 1901, datetime.datetime(2023, 11, 26, 16, 7, 59, 450331, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 996, <psycopg2._json.Json object at 0x7f138bf138f0>, '0x0'); alias=default
DEBUG 2024-02-27 21:55:26,495 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,496 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,498 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:55:26,499 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 21:55:26,499 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 21:55:26,500 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 21:55:26,503 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 21:55:26,503 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:55:26,504 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,505 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,506 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,507 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,509 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 4', 9, '2023-12-26T06:32:40.505518+01:00'::timestamptz, 822, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 4', 9, datetime.datetime(2023, 12, 26, 6, 32, 40, 505518, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 822, True); alias=default
DEBUG 2024-02-27 21:55:26,510 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 15', 1, '2023-12-26T06:27:59.505518+01:00'::timestamptz, 237, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 15', 1, datetime.datetime(2023, 12, 26, 6, 27, 59, 505518, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 237, True); alias=default
DEBUG 2024-02-27 21:55:26,511 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 0, 'Player 7', 11, '2023-12-26T06:33:24.505518+01:00'::timestamptz, 70, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 0, 'Player 7', 11, datetime.datetime(2023, 12, 26, 6, 33, 24, 505518, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 70, True); alias=default
DEBUG 2024-02-27 21:55:26,512 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1902, 1903, 1904, '2023-12-26T06:33:24.505518+01:00'::timestamptz, 866, '["Player 7", "Player 14", "Player 4", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1902, 1903, 1904, datetime.datetime(2023, 12, 26, 6, 33, 24, 505518, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 866, <psycopg2._json.Json object at 0x7f138bd3c290>, '0x0'); alias=default
DEBUG 2024-02-27 21:55:26,514 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 6, 'Player 4', 11, '2023-11-13T18:14:09.505518+01:00'::timestamptz, 663, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 6, 'Player 4', 11, datetime.datetime(2023, 11, 13, 18, 14, 9, 505518, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 663, True); alias=default
DEBUG 2024-02-27 21:55:26,515 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 3', 0, '2023-11-13T18:13:21.505518+01:00'::timestamptz, 598, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 3', 0, datetime.datetime(2023, 11, 13, 18, 13, 21, 505518, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 598, True); alias=default
DEBUG 2024-02-27 21:55:26,516 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 0, 'Player 13', 11, '2023-11-13T18:17:45.505518+01:00'::timestamptz, 872, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 0, 'Player 13', 11, datetime.datetime(2023, 11, 13, 18, 17, 45, 505518, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 872, True); alias=default
DEBUG 2024-02-27 21:55:26,517 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1905, 1906, 1907, '2023-11-13T18:17:45.505518+01:00'::timestamptz, 879, '["Player 13", "Player 4", "Player 5", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1905, 1906, 1907, datetime.datetime(2023, 11, 13, 18, 17, 45, 505518, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 879, <psycopg2._json.Json object at 0x7f138bd3c530>, '0x0'); alias=default
DEBUG 2024-02-27 21:55:26,518 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,519 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,520 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:55:26,520 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 21:55:26,522 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 21:55:26,523 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:55:26,524 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,525 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,525 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,526 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,528 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 2', 6, '2023-11-27T05:15:42.525180+01:00'::timestamptz, 149, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 2', 6, datetime.datetime(2023, 11, 27, 5, 15, 42, 525180, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 149, True); alias=default
DEBUG 2024-02-27 21:55:26,530 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 9, 'Player 0', 11, '2023-11-27T05:15:40.525180+01:00'::timestamptz, 441, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 9, 'Player 0', 11, datetime.datetime(2023, 11, 27, 5, 15, 40, 525180, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 441, True); alias=default
DEBUG 2024-02-27 21:55:26,531 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 0', 4, '2023-11-27T05:16:42.525180+01:00'::timestamptz, 929, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 0', 4, datetime.datetime(2023, 11, 27, 5, 16, 42, 525180, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 929, True); alias=default
DEBUG 2024-02-27 21:55:26,532 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1908, 1909, 1910, '2023-11-27T05:16:42.525180+01:00'::timestamptz, 503, '["Player 3", "Player 0", "Player 2", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1908, 1909, 1910, datetime.datetime(2023, 11, 27, 5, 16, 42, 525180, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 503, <psycopg2._json.Json object at 0x7f138bd3d730>, '0x0'); alias=default
DEBUG 2024-02-27 21:55:26,533 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 14', 4, '2023-12-31T18:54:01.525180+01:00'::timestamptz, 159, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 14', 4, datetime.datetime(2023, 12, 31, 18, 54, 1, 525180, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 159, True); alias=default
DEBUG 2024-02-27 21:55:26,534 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 3, 'Player 6', 11, '2023-12-31T19:02:36.525180+01:00'::timestamptz, 522, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 3, 'Player 6', 11, datetime.datetime(2023, 12, 31, 19, 2, 36, 525180, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 522, True); alias=default
DEBUG 2024-02-27 21:55:26,536 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 6', 4, '2023-12-31T19:04:10.525180+01:00'::timestamptz, 788, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 6', 4, datetime.datetime(2023, 12, 31, 19, 4, 10, 525180, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 788, True); alias=default
DEBUG 2024-02-27 21:55:26,536 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1911, 1912, 1913, '2023-12-31T19:04:10.525180+01:00'::timestamptz, 768, '["Player 13", "Player 6", "Player 14", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1911, 1912, 1913, datetime.datetime(2023, 12, 31, 19, 4, 10, 525180, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 768, <psycopg2._json.Json object at 0x7f138bd3daf0>, '0x0'); alias=default
DEBUG 2024-02-27 21:55:26,537 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,538 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,539 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:55:26,540 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 21:55:26,542 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 21:55:26,542 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:55:26,544 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,545 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,546 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,547 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,549 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 5', 10, '2023-12-29T12:48:53.545593+01:00'::timestamptz, 102, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 5', 10, datetime.datetime(2023, 12, 29, 12, 48, 53, 545593, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 102, True); alias=default
DEBUG 2024-02-27 21:55:26,550 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 8, 'Player 9', 11, '2023-12-29T12:52:15.545593+01:00'::timestamptz, 295, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 8, 'Player 9', 11, datetime.datetime(2023, 12, 29, 12, 52, 15, 545593, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 295, True); alias=default
DEBUG 2024-02-27 21:55:26,551 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 9', 2, '2023-12-29T12:55:48.545593+01:00'::timestamptz, 909, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 9', 2, datetime.datetime(2023, 12, 29, 12, 55, 48, 545593, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 909, True); alias=default
DEBUG 2024-02-27 21:55:26,552 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1914, 1915, 1916, '2023-12-29T12:55:48.545593+01:00'::timestamptz, 517, '["Player 0", "Player 9", "Player 5", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1914, 1915, 1916, datetime.datetime(2023, 12, 29, 12, 55, 48, 545593, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 517, <psycopg2._json.Json object at 0x7f138bd3eb40>, '0x0'); alias=default
DEBUG 2024-02-27 21:55:26,553 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 4, 'Player 2', 11, '2023-12-20T22:18:29.545593+01:00'::timestamptz, 646, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 4, 'Player 2', 11, datetime.datetime(2023, 12, 20, 22, 18, 29, 545593, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 646, True); alias=default
DEBUG 2024-02-27 21:55:26,555 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 9, 'Player 14', 11, '2023-12-20T22:22:10.545593+01:00'::timestamptz, 297, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 9, 'Player 14', 11, datetime.datetime(2023, 12, 20, 22, 22, 10, 545593, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 297, True); alias=default
DEBUG 2024-02-27 21:55:26,556 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 10, 'Player 14', 11, '2023-12-20T22:23:48.545593+01:00'::timestamptz, 718, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 10, 'Player 14', 11, datetime.datetime(2023, 12, 20, 22, 23, 48, 545593, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 718, True); alias=default
DEBUG 2024-02-27 21:55:26,557 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1917, 1918, 1919, '2023-12-20T22:23:48.545593+01:00'::timestamptz, 965, '["Player 14", "Player 2", "Player 10", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1917, 1918, 1919, datetime.datetime(2023, 12, 20, 22, 23, 48, 545593, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 965, <psycopg2._json.Json object at 0x7f138bd3f650>, '0x0'); alias=default
DEBUG 2024-02-27 21:55:26,558 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,559 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,559 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:55:26,561 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 21:55:26,562 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 21:55:26,564 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 21:55:26,565 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:55:26,566 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,567 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,567 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,569 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,570 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 6, 'Player 0', 11, '2024-02-19T12:15:47.567163+01:00'::timestamptz, 869, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 6, 'Player 0', 11, datetime.datetime(2024, 2, 19, 12, 15, 47, 567163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 869, True); alias=default
DEBUG 2024-02-27 21:55:26,571 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 6, 'Player 8', 11, '2024-02-19T12:15:52.567163+01:00'::timestamptz, 591, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 6, 'Player 8', 11, datetime.datetime(2024, 2, 19, 12, 15, 52, 567163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 591, True); alias=default
DEBUG 2024-02-27 21:55:26,572 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 8', 7, '2024-02-19T12:17:33.567163+01:00'::timestamptz, 990, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 8', 7, datetime.datetime(2024, 2, 19, 12, 17, 33, 567163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 990, True); alias=default
DEBUG 2024-02-27 21:55:26,573 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1920, 1921, 1922, '2024-02-19T12:17:33.567163+01:00'::timestamptz, 975, '["Player 0", "Player 8", "Player 2", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1920, 1921, 1922, datetime.datetime(2024, 2, 19, 12, 17, 33, 567163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 975, <psycopg2._json.Json object at 0x7f138bf137d0>, '0x0'); alias=default
DEBUG 2024-02-27 21:55:26,575 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 8, 'Player 11', 11, '2024-01-14T14:12:23.567163+01:00'::timestamptz, 777, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 8, 'Player 11', 11, datetime.datetime(2024, 1, 14, 14, 12, 23, 567163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 777, True); alias=default
DEBUG 2024-02-27 21:55:26,576 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 7, 'Player 9', 11, '2024-01-14T14:13:27.567163+01:00'::timestamptz, 970, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 7, 'Player 9', 11, datetime.datetime(2024, 1, 14, 14, 13, 27, 567163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 970, True); alias=default
DEBUG 2024-02-27 21:55:26,577 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 9', 7, '2024-01-14T14:13:57.567163+01:00'::timestamptz, 425, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 9', 7, datetime.datetime(2024, 1, 14, 14, 13, 57, 567163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 425, True); alias=default
DEBUG 2024-02-27 21:55:26,578 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1923, 1924, 1925, '2024-01-14T14:13:57.567163+01:00'::timestamptz, 1000, '["Player 11", "Player 9", "Player 0", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1923, 1924, 1925, datetime.datetime(2024, 1, 14, 14, 13, 57, 567163, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 1000, <psycopg2._json.Json object at 0x7f138bd3fb60>, '0x0'); alias=default
DEBUG 2024-02-27 21:55:26,580 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:55:26,581 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
