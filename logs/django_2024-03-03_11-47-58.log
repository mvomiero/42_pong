DEBUG 2024-03-03 11:48:00,293 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,294 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,296 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,296 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,296 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 11:48:00,314 utils (0.018) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:48:00,316 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,316 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,318 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 11:48:00,321 utils (0.003) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:48:00,324 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 11:48:00,326 utils (0.002) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 11:48:00,327 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,330 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T11:48:00.328022+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 11, 48, 0, 328022, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:48:00,331 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,331 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,333 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 11:48:00,337 utils (0.004) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:48:00,344 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 11:48:00,352 utils (0.008) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 11:48:00,353 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 11:48:00,356 utils (0.003) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:48:00,370 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 11:48:00,375 utils (0.005) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:48:00,376 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 11:48:00,379 utils (0.003) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:48:00,380 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 11:48:00,383 utils (0.003) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:48:00,384 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 11:48:00,387 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 11:48:00,387 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 11:48:00,389 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 11:48:00,389 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 11:48:00,392 utils (0.002) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 11:48:00,392 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 11:48:00,395 utils (0.002) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 11:48:00,395 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 11:48:00,397 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 11:48:00,397 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 11:48:00,399 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 11:48:00,399 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 11:48:00,401 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 11:48:00,401 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 11:48:00,403 utils (0.002) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 11:48:00,403 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 11:48:00,405 utils (0.002) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 11:48:00,406 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 11:48:00,408 utils (0.002) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 11:48:00,408 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 11:48:00,411 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 11:48:00,411 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 11:48:00,412 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 11:48:00,413 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 11:48:00,414 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 11:48:00,414 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 11:48:00,416 utils (0.002) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 11:48:00,416 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 11:48:00,418 utils (0.002) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 11:48:00,418 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 11:48:00,420 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 11:48:00,421 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 11:48:00,422 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 11:48:00,423 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 11:48:00,424 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 11:48:00,424 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 11:48:00,426 utils (0.002) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 11:48:00,426 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 11:48:00,428 utils (0.002) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 11:48:00,429 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,431 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,433 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T11:48:00.431882+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 11, 48, 0, 431882, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:48:00,433 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,442 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 11:48:00,448 utils (0.005) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:48:00,449 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 11:48:00,450 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 11:48:00,450 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 11:48:00,451 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 11:48:00,452 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 11:48:00,455 utils (0.004) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 11:48:00,456 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 11:48:00,458 utils (0.002) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 11:48:00,461 utils (0.003) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,463 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,466 utils (0.002) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T11:48:00.464035+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 11, 48, 0, 464035, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:48:00,467 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,492 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,493 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T11:48:00.492640+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 11, 48, 0, 492640, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:48:00,501 utils (0.008) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,502 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,530 utils (0.011) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,531 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T11:48:00.530561+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 11, 48, 0, 530561, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:48:00,534 utils (0.003) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,534 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,546 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 11:48:00,546 utils (0.000) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 11:48:00,568 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 11:48:00,577 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 11:48:00,579 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,580 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T11:48:00.579412+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 11, 48, 0, 579412, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:48:00,584 utils (0.004) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,584 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,596 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 11:48:00,597 utils (0.000) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 11:48:00,599 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,600 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T11:48:00.599502+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 11, 48, 0, 599502, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:48:00,605 utils (0.005) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,606 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,618 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 11:48:00,619 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 11:48:00,621 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,622 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T11:48:00.621924+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 11, 48, 0, 621924, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:48:00,625 utils (0.002) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,625 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,638 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,639 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T11:48:00.638665+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 11, 48, 0, 638665, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:48:00,640 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,640 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,651 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 11:48:00,652 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 11:48:00,654 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,655 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T11:48:00.654608+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 11, 48, 0, 654608, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:48:00,656 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,656 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,657 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,658 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T11:48:00.657821+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 11, 48, 0, 657821, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:48:00,659 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,660 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,673 utils (0.004) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,674 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T11:48:00.673995+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 11, 48, 0, 673995, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:48:00,676 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,676 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,688 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 11:48:00,691 utils (0.003) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 11:48:00,693 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,694 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T11:48:00.693812+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 11, 48, 0, 693812, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:48:00,695 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,696 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,706 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 11:48:00,707 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 11:48:00,709 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,710 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T11:48:00.709520+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 11, 48, 0, 709520, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:48:00,713 utils (0.003) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,714 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,725 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 11:48:00,727 utils (0.001) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 11:48:00,729 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,730 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T11:48:00.730183+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 11, 48, 0, 730183, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:48:00,732 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,733 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,743 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,744 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T11:48:00.743838+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 11, 48, 0, 743838, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:48:00,745 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,745 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,756 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 11:48:00,756 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 11:48:00,758 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,760 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T11:48:00.759270+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 11, 48, 0, 759270, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:48:00,762 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,762 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,764 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 11:48:00,768 utils (0.004) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:48:00,770 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 11:48:00,775 utils (0.005) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 11:48:00,777 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,778 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T11:48:00.777885+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 11, 48, 0, 777885, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:48:00,780 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,780 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,782 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 11:48:00,786 utils (0.004) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 11:48:00,787 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 11:48:00,789 utils (0.002) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 11:48:00,789 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 11:48:00,791 utils (0.002) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 11:48:00,792 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,793 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,795 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T11:48:00.794288+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 11, 48, 0, 794288, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 11:48:00,797 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 11:48:00,798 utils (0.001) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 11:48:00,817 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 11:48:00,818 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,819 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 11:48:00,820 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,822 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 11:48:00,826 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 11:48:00,827 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:00,828 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 11:48:00,829 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:00,830 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 11:48:00,832 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:48:00,833 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:48:00,834 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:48:00,869 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 10', 10, '2023-11-29T14:55:22.833731+01:00'::timestamptz, 831, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 10', 10, datetime.datetime(2023, 11, 29, 14, 55, 22, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 831, False); alias=default
DEBUG 2024-03-03 11:48:00,870 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 13', 9, '2023-12-16T03:49:23.833731+01:00'::timestamptz, 450, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 13', 9, datetime.datetime(2023, 12, 16, 3, 49, 23, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 450, False); alias=default
DEBUG 2024-03-03 11:48:00,872 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 3', 7, '2023-12-24T18:23:46.833731+01:00'::timestamptz, 918, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 3', 7, datetime.datetime(2023, 12, 24, 18, 23, 46, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 918, False); alias=default
DEBUG 2024-03-03 11:48:00,873 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 4, 'Player 9', 11, '2023-11-09T01:53:46.833731+01:00'::timestamptz, 355, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 4, 'Player 9', 11, datetime.datetime(2023, 11, 9, 1, 53, 46, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 355, False); alias=default
DEBUG 2024-03-03 11:48:00,874 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 2', 2, '2024-03-02T12:58:01.833731+01:00'::timestamptz, 87, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 2', 2, datetime.datetime(2024, 3, 2, 12, 58, 1, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 87, False); alias=default
DEBUG 2024-03-03 11:48:00,876 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 0, 'Player 10', 11, '2023-12-20T21:19:09.833731+01:00'::timestamptz, 647, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 0, 'Player 10', 11, datetime.datetime(2023, 12, 20, 21, 19, 9, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 647, False); alias=default
DEBUG 2024-03-03 11:48:00,878 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 4, 'Player 0', 11, '2023-11-28T21:53:33.833731+01:00'::timestamptz, 738, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 4, 'Player 0', 11, datetime.datetime(2023, 11, 28, 21, 53, 33, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 738, False); alias=default
DEBUG 2024-03-03 11:48:00,879 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 4', 10, '2024-02-26T14:53:27.833731+01:00'::timestamptz, 292, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 4', 10, datetime.datetime(2024, 2, 26, 14, 53, 27, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 292, False); alias=default
DEBUG 2024-03-03 11:48:00,881 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 4, 'Player 5', 11, '2023-12-06T21:38:04.833731+01:00'::timestamptz, 633, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 4, 'Player 5', 11, datetime.datetime(2023, 12, 6, 21, 38, 4, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 633, False); alias=default
DEBUG 2024-03-03 11:48:00,882 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 0, 'Player 18', 11, '2023-11-25T16:55:46.833731+01:00'::timestamptz, 496, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 0, 'Player 18', 11, datetime.datetime(2023, 11, 25, 16, 55, 46, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 496, False); alias=default
DEBUG 2024-03-03 11:48:00,888 utils (0.005) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 1', 7, '2023-12-02T21:54:39.833731+01:00'::timestamptz, 776, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 1', 7, datetime.datetime(2023, 12, 2, 21, 54, 39, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 776, False); alias=default
DEBUG 2024-03-03 11:48:00,889 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 1, 'Player 16', 11, '2024-01-29T20:45:30.833731+01:00'::timestamptz, 325, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 1, 'Player 16', 11, datetime.datetime(2024, 1, 29, 20, 45, 30, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 325, False); alias=default
DEBUG 2024-03-03 11:48:00,890 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 10, 'Player 20', 11, '2023-12-17T03:00:03.833731+01:00'::timestamptz, 446, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 10, 'Player 20', 11, datetime.datetime(2023, 12, 17, 3, 0, 3, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 446, False); alias=default
DEBUG 2024-03-03 11:48:00,892 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 20', 4, '2023-11-21T08:51:20.833731+01:00'::timestamptz, 730, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 20', 4, datetime.datetime(2023, 11, 21, 8, 51, 20, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 730, False); alias=default
DEBUG 2024-03-03 11:48:00,894 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 5, 'Player 21', 11, '2024-01-14T00:07:37.833731+01:00'::timestamptz, 705, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 5, 'Player 21', 11, datetime.datetime(2024, 1, 14, 0, 7, 37, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 705, False); alias=default
DEBUG 2024-03-03 11:48:00,896 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 1, 'Player 12', 11, '2024-01-24T10:39:07.833731+01:00'::timestamptz, 760, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 1, 'Player 12', 11, datetime.datetime(2024, 1, 24, 10, 39, 7, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 760, False); alias=default
DEBUG 2024-03-03 11:48:00,898 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 6, 'Player 12', 11, '2024-02-23T05:34:00.833731+01:00'::timestamptz, 432, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 6, 'Player 12', 11, datetime.datetime(2024, 2, 23, 5, 34, 0, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 432, False); alias=default
DEBUG 2024-03-03 11:48:00,899 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 3', 8, '2024-01-03T12:50:40.833731+01:00'::timestamptz, 891, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 3', 8, datetime.datetime(2024, 1, 3, 12, 50, 40, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 891, False); alias=default
DEBUG 2024-03-03 11:48:00,900 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 1, 'Player 6', 11, '2024-02-02T02:32:34.833731+01:00'::timestamptz, 437, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 1, 'Player 6', 11, datetime.datetime(2024, 2, 2, 2, 32, 34, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 437, False); alias=default
DEBUG 2024-03-03 11:48:00,902 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 8', 10, '2023-12-23T03:25:42.833731+01:00'::timestamptz, 529, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 8', 10, datetime.datetime(2023, 12, 23, 3, 25, 42, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 529, False); alias=default
DEBUG 2024-03-03 11:48:00,903 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 8', 0, '2024-01-24T06:22:02.833731+01:00'::timestamptz, 49, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 8', 0, datetime.datetime(2024, 1, 24, 6, 22, 2, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 49, False); alias=default
DEBUG 2024-03-03 11:48:00,904 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 0', 2, '2024-01-21T19:04:08.833731+01:00'::timestamptz, 516, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 0', 2, datetime.datetime(2024, 1, 21, 19, 4, 8, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 516, False); alias=default
DEBUG 2024-03-03 11:48:00,906 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 8, 'Player 21', 11, '2023-11-15T14:51:33.833731+01:00'::timestamptz, 913, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 8, 'Player 21', 11, datetime.datetime(2023, 11, 15, 14, 51, 33, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 913, False); alias=default
DEBUG 2024-03-03 11:48:00,907 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 13', 8, '2023-12-29T04:47:24.833731+01:00'::timestamptz, 302, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 13', 8, datetime.datetime(2023, 12, 29, 4, 47, 24, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 302, False); alias=default
DEBUG 2024-03-03 11:48:00,909 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 7, 'Player 3', 11, '2023-11-03T05:18:40.833731+01:00'::timestamptz, 674, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 7, 'Player 3', 11, datetime.datetime(2023, 11, 3, 5, 18, 40, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 674, False); alias=default
DEBUG 2024-03-03 11:48:00,911 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 0, 'Player 7', 11, '2024-02-28T10:20:27.833731+01:00'::timestamptz, 535, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 0, 'Player 7', 11, datetime.datetime(2024, 2, 28, 10, 20, 27, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 535, False); alias=default
DEBUG 2024-03-03 11:48:00,913 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 7, 'Player 19', 11, '2023-12-21T04:57:52.833731+01:00'::timestamptz, 628, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 7, 'Player 19', 11, datetime.datetime(2023, 12, 21, 4, 57, 52, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 628, False); alias=default
DEBUG 2024-03-03 11:48:00,915 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 9, 'Player 17', 11, '2024-02-03T11:42:00.833731+01:00'::timestamptz, 251, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 9, 'Player 17', 11, datetime.datetime(2024, 2, 3, 11, 42, 0, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 251, False); alias=default
DEBUG 2024-03-03 11:48:00,916 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 8, 'Player 11', 11, '2023-11-24T07:56:50.833731+01:00'::timestamptz, 369, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 8, 'Player 11', 11, datetime.datetime(2023, 11, 24, 7, 56, 50, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 369, False); alias=default
DEBUG 2024-03-03 11:48:00,918 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 8, 'Player 0', 11, '2023-12-21T15:16:55.833731+01:00'::timestamptz, 517, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 8, 'Player 0', 11, datetime.datetime(2023, 12, 21, 15, 16, 55, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 517, False); alias=default
DEBUG 2024-03-03 11:48:00,919 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 26', 10, '2023-12-27T19:16:13.833731+01:00'::timestamptz, 551, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 26', 10, datetime.datetime(2023, 12, 27, 19, 16, 13, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 551, False); alias=default
DEBUG 2024-03-03 11:48:00,920 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 5, 'Player 29', 11, '2024-01-28T21:00:39.833731+01:00'::timestamptz, 414, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 5, 'Player 29', 11, datetime.datetime(2024, 1, 28, 21, 0, 39, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 414, False); alias=default
DEBUG 2024-03-03 11:48:00,922 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 0', 9, '2024-01-12T20:58:11.833731+01:00'::timestamptz, 804, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 0', 9, datetime.datetime(2024, 1, 12, 20, 58, 11, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 804, False); alias=default
DEBUG 2024-03-03 11:48:00,923 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 26', 1, '2024-02-20T02:29:02.833731+01:00'::timestamptz, 250, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 26', 1, datetime.datetime(2024, 2, 20, 2, 29, 2, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 250, False); alias=default
DEBUG 2024-03-03 11:48:00,924 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 3, 'Player 17', 11, '2024-01-24T04:40:08.833731+01:00'::timestamptz, 284, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 3, 'Player 17', 11, datetime.datetime(2024, 1, 24, 4, 40, 8, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 284, False); alias=default
DEBUG 2024-03-03 11:48:00,925 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 3, 'Player 3', 11, '2024-02-20T03:10:05.833731+01:00'::timestamptz, 30, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 3, 'Player 3', 11, datetime.datetime(2024, 2, 20, 3, 10, 5, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 30, False); alias=default
DEBUG 2024-03-03 11:48:00,927 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 4, 'Player 33', 11, '2024-02-22T01:49:31.833731+01:00'::timestamptz, 726, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 4, 'Player 33', 11, datetime.datetime(2024, 2, 22, 1, 49, 31, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 726, False); alias=default
DEBUG 2024-03-03 11:48:00,929 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 2, 'Player 26', 11, '2024-01-24T00:09:58.833731+01:00'::timestamptz, 595, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 2, 'Player 26', 11, datetime.datetime(2024, 1, 24, 0, 9, 58, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 595, False); alias=default
DEBUG 2024-03-03 11:48:00,930 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 2, 'Player 27', 11, '2024-02-03T07:49:51.833731+01:00'::timestamptz, 715, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 2, 'Player 27', 11, datetime.datetime(2024, 2, 3, 7, 49, 51, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 715, False); alias=default
DEBUG 2024-03-03 11:48:00,931 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 5, 'Player 32', 11, '2023-12-30T03:30:02.833731+01:00'::timestamptz, 445, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 5, 'Player 32', 11, datetime.datetime(2023, 12, 30, 3, 30, 2, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 445, False); alias=default
DEBUG 2024-03-03 11:48:00,933 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 11, 'Player 19', 9, '2023-11-22T18:55:58.833731+01:00'::timestamptz, 978, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 11, 'Player 19', 9, datetime.datetime(2023, 11, 22, 18, 55, 58, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 978, False); alias=default
DEBUG 2024-03-03 11:48:00,934 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 28', 6, '2024-01-11T10:34:36.833731+01:00'::timestamptz, 480, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 28', 6, datetime.datetime(2024, 1, 11, 10, 34, 36, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 480, False); alias=default
DEBUG 2024-03-03 11:48:00,935 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 30', 2, '2024-01-02T00:23:25.833731+01:00'::timestamptz, 712, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 30', 2, datetime.datetime(2024, 1, 2, 0, 23, 25, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 712, False); alias=default
DEBUG 2024-03-03 11:48:00,936 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 37', 10, '2023-11-26T15:37:30.833731+01:00'::timestamptz, 426, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 37', 10, datetime.datetime(2023, 11, 26, 15, 37, 30, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 426, False); alias=default
DEBUG 2024-03-03 11:48:00,937 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 16', 2, '2024-02-12T16:19:40.833731+01:00'::timestamptz, 799, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 16', 2, datetime.datetime(2024, 2, 12, 16, 19, 40, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 799, False); alias=default
DEBUG 2024-03-03 11:48:00,938 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 8, 'Player 27', 11, '2024-01-17T02:06:10.833731+01:00'::timestamptz, 77, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 8, 'Player 27', 11, datetime.datetime(2024, 1, 17, 2, 6, 10, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 77, False); alias=default
DEBUG 2024-03-03 11:48:00,940 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 7, 'Player 32', 11, '2023-12-07T19:54:47.833731+01:00'::timestamptz, 336, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 7, 'Player 32', 11, datetime.datetime(2023, 12, 7, 19, 54, 47, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 336, False); alias=default
DEBUG 2024-03-03 11:48:00,941 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 4, 'Player 23', 11, '2024-01-15T22:16:37.833731+01:00'::timestamptz, 446, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 4, 'Player 23', 11, datetime.datetime(2024, 1, 15, 22, 16, 37, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 446, False); alias=default
DEBUG 2024-03-03 11:48:00,942 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 6, 'Player 37', 11, '2023-12-28T13:00:29.833731+01:00'::timestamptz, 977, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 6, 'Player 37', 11, datetime.datetime(2023, 12, 28, 13, 0, 29, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 977, False); alias=default
DEBUG 2024-03-03 11:48:00,944 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 0', 0, '2023-11-09T04:37:46.833731+01:00'::timestamptz, 507, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 0', 0, datetime.datetime(2023, 11, 9, 4, 37, 46, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 507, False); alias=default
DEBUG 2024-03-03 11:48:00,946 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 8, 'Player 5', 11, '2023-12-26T05:25:47.833731+01:00'::timestamptz, 630, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 8, 'Player 5', 11, datetime.datetime(2023, 12, 26, 5, 25, 47, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 630, False); alias=default
DEBUG 2024-03-03 11:48:00,947 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 22', 5, '2023-11-05T15:06:21.833731+01:00'::timestamptz, 693, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 22', 5, datetime.datetime(2023, 11, 5, 15, 6, 21, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 693, False); alias=default
DEBUG 2024-03-03 11:48:00,949 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 6, 'Player 4', 11, '2024-01-07T00:07:56.833731+01:00'::timestamptz, 257, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 6, 'Player 4', 11, datetime.datetime(2024, 1, 7, 0, 7, 56, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 257, False); alias=default
DEBUG 2024-03-03 11:48:00,950 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 4, 'Player 25', 11, '2023-12-23T13:53:47.833731+01:00'::timestamptz, 980, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 4, 'Player 25', 11, datetime.datetime(2023, 12, 23, 13, 53, 47, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 980, False); alias=default
DEBUG 2024-03-03 11:48:00,951 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 1, 'Player 21', 11, '2024-02-05T12:44:56.833731+01:00'::timestamptz, 571, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 1, 'Player 21', 11, datetime.datetime(2024, 2, 5, 12, 44, 56, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 571, False); alias=default
DEBUG 2024-03-03 11:48:00,952 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 10, 'Player 16', 11, '2024-01-08T10:53:28.833731+01:00'::timestamptz, 178, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 10, 'Player 16', 11, datetime.datetime(2024, 1, 8, 10, 53, 28, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 178, False); alias=default
DEBUG 2024-03-03 11:48:00,954 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 11, 'Player 36', 4, '2024-01-25T05:50:10.833731+01:00'::timestamptz, 457, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 11, 'Player 36', 4, datetime.datetime(2024, 1, 25, 5, 50, 10, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 457, False); alias=default
DEBUG 2024-03-03 11:48:00,955 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 2, 'Player 39', 11, '2024-01-21T01:14:19.833731+01:00'::timestamptz, 825, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 2, 'Player 39', 11, datetime.datetime(2024, 1, 21, 1, 14, 19, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 825, False); alias=default
DEBUG 2024-03-03 11:48:00,956 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 23', 3, '2024-02-28T23:20:57.833731+01:00'::timestamptz, 775, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 23', 3, datetime.datetime(2024, 2, 28, 23, 20, 57, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 775, False); alias=default
DEBUG 2024-03-03 11:48:00,957 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 8, 'Player 28', 11, '2024-01-01T20:06:35.833731+01:00'::timestamptz, 311, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 8, 'Player 28', 11, datetime.datetime(2024, 1, 1, 20, 6, 35, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 311, False); alias=default
DEBUG 2024-03-03 11:48:00,959 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 1, 'Player 14', 11, '2024-02-29T00:17:14.833731+01:00'::timestamptz, 336, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 1, 'Player 14', 11, datetime.datetime(2024, 2, 29, 0, 17, 14, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 336, False); alias=default
DEBUG 2024-03-03 11:48:00,960 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 28', 10, '2024-01-08T04:08:18.833731+01:00'::timestamptz, 162, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 28', 10, datetime.datetime(2024, 1, 8, 4, 8, 18, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 162, False); alias=default
DEBUG 2024-03-03 11:48:00,962 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 11, 'Player 11', 7, '2023-11-07T14:42:29.833731+01:00'::timestamptz, 508, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 11, 'Player 11', 7, datetime.datetime(2023, 11, 7, 14, 42, 29, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 508, False); alias=default
DEBUG 2024-03-03 11:48:00,964 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 2, 'Player 41', 11, '2023-11-01T19:47:59.833731+01:00'::timestamptz, 456, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 2, 'Player 41', 11, datetime.datetime(2023, 11, 1, 19, 47, 59, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 456, False); alias=default
DEBUG 2024-03-03 11:48:00,965 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 28', 2, '2024-01-10T17:22:14.833731+01:00'::timestamptz, 811, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 28', 2, datetime.datetime(2024, 1, 10, 17, 22, 14, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 811, False); alias=default
DEBUG 2024-03-03 11:48:00,966 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 0, 'Player 45', 11, '2023-11-19T03:04:25.833731+01:00'::timestamptz, 423, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 0, 'Player 45', 11, datetime.datetime(2023, 11, 19, 3, 4, 25, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 423, False); alias=default
DEBUG 2024-03-03 11:48:00,967 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 11, 'Player 7', 1, '2024-02-16T20:21:17.833731+01:00'::timestamptz, 811, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 11, 'Player 7', 1, datetime.datetime(2024, 2, 16, 20, 21, 17, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 811, False); alias=default
DEBUG 2024-03-03 11:48:00,968 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 11, 'Player 23', 5, '2023-12-03T15:56:58.833731+01:00'::timestamptz, 648, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 11, 'Player 23', 5, datetime.datetime(2023, 12, 3, 15, 56, 58, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 648, False); alias=default
DEBUG 2024-03-03 11:48:00,969 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 19', 0, '2024-01-16T23:54:56.833731+01:00'::timestamptz, 670, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 19', 0, datetime.datetime(2024, 1, 16, 23, 54, 56, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 670, False); alias=default
DEBUG 2024-03-03 11:48:00,971 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 2, 'Player 24', 11, '2024-02-04T05:04:04.833731+01:00'::timestamptz, 74, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 2, 'Player 24', 11, datetime.datetime(2024, 2, 4, 5, 4, 4, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 74, False); alias=default
DEBUG 2024-03-03 11:48:00,972 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 6, 'Player 28', 11, '2024-02-23T17:39:57.833731+01:00'::timestamptz, 264, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 6, 'Player 28', 11, datetime.datetime(2024, 2, 23, 17, 39, 57, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 264, False); alias=default
DEBUG 2024-03-03 11:48:00,973 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 8, 'Player 27', 11, '2023-12-01T12:44:21.833731+01:00'::timestamptz, 672, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 8, 'Player 27', 11, datetime.datetime(2023, 12, 1, 12, 44, 21, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 672, False); alias=default
DEBUG 2024-03-03 11:48:00,974 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 29', 4, '2024-02-12T03:16:17.833731+01:00'::timestamptz, 276, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 29', 4, datetime.datetime(2024, 2, 12, 3, 16, 17, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 276, False); alias=default
DEBUG 2024-03-03 11:48:00,976 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 48', 11, 'Player 38', 4, '2023-12-15T04:49:15.833731+01:00'::timestamptz, 599, false) RETURNING "pong_gamedata"."id"; args=('Player 48', 11, 'Player 38', 4, datetime.datetime(2023, 12, 15, 4, 49, 15, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 599, False); alias=default
DEBUG 2024-03-03 11:48:00,978 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 38', 1, '2024-02-19T02:18:41.833731+01:00'::timestamptz, 519, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 38', 1, datetime.datetime(2024, 2, 19, 2, 18, 41, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 519, False); alias=default
DEBUG 2024-03-03 11:48:00,979 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 47', 6, 'Player 14', 11, '2024-01-01T09:23:50.833731+01:00'::timestamptz, 948, false) RETURNING "pong_gamedata"."id"; args=('Player 47', 6, 'Player 14', 11, datetime.datetime(2024, 1, 1, 9, 23, 50, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 948, False); alias=default
DEBUG 2024-03-03 11:48:00,980 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 11, 'Player 25', 3, '2023-11-08T09:17:54.833731+01:00'::timestamptz, 390, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 11, 'Player 25', 3, datetime.datetime(2023, 11, 8, 9, 17, 54, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 390, False); alias=default
DEBUG 2024-03-03 11:48:00,982 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 4, 'Player 2', 11, '2023-12-08T00:18:15.833731+01:00'::timestamptz, 496, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 4, 'Player 2', 11, datetime.datetime(2023, 12, 8, 0, 18, 15, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 496, False); alias=default
DEBUG 2024-03-03 11:48:00,983 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 17', 4, '2024-02-18T00:59:47.833731+01:00'::timestamptz, 183, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 17', 4, datetime.datetime(2024, 2, 18, 0, 59, 47, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 183, False); alias=default
DEBUG 2024-03-03 11:48:00,984 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 54', 5, 'Player 26', 11, '2023-11-25T14:30:25.833731+01:00'::timestamptz, 52, false) RETURNING "pong_gamedata"."id"; args=('Player 54', 5, 'Player 26', 11, datetime.datetime(2023, 11, 25, 14, 30, 25, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 52, False); alias=default
DEBUG 2024-03-03 11:48:00,985 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 55', 0, '2024-01-09T17:17:40.833731+01:00'::timestamptz, 102, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 55', 0, datetime.datetime(2024, 1, 9, 17, 17, 40, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 102, False); alias=default
DEBUG 2024-03-03 11:48:00,987 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 11, 'Player 39', 4, '2023-11-04T22:08:17.833731+01:00'::timestamptz, 57, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 11, 'Player 39', 4, datetime.datetime(2023, 11, 4, 22, 8, 17, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 57, False); alias=default
DEBUG 2024-03-03 11:48:00,988 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 52', 11, 'Player 49', 8, '2024-01-30T09:28:38.833731+01:00'::timestamptz, 276, false) RETURNING "pong_gamedata"."id"; args=('Player 52', 11, 'Player 49', 8, datetime.datetime(2024, 1, 30, 9, 28, 38, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 276, False); alias=default
DEBUG 2024-03-03 11:48:00,989 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 22', 3, '2023-11-02T23:31:41.833731+01:00'::timestamptz, 995, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 22', 3, datetime.datetime(2023, 11, 2, 23, 31, 41, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 995, False); alias=default
DEBUG 2024-03-03 11:48:00,990 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 11', 5, '2024-01-20T06:27:31.833731+01:00'::timestamptz, 710, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 11', 5, datetime.datetime(2024, 1, 20, 6, 27, 31, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 710, False); alias=default
DEBUG 2024-03-03 11:48:00,992 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 51', 3, 'Player 5', 11, '2024-02-17T16:43:51.833731+01:00'::timestamptz, 980, false) RETURNING "pong_gamedata"."id"; args=('Player 51', 3, 'Player 5', 11, datetime.datetime(2024, 2, 17, 16, 43, 51, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 980, False); alias=default
DEBUG 2024-03-03 11:48:00,993 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 19', 1, '2023-11-06T06:14:13.833731+01:00'::timestamptz, 153, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 19', 1, datetime.datetime(2023, 11, 6, 6, 14, 13, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 153, False); alias=default
DEBUG 2024-03-03 11:48:00,995 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 49', 8, 'Player 4', 11, '2024-02-05T13:35:31.833731+01:00'::timestamptz, 559, false) RETURNING "pong_gamedata"."id"; args=('Player 49', 8, 'Player 4', 11, datetime.datetime(2024, 2, 5, 13, 35, 31, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 559, False); alias=default
DEBUG 2024-03-03 11:48:00,996 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 50', 11, 'Player 38', 10, '2024-02-20T21:06:58.833731+01:00'::timestamptz, 433, false) RETURNING "pong_gamedata"."id"; args=('Player 50', 11, 'Player 38', 10, datetime.datetime(2024, 2, 20, 21, 6, 58, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 433, False); alias=default
DEBUG 2024-03-03 11:48:00,998 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 2', 9, '2023-11-27T04:10:13.833731+01:00'::timestamptz, 182, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 2', 9, datetime.datetime(2023, 11, 27, 4, 10, 13, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 182, False); alias=default
DEBUG 2024-03-03 11:48:00,999 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 11, 'Player 40', 1, '2023-11-01T06:59:08.833731+01:00'::timestamptz, 931, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 11, 'Player 40', 1, datetime.datetime(2023, 11, 1, 6, 59, 8, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 931, False); alias=default
DEBUG 2024-03-03 11:48:01,000 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 7, 'Player 59', 11, '2024-02-26T11:44:27.833731+01:00'::timestamptz, 634, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 7, 'Player 59', 11, datetime.datetime(2024, 2, 26, 11, 44, 27, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 634, False); alias=default
DEBUG 2024-03-03 11:48:01,002 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 9, 'Player 21', 11, '2023-11-07T16:14:03.833731+01:00'::timestamptz, 47, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 9, 'Player 21', 11, datetime.datetime(2023, 11, 7, 16, 14, 3, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 47, False); alias=default
DEBUG 2024-03-03 11:48:01,003 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 4', 6, '2024-02-12T16:19:02.833731+01:00'::timestamptz, 286, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 4', 6, datetime.datetime(2024, 2, 12, 16, 19, 2, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 286, False); alias=default
DEBUG 2024-03-03 11:48:01,004 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 21', 2, '2024-02-03T08:07:28.833731+01:00'::timestamptz, 442, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 21', 2, datetime.datetime(2024, 2, 3, 8, 7, 28, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 442, False); alias=default
DEBUG 2024-03-03 11:48:01,005 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 61', 11, 'Player 51', 9, '2024-01-11T00:22:01.833731+01:00'::timestamptz, 293, false) RETURNING "pong_gamedata"."id"; args=('Player 61', 11, 'Player 51', 9, datetime.datetime(2024, 1, 11, 0, 22, 1, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 293, False); alias=default
DEBUG 2024-03-03 11:48:01,007 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 1, 'Player 52', 11, '2023-11-16T10:39:17.833731+01:00'::timestamptz, 124, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 1, 'Player 52', 11, datetime.datetime(2023, 11, 16, 10, 39, 17, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 124, False); alias=default
DEBUG 2024-03-03 11:48:01,008 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 1, 'Player 23', 11, '2024-02-10T22:11:21.833731+01:00'::timestamptz, 154, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 1, 'Player 23', 11, datetime.datetime(2024, 2, 10, 22, 11, 21, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 154, False); alias=default
DEBUG 2024-03-03 11:48:01,010 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 10, 'Player 44', 11, '2023-11-22T14:55:46.833731+01:00'::timestamptz, 870, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 10, 'Player 44', 11, datetime.datetime(2023, 11, 22, 14, 55, 46, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 870, False); alias=default
DEBUG 2024-03-03 11:48:01,012 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 0, 'Player 45', 11, '2024-02-14T16:40:44.833731+01:00'::timestamptz, 304, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 0, 'Player 45', 11, datetime.datetime(2024, 2, 14, 16, 40, 44, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 304, False); alias=default
DEBUG 2024-03-03 11:48:01,013 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,014 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 8', 8, '2023-11-28T06:50:10.833731+01:00'::timestamptz, 533, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 8', 8, datetime.datetime(2023, 11, 28, 6, 50, 10, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 533, True); alias=default
DEBUG 2024-03-03 11:48:01,015 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 6', 0, '2023-11-28T06:54:04.833731+01:00'::timestamptz, 744, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 6', 0, datetime.datetime(2023, 11, 28, 6, 54, 4, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 744, True); alias=default
DEBUG 2024-03-03 11:48:01,017 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 6, 'Player 10', 11, '2023-11-28T06:57:28.833731+01:00'::timestamptz, 857, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 6, 'Player 10', 11, datetime.datetime(2023, 11, 28, 6, 57, 28, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 857, True); alias=default
DEBUG 2024-03-03 11:48:01,018 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2023-11-28T06:57:28.833731+01:00'::timestamptz, 971, '["Player 10", "Player 14", "Player 8", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2023, 11, 28, 6, 57, 28, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 971, <psycopg2._json.Json object at 0x7fd62a07f860>, '0x0'); alias=default
DEBUG 2024-03-03 11:48:01,020 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 10, 'Player 5', 11, '2023-11-14T08:30:19.833731+01:00'::timestamptz, 20, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 10, 'Player 5', 11, datetime.datetime(2023, 11, 14, 8, 30, 19, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 20, True); alias=default
DEBUG 2024-03-03 11:48:01,021 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 2', 10, '2023-11-14T08:29:55.833731+01:00'::timestamptz, 414, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 2', 10, datetime.datetime(2023, 11, 14, 8, 29, 55, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 414, True); alias=default
DEBUG 2024-03-03 11:48:01,022 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 1, 'Player 14', 11, '2023-11-14T08:38:44.833731+01:00'::timestamptz, 970, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 1, 'Player 14', 11, datetime.datetime(2023, 11, 14, 8, 38, 44, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 970, True); alias=default
DEBUG 2024-03-03 11:48:01,023 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2023-11-14T08:38:44.833731+01:00'::timestamptz, 943, '["Player 14", "Player 5", "Player 11", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2023, 11, 14, 8, 38, 44, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 943, <psycopg2._json.Json object at 0x7fd62a07e2a0>, '0x0'); alias=default
DEBUG 2024-03-03 11:48:01,025 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 2', 2, '2023-12-27T22:36:25.833731+01:00'::timestamptz, 130, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 2', 2, datetime.datetime(2023, 12, 27, 22, 36, 25, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 130, True); alias=default
DEBUG 2024-03-03 11:48:01,026 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 5', 6, '2023-12-27T22:38:33.833731+01:00'::timestamptz, 937, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 5', 6, datetime.datetime(2023, 12, 27, 22, 38, 33, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 937, True); alias=default
DEBUG 2024-03-03 11:48:01,028 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 4, 'Player 13', 11, '2023-12-27T22:38:47.833731+01:00'::timestamptz, 488, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 4, 'Player 13', 11, datetime.datetime(2023, 12, 27, 22, 38, 47, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 488, True); alias=default
DEBUG 2024-03-03 11:48:01,030 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2023-12-27T22:38:47.833731+01:00'::timestamptz, 951, '["Player 13", "Player 7", "Player 2", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2023, 12, 27, 22, 38, 47, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 951, <psycopg2._json.Json object at 0x7fd62a07eba0>, '0x0'); alias=default
DEBUG 2024-03-03 11:48:01,031 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 7', 7, '2023-12-14T03:09:48.833731+01:00'::timestamptz, 936, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 7', 7, datetime.datetime(2023, 12, 14, 3, 9, 48, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 936, True); alias=default
DEBUG 2024-03-03 11:48:01,033 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 3, 'Player 16', 11, '2023-12-14T03:09:55.833731+01:00'::timestamptz, 393, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 3, 'Player 16', 11, datetime.datetime(2023, 12, 14, 3, 9, 55, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 393, True); alias=default
DEBUG 2024-03-03 11:48:01,034 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 1, 'Player 16', 11, '2023-12-14T03:10:23.833731+01:00'::timestamptz, 284, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 1, 'Player 16', 11, datetime.datetime(2023, 12, 14, 3, 10, 23, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 284, True); alias=default
DEBUG 2024-03-03 11:48:01,035 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2023-12-14T03:10:23.833731+01:00'::timestamptz, 971, '["Player 16", "Player 14", "Player 7", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2023, 12, 14, 3, 10, 23, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 971, <psycopg2._json.Json object at 0x7fd62a07dbb0>, '0x0'); alias=default
DEBUG 2024-03-03 11:48:01,036 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 0, 'Player 12', 11, '2024-02-04T08:41:03.833731+01:00'::timestamptz, 247, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 0, 'Player 12', 11, datetime.datetime(2024, 2, 4, 8, 41, 3, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 247, True); alias=default
DEBUG 2024-03-03 11:48:01,037 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 2, 'Player 17', 11, '2024-02-04T08:48:22.833731+01:00'::timestamptz, 865, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 2, 'Player 17', 11, datetime.datetime(2024, 2, 4, 8, 48, 22, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 865, True); alias=default
DEBUG 2024-03-03 11:48:01,039 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 8, 'Player 17', 11, '2024-02-04T08:49:36.833731+01:00'::timestamptz, 901, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 8, 'Player 17', 11, datetime.datetime(2024, 2, 4, 8, 49, 36, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 901, True); alias=default
DEBUG 2024-03-03 11:48:01,040 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2024-02-04T08:49:36.833731+01:00'::timestamptz, 939, '["Player 17", "Player 12", "Player 13", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2024, 2, 4, 8, 49, 36, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 939, <psycopg2._json.Json object at 0x7fd62a07e2a0>, '0x0'); alias=default
DEBUG 2024-03-03 11:48:01,041 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 6', 10, '2024-01-17T01:16:22.833731+01:00'::timestamptz, 902, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 6', 10, datetime.datetime(2024, 1, 17, 1, 16, 22, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 902, True); alias=default
DEBUG 2024-03-03 11:48:01,042 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 7, 'Player 15', 11, '2024-01-17T01:13:28.833731+01:00'::timestamptz, 493, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 7, 'Player 15', 11, datetime.datetime(2024, 1, 17, 1, 13, 28, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 493, True); alias=default
DEBUG 2024-03-03 11:48:01,044 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 6, 'Player 15', 11, '2024-01-17T01:17:29.833731+01:00'::timestamptz, 625, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 6, 'Player 15', 11, datetime.datetime(2024, 1, 17, 1, 17, 29, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 625, True); alias=default
DEBUG 2024-03-03 11:48:01,045 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2024-01-17T01:17:29.833731+01:00'::timestamptz, 969, '["Player 15", "Player 16", "Player 6", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2024, 1, 17, 1, 17, 29, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 969, <psycopg2._json.Json object at 0x7fd62a07dbb0>, '0x0'); alias=default
DEBUG 2024-03-03 11:48:01,046 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 9, 'Player 13', 11, '2024-01-05T15:19:43.833731+01:00'::timestamptz, 806, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 9, 'Player 13', 11, datetime.datetime(2024, 1, 5, 15, 19, 43, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 806, True); alias=default
DEBUG 2024-03-03 11:48:01,048 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 18', 2, '2024-01-05T15:15:50.833731+01:00'::timestamptz, 122, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 18', 2, datetime.datetime(2024, 1, 5, 15, 15, 50, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 122, True); alias=default
DEBUG 2024-03-03 11:48:01,049 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 8', 8, '2024-01-05T15:21:58.833731+01:00'::timestamptz, 384, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 8', 8, datetime.datetime(2024, 1, 5, 15, 21, 58, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 384, True); alias=default
DEBUG 2024-03-03 11:48:01,051 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2024-01-05T15:21:58.833731+01:00'::timestamptz, 941, '["Player 13", "Player 8", "Player 16", "Player 18"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2024, 1, 5, 15, 21, 58, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 941, <psycopg2._json.Json object at 0x7fd62a07d880>, '0x0'); alias=default
DEBUG 2024-03-03 11:48:01,053 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 1, 'Player 7', 11, '2024-01-30T09:09:33.833731+01:00'::timestamptz, 490, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 1, 'Player 7', 11, datetime.datetime(2024, 1, 30, 9, 9, 33, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 490, True); alias=default
DEBUG 2024-03-03 11:48:01,054 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 6, 'Player 18', 11, '2024-01-30T09:11:30.833731+01:00'::timestamptz, 753, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 6, 'Player 18', 11, datetime.datetime(2024, 1, 30, 9, 11, 30, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 753, True); alias=default
DEBUG 2024-03-03 11:48:01,055 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 18', 6, '2024-01-30T09:12:37.833731+01:00'::timestamptz, 683, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 18', 6, datetime.datetime(2024, 1, 30, 9, 12, 37, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 683, True); alias=default
DEBUG 2024-03-03 11:48:01,057 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2024-01-30T09:12:37.833731+01:00'::timestamptz, 820, '["Player 7", "Player 18", "Player 9", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2024, 1, 30, 9, 12, 37, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 820, <psycopg2._json.Json object at 0x7fd62a068740>, '0x0'); alias=default
DEBUG 2024-03-03 11:48:01,058 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 6', 9, '2023-12-21T19:34:12.833731+01:00'::timestamptz, 4, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 6', 9, datetime.datetime(2023, 12, 21, 19, 34, 12, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 4, True); alias=default
DEBUG 2024-03-03 11:48:01,059 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 10', 6, '2023-12-21T19:47:13.833731+01:00'::timestamptz, 659, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 10', 6, datetime.datetime(2023, 12, 21, 19, 47, 13, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 659, True); alias=default
DEBUG 2024-03-03 11:48:01,061 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 2, 'Player 16', 11, '2023-12-21T19:50:25.833731+01:00'::timestamptz, 398, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 2, 'Player 16', 11, datetime.datetime(2023, 12, 21, 19, 50, 25, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 398, True); alias=default
DEBUG 2024-03-03 11:48:01,062 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2023-12-21T19:50:25.833731+01:00'::timestamptz, 977, '["Player 16", "Player 8", "Player 6", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2023, 12, 21, 19, 50, 25, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 977, <psycopg2._json.Json object at 0x7fd62a097ec0>, '0x0'); alias=default
DEBUG 2024-03-03 11:48:01,064 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 7', 4, '2024-01-20T23:48:11.833731+01:00'::timestamptz, 285, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 7', 4, datetime.datetime(2024, 1, 20, 23, 48, 11, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 285, True); alias=default
DEBUG 2024-03-03 11:48:01,066 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 13', 6, '2024-01-20T23:45:13.833731+01:00'::timestamptz, 240, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 13', 6, datetime.datetime(2024, 1, 20, 23, 45, 13, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 240, True); alias=default
DEBUG 2024-03-03 11:48:01,067 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 16', 7, '2024-01-20T23:54:53.833731+01:00'::timestamptz, 751, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 16', 7, datetime.datetime(2024, 1, 20, 23, 54, 53, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 751, True); alias=default
DEBUG 2024-03-03 11:48:01,068 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2024-01-20T23:54:53.833731+01:00'::timestamptz, 820, '["Player 10", "Player 16", "Player 7", "Player 13"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2024, 1, 20, 23, 54, 53, 833731, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 820, <psycopg2._json.Json object at 0x7fd62a0ca2d0>, '0x0'); alias=default
DEBUG 2024-03-03 11:48:01,069 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,070 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,071 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 11:48:01,071 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:01,072 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 11:48:01,073 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:01,074 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 11:48:01,075 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 11:48:01,076 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 11:48:01,078 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 11:48:01,078 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:01,079 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 11:48:01,081 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:01,082 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 11:48:01,083 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,084 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,084 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,086 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,086 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,087 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,088 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 11:48:01,088 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:01,089 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 11:48:01,090 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:01,090 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 11:48:01,092 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 11:48:01,092 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:01,093 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 11:48:01,093 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:01,094 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 11:48:01,096 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,097 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,099 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,100 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,101 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,102 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,103 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 11:48:01,103 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:01,104 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 11:48:01,104 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:01,105 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 11:48:01,106 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 11:48:01,107 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:01,107 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 11:48:01,108 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:01,109 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 11:48:01,110 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,110 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,111 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,113 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,115 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,116 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,117 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 11:48:01,117 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:01,118 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 11:48:01,119 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:01,120 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 11:48:01,121 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 11:48:01,122 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 11:48:01,123 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 11:48:01,124 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 11:48:01,125 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 11:48:01,125 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 11:48:01,126 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,127 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,128 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,130 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,131 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 11:48:01,133 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
