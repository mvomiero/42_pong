DEBUG 2024-03-02 23:53:52,204 utils (0.003) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,207 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,209 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,209 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,210 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-02 23:53:52,224 utils (0.014) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:53:52,226 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,226 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,228 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-02 23:53:52,232 utils (0.003) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:53:52,235 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-02 23:53:52,237 utils (0.002) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-02 23:53:52,239 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,244 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-02T23:53:52.240040+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 2, 23, 53, 52, 240040, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:53:52,245 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,245 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,248 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-02 23:53:52,253 utils (0.004) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:53:52,259 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-02 23:53:52,268 utils (0.007) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-02 23:53:52,269 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-02 23:53:52,275 utils (0.006) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:53:52,285 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-02 23:53:52,290 utils (0.004) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:53:52,291 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-02 23:53:52,294 utils (0.003) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:53:52,295 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-02 23:53:52,298 utils (0.003) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:53:52,299 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-02 23:53:52,302 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-02 23:53:52,302 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:53:52,304 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:53:52,305 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-02 23:53:52,307 utils (0.002) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-02 23:53:52,307 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-02 23:53:52,310 utils (0.002) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-02 23:53:52,310 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-02 23:53:52,312 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-02 23:53:52,312 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:53:52,314 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:53:52,314 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:53:52,315 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:53:52,316 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-02 23:53:52,318 utils (0.002) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-02 23:53:52,318 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-02 23:53:52,320 utils (0.002) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-02 23:53:52,320 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-02 23:53:52,322 utils (0.002) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-02 23:53:52,323 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-02 23:53:52,325 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-02 23:53:52,325 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:53:52,327 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:53:52,327 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:53:52,328 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:53:52,328 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-02 23:53:52,330 utils (0.002) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-02 23:53:52,330 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-02 23:53:52,332 utils (0.002) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-02 23:53:52,333 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-02 23:53:52,335 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-02 23:53:52,335 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:53:52,336 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:53:52,336 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:53:52,337 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:53:52,338 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-02 23:53:52,340 utils (0.002) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-02 23:53:52,340 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-02 23:53:52,342 utils (0.002) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-02 23:53:52,343 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,345 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,347 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-02T23:53:52.346276+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 2, 23, 53, 52, 346276, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:53:52,347 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,359 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-02 23:53:52,364 utils (0.005) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:53:52,365 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:53:52,366 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:53:52,366 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:53:52,367 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:53:52,368 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-02 23:53:52,370 utils (0.002) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-02 23:53:52,370 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-02 23:53:52,373 utils (0.002) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-02 23:53:52,374 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,376 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,378 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-02T23:53:52.376827+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 2, 23, 53, 52, 376827, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:53:52,378 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,391 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,392 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-02T23:53:52.391779+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 2, 23, 53, 52, 391779, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:53:52,393 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,393 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,405 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,406 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-02T23:53:52.406309+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 2, 23, 53, 52, 406309, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:53:52,407 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,408 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,414 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-02 23:53:52,415 utils (0.000) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-02 23:53:52,429 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-02 23:53:52,430 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-02 23:53:52,432 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,433 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-02T23:53:52.432767+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 2, 23, 53, 52, 432767, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:53:52,434 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,435 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,472 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-02 23:53:52,473 utils (0.001) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-02 23:53:52,475 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,476 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-02T23:53:52.475883+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 2, 23, 53, 52, 475883, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:53:52,480 utils (0.003) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,480 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,497 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-02 23:53:52,497 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-02 23:53:52,499 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,501 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-02T23:53:52.500154+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 2, 23, 53, 52, 500154, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:53:52,502 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,502 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,527 utils (0.005) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,528 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-02T23:53:52.528040+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 2, 23, 53, 52, 528040, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:53:52,529 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,530 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,540 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-02 23:53:52,541 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-02 23:53:52,543 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,544 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-02T23:53:52.543777+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 2, 23, 53, 52, 543777, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:53:52,545 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,545 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,548 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,549 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-02T23:53:52.548773+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 2, 23, 53, 52, 548773, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:53:52,552 utils (0.003) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,553 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,566 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,567 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-02T23:53:52.566941+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 2, 23, 53, 52, 566941, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:53:52,569 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,569 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,582 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-02 23:53:52,589 utils (0.007) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-02 23:53:52,591 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,592 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-02T23:53:52.591819+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 2, 23, 53, 52, 591819, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:53:52,596 utils (0.003) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,596 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,611 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-02 23:53:52,612 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-02 23:53:52,621 utils (0.009) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,624 utils (0.002) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-02T23:53:52.621491+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 2, 23, 53, 52, 621491, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:53:52,625 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,625 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,638 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-02 23:53:52,640 utils (0.001) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-02 23:53:52,641 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,643 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-02T23:53:52.642308+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 2, 23, 53, 52, 642308, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:53:52,644 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,644 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,657 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,659 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-02T23:53:52.658233+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 2, 23, 53, 52, 658233, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:53:52,661 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,661 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,673 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-02 23:53:52,673 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-02 23:53:52,675 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,676 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-02T23:53:52.675741+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 2, 23, 53, 52, 675741, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:53:52,678 utils (0.002) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,679 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,681 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-02 23:53:52,687 utils (0.005) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:53:52,689 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-02 23:53:52,696 utils (0.006) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-02 23:53:52,698 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,699 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-02T23:53:52.698460+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 2, 23, 53, 52, 698460, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:53:52,700 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,700 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,702 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-02 23:53:52,707 utils (0.004) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:53:52,707 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-02 23:53:52,709 utils (0.002) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-02 23:53:52,710 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-02 23:53:52,712 utils (0.002) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-02 23:53:52,713 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,715 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,718 utils (0.002) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-02T23:53:52.716250+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 2, 23, 53, 52, 716250, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:53:52,720 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:53:52,722 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-02 23:53:52,742 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-02 23:53:52,743 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,744 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-02 23:53:52,746 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,748 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-02 23:53:52,751 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-02 23:53:52,752 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:52,753 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-02 23:53:52,754 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:52,755 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-02 23:53:52,757 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:53:52,759 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:53:52,761 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:53:52,804 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 11', 0, '2023-11-01T03:11:42.759934+01:00'::timestamptz, 785, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 11', 0, datetime.datetime(2023, 11, 1, 3, 11, 42, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 785, False); alias=default
DEBUG 2024-03-02 23:53:52,806 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 5, 'Player 8', 11, '2023-12-14T12:32:18.759934+01:00'::timestamptz, 606, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 5, 'Player 8', 11, datetime.datetime(2023, 12, 14, 12, 32, 18, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 606, False); alias=default
DEBUG 2024-03-02 23:53:52,807 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 5, 'Player 11', 11, '2024-02-17T00:01:59.759934+01:00'::timestamptz, 379, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 5, 'Player 11', 11, datetime.datetime(2024, 2, 17, 0, 1, 59, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 379, False); alias=default
DEBUG 2024-03-02 23:53:52,809 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 13', 9, '2023-11-06T09:01:53.759934+01:00'::timestamptz, 628, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 13', 9, datetime.datetime(2023, 11, 6, 9, 1, 53, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 628, False); alias=default
DEBUG 2024-03-02 23:53:52,811 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 6, 'Player 14', 11, '2023-12-03T15:32:03.759934+01:00'::timestamptz, 475, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 6, 'Player 14', 11, datetime.datetime(2023, 12, 3, 15, 32, 3, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 475, False); alias=default
DEBUG 2024-03-02 23:53:52,812 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 10', 1, '2024-02-17T06:58:45.759934+01:00'::timestamptz, 983, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 10', 1, datetime.datetime(2024, 2, 17, 6, 58, 45, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 983, False); alias=default
DEBUG 2024-03-02 23:53:52,814 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 15', 4, '2023-11-06T13:22:13.759934+01:00'::timestamptz, 618, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 15', 4, datetime.datetime(2023, 11, 6, 13, 22, 13, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 618, False); alias=default
DEBUG 2024-03-02 23:53:52,816 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 7, 'Player 1', 11, '2024-02-02T03:23:53.759934+01:00'::timestamptz, 333, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 7, 'Player 1', 11, datetime.datetime(2024, 2, 2, 3, 23, 53, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 333, False); alias=default
DEBUG 2024-03-02 23:53:52,817 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 4, 'Player 4', 11, '2024-02-26T06:58:34.759934+01:00'::timestamptz, 574, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 4, 'Player 4', 11, datetime.datetime(2024, 2, 26, 6, 58, 34, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 574, False); alias=default
DEBUG 2024-03-02 23:53:52,819 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 10, 'Player 2', 11, '2024-02-28T16:55:05.759934+01:00'::timestamptz, 198, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 10, 'Player 2', 11, datetime.datetime(2024, 2, 28, 16, 55, 5, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 198, False); alias=default
DEBUG 2024-03-02 23:53:52,820 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 5, 'Player 18', 11, '2024-02-16T06:16:50.759934+01:00'::timestamptz, 568, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 5, 'Player 18', 11, datetime.datetime(2024, 2, 16, 6, 16, 50, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 568, False); alias=default
DEBUG 2024-03-02 23:53:52,822 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 12', 5, '2023-12-22T14:41:56.759934+01:00'::timestamptz, 326, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 12', 5, datetime.datetime(2023, 12, 22, 14, 41, 56, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 326, False); alias=default
DEBUG 2024-03-02 23:53:52,823 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 1, 'Player 20', 11, '2023-11-20T07:30:23.759934+01:00'::timestamptz, 209, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 1, 'Player 20', 11, datetime.datetime(2023, 11, 20, 7, 30, 23, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 209, False); alias=default
DEBUG 2024-03-02 23:53:52,825 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 17', 9, '2024-02-29T05:49:18.759934+01:00'::timestamptz, 797, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 17', 9, datetime.datetime(2024, 2, 29, 5, 49, 18, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 797, False); alias=default
DEBUG 2024-03-02 23:53:52,826 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 1, 'Player 2', 11, '2023-12-15T07:04:13.759934+01:00'::timestamptz, 477, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 1, 'Player 2', 11, datetime.datetime(2023, 12, 15, 7, 4, 13, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 477, False); alias=default
DEBUG 2024-03-02 23:53:52,828 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 9, 'Player 12', 11, '2024-02-09T13:25:12.759934+01:00'::timestamptz, 492, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 9, 'Player 12', 11, datetime.datetime(2024, 2, 9, 13, 25, 12, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 492, False); alias=default
DEBUG 2024-03-02 23:53:52,830 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 4', 5, '2023-12-28T03:48:47.759934+01:00'::timestamptz, 410, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 4', 5, datetime.datetime(2023, 12, 28, 3, 48, 47, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 410, False); alias=default
DEBUG 2024-03-02 23:53:52,831 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 0, 'Player 22', 11, '2024-01-03T23:26:21.759934+01:00'::timestamptz, 253, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 0, 'Player 22', 11, datetime.datetime(2024, 1, 3, 23, 26, 21, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 253, False); alias=default
DEBUG 2024-03-02 23:53:52,833 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 7, 'Player 6', 11, '2024-01-23T23:25:07.759934+01:00'::timestamptz, 423, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 7, 'Player 6', 11, datetime.datetime(2024, 1, 23, 23, 25, 7, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 423, False); alias=default
DEBUG 2024-03-02 23:53:52,834 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 8', 8, '2023-11-04T03:48:58.759934+01:00'::timestamptz, 449, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 8', 8, datetime.datetime(2023, 11, 4, 3, 48, 58, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 449, False); alias=default
DEBUG 2024-03-02 23:53:52,836 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 17', 4, '2023-11-18T06:28:45.759934+01:00'::timestamptz, 631, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 17', 4, datetime.datetime(2023, 11, 18, 6, 28, 45, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 631, False); alias=default
DEBUG 2024-03-02 23:53:52,837 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 7, 'Player 2', 11, '2024-02-19T13:59:26.759934+01:00'::timestamptz, 222, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 7, 'Player 2', 11, datetime.datetime(2024, 2, 19, 13, 59, 26, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 222, False); alias=default
DEBUG 2024-03-02 23:53:52,839 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 3, 'Player 16', 11, '2024-01-22T08:13:15.759934+01:00'::timestamptz, 720, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 3, 'Player 16', 11, datetime.datetime(2024, 1, 22, 8, 13, 15, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 720, False); alias=default
DEBUG 2024-03-02 23:53:52,840 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 1', 1, '2023-11-23T16:36:08.759934+01:00'::timestamptz, 740, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 1', 1, datetime.datetime(2023, 11, 23, 16, 36, 8, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 740, False); alias=default
DEBUG 2024-03-02 23:53:52,842 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 24', 5, '2024-01-14T21:57:27.759934+01:00'::timestamptz, 255, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 24', 5, datetime.datetime(2024, 1, 14, 21, 57, 27, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 255, False); alias=default
DEBUG 2024-03-02 23:53:52,844 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 5, 'Player 27', 11, '2023-12-12T01:13:42.759934+01:00'::timestamptz, 931, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 5, 'Player 27', 11, datetime.datetime(2023, 12, 12, 1, 13, 42, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 931, False); alias=default
DEBUG 2024-03-02 23:53:52,845 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 10', 3, '2023-11-12T16:08:55.759934+01:00'::timestamptz, 465, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 10', 3, datetime.datetime(2023, 11, 12, 16, 8, 55, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 465, False); alias=default
DEBUG 2024-03-02 23:53:52,847 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 12', 9, '2024-01-19T02:28:18.759934+01:00'::timestamptz, 31, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 12', 9, datetime.datetime(2024, 1, 19, 2, 28, 18, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 31, False); alias=default
DEBUG 2024-03-02 23:53:52,848 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 11, 'Player 4', 9, '2024-02-19T23:59:56.759934+01:00'::timestamptz, 100, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 11, 'Player 4', 9, datetime.datetime(2024, 2, 19, 23, 59, 56, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 100, False); alias=default
DEBUG 2024-03-02 23:53:52,850 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 9, 'Player 22', 11, '2023-12-18T17:12:38.759934+01:00'::timestamptz, 755, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 9, 'Player 22', 11, datetime.datetime(2023, 12, 18, 17, 12, 38, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 755, False); alias=default
DEBUG 2024-03-02 23:53:52,852 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 24', 6, '2024-01-08T20:40:02.759934+01:00'::timestamptz, 378, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 24', 6, datetime.datetime(2024, 1, 8, 20, 40, 2, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 378, False); alias=default
DEBUG 2024-03-02 23:53:52,853 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 3, 'Player 29', 11, '2023-11-02T19:34:12.759934+01:00'::timestamptz, 925, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 3, 'Player 29', 11, datetime.datetime(2023, 11, 2, 19, 34, 12, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 925, False); alias=default
DEBUG 2024-03-02 23:53:52,855 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 30', 1, '2024-01-21T07:29:50.759934+01:00'::timestamptz, 804, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 30', 1, datetime.datetime(2024, 1, 21, 7, 29, 50, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 804, False); alias=default
DEBUG 2024-03-02 23:53:52,856 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 3, 'Player 8', 11, '2024-01-06T13:17:31.759934+01:00'::timestamptz, 254, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 3, 'Player 8', 11, datetime.datetime(2024, 1, 6, 13, 17, 31, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 254, False); alias=default
DEBUG 2024-03-02 23:53:52,858 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 6', 3, '2023-11-15T03:26:51.759934+01:00'::timestamptz, 191, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 6', 3, datetime.datetime(2023, 11, 15, 3, 26, 51, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 191, False); alias=default
DEBUG 2024-03-02 23:53:52,859 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 6', 10, '2023-11-16T14:55:05.759934+01:00'::timestamptz, 850, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 6', 10, datetime.datetime(2023, 11, 16, 14, 55, 5, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 850, False); alias=default
DEBUG 2024-03-02 23:53:52,861 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 6, 'Player 28', 11, '2023-12-28T05:35:02.759934+01:00'::timestamptz, 305, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 6, 'Player 28', 11, datetime.datetime(2023, 12, 28, 5, 35, 2, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 305, False); alias=default
DEBUG 2024-03-02 23:53:52,863 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 11, 'Player 24', 10, '2024-01-29T08:40:29.759934+01:00'::timestamptz, 439, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 11, 'Player 24', 10, datetime.datetime(2024, 1, 29, 8, 40, 29, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 439, False); alias=default
DEBUG 2024-03-02 23:53:52,864 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 5', 5, '2023-11-11T05:04:09.759934+01:00'::timestamptz, 574, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 5', 5, datetime.datetime(2023, 11, 11, 5, 4, 9, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 574, False); alias=default
DEBUG 2024-03-02 23:53:52,866 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 12', 9, '2024-02-07T20:44:44.759934+01:00'::timestamptz, 827, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 12', 9, datetime.datetime(2024, 2, 7, 20, 44, 44, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 827, False); alias=default
DEBUG 2024-03-02 23:53:52,867 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 10, 'Player 17', 11, '2023-12-22T15:05:54.759934+01:00'::timestamptz, 408, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 10, 'Player 17', 11, datetime.datetime(2023, 12, 22, 15, 5, 54, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 408, False); alias=default
DEBUG 2024-03-02 23:53:52,869 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 8, 'Player 18', 11, '2024-02-20T13:04:27.759934+01:00'::timestamptz, 627, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 8, 'Player 18', 11, datetime.datetime(2024, 2, 20, 13, 4, 27, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 627, False); alias=default
DEBUG 2024-03-02 23:53:52,871 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 11, 'Player 22', 1, '2024-02-01T10:14:40.759934+01:00'::timestamptz, 303, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 11, 'Player 22', 1, datetime.datetime(2024, 2, 1, 10, 14, 40, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 303, False); alias=default
DEBUG 2024-03-02 23:53:52,872 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 15', 7, '2023-12-26T18:56:34.759934+01:00'::timestamptz, 612, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 15', 7, datetime.datetime(2023, 12, 26, 18, 56, 34, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 612, False); alias=default
DEBUG 2024-03-02 23:53:52,874 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 34', 2, '2023-11-14T15:12:24.759934+01:00'::timestamptz, 291, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 34', 2, datetime.datetime(2023, 11, 14, 15, 12, 24, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 291, False); alias=default
DEBUG 2024-03-02 23:53:52,875 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 8, 'Player 26', 11, '2024-02-17T02:23:48.759934+01:00'::timestamptz, 276, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 8, 'Player 26', 11, datetime.datetime(2024, 2, 17, 2, 23, 48, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 276, False); alias=default
DEBUG 2024-03-02 23:53:52,877 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 0, 'Player 26', 11, '2023-11-09T13:18:58.759934+01:00'::timestamptz, 611, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 0, 'Player 26', 11, datetime.datetime(2023, 11, 9, 13, 18, 58, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 611, False); alias=default
DEBUG 2024-03-02 23:53:52,879 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 10, 'Player 32', 11, '2024-02-29T01:59:14.759934+01:00'::timestamptz, 704, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 10, 'Player 32', 11, datetime.datetime(2024, 2, 29, 1, 59, 14, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 704, False); alias=default
DEBUG 2024-03-02 23:53:52,880 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 8, 'Player 2', 11, '2023-12-23T01:38:04.759934+01:00'::timestamptz, 691, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 8, 'Player 2', 11, datetime.datetime(2023, 12, 23, 1, 38, 4, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 691, False); alias=default
DEBUG 2024-03-02 23:53:52,882 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 5, 'Player 31', 11, '2023-11-01T04:09:19.759934+01:00'::timestamptz, 130, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 5, 'Player 31', 11, datetime.datetime(2023, 11, 1, 4, 9, 19, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 130, False); alias=default
DEBUG 2024-03-02 23:53:52,883 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 0, 'Player 18', 11, '2023-12-27T18:11:18.759934+01:00'::timestamptz, 939, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 0, 'Player 18', 11, datetime.datetime(2023, 12, 27, 18, 11, 18, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 939, False); alias=default
DEBUG 2024-03-02 23:53:52,885 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 25', 4, '2024-02-25T00:05:21.759934+01:00'::timestamptz, 544, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 25', 4, datetime.datetime(2024, 2, 25, 0, 5, 21, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 544, False); alias=default
DEBUG 2024-03-02 23:53:52,886 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 6, 'Player 34', 11, '2024-03-01T12:09:17.759934+01:00'::timestamptz, 904, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 6, 'Player 34', 11, datetime.datetime(2024, 3, 1, 12, 9, 17, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 904, False); alias=default
DEBUG 2024-03-02 23:53:52,888 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 7, 'Player 11', 11, '2024-01-12T06:27:28.759934+01:00'::timestamptz, 129, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 7, 'Player 11', 11, datetime.datetime(2024, 1, 12, 6, 27, 28, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 129, False); alias=default
DEBUG 2024-03-02 23:53:52,889 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 29', 8, '2023-12-19T06:31:53.759934+01:00'::timestamptz, 667, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 29', 8, datetime.datetime(2023, 12, 19, 6, 31, 53, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 667, False); alias=default
DEBUG 2024-03-02 23:53:52,891 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 5, 'Player 24', 11, '2023-11-16T07:55:02.759934+01:00'::timestamptz, 916, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 5, 'Player 24', 11, datetime.datetime(2023, 11, 16, 7, 55, 2, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 916, False); alias=default
DEBUG 2024-03-02 23:53:52,893 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 5', 7, '2024-02-02T06:44:53.759934+01:00'::timestamptz, 553, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 5', 7, datetime.datetime(2024, 2, 2, 6, 44, 53, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 553, False); alias=default
DEBUG 2024-03-02 23:53:52,894 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 2, 'Player 18', 11, '2023-12-29T01:56:26.759934+01:00'::timestamptz, 483, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 2, 'Player 18', 11, datetime.datetime(2023, 12, 29, 1, 56, 26, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 483, False); alias=default
DEBUG 2024-03-02 23:53:52,896 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 7, 'Player 4', 11, '2023-11-05T04:09:17.759934+01:00'::timestamptz, 288, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 7, 'Player 4', 11, datetime.datetime(2023, 11, 5, 4, 9, 17, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 288, False); alias=default
DEBUG 2024-03-02 23:53:52,897 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 11, 'Player 41', 10, '2023-12-01T07:41:03.759934+01:00'::timestamptz, 880, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 11, 'Player 41', 10, datetime.datetime(2023, 12, 1, 7, 41, 3, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 880, False); alias=default
DEBUG 2024-03-02 23:53:52,899 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 1', 9, '2023-11-12T22:30:54.759934+01:00'::timestamptz, 832, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 1', 9, datetime.datetime(2023, 11, 12, 22, 30, 54, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 832, False); alias=default
DEBUG 2024-03-02 23:53:52,901 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 6, 'Player 31', 11, '2023-11-23T12:00:44.759934+01:00'::timestamptz, 117, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 6, 'Player 31', 11, datetime.datetime(2023, 11, 23, 12, 0, 44, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 117, False); alias=default
DEBUG 2024-03-02 23:53:52,903 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 5, 'Player 20', 11, '2024-01-10T19:58:30.759934+01:00'::timestamptz, 228, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 5, 'Player 20', 11, datetime.datetime(2024, 1, 10, 19, 58, 30, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 228, False); alias=default
DEBUG 2024-03-02 23:53:52,904 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 8, 'Player 38', 11, '2024-02-06T12:13:24.759934+01:00'::timestamptz, 532, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 8, 'Player 38', 11, datetime.datetime(2024, 2, 6, 12, 13, 24, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 532, False); alias=default
DEBUG 2024-03-02 23:53:52,906 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 6, 'Player 39', 11, '2023-11-03T10:16:24.759934+01:00'::timestamptz, 232, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 6, 'Player 39', 11, datetime.datetime(2023, 11, 3, 10, 16, 24, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 232, False); alias=default
DEBUG 2024-03-02 23:53:52,908 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 11, 'Player 24', 7, '2023-11-08T15:43:20.759934+01:00'::timestamptz, 265, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 11, 'Player 24', 7, datetime.datetime(2023, 11, 8, 15, 43, 20, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 265, False); alias=default
DEBUG 2024-03-02 23:53:52,909 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 11, 'Player 29', 3, '2023-12-17T02:12:31.759934+01:00'::timestamptz, 88, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 11, 'Player 29', 3, datetime.datetime(2023, 12, 17, 2, 12, 31, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 88, False); alias=default
DEBUG 2024-03-02 23:53:52,911 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 6', 7, '2024-02-16T21:22:27.759934+01:00'::timestamptz, 242, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 6', 7, datetime.datetime(2024, 2, 16, 21, 22, 27, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 242, False); alias=default
DEBUG 2024-03-02 23:53:52,913 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 10', 5, '2024-02-21T02:18:01.759934+01:00'::timestamptz, 503, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 10', 5, datetime.datetime(2024, 2, 21, 2, 18, 1, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 503, False); alias=default
DEBUG 2024-03-02 23:53:52,915 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 14', 8, '2023-11-23T17:52:05.759934+01:00'::timestamptz, 256, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 14', 8, datetime.datetime(2023, 11, 23, 17, 52, 5, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 256, False); alias=default
DEBUG 2024-03-02 23:53:52,916 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 32', 0, '2023-12-28T22:55:14.759934+01:00'::timestamptz, 254, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 32', 0, datetime.datetime(2023, 12, 28, 22, 55, 14, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 254, False); alias=default
DEBUG 2024-03-02 23:53:52,917 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 1, 'Player 6', 11, '2023-11-28T01:11:58.759934+01:00'::timestamptz, 868, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 1, 'Player 6', 11, datetime.datetime(2023, 11, 28, 1, 11, 58, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 868, False); alias=default
DEBUG 2024-03-02 23:53:52,919 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 5, 'Player 10', 11, '2023-12-06T11:33:45.759934+01:00'::timestamptz, 550, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 5, 'Player 10', 11, datetime.datetime(2023, 12, 6, 11, 33, 45, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 550, False); alias=default
DEBUG 2024-03-02 23:53:52,920 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 11, 'Player 41', 7, '2024-01-16T03:20:03.759934+01:00'::timestamptz, 643, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 11, 'Player 41', 7, datetime.datetime(2024, 1, 16, 3, 20, 3, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 643, False); alias=default
DEBUG 2024-03-02 23:53:52,921 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 21', 4, '2023-11-29T18:59:22.759934+01:00'::timestamptz, 576, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 21', 4, datetime.datetime(2023, 11, 29, 18, 59, 22, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 576, False); alias=default
DEBUG 2024-03-02 23:53:52,923 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 5, 'Player 34', 11, '2023-12-13T11:05:52.759934+01:00'::timestamptz, 876, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 5, 'Player 34', 11, datetime.datetime(2023, 12, 13, 11, 5, 52, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 876, False); alias=default
DEBUG 2024-03-02 23:53:52,924 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 11, 'Player 37', 5, '2024-02-20T12:19:44.759934+01:00'::timestamptz, 984, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 11, 'Player 37', 5, datetime.datetime(2024, 2, 20, 12, 19, 44, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 984, False); alias=default
DEBUG 2024-03-02 23:53:52,926 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 11, 'Player 35', 7, '2023-12-23T14:53:11.759934+01:00'::timestamptz, 963, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 11, 'Player 35', 7, datetime.datetime(2023, 12, 23, 14, 53, 11, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 963, False); alias=default
DEBUG 2024-03-02 23:53:52,927 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 8, 'Player 30', 11, '2024-01-09T16:35:49.759934+01:00'::timestamptz, 422, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 8, 'Player 30', 11, datetime.datetime(2024, 1, 9, 16, 35, 49, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 422, False); alias=default
DEBUG 2024-03-02 23:53:52,929 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 48', 4, 'Player 4', 11, '2024-01-24T17:59:53.759934+01:00'::timestamptz, 329, false) RETURNING "pong_gamedata"."id"; args=('Player 48', 4, 'Player 4', 11, datetime.datetime(2024, 1, 24, 17, 59, 53, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 329, False); alias=default
DEBUG 2024-03-02 23:53:52,930 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 11, 'Player 38', 5, '2024-01-18T04:46:53.759934+01:00'::timestamptz, 705, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 11, 'Player 38', 5, datetime.datetime(2024, 1, 18, 4, 46, 53, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 705, False); alias=default
DEBUG 2024-03-02 23:53:52,932 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 9', 7, '2024-02-10T19:53:12.759934+01:00'::timestamptz, 140, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 9', 7, datetime.datetime(2024, 2, 10, 19, 53, 12, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 140, False); alias=default
DEBUG 2024-03-02 23:53:52,933 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 49', 11, 'Player 48', 6, '2023-11-18T18:58:00.759934+01:00'::timestamptz, 410, false) RETURNING "pong_gamedata"."id"; args=('Player 49', 11, 'Player 48', 6, datetime.datetime(2023, 11, 18, 18, 58, 0, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 410, False); alias=default
DEBUG 2024-03-02 23:53:52,934 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 47', 11, 'Player 23', 4, '2023-11-29T08:39:13.759934+01:00'::timestamptz, 59, false) RETURNING "pong_gamedata"."id"; args=('Player 47', 11, 'Player 23', 4, datetime.datetime(2023, 11, 29, 8, 39, 13, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 59, False); alias=default
DEBUG 2024-03-02 23:53:52,936 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 9, 'Player 6', 11, '2024-01-05T10:11:55.759934+01:00'::timestamptz, 991, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 9, 'Player 6', 11, datetime.datetime(2024, 1, 5, 10, 11, 55, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 991, False); alias=default
DEBUG 2024-03-02 23:53:52,937 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 3, 'Player 52', 11, '2023-12-22T22:52:16.759934+01:00'::timestamptz, 325, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 3, 'Player 52', 11, datetime.datetime(2023, 12, 22, 22, 52, 16, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 325, False); alias=default
DEBUG 2024-03-02 23:53:52,939 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 6, 'Player 40', 11, '2024-01-02T20:55:17.759934+01:00'::timestamptz, 367, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 6, 'Player 40', 11, datetime.datetime(2024, 1, 2, 20, 55, 17, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 367, False); alias=default
DEBUG 2024-03-02 23:53:52,940 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 50', 10, '2024-01-07T02:15:49.759934+01:00'::timestamptz, 450, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 50', 10, datetime.datetime(2024, 1, 7, 2, 15, 49, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 450, False); alias=default
DEBUG 2024-03-02 23:53:52,941 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 48', 11, 'Player 30', 6, '2023-12-05T19:52:15.759934+01:00'::timestamptz, 342, false) RETURNING "pong_gamedata"."id"; args=('Player 48', 11, 'Player 30', 6, datetime.datetime(2023, 12, 5, 19, 52, 15, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 342, False); alias=default
DEBUG 2024-03-02 23:53:52,943 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 48', 11, 'Player 59', 7, '2023-12-17T19:01:15.759934+01:00'::timestamptz, 954, false) RETURNING "pong_gamedata"."id"; args=('Player 48', 11, 'Player 59', 7, datetime.datetime(2023, 12, 17, 19, 1, 15, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 954, False); alias=default
DEBUG 2024-03-02 23:53:52,944 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 11, 'Player 10', 8, '2024-01-01T10:07:06.759934+01:00'::timestamptz, 390, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 11, 'Player 10', 8, datetime.datetime(2024, 1, 1, 10, 7, 6, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 390, False); alias=default
DEBUG 2024-03-02 23:53:52,945 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 1, 'Player 1', 11, '2024-02-24T04:30:19.759934+01:00'::timestamptz, 553, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 1, 'Player 1', 11, datetime.datetime(2024, 2, 24, 4, 30, 19, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 553, False); alias=default
DEBUG 2024-03-02 23:53:52,947 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 8, 'Player 51', 11, '2024-03-01T20:49:43.759934+01:00'::timestamptz, 801, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 8, 'Player 51', 11, datetime.datetime(2024, 3, 1, 20, 49, 43, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 801, False); alias=default
DEBUG 2024-03-02 23:53:52,949 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 57', 0, '2024-01-02T03:57:22.759934+01:00'::timestamptz, 647, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 57', 0, datetime.datetime(2024, 1, 2, 3, 57, 22, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 647, False); alias=default
DEBUG 2024-03-02 23:53:52,950 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 11, 'Player 12', 5, '2024-02-02T05:25:04.759934+01:00'::timestamptz, 287, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 11, 'Player 12', 5, datetime.datetime(2024, 2, 2, 5, 25, 4, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 287, False); alias=default
DEBUG 2024-03-02 23:53:52,951 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 55', 5, 'Player 57', 11, '2023-11-08T19:29:24.759934+01:00'::timestamptz, 158, false) RETURNING "pong_gamedata"."id"; args=('Player 55', 5, 'Player 57', 11, datetime.datetime(2023, 11, 8, 19, 29, 24, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 158, False); alias=default
DEBUG 2024-03-02 23:53:52,953 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 51', 4, '2023-11-17T02:08:03.759934+01:00'::timestamptz, 729, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 51', 4, datetime.datetime(2023, 11, 17, 2, 8, 3, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 729, False); alias=default
DEBUG 2024-03-02 23:53:52,954 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 6', 9, '2023-11-23T14:28:15.759934+01:00'::timestamptz, 13, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 6', 9, datetime.datetime(2023, 11, 23, 14, 28, 15, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 13, False); alias=default
DEBUG 2024-03-02 23:53:52,955 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 28', 10, '2023-11-05T03:40:55.759934+01:00'::timestamptz, 11, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 28', 10, datetime.datetime(2023, 11, 5, 3, 40, 55, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 11, False); alias=default
DEBUG 2024-03-02 23:53:52,957 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 9', 1, '2024-02-24T21:25:16.759934+01:00'::timestamptz, 688, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 9', 1, datetime.datetime(2024, 2, 24, 21, 25, 16, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 688, False); alias=default
DEBUG 2024-03-02 23:53:52,958 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:53:52,959 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 1', 5, '2023-12-03T11:53:27.759934+01:00'::timestamptz, 966, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 1', 5, datetime.datetime(2023, 12, 3, 11, 53, 27, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 966, True); alias=default
DEBUG 2024-03-02 23:53:52,961 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 6', 10, '2023-12-03T11:51:29.759934+01:00'::timestamptz, 609, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 6', 10, datetime.datetime(2023, 12, 3, 11, 51, 29, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 609, True); alias=default
DEBUG 2024-03-02 23:53:52,962 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 2', 6, '2023-12-03T11:53:39.759934+01:00'::timestamptz, 708, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 2', 6, datetime.datetime(2023, 12, 3, 11, 53, 39, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 708, True); alias=default
DEBUG 2024-03-02 23:53:52,964 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2023-12-03T11:53:39.759934+01:00'::timestamptz, 978, '["Player 14", "Player 2", "Player 1", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2023, 12, 3, 11, 53, 39, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 978, <psycopg2._json.Json object at 0x7f4b6261fd10>, '0x0'); alias=default
DEBUG 2024-03-02 23:53:52,965 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 9, 'Player 6', 11, '2023-12-11T10:23:41.759934+01:00'::timestamptz, 707, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 9, 'Player 6', 11, datetime.datetime(2023, 12, 11, 10, 23, 41, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 707, True); alias=default
DEBUG 2024-03-02 23:53:52,966 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 7, 'Player 1', 11, '2023-12-11T10:24:01.759934+01:00'::timestamptz, 822, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 7, 'Player 1', 11, datetime.datetime(2023, 12, 11, 10, 24, 1, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 822, True); alias=default
DEBUG 2024-03-02 23:53:52,968 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 3, 'Player 1', 11, '2023-12-11T10:26:38.759934+01:00'::timestamptz, 554, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 3, 'Player 1', 11, datetime.datetime(2023, 12, 11, 10, 26, 38, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 554, True); alias=default
DEBUG 2024-03-02 23:53:52,969 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2023-12-11T10:26:38.759934+01:00'::timestamptz, 979, '["Player 1", "Player 6", "Player 8", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2023, 12, 11, 10, 26, 38, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 979, <psycopg2._json.Json object at 0x7f4b625c1b20>, '0x0'); alias=default
DEBUG 2024-03-02 23:53:52,971 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 10, 'Player 12', 11, '2023-11-20T20:25:31.759934+01:00'::timestamptz, 195, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 10, 'Player 12', 11, datetime.datetime(2023, 11, 20, 20, 25, 31, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 195, True); alias=default
DEBUG 2024-03-02 23:53:52,973 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 3', 5, '2023-11-20T20:25:44.759934+01:00'::timestamptz, 762, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 3', 5, datetime.datetime(2023, 11, 20, 20, 25, 44, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 762, True); alias=default
DEBUG 2024-03-02 23:53:52,974 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 2, 'Player 15', 11, '2023-11-20T20:27:55.759934+01:00'::timestamptz, 246, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 2, 'Player 15', 11, datetime.datetime(2023, 11, 20, 20, 27, 55, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 246, True); alias=default
DEBUG 2024-03-02 23:53:52,975 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2023-11-20T20:27:55.759934+01:00'::timestamptz, 893, '["Player 15", "Player 12", "Player 2", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2023, 11, 20, 20, 27, 55, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 893, <psycopg2._json.Json object at 0x7f4b62609250>, '0x0'); alias=default
DEBUG 2024-03-02 23:53:52,976 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 16', 5, '2024-01-03T14:51:29.759934+01:00'::timestamptz, 526, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 16', 5, datetime.datetime(2024, 1, 3, 14, 51, 29, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 526, True); alias=default
DEBUG 2024-03-02 23:53:52,978 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 2, 'Player 8', 11, '2024-01-03T14:54:54.759934+01:00'::timestamptz, 918, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 2, 'Player 8', 11, datetime.datetime(2024, 1, 3, 14, 54, 54, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 918, True); alias=default
DEBUG 2024-03-02 23:53:52,979 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 10, 'Player 8', 11, '2024-01-03T14:56:14.759934+01:00'::timestamptz, 103, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 10, 'Player 8', 11, datetime.datetime(2024, 1, 3, 14, 56, 14, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 103, True); alias=default
DEBUG 2024-03-02 23:53:52,981 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2024-01-03T14:56:14.759934+01:00'::timestamptz, 998, '["Player 8", "Player 12", "Player 16", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2024, 1, 3, 14, 56, 14, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 998, <psycopg2._json.Json object at 0x7f4b625c25d0>, '0x0'); alias=default
DEBUG 2024-03-02 23:53:52,982 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 8, 'Player 16', 11, '2023-12-09T02:04:11.759934+01:00'::timestamptz, 797, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 8, 'Player 16', 11, datetime.datetime(2023, 12, 9, 2, 4, 11, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 797, True); alias=default
DEBUG 2024-03-02 23:53:52,984 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 7, 'Player 10', 11, '2023-12-09T02:04:38.759934+01:00'::timestamptz, 803, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 7, 'Player 10', 11, datetime.datetime(2023, 12, 9, 2, 4, 38, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 803, True); alias=default
DEBUG 2024-03-02 23:53:52,985 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 10', 1, '2023-12-09T02:04:43.759934+01:00'::timestamptz, 411, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 10', 1, datetime.datetime(2023, 12, 9, 2, 4, 43, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 411, True); alias=default
DEBUG 2024-03-02 23:53:52,987 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2023-12-09T02:04:43.759934+01:00'::timestamptz, 829, '["Player 16", "Player 10", "Player 1", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2023, 12, 9, 2, 4, 43, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 829, <psycopg2._json.Json object at 0x7f4b6261eba0>, '0x0'); alias=default
DEBUG 2024-03-02 23:53:52,989 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 16', 0, '2023-12-21T16:09:59.759934+01:00'::timestamptz, 593, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 16', 0, datetime.datetime(2023, 12, 21, 16, 9, 59, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 593, True); alias=default
DEBUG 2024-03-02 23:53:52,990 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 4, 'Player 9', 11, '2023-12-21T16:10:22.759934+01:00'::timestamptz, 322, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 4, 'Player 9', 11, datetime.datetime(2023, 12, 21, 16, 10, 22, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 322, True); alias=default
DEBUG 2024-03-02 23:53:52,992 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 6, 'Player 9', 11, '2023-12-21T16:12:32.759934+01:00'::timestamptz, 984, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 6, 'Player 9', 11, datetime.datetime(2023, 12, 21, 16, 12, 32, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 984, True); alias=default
DEBUG 2024-03-02 23:53:52,993 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2023-12-21T16:12:32.759934+01:00'::timestamptz, 746, '["Player 9", "Player 17", "Player 16", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2023, 12, 21, 16, 12, 32, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 746, <psycopg2._json.Json object at 0x7f4b6261d3d0>, '0x0'); alias=default
DEBUG 2024-03-02 23:53:52,995 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 10', 0, '2023-11-16T11:48:36.759934+01:00'::timestamptz, 558, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 10', 0, datetime.datetime(2023, 11, 16, 11, 48, 36, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 558, True); alias=default
DEBUG 2024-03-02 23:53:52,996 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 1', 8, '2023-11-16T11:48:47.759934+01:00'::timestamptz, 615, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 1', 8, datetime.datetime(2023, 11, 16, 11, 48, 47, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 615, True); alias=default
DEBUG 2024-03-02 23:53:52,997 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 4', 10, '2023-11-16T11:52:37.759934+01:00'::timestamptz, 510, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 4', 10, datetime.datetime(2023, 11, 16, 11, 52, 37, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 510, True); alias=default
DEBUG 2024-03-02 23:53:52,999 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2023-11-16T11:52:37.759934+01:00'::timestamptz, 845, '["Player 14", "Player 4", "Player 10", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2023, 11, 16, 11, 52, 37, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 845, <psycopg2._json.Json object at 0x7f4b62436e40>, '0x0'); alias=default
DEBUG 2024-03-02 23:53:53,000 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 6', 1, '2024-02-27T08:34:19.759934+01:00'::timestamptz, 111, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 6', 1, datetime.datetime(2024, 2, 27, 8, 34, 19, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 111, True); alias=default
DEBUG 2024-03-02 23:53:53,001 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 8, 'Player 3', 11, '2024-02-27T08:21:19.759934+01:00'::timestamptz, 153, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 8, 'Player 3', 11, datetime.datetime(2024, 2, 27, 8, 21, 19, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 153, True); alias=default
DEBUG 2024-03-02 23:53:53,003 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 3', 7, '2024-02-27T08:34:28.759934+01:00'::timestamptz, 122, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 3', 7, datetime.datetime(2024, 2, 27, 8, 34, 28, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 122, True); alias=default
DEBUG 2024-03-02 23:53:53,004 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2024-02-27T08:34:28.759934+01:00'::timestamptz, 942, '["Player 16", "Player 3", "Player 6", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2024, 2, 27, 8, 34, 28, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 942, <psycopg2._json.Json object at 0x7f4b6260b8c0>, '0x0'); alias=default
DEBUG 2024-03-02 23:53:53,005 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 5', 8, '2023-12-26T01:58:10.759934+01:00'::timestamptz, 686, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 5', 8, datetime.datetime(2023, 12, 26, 1, 58, 10, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 686, True); alias=default
DEBUG 2024-03-02 23:53:53,007 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 13', 10, '2023-12-26T02:00:55.759934+01:00'::timestamptz, 986, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 13', 10, datetime.datetime(2023, 12, 26, 2, 0, 55, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 986, True); alias=default
DEBUG 2024-03-02 23:53:53,008 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 10, 'Player 6', 11, '2023-12-26T02:01:00.759934+01:00'::timestamptz, 414, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 10, 'Player 6', 11, datetime.datetime(2023, 12, 26, 2, 1, 0, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 414, True); alias=default
DEBUG 2024-03-02 23:53:53,009 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2023-12-26T02:01:00.759934+01:00'::timestamptz, 991, '["Player 6", "Player 4", "Player 5", "Player 13"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2023, 12, 26, 2, 1, 0, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 991, <psycopg2._json.Json object at 0x7f4b6261fe00>, '0x0'); alias=default
DEBUG 2024-03-02 23:53:53,011 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 10', 8, '2024-02-13T14:40:32.759934+01:00'::timestamptz, 397, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 10', 8, datetime.datetime(2024, 2, 13, 14, 40, 32, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 397, True); alias=default
DEBUG 2024-03-02 23:53:53,012 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 5, 'Player 19', 11, '2024-02-13T14:40:44.759934+01:00'::timestamptz, 280, true) RETURNING "pong_gamedata"."id"; args=('Player 18', 5, 'Player 19', 11, datetime.datetime(2024, 2, 13, 14, 40, 44, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 280, True); alias=default
DEBUG 2024-03-02 23:53:53,014 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 19', 2, '2024-02-13T14:48:44.759934+01:00'::timestamptz, 818, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 19', 2, datetime.datetime(2024, 2, 13, 14, 48, 44, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 818, True); alias=default
DEBUG 2024-03-02 23:53:53,015 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2024-02-13T14:48:44.759934+01:00'::timestamptz, 889, '["Player 13", "Player 19", "Player 10", "Player 18"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2024, 2, 13, 14, 48, 44, 759934, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 889, <psycopg2._json.Json object at 0x7f4b62437980>, '0x0'); alias=default
DEBUG 2024-03-02 23:53:53,016 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,017 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,018 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-02 23:53:53,019 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:53,019 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-02 23:53:53,020 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:53,021 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-02 23:53:53,022 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-02 23:53:53,024 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-02 23:53:53,025 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-02 23:53:53,026 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:53,026 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-02 23:53:53,027 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:53,028 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-02 23:53:53,030 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,031 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,032 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,033 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,034 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,035 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,036 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-02 23:53:53,036 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:53,037 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-02 23:53:53,038 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:53,039 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-02 23:53:53,040 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-02 23:53:53,041 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:53,041 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-02 23:53:53,042 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:53,043 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-02 23:53:53,045 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,046 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,047 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,049 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,050 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,051 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,052 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-02 23:53:53,052 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:53,052 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-02 23:53:53,053 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:53,054 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-02 23:53:53,055 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-02 23:53:53,056 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:53,057 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-02 23:53:53,057 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:53,058 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-02 23:53:53,059 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,060 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,061 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,062 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,063 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,064 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,065 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-02 23:53:53,066 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:53,066 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-02 23:53:53,067 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:53,068 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-02 23:53:53,069 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-02 23:53:53,072 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-02 23:53:53,072 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:53:53,073 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-02 23:53:53,074 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:53:53,075 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-02 23:53:53,076 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,077 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,078 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,080 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,081 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:53:53,081 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
