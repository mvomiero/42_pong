DEBUG 2024-03-02 23:47:31,586 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,588 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,589 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,590 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,590 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-02 23:47:31,606 utils (0.016) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:47:31,607 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,607 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,609 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-02 23:47:31,611 utils (0.003) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:47:31,614 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-02 23:47:31,616 utils (0.002) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-02 23:47:31,618 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,621 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-02T23:47:31.618910+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 2, 23, 47, 31, 618910, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:47:31,622 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,622 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,625 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-02 23:47:31,627 utils (0.002) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:47:31,633 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-02 23:47:31,637 utils (0.004) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-02 23:47:31,638 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-02 23:47:31,641 utils (0.003) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:47:31,646 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-02 23:47:31,650 utils (0.004) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:47:31,651 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-02 23:47:31,654 utils (0.003) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:47:31,655 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-02 23:47:31,657 utils (0.002) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:47:31,658 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-02 23:47:31,660 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-02 23:47:31,660 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:47:31,662 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:47:31,662 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-02 23:47:31,664 utils (0.002) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-02 23:47:31,665 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-02 23:47:31,667 utils (0.003) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-02 23:47:31,668 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-02 23:47:31,670 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-02 23:47:31,671 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:47:31,672 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:47:31,673 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:47:31,674 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:47:31,674 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-02 23:47:31,678 utils (0.003) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-02 23:47:31,678 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-02 23:47:31,680 utils (0.002) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-02 23:47:31,681 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-02 23:47:31,683 utils (0.002) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-02 23:47:31,683 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-02 23:47:31,685 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-02 23:47:31,686 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:47:31,688 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:47:31,688 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:47:31,689 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:47:31,689 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-02 23:47:31,691 utils (0.002) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-02 23:47:31,692 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-02 23:47:31,694 utils (0.002) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-02 23:47:31,694 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-02 23:47:31,696 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-02 23:47:31,696 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:47:31,698 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:47:31,698 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:47:31,699 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:47:31,699 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-02 23:47:31,701 utils (0.002) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-02 23:47:31,702 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-02 23:47:31,704 utils (0.002) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-02 23:47:31,705 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,706 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,708 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-02T23:47:31.707281+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 2, 23, 47, 31, 707281, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:47:31,708 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,722 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-02 23:47:31,727 utils (0.004) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:47:31,727 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:47:31,728 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:47:31,729 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-02 23:47:31,730 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-02 23:47:31,730 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-02 23:47:31,732 utils (0.002) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-02 23:47:31,732 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-02 23:47:31,734 utils (0.002) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-02 23:47:31,735 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,737 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,739 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-02T23:47:31.738035+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 2, 23, 47, 31, 738035, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:47:31,739 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,751 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,752 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-02T23:47:31.752123+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 2, 23, 47, 31, 752123, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:47:31,758 utils (0.006) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,759 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,769 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,771 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-02T23:47:31.770275+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 2, 23, 47, 31, 770275, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:47:31,774 utils (0.003) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,775 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,783 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-02 23:47:31,784 utils (0.000) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-02 23:47:31,796 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-02 23:47:31,797 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-02 23:47:31,799 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,800 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-02T23:47:31.799370+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 2, 23, 47, 31, 799370, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:47:31,806 utils (0.006) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,807 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,815 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-02 23:47:31,816 utils (0.001) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-02 23:47:31,818 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,819 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-02T23:47:31.818562+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 2, 23, 47, 31, 818562, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:47:31,819 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,820 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,829 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-02 23:47:31,830 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-02 23:47:31,832 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,833 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-02T23:47:31.832577+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 2, 23, 47, 31, 832577, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:47:31,834 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,834 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,846 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,847 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-02T23:47:31.846769+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 2, 23, 47, 31, 846769, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:47:31,851 utils (0.004) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,852 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,862 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-02 23:47:31,863 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-02 23:47:31,864 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,865 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-02T23:47:31.864999+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 2, 23, 47, 31, 864999, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:47:31,870 utils (0.005) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,871 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,872 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,874 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-02T23:47:31.873336+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 2, 23, 47, 31, 873336, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:47:31,875 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,875 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,887 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,888 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-02T23:47:31.887554+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 2, 23, 47, 31, 887554, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:47:31,889 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,889 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,899 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-02 23:47:31,904 utils (0.004) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-02 23:47:31,905 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,906 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-02T23:47:31.906057+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 2, 23, 47, 31, 906057, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:47:31,907 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,907 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,915 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-02 23:47:31,915 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-02 23:47:31,916 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,917 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-02T23:47:31.917085+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 2, 23, 47, 31, 917085, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:47:31,919 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,920 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,929 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-02 23:47:31,930 utils (0.001) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-02 23:47:31,931 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,932 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-02T23:47:31.932165+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 2, 23, 47, 31, 932165, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:47:31,933 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,933 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,942 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,943 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-02T23:47:31.942620+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 2, 23, 47, 31, 942620, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:47:31,944 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,944 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,955 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-02 23:47:31,955 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-02 23:47:31,957 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,958 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-02T23:47:31.957505+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 2, 23, 47, 31, 957505, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:47:31,959 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,959 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,961 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-02 23:47:31,967 utils (0.006) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:47:31,969 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-02 23:47:31,975 utils (0.006) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-02 23:47:31,976 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,977 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-02T23:47:31.977151+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 2, 23, 47, 31, 977151, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:47:31,978 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,979 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:31,980 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-02 23:47:31,986 utils (0.005) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-02 23:47:31,986 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-02 23:47:31,989 utils (0.002) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-02 23:47:31,989 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-02 23:47:31,992 utils (0.002) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-02 23:47:31,993 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:31,995 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,996 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-02T23:47:31.995234+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 2, 23, 47, 31, 995234, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-02 23:47:31,997 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-02 23:47:31,998 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,013 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-02 23:47:32,013 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:32,014 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-02 23:47:32,015 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:32,015 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-02 23:47:32,018 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-02 23:47:32,019 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:32,020 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-02 23:47:32,021 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:32,022 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-02 23:47:32,024 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,025 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,026 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,055 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 12', 8, '2023-11-21T00:59:56.025586+01:00'::timestamptz, 325, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 12', 8, datetime.datetime(2023, 11, 21, 0, 59, 56, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 325, False); alias=default
DEBUG 2024-03-02 23:47:32,056 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 10', 2, '2023-11-02T02:12:45.025586+01:00'::timestamptz, 57, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 10', 2, datetime.datetime(2023, 11, 2, 2, 12, 45, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 57, False); alias=default
DEBUG 2024-03-02 23:47:32,058 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 6, 'Player 0', 11, '2023-11-08T02:19:30.025586+01:00'::timestamptz, 840, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 6, 'Player 0', 11, datetime.datetime(2023, 11, 8, 2, 19, 30, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 840, False); alias=default
DEBUG 2024-03-02 23:47:32,059 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 14', 5, '2024-01-07T21:33:55.025586+01:00'::timestamptz, 970, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 14', 5, datetime.datetime(2024, 1, 7, 21, 33, 55, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 970, False); alias=default
DEBUG 2024-03-02 23:47:32,060 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 3, 'Player 8', 11, '2024-02-11T23:44:23.025586+01:00'::timestamptz, 916, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 3, 'Player 8', 11, datetime.datetime(2024, 2, 11, 23, 44, 23, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 916, False); alias=default
DEBUG 2024-03-02 23:47:32,061 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 14', 5, '2023-11-01T10:02:13.025586+01:00'::timestamptz, 157, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 14', 5, datetime.datetime(2023, 11, 1, 10, 2, 13, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 157, False); alias=default
DEBUG 2024-03-02 23:47:32,063 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 15', 4, '2024-01-14T08:49:51.025586+01:00'::timestamptz, 411, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 15', 4, datetime.datetime(2024, 1, 14, 8, 49, 51, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 411, False); alias=default
DEBUG 2024-03-02 23:47:32,064 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 0, 'Player 8', 11, '2024-02-26T22:22:24.025586+01:00'::timestamptz, 942, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 0, 'Player 8', 11, datetime.datetime(2024, 2, 26, 22, 22, 24, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 942, False); alias=default
DEBUG 2024-03-02 23:47:32,066 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 1', 6, '2024-02-28T09:47:13.025586+01:00'::timestamptz, 548, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 1', 6, datetime.datetime(2024, 2, 28, 9, 47, 13, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 548, False); alias=default
DEBUG 2024-03-02 23:47:32,067 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 7', 2, '2023-12-24T04:57:48.025586+01:00'::timestamptz, 771, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 7', 2, datetime.datetime(2023, 12, 24, 4, 57, 48, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 771, False); alias=default
DEBUG 2024-03-02 23:47:32,068 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 15', 6, '2023-12-30T08:44:35.025586+01:00'::timestamptz, 371, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 15', 6, datetime.datetime(2023, 12, 30, 8, 44, 35, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 371, False); alias=default
DEBUG 2024-03-02 23:47:32,069 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 7, 'Player 7', 11, '2024-02-19T16:38:42.025586+01:00'::timestamptz, 57, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 7, 'Player 7', 11, datetime.datetime(2024, 2, 19, 16, 38, 42, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 57, False); alias=default
DEBUG 2024-03-02 23:47:32,071 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 2', 4, '2024-03-01T08:29:18.025586+01:00'::timestamptz, 205, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 2', 4, datetime.datetime(2024, 3, 1, 8, 29, 18, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 205, False); alias=default
DEBUG 2024-03-02 23:47:32,072 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 17', 1, '2023-12-04T23:58:33.025586+01:00'::timestamptz, 716, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 17', 1, datetime.datetime(2023, 12, 4, 23, 58, 33, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 716, False); alias=default
DEBUG 2024-03-02 23:47:32,074 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 13', 6, '2024-02-22T12:50:08.025586+01:00'::timestamptz, 25, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 13', 6, datetime.datetime(2024, 2, 22, 12, 50, 8, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 25, False); alias=default
DEBUG 2024-03-02 23:47:32,075 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 7', 3, '2024-01-10T19:36:32.025586+01:00'::timestamptz, 153, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 7', 3, datetime.datetime(2024, 1, 10, 19, 36, 32, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 153, False); alias=default
DEBUG 2024-03-02 23:47:32,076 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 2', 9, '2023-12-08T14:46:40.025586+01:00'::timestamptz, 301, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 2', 9, datetime.datetime(2023, 12, 8, 14, 46, 40, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 301, False); alias=default
DEBUG 2024-03-02 23:47:32,078 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 0', 1, '2023-11-03T20:13:08.025586+01:00'::timestamptz, 904, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 0', 1, datetime.datetime(2023, 11, 3, 20, 13, 8, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 904, False); alias=default
DEBUG 2024-03-02 23:47:32,079 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 7, 'Player 22', 11, '2024-01-18T07:54:00.025586+01:00'::timestamptz, 36, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 7, 'Player 22', 11, datetime.datetime(2024, 1, 18, 7, 54, 0, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 36, False); alias=default
DEBUG 2024-03-02 23:47:32,080 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 2, 'Player 5', 11, '2023-11-29T07:33:19.025586+01:00'::timestamptz, 692, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 2, 'Player 5', 11, datetime.datetime(2023, 11, 29, 7, 33, 19, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 692, False); alias=default
DEBUG 2024-03-02 23:47:32,082 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 8, 'Player 7', 11, '2023-11-22T13:28:59.025586+01:00'::timestamptz, 220, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 8, 'Player 7', 11, datetime.datetime(2023, 11, 22, 13, 28, 59, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 220, False); alias=default
DEBUG 2024-03-02 23:47:32,083 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 3, 'Player 18', 11, '2024-01-01T09:01:36.025586+01:00'::timestamptz, 128, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 3, 'Player 18', 11, datetime.datetime(2024, 1, 1, 9, 1, 36, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 128, False); alias=default
DEBUG 2024-03-02 23:47:32,084 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 8, 'Player 17', 11, '2023-11-10T19:39:15.025586+01:00'::timestamptz, 228, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 8, 'Player 17', 11, datetime.datetime(2023, 11, 10, 19, 39, 15, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 228, False); alias=default
DEBUG 2024-03-02 23:47:32,086 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 7', 10, '2023-12-06T17:12:50.025586+01:00'::timestamptz, 400, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 7', 10, datetime.datetime(2023, 12, 6, 17, 12, 50, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 400, False); alias=default
DEBUG 2024-03-02 23:47:32,087 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 2, 'Player 20', 11, '2024-02-17T22:38:27.025586+01:00'::timestamptz, 819, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 2, 'Player 20', 11, datetime.datetime(2024, 2, 17, 22, 38, 27, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 819, False); alias=default
DEBUG 2024-03-02 23:47:32,088 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 23', 0, '2023-12-14T14:53:09.025586+01:00'::timestamptz, 545, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 23', 0, datetime.datetime(2023, 12, 14, 14, 53, 9, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 545, False); alias=default
DEBUG 2024-03-02 23:47:32,090 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 2, 'Player 9', 11, '2023-12-25T22:53:53.025586+01:00'::timestamptz, 617, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 2, 'Player 9', 11, datetime.datetime(2023, 12, 25, 22, 53, 53, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 617, False); alias=default
DEBUG 2024-03-02 23:47:32,091 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 4', 6, '2023-11-21T04:46:42.025586+01:00'::timestamptz, 481, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 4', 6, datetime.datetime(2023, 11, 21, 4, 46, 42, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 481, False); alias=default
DEBUG 2024-03-02 23:47:32,092 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 0, 'Player 22', 11, '2023-11-02T02:45:32.025586+01:00'::timestamptz, 971, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 0, 'Player 22', 11, datetime.datetime(2023, 11, 2, 2, 45, 32, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 971, False); alias=default
DEBUG 2024-03-02 23:47:32,093 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 10, 'Player 28', 11, '2023-11-05T01:44:48.025586+01:00'::timestamptz, 232, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 10, 'Player 28', 11, datetime.datetime(2023, 11, 5, 1, 44, 48, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 232, False); alias=default
DEBUG 2024-03-02 23:47:32,094 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 8, 'Player 30', 11, '2024-02-22T09:41:07.025586+01:00'::timestamptz, 557, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 8, 'Player 30', 11, datetime.datetime(2024, 2, 22, 9, 41, 7, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 557, False); alias=default
DEBUG 2024-03-02 23:47:32,095 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 0, 'Player 18', 11, '2024-02-15T19:33:44.025586+01:00'::timestamptz, 29, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 0, 'Player 18', 11, datetime.datetime(2024, 2, 15, 19, 33, 44, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 29, False); alias=default
DEBUG 2024-03-02 23:47:32,096 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 11, 'Player 5', 9, '2023-11-19T14:30:47.025586+01:00'::timestamptz, 478, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 11, 'Player 5', 9, datetime.datetime(2023, 11, 19, 14, 30, 47, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 478, False); alias=default
DEBUG 2024-03-02 23:47:32,098 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 11, 'Player 10', 1, '2024-02-26T20:29:10.025586+01:00'::timestamptz, 276, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 11, 'Player 10', 1, datetime.datetime(2024, 2, 26, 20, 29, 10, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 276, False); alias=default
DEBUG 2024-03-02 23:47:32,099 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 7, 'Player 9', 11, '2024-02-15T14:12:03.025586+01:00'::timestamptz, 962, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 7, 'Player 9', 11, datetime.datetime(2024, 2, 15, 14, 12, 3, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 962, False); alias=default
DEBUG 2024-03-02 23:47:32,100 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 11, 'Player 19', 5, '2024-01-05T08:03:32.025586+01:00'::timestamptz, 618, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 11, 'Player 19', 5, datetime.datetime(2024, 1, 5, 8, 3, 32, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 618, False); alias=default
DEBUG 2024-03-02 23:47:32,101 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 7, 'Player 33', 11, '2024-02-14T12:44:26.025586+01:00'::timestamptz, 683, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 7, 'Player 33', 11, datetime.datetime(2024, 2, 14, 12, 44, 26, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 683, False); alias=default
DEBUG 2024-03-02 23:47:32,103 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 0, 'Player 28', 11, '2024-01-20T02:55:45.025586+01:00'::timestamptz, 929, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 0, 'Player 28', 11, datetime.datetime(2024, 1, 20, 2, 55, 45, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 929, False); alias=default
DEBUG 2024-03-02 23:47:32,104 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 27', 4, '2023-11-09T13:59:42.025586+01:00'::timestamptz, 27, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 27', 4, datetime.datetime(2023, 11, 9, 13, 59, 42, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 27, False); alias=default
DEBUG 2024-03-02 23:47:32,105 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 9, 'Player 10', 11, '2023-12-11T00:49:18.025586+01:00'::timestamptz, 244, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 9, 'Player 10', 11, datetime.datetime(2023, 12, 11, 0, 49, 18, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 244, False); alias=default
DEBUG 2024-03-02 23:47:32,106 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 29', 5, '2023-12-09T16:07:31.025586+01:00'::timestamptz, 7, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 29', 5, datetime.datetime(2023, 12, 9, 16, 7, 31, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 7, False); alias=default
DEBUG 2024-03-02 23:47:32,107 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 4, 'Player 24', 11, '2024-01-23T14:58:35.025586+01:00'::timestamptz, 966, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 4, 'Player 24', 11, datetime.datetime(2024, 1, 23, 14, 58, 35, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 966, False); alias=default
DEBUG 2024-03-02 23:47:32,109 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 1, 'Player 28', 11, '2024-02-03T12:06:45.025586+01:00'::timestamptz, 307, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 1, 'Player 28', 11, datetime.datetime(2024, 2, 3, 12, 6, 45, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 307, False); alias=default
DEBUG 2024-03-02 23:47:32,110 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 11, 'Player 20', 1, '2023-12-24T07:47:27.025586+01:00'::timestamptz, 842, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 11, 'Player 20', 1, datetime.datetime(2023, 12, 24, 7, 47, 27, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 842, False); alias=default
DEBUG 2024-03-02 23:47:32,111 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 0, 'Player 16', 11, '2024-02-16T21:01:52.025586+01:00'::timestamptz, 947, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 0, 'Player 16', 11, datetime.datetime(2024, 2, 16, 21, 1, 52, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 947, False); alias=default
DEBUG 2024-03-02 23:47:32,112 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 6, 'Player 25', 11, '2023-12-29T20:20:03.025586+01:00'::timestamptz, 564, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 6, 'Player 25', 11, datetime.datetime(2023, 12, 29, 20, 20, 3, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 564, False); alias=default
DEBUG 2024-03-02 23:47:32,114 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 37', 3, '2024-01-03T05:46:17.025586+01:00'::timestamptz, 107, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 37', 3, datetime.datetime(2024, 1, 3, 5, 46, 17, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 107, False); alias=default
DEBUG 2024-03-02 23:47:32,115 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 38', 8, '2024-03-01T07:57:03.025586+01:00'::timestamptz, 385, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 38', 8, datetime.datetime(2024, 3, 1, 7, 57, 3, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 385, False); alias=default
DEBUG 2024-03-02 23:47:32,116 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 2, 'Player 36', 11, '2024-01-25T05:16:06.025586+01:00'::timestamptz, 70, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 2, 'Player 36', 11, datetime.datetime(2024, 1, 25, 5, 16, 6, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 70, False); alias=default
DEBUG 2024-03-02 23:47:32,118 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 10, 'Player 27', 11, '2024-01-12T03:29:38.025586+01:00'::timestamptz, 820, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 10, 'Player 27', 11, datetime.datetime(2024, 1, 12, 3, 29, 38, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 820, False); alias=default
DEBUG 2024-03-02 23:47:32,119 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 2, 'Player 35', 11, '2023-11-05T23:03:07.025586+01:00'::timestamptz, 371, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 2, 'Player 35', 11, datetime.datetime(2023, 11, 5, 23, 3, 7, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 371, False); alias=default
DEBUG 2024-03-02 23:47:32,120 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 4, 'Player 31', 11, '2024-02-05T21:30:10.025586+01:00'::timestamptz, 447, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 4, 'Player 31', 11, datetime.datetime(2024, 2, 5, 21, 30, 10, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 447, False); alias=default
DEBUG 2024-03-02 23:47:32,121 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 40', 1, '2024-02-17T00:06:52.025586+01:00'::timestamptz, 932, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 40', 1, datetime.datetime(2024, 2, 17, 0, 6, 52, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 932, False); alias=default
DEBUG 2024-03-02 23:47:32,123 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 40', 2, '2024-02-18T15:55:05.025586+01:00'::timestamptz, 611, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 40', 2, datetime.datetime(2024, 2, 18, 15, 55, 5, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 611, False); alias=default
DEBUG 2024-03-02 23:47:32,124 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 21', 5, '2024-02-04T09:13:28.025586+01:00'::timestamptz, 864, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 21', 5, datetime.datetime(2024, 2, 4, 9, 13, 28, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 864, False); alias=default
DEBUG 2024-03-02 23:47:32,125 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 8', 6, '2024-02-10T04:02:05.025586+01:00'::timestamptz, 326, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 8', 6, datetime.datetime(2024, 2, 10, 4, 2, 5, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 326, False); alias=default
DEBUG 2024-03-02 23:47:32,126 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 2, 'Player 41', 11, '2024-01-27T07:31:46.025586+01:00'::timestamptz, 593, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 2, 'Player 41', 11, datetime.datetime(2024, 1, 27, 7, 31, 46, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 593, False); alias=default
DEBUG 2024-03-02 23:47:32,128 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 5, 'Player 0', 11, '2023-12-18T10:45:56.025586+01:00'::timestamptz, 475, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 5, 'Player 0', 11, datetime.datetime(2023, 12, 18, 10, 45, 56, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 475, False); alias=default
DEBUG 2024-03-02 23:47:32,129 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 4, 'Player 11', 11, '2023-12-20T01:39:53.025586+01:00'::timestamptz, 585, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 4, 'Player 11', 11, datetime.datetime(2023, 12, 20, 1, 39, 53, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 585, False); alias=default
DEBUG 2024-03-02 23:47:32,130 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 11, 'Player 31', 7, '2024-01-20T04:47:10.025586+01:00'::timestamptz, 263, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 11, 'Player 31', 7, datetime.datetime(2024, 1, 20, 4, 47, 10, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 263, False); alias=default
DEBUG 2024-03-02 23:47:32,131 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 2, 'Player 16', 11, '2024-01-28T16:54:39.025586+01:00'::timestamptz, 345, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 2, 'Player 16', 11, datetime.datetime(2024, 1, 28, 16, 54, 39, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 345, False); alias=default
DEBUG 2024-03-02 23:47:32,132 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 2, 'Player 26', 11, '2023-11-24T07:46:25.025586+01:00'::timestamptz, 825, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 2, 'Player 26', 11, datetime.datetime(2023, 11, 24, 7, 46, 25, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 825, False); alias=default
DEBUG 2024-03-02 23:47:32,134 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 0', 5, '2023-12-04T18:10:58.025586+01:00'::timestamptz, 140, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 0', 5, datetime.datetime(2023, 12, 4, 18, 10, 58, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 140, False); alias=default
DEBUG 2024-03-02 23:47:32,135 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 7, 'Player 40', 11, '2024-01-08T12:44:39.025586+01:00'::timestamptz, 787, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 7, 'Player 40', 11, datetime.datetime(2024, 1, 8, 12, 44, 39, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 787, False); alias=default
DEBUG 2024-03-02 23:47:32,136 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 8, 'Player 37', 11, '2024-01-29T08:37:08.025586+01:00'::timestamptz, 165, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 8, 'Player 37', 11, datetime.datetime(2024, 1, 29, 8, 37, 8, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 165, False); alias=default
DEBUG 2024-03-02 23:47:32,138 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 9, 'Player 11', 11, '2024-01-10T10:18:00.025586+01:00'::timestamptz, 856, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 9, 'Player 11', 11, datetime.datetime(2024, 1, 10, 10, 18, 0, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 856, False); alias=default
DEBUG 2024-03-02 23:47:32,140 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 3, 'Player 12', 11, '2024-02-20T08:21:25.025586+01:00'::timestamptz, 815, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 3, 'Player 12', 11, datetime.datetime(2024, 2, 20, 8, 21, 25, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 815, False); alias=default
DEBUG 2024-03-02 23:47:32,142 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 9', 1, '2023-12-01T01:45:50.025586+01:00'::timestamptz, 938, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 9', 1, datetime.datetime(2023, 12, 1, 1, 45, 50, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 938, False); alias=default
DEBUG 2024-03-02 23:47:32,143 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 6, 'Player 1', 11, '2024-02-23T06:32:26.025586+01:00'::timestamptz, 705, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 6, 'Player 1', 11, datetime.datetime(2024, 2, 23, 6, 32, 26, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 705, False); alias=default
DEBUG 2024-03-02 23:47:32,145 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 9, 'Player 45', 11, '2024-01-29T00:49:39.025586+01:00'::timestamptz, 687, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 9, 'Player 45', 11, datetime.datetime(2024, 1, 29, 0, 49, 39, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 687, False); alias=default
DEBUG 2024-03-02 23:47:32,146 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 11, 'Player 47', 4, '2023-12-30T03:38:03.025586+01:00'::timestamptz, 318, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 11, 'Player 47', 4, datetime.datetime(2023, 12, 30, 3, 38, 3, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 318, False); alias=default
DEBUG 2024-03-02 23:47:32,148 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 50', 7, 'Player 27', 11, '2024-01-17T15:14:36.025586+01:00'::timestamptz, 395, false) RETURNING "pong_gamedata"."id"; args=('Player 50', 7, 'Player 27', 11, datetime.datetime(2024, 1, 17, 15, 14, 36, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 395, False); alias=default
DEBUG 2024-03-02 23:47:32,153 utils (0.004) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 51', 4, 'Player 19', 11, '2024-01-22T22:53:20.025586+01:00'::timestamptz, 456, false) RETURNING "pong_gamedata"."id"; args=('Player 51', 4, 'Player 19', 11, datetime.datetime(2024, 1, 22, 22, 53, 20, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 456, False); alias=default
DEBUG 2024-03-02 23:47:32,161 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 5, 'Player 43', 11, '2023-11-10T23:26:29.025586+01:00'::timestamptz, 753, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 5, 'Player 43', 11, datetime.datetime(2023, 11, 10, 23, 26, 29, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 753, False); alias=default
DEBUG 2024-03-02 23:47:32,163 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 40', 4, '2023-12-21T13:38:47.025586+01:00'::timestamptz, 876, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 40', 4, datetime.datetime(2023, 12, 21, 13, 38, 47, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 876, False); alias=default
DEBUG 2024-03-02 23:47:32,165 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 3', 0, '2023-12-19T07:47:02.025586+01:00'::timestamptz, 733, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 3', 0, datetime.datetime(2023, 12, 19, 7, 47, 2, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 733, False); alias=default
DEBUG 2024-03-02 23:47:32,174 utils (0.008) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 48', 11, 'Player 16', 4, '2024-02-15T13:58:56.025586+01:00'::timestamptz, 589, false) RETURNING "pong_gamedata"."id"; args=('Player 48', 11, 'Player 16', 4, datetime.datetime(2024, 2, 15, 13, 58, 56, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 589, False); alias=default
DEBUG 2024-03-02 23:47:32,176 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 11, 'Player 22', 7, '2023-11-17T00:04:38.025586+01:00'::timestamptz, 741, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 11, 'Player 22', 7, datetime.datetime(2023, 11, 17, 0, 4, 38, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 741, False); alias=default
DEBUG 2024-03-02 23:47:32,178 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 27', 4, '2023-12-10T10:30:43.025586+01:00'::timestamptz, 736, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 27', 4, datetime.datetime(2023, 12, 10, 10, 30, 43, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 736, False); alias=default
DEBUG 2024-03-02 23:47:32,180 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 51', 7, 'Player 36', 11, '2024-02-17T14:00:38.025586+01:00'::timestamptz, 513, false) RETURNING "pong_gamedata"."id"; args=('Player 51', 7, 'Player 36', 11, datetime.datetime(2024, 2, 17, 14, 0, 38, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 513, False); alias=default
DEBUG 2024-03-02 23:47:32,181 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 11, 'Player 43', 10, '2023-12-07T15:08:41.025586+01:00'::timestamptz, 782, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 11, 'Player 43', 10, datetime.datetime(2023, 12, 7, 15, 8, 41, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 782, False); alias=default
DEBUG 2024-03-02 23:47:32,183 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 5, 'Player 42', 11, '2023-12-12T10:37:45.025586+01:00'::timestamptz, 482, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 5, 'Player 42', 11, datetime.datetime(2023, 12, 12, 10, 37, 45, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 482, False); alias=default
DEBUG 2024-03-02 23:47:32,184 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 11, 'Player 52', 5, '2024-02-16T23:26:04.025586+01:00'::timestamptz, 901, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 11, 'Player 52', 5, datetime.datetime(2024, 2, 16, 23, 26, 4, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 901, False); alias=default
DEBUG 2024-03-02 23:47:32,185 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 48', 7, '2023-12-21T18:09:00.025586+01:00'::timestamptz, 744, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 48', 7, datetime.datetime(2023, 12, 21, 18, 9, 0, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 744, False); alias=default
DEBUG 2024-03-02 23:47:32,187 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 2, 'Player 27', 11, '2024-02-06T04:30:23.025586+01:00'::timestamptz, 976, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 2, 'Player 27', 11, datetime.datetime(2024, 2, 6, 4, 30, 23, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 976, False); alias=default
DEBUG 2024-03-02 23:47:32,188 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 50', 2, 'Player 2', 11, '2024-01-29T11:11:55.025586+01:00'::timestamptz, 221, false) RETURNING "pong_gamedata"."id"; args=('Player 50', 2, 'Player 2', 11, datetime.datetime(2024, 1, 29, 11, 11, 55, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 221, False); alias=default
DEBUG 2024-03-02 23:47:32,190 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 50', 3, 'Player 52', 11, '2024-02-26T08:17:46.025586+01:00'::timestamptz, 143, false) RETURNING "pong_gamedata"."id"; args=('Player 50', 3, 'Player 52', 11, datetime.datetime(2024, 2, 26, 8, 17, 46, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 143, False); alias=default
DEBUG 2024-03-02 23:47:32,192 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 47', 4, '2024-02-18T08:11:47.025586+01:00'::timestamptz, 695, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 47', 4, datetime.datetime(2024, 2, 18, 8, 11, 47, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 695, False); alias=default
DEBUG 2024-03-02 23:47:32,193 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 9, 'Player 50', 11, '2023-11-13T15:14:24.025586+01:00'::timestamptz, 754, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 9, 'Player 50', 11, datetime.datetime(2023, 11, 13, 15, 14, 24, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 754, False); alias=default
DEBUG 2024-03-02 23:47:32,195 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 1, 'Player 45', 11, '2024-02-25T21:18:31.025586+01:00'::timestamptz, 800, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 1, 'Player 45', 11, datetime.datetime(2024, 2, 25, 21, 18, 31, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 800, False); alias=default
DEBUG 2024-03-02 23:47:32,196 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 10, 'Player 52', 11, '2023-12-15T08:18:24.025586+01:00'::timestamptz, 820, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 10, 'Player 52', 11, datetime.datetime(2023, 12, 15, 8, 18, 24, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 820, False); alias=default
DEBUG 2024-03-02 23:47:32,198 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 0, 'Player 7', 11, '2024-01-06T00:31:58.025586+01:00'::timestamptz, 450, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 0, 'Player 7', 11, datetime.datetime(2024, 1, 6, 0, 31, 58, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 450, False); alias=default
DEBUG 2024-03-02 23:47:32,200 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 1, 'Player 41', 11, '2023-12-14T16:47:43.025586+01:00'::timestamptz, 49, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 1, 'Player 41', 11, datetime.datetime(2023, 12, 14, 16, 47, 43, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 49, False); alias=default
DEBUG 2024-03-02 23:47:32,202 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 61', 11, 'Player 2', 10, '2024-01-06T09:40:28.025586+01:00'::timestamptz, 780, false) RETURNING "pong_gamedata"."id"; args=('Player 61', 11, 'Player 2', 10, datetime.datetime(2024, 1, 6, 9, 40, 28, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 780, False); alias=default
DEBUG 2024-03-02 23:47:32,204 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 29', 9, '2023-12-18T14:44:10.025586+01:00'::timestamptz, 24, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 29', 9, datetime.datetime(2023, 12, 18, 14, 44, 10, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 24, False); alias=default
DEBUG 2024-03-02 23:47:32,206 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 11, 'Player 47', 10, '2023-12-24T09:19:08.025586+01:00'::timestamptz, 845, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 11, 'Player 47', 10, datetime.datetime(2023, 12, 24, 9, 19, 8, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 845, False); alias=default
DEBUG 2024-03-02 23:47:32,208 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 50', 3, '2024-01-10T03:12:22.025586+01:00'::timestamptz, 843, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 50', 3, datetime.datetime(2024, 1, 10, 3, 12, 22, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 843, False); alias=default
DEBUG 2024-03-02 23:47:32,210 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 7, 'Player 58', 11, '2024-01-27T04:07:48.025586+01:00'::timestamptz, 237, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 7, 'Player 58', 11, datetime.datetime(2024, 1, 27, 4, 7, 48, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 237, False); alias=default
DEBUG 2024-03-02 23:47:32,211 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 11', 10, '2024-02-23T22:48:29.025586+01:00'::timestamptz, 828, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 11', 10, datetime.datetime(2024, 2, 23, 22, 48, 29, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 828, False); alias=default
DEBUG 2024-03-02 23:47:32,213 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 11, 'Player 40', 2, '2023-12-22T21:20:08.025586+01:00'::timestamptz, 788, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 11, 'Player 40', 2, datetime.datetime(2023, 12, 22, 21, 20, 8, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 788, False); alias=default
DEBUG 2024-03-02 23:47:32,214 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,216 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 14', 1, '2024-02-27T01:17:09.025586+01:00'::timestamptz, 156, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 14', 1, datetime.datetime(2024, 2, 27, 1, 17, 9, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 156, True); alias=default
DEBUG 2024-03-02 23:47:32,217 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 7, 'Player 8', 11, '2024-02-27T01:27:13.025586+01:00'::timestamptz, 196, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 7, 'Player 8', 11, datetime.datetime(2024, 2, 27, 1, 27, 13, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 196, True); alias=default
DEBUG 2024-03-02 23:47:32,219 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 0, 'Player 8', 11, '2024-02-27T01:30:32.025586+01:00'::timestamptz, 437, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 0, 'Player 8', 11, datetime.datetime(2024, 2, 27, 1, 30, 32, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 437, True); alias=default
DEBUG 2024-03-02 23:47:32,221 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2024-02-27T01:30:32.025586+01:00'::timestamptz, 959, '["Player 8", "Player 1", "Player 14", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2024, 2, 27, 1, 30, 32, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 959, <psycopg2._json.Json object at 0x7f2fd40fa780>, '0x0'); alias=default
DEBUG 2024-03-02 23:47:32,222 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 10', 8, '2024-01-29T19:54:21.025586+01:00'::timestamptz, 246, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 10', 8, datetime.datetime(2024, 1, 29, 19, 54, 21, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 246, True); alias=default
DEBUG 2024-03-02 23:47:32,224 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 2', 1, '2024-01-29T19:51:43.025586+01:00'::timestamptz, 98, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 2', 1, datetime.datetime(2024, 1, 29, 19, 51, 43, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 98, True); alias=default
DEBUG 2024-03-02 23:47:32,226 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 8, 'Player 9', 11, '2024-01-29T19:55:16.025586+01:00'::timestamptz, 700, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 8, 'Player 9', 11, datetime.datetime(2024, 1, 29, 19, 55, 16, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 700, True); alias=default
DEBUG 2024-03-02 23:47:32,227 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2024-01-29T19:55:16.025586+01:00'::timestamptz, 311, '["Player 9", "Player 6", "Player 10", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2024, 1, 29, 19, 55, 16, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 311, <psycopg2._json.Json object at 0x7f2fd40f8650>, '0x0'); alias=default
DEBUG 2024-03-02 23:47:32,229 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 16', 6, '2024-01-29T08:57:14.025586+01:00'::timestamptz, 484, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 16', 6, datetime.datetime(2024, 1, 29, 8, 57, 14, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 484, True); alias=default
DEBUG 2024-03-02 23:47:32,230 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 12', 8, '2024-01-29T09:04:22.025586+01:00'::timestamptz, 649, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 12', 8, datetime.datetime(2024, 1, 29, 9, 4, 22, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 649, True); alias=default
DEBUG 2024-03-02 23:47:32,232 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 5', 10, '2024-01-29T09:05:20.025586+01:00'::timestamptz, 517, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 5', 10, datetime.datetime(2024, 1, 29, 9, 5, 20, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 517, True); alias=default
DEBUG 2024-03-02 23:47:32,233 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2024-01-29T09:05:20.025586+01:00'::timestamptz, 970, '["Player 7", "Player 5", "Player 16", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2024, 1, 29, 9, 5, 20, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 970, <psycopg2._json.Json object at 0x7f2fd40fb5c0>, '0x0'); alias=default
DEBUG 2024-03-02 23:47:32,235 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 7, 'Player 1', 11, '2023-12-13T23:01:50.025586+01:00'::timestamptz, 155, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 7, 'Player 1', 11, datetime.datetime(2023, 12, 13, 23, 1, 50, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 155, True); alias=default
DEBUG 2024-03-02 23:47:32,236 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 7, 'Player 8', 11, '2023-12-13T23:10:00.025586+01:00'::timestamptz, 585, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 7, 'Player 8', 11, datetime.datetime(2023, 12, 13, 23, 10, 0, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 585, True); alias=default
DEBUG 2024-03-02 23:47:32,237 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 8', 5, '2023-12-13T23:14:11.025586+01:00'::timestamptz, 862, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 8', 5, datetime.datetime(2023, 12, 13, 23, 14, 11, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 862, True); alias=default
DEBUG 2024-03-02 23:47:32,239 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2023-12-13T23:14:11.025586+01:00'::timestamptz, 896, '["Player 1", "Player 8", "Player 13", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2023, 12, 13, 23, 14, 11, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 896, <psycopg2._json.Json object at 0x7f2fd40f8650>, '0x0'); alias=default
DEBUG 2024-03-02 23:47:32,240 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 13', 9, '2024-01-08T17:13:14.025586+01:00'::timestamptz, 639, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 13', 9, datetime.datetime(2024, 1, 8, 17, 13, 14, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 639, True); alias=default
DEBUG 2024-03-02 23:47:32,241 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 5, 'Player 5', 11, '2024-01-08T17:09:59.025586+01:00'::timestamptz, 371, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 5, 'Player 5', 11, datetime.datetime(2024, 1, 8, 17, 9, 59, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 371, True); alias=default
DEBUG 2024-03-02 23:47:32,243 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 5', 1, '2024-01-08T17:16:33.025586+01:00'::timestamptz, 822, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 5', 1, datetime.datetime(2024, 1, 8, 17, 16, 33, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 822, True); alias=default
DEBUG 2024-03-02 23:47:32,244 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2024-01-08T17:16:33.025586+01:00'::timestamptz, 838, '["Player 6", "Player 5", "Player 13", "Player 17"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2024, 1, 8, 17, 16, 33, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 838, <psycopg2._json.Json object at 0x7f2fd40fbd40>, '0x0'); alias=default
DEBUG 2024-03-02 23:47:32,245 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 5', 2, '2024-02-29T05:07:00.025586+01:00'::timestamptz, 801, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 5', 2, datetime.datetime(2024, 2, 29, 5, 7, 0, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 801, True); alias=default
DEBUG 2024-03-02 23:47:32,247 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 9, 'Player 16', 11, '2024-02-29T05:02:23.025586+01:00'::timestamptz, 581, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 9, 'Player 16', 11, datetime.datetime(2024, 2, 29, 5, 2, 23, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 581, True); alias=default
DEBUG 2024-03-02 23:47:32,248 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 16', 1, '2024-02-29T05:08:00.025586+01:00'::timestamptz, 230, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 16', 1, datetime.datetime(2024, 2, 29, 5, 8, 0, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 230, True); alias=default
DEBUG 2024-03-02 23:47:32,250 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2024-02-29T05:08:00.025586+01:00'::timestamptz, 918, '["Player 11", "Player 16", "Player 5", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2024, 2, 29, 5, 8, 0, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 918, <psycopg2._json.Json object at 0x7f2fd42e62d0>, '0x0'); alias=default
DEBUG 2024-03-02 23:47:32,251 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 18', 0, '2024-01-06T01:53:35.025586+01:00'::timestamptz, 717, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 18', 0, datetime.datetime(2024, 1, 6, 1, 53, 35, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 717, True); alias=default
DEBUG 2024-03-02 23:47:32,252 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 10, 'Player 16', 11, '2024-01-06T01:52:06.025586+01:00'::timestamptz, 598, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 10, 'Player 16', 11, datetime.datetime(2024, 1, 6, 1, 52, 6, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 598, True); alias=default
DEBUG 2024-03-02 23:47:32,253 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 16', 1, '2024-01-06T01:53:50.025586+01:00'::timestamptz, 528, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 16', 1, datetime.datetime(2024, 1, 6, 1, 53, 50, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 528, True); alias=default
DEBUG 2024-03-02 23:47:32,255 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2024-01-06T01:53:50.025586+01:00'::timestamptz, 732, '["Player 12", "Player 16", "Player 18", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2024, 1, 6, 1, 53, 50, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 732, <psycopg2._json.Json object at 0x7f2fd40f8650>, '0x0'); alias=default
DEBUG 2024-03-02 23:47:32,256 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 15', 2, '2024-02-26T13:31:04.025586+01:00'::timestamptz, 556, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 15', 2, datetime.datetime(2024, 2, 26, 13, 31, 4, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 556, True); alias=default
DEBUG 2024-03-02 23:47:32,257 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 9, 'Player 5', 11, '2024-02-26T13:25:27.025586+01:00'::timestamptz, 314, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 9, 'Player 5', 11, datetime.datetime(2024, 2, 26, 13, 25, 27, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 314, True); alias=default
DEBUG 2024-03-02 23:47:32,258 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 5', 0, '2024-02-26T13:33:23.025586+01:00'::timestamptz, 69, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 5', 0, datetime.datetime(2024, 2, 26, 13, 33, 23, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 69, True); alias=default
DEBUG 2024-03-02 23:47:32,266 utils (0.007) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2024-02-26T13:33:23.025586+01:00'::timestamptz, 790, '["Player 4", "Player 5", "Player 15", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2024, 2, 26, 13, 33, 23, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 790, <psycopg2._json.Json object at 0x7f2fd40f94f0>, '0x0'); alias=default
DEBUG 2024-03-02 23:47:32,267 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 11', 10, '2024-02-17T02:17:54.025586+01:00'::timestamptz, 438, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 11', 10, datetime.datetime(2024, 2, 17, 2, 17, 54, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 438, True); alias=default
DEBUG 2024-03-02 23:47:32,269 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 7', 7, '2024-02-17T02:21:27.025586+01:00'::timestamptz, 497, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 7', 7, datetime.datetime(2024, 2, 17, 2, 21, 27, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 497, True); alias=default
DEBUG 2024-03-02 23:47:32,271 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 1', 3, '2024-02-17T02:22:03.025586+01:00'::timestamptz, 305, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 1', 3, datetime.datetime(2024, 2, 17, 2, 22, 3, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 305, True); alias=default
DEBUG 2024-03-02 23:47:32,272 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2024-02-17T02:22:03.025586+01:00'::timestamptz, 687, '["Player 12", "Player 1", "Player 11", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2024, 2, 17, 2, 22, 3, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 687, <psycopg2._json.Json object at 0x7f2fd416a750>, '0x0'); alias=default
DEBUG 2024-03-02 23:47:32,274 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 9', 6, '2024-01-19T06:24:05.025586+01:00'::timestamptz, 392, true) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 9', 6, datetime.datetime(2024, 1, 19, 6, 24, 5, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 392, True); alias=default
DEBUG 2024-03-02 23:47:32,275 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 7', 3, '2024-01-19T06:29:11.025586+01:00'::timestamptz, 829, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 7', 3, datetime.datetime(2024, 1, 19, 6, 29, 11, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 829, True); alias=default
DEBUG 2024-03-02 23:47:32,276 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 5, 'Player 4', 11, '2024-01-19T06:31:07.025586+01:00'::timestamptz, 670, true) RETURNING "pong_gamedata"."id"; args=('Player 19', 5, 'Player 4', 11, datetime.datetime(2024, 1, 19, 6, 31, 7, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 670, True); alias=default
DEBUG 2024-03-02 23:47:32,277 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2024-01-19T06:31:07.025586+01:00'::timestamptz, 945, '["Player 4", "Player 19", "Player 9", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2024, 1, 19, 6, 31, 7, 25586, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 945, <psycopg2._json.Json object at 0x7f2fd41120f0>, '0x0'); alias=default
DEBUG 2024-03-02 23:47:32,278 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,279 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,280 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-02 23:47:32,280 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:32,281 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-02 23:47:32,282 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:32,282 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-02 23:47:32,284 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-02 23:47:32,285 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-02 23:47:32,287 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-02 23:47:32,288 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:32,289 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-02 23:47:32,290 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:32,290 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-02 23:47:32,291 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,292 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,293 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,294 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,295 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,295 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,296 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-02 23:47:32,297 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:32,297 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-02 23:47:32,298 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:32,299 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-02 23:47:32,301 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-02 23:47:32,301 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:32,302 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-02 23:47:32,303 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:32,303 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-02 23:47:32,304 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,305 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,306 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,307 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,308 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,309 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,310 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-02 23:47:32,310 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:32,311 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-02 23:47:32,312 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:32,313 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-02 23:47:32,314 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-02 23:47:32,315 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:32,316 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-02 23:47:32,317 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:32,318 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-02 23:47:32,319 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,320 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,321 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,322 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,323 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,324 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,325 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-02 23:47:32,325 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:32,325 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-02 23:47:32,326 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:32,327 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-02 23:47:32,328 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-02 23:47:32,329 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-02 23:47:32,329 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-02 23:47:32,330 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-02 23:47:32,331 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-02 23:47:32,332 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-02 23:47:32,333 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,333 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,334 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,335 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,336 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-02 23:47:32,337 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
