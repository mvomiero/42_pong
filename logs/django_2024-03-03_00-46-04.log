DEBUG 2024-03-03 00:46:06,068 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,070 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,071 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,072 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,072 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 00:46:06,087 utils (0.015) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:46:06,088 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,089 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,091 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 00:46:06,093 utils (0.002) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:46:06,097 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 00:46:06,099 utils (0.002) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 00:46:06,100 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,103 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T00:46:06.101117+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 0, 46, 6, 101117, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:46:06,104 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,105 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,107 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 00:46:06,110 utils (0.003) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:46:06,115 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 00:46:06,120 utils (0.005) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 00:46:06,120 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:46:06,124 utils (0.003) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:46:06,133 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 00:46:06,137 utils (0.004) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:46:06,138 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:46:06,142 utils (0.003) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:46:06,142 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:46:06,145 utils (0.002) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:46:06,146 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 00:46:06,148 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 00:46:06,148 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:46:06,150 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:46:06,150 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 00:46:06,153 utils (0.003) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 00:46:06,154 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 00:46:06,157 utils (0.003) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 00:46:06,157 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 00:46:06,160 utils (0.003) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:46:06,160 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:46:06,161 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:46:06,162 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:46:06,163 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:46:06,163 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 00:46:06,165 utils (0.002) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 00:46:06,165 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 00:46:06,167 utils (0.002) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:46:06,168 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 00:46:06,169 utils (0.002) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 00:46:06,170 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 00:46:06,172 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 00:46:06,172 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:46:06,173 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:46:06,173 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:46:06,174 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:46:06,175 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 00:46:06,177 utils (0.002) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 00:46:06,177 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 00:46:06,179 utils (0.002) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 00:46:06,179 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 00:46:06,181 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:46:06,181 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:46:06,182 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:46:06,182 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:46:06,183 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:46:06,183 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 00:46:06,185 utils (0.002) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 00:46:06,185 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 00:46:06,187 utils (0.002) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:46:06,188 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,190 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,192 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T00:46:06.190766+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 0, 46, 6, 190766, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:46:06,192 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,201 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:46:06,206 utils (0.005) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:46:06,207 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:46:06,208 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:46:06,208 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:46:06,210 utils (0.002) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:46:06,211 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 00:46:06,213 utils (0.002) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 00:46:06,213 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 00:46:06,216 utils (0.003) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 00:46:06,218 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,220 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,221 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T00:46:06.220559+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 0, 46, 6, 220559, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:46:06,222 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,230 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,230 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T00:46:06.230329+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 0, 46, 6, 230329, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:46:06,231 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,232 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,242 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,242 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T00:46:06.242472+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 0, 46, 6, 242472, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:46:06,243 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,243 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,253 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 00:46:06,254 utils (0.001) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 00:46:06,264 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 00:46:06,265 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 00:46:06,267 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,269 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T00:46:06.267972+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 0, 46, 6, 267972, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:46:06,270 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,271 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,279 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 00:46:06,280 utils (0.001) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 00:46:06,281 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,283 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T00:46:06.282282+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 0, 46, 6, 282282, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:46:06,284 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,284 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,292 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 00:46:06,293 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 00:46:06,295 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,296 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T00:46:06.295757+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 0, 46, 6, 295757, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:46:06,298 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,298 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,309 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,310 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T00:46:06.310080+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 0, 46, 6, 310080, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:46:06,311 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,311 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,322 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 00:46:06,322 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 00:46:06,323 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,324 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T00:46:06.324163+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 0, 46, 6, 324163, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:46:06,325 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,326 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,327 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,328 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T00:46:06.327984+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 0, 46, 6, 327984, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:46:06,329 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,330 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,339 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,340 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T00:46:06.340192+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 0, 46, 6, 340192, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:46:06,341 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,341 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,348 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:46:06,353 utils (0.005) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:46:06,355 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,355 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T00:46:06.355290+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 0, 46, 6, 355290, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:46:06,356 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,357 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,367 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:46:06,367 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:46:06,369 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,370 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T00:46:06.370166+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 0, 46, 6, 370166, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:46:06,371 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,371 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,377 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:46:06,379 utils (0.002) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:46:06,381 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,383 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T00:46:06.382527+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 0, 46, 6, 382527, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:46:06,384 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,385 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,395 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,396 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T00:46:06.396041+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 0, 46, 6, 396041, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:46:06,397 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,398 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,406 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:46:06,407 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:46:06,408 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,409 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T00:46:06.408588+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 0, 46, 6, 408588, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:46:06,409 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,410 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,411 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 00:46:06,416 utils (0.005) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:46:06,419 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 00:46:06,425 utils (0.005) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 00:46:06,427 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,428 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T00:46:06.427541+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 0, 46, 6, 427541, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:46:06,428 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,429 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,431 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 00:46:06,436 utils (0.005) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:46:06,436 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 00:46:06,438 utils (0.002) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 00:46:06,439 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 00:46:06,441 utils (0.002) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 00:46:06,442 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,443 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,445 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T00:46:06.444246+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 0, 46, 6, 444246, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:46:06,447 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:46:06,448 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,460 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 00:46:06,461 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,462 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 00:46:06,463 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,465 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 00:46:06,470 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 00:46:06,471 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,472 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 00:46:06,473 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,474 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 00:46:06,476 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,477 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,478 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,508 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 5', 7, '2023-12-13T22:21:02.477799+01:00'::timestamptz, 849, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 5', 7, datetime.datetime(2023, 12, 13, 22, 21, 2, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 849, False); alias=default
DEBUG 2024-03-03 00:46:06,510 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 7, 'Player 6', 11, '2023-12-11T09:02:55.477799+01:00'::timestamptz, 818, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 7, 'Player 6', 11, datetime.datetime(2023, 12, 11, 9, 2, 55, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 818, False); alias=default
DEBUG 2024-03-03 00:46:06,511 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 1, 'Player 15', 11, '2024-02-17T11:11:06.477799+01:00'::timestamptz, 592, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 1, 'Player 15', 11, datetime.datetime(2024, 2, 17, 11, 11, 6, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 592, False); alias=default
DEBUG 2024-03-03 00:46:06,512 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 2, 'Player 1', 11, '2024-02-10T04:41:24.477799+01:00'::timestamptz, 433, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 2, 'Player 1', 11, datetime.datetime(2024, 2, 10, 4, 41, 24, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 433, False); alias=default
DEBUG 2024-03-03 00:46:06,513 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 4, 'Player 6', 11, '2024-02-04T10:16:33.477799+01:00'::timestamptz, 806, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 4, 'Player 6', 11, datetime.datetime(2024, 2, 4, 10, 16, 33, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 806, False); alias=default
DEBUG 2024-03-03 00:46:06,515 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 11', 4, '2023-12-24T14:40:40.477799+01:00'::timestamptz, 935, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 11', 4, datetime.datetime(2023, 12, 24, 14, 40, 40, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 935, False); alias=default
DEBUG 2024-03-03 00:46:06,517 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 5', 8, '2024-01-01T10:39:16.477799+01:00'::timestamptz, 816, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 5', 8, datetime.datetime(2024, 1, 1, 10, 39, 16, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 816, False); alias=default
DEBUG 2024-03-03 00:46:06,519 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 14', 4, '2024-01-07T14:05:36.477799+01:00'::timestamptz, 57, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 14', 4, datetime.datetime(2024, 1, 7, 14, 5, 36, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 57, False); alias=default
DEBUG 2024-03-03 00:46:06,520 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 8', 8, '2023-12-04T13:02:15.477799+01:00'::timestamptz, 766, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 8', 8, datetime.datetime(2023, 12, 4, 13, 2, 15, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 766, False); alias=default
DEBUG 2024-03-03 00:46:06,521 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 12', 3, '2024-01-22T03:01:38.477799+01:00'::timestamptz, 466, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 12', 3, datetime.datetime(2024, 1, 22, 3, 1, 38, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 466, False); alias=default
DEBUG 2024-03-03 00:46:06,522 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 0, 'Player 7', 11, '2023-12-26T04:59:46.477799+01:00'::timestamptz, 610, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 0, 'Player 7', 11, datetime.datetime(2023, 12, 26, 4, 59, 46, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 610, False); alias=default
DEBUG 2024-03-03 00:46:06,524 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 18', 1, '2023-11-04T03:51:03.477799+01:00'::timestamptz, 12, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 18', 1, datetime.datetime(2023, 11, 4, 3, 51, 3, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 12, False); alias=default
DEBUG 2024-03-03 00:46:06,525 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 12', 0, '2023-11-08T08:16:44.477799+01:00'::timestamptz, 87, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 12', 0, datetime.datetime(2023, 11, 8, 8, 16, 44, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 87, False); alias=default
DEBUG 2024-03-03 00:46:06,526 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 5, 'Player 1', 11, '2024-01-16T07:46:05.477799+01:00'::timestamptz, 164, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 5, 'Player 1', 11, datetime.datetime(2024, 1, 16, 7, 46, 5, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 164, False); alias=default
DEBUG 2024-03-03 00:46:06,527 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 8, 'Player 15', 11, '2023-12-08T22:52:25.477799+01:00'::timestamptz, 939, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 8, 'Player 15', 11, datetime.datetime(2023, 12, 8, 22, 52, 25, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 939, False); alias=default
DEBUG 2024-03-03 00:46:06,528 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 13', 9, '2023-11-12T13:15:48.477799+01:00'::timestamptz, 673, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 13', 9, datetime.datetime(2023, 11, 12, 13, 15, 48, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 673, False); alias=default
DEBUG 2024-03-03 00:46:06,530 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 3, 'Player 1', 11, '2024-02-11T06:47:34.477799+01:00'::timestamptz, 302, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 3, 'Player 1', 11, datetime.datetime(2024, 2, 11, 6, 47, 34, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 302, False); alias=default
DEBUG 2024-03-03 00:46:06,532 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 8, 'Player 16', 11, '2023-12-27T08:52:07.477799+01:00'::timestamptz, 178, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 8, 'Player 16', 11, datetime.datetime(2023, 12, 27, 8, 52, 7, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 178, False); alias=default
DEBUG 2024-03-03 00:46:06,534 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 22', 8, '2024-02-09T10:40:08.477799+01:00'::timestamptz, 902, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 22', 8, datetime.datetime(2024, 2, 9, 10, 40, 8, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 902, False); alias=default
DEBUG 2024-03-03 00:46:06,535 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 10, 'Player 4', 11, '2023-11-06T03:31:44.477799+01:00'::timestamptz, 567, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 10, 'Player 4', 11, datetime.datetime(2023, 11, 6, 3, 31, 44, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 567, False); alias=default
DEBUG 2024-03-03 00:46:06,536 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 13', 10, '2023-12-05T20:06:20.477799+01:00'::timestamptz, 307, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 13', 10, datetime.datetime(2023, 12, 5, 20, 6, 20, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 307, False); alias=default
DEBUG 2024-03-03 00:46:06,537 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 1', 6, '2024-02-10T00:45:41.477799+01:00'::timestamptz, 57, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 1', 6, datetime.datetime(2024, 2, 10, 0, 45, 41, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 57, False); alias=default
DEBUG 2024-03-03 00:46:06,539 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 24', 3, '2024-02-11T10:24:32.477799+01:00'::timestamptz, 982, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 24', 3, datetime.datetime(2024, 2, 11, 10, 24, 32, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 982, False); alias=default
DEBUG 2024-03-03 00:46:06,540 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 2, 'Player 12', 11, '2023-12-05T17:30:47.477799+01:00'::timestamptz, 384, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 2, 'Player 12', 11, datetime.datetime(2023, 12, 5, 17, 30, 47, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 384, False); alias=default
DEBUG 2024-03-03 00:46:06,541 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 5', 4, '2024-02-04T06:41:41.477799+01:00'::timestamptz, 242, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 5', 4, datetime.datetime(2024, 2, 4, 6, 41, 41, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 242, False); alias=default
DEBUG 2024-03-03 00:46:06,542 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 7, 'Player 25', 11, '2024-01-25T10:52:57.477799+01:00'::timestamptz, 267, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 7, 'Player 25', 11, datetime.datetime(2024, 1, 25, 10, 52, 57, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 267, False); alias=default
DEBUG 2024-03-03 00:46:06,543 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 0, 'Player 14', 11, '2023-12-19T05:12:25.477799+01:00'::timestamptz, 467, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 0, 'Player 14', 11, datetime.datetime(2023, 12, 19, 5, 12, 25, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 467, False); alias=default
DEBUG 2024-03-03 00:46:06,544 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 9, 'Player 6', 11, '2024-01-25T06:03:05.477799+01:00'::timestamptz, 564, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 9, 'Player 6', 11, datetime.datetime(2024, 1, 25, 6, 3, 5, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 564, False); alias=default
DEBUG 2024-03-03 00:46:06,546 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 21', 3, '2023-11-17T14:32:22.477799+01:00'::timestamptz, 825, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 21', 3, datetime.datetime(2023, 11, 17, 14, 32, 22, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 825, False); alias=default
DEBUG 2024-03-03 00:46:06,548 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 4', 6, '2024-01-04T11:56:13.477799+01:00'::timestamptz, 628, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 4', 6, datetime.datetime(2024, 1, 4, 11, 56, 13, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 628, False); alias=default
DEBUG 2024-03-03 00:46:06,549 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 11, 'Player 25', 1, '2024-02-06T18:39:13.477799+01:00'::timestamptz, 597, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 11, 'Player 25', 1, datetime.datetime(2024, 2, 6, 18, 39, 13, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 597, False); alias=default
DEBUG 2024-03-03 00:46:06,551 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 10', 5, '2024-02-13T04:46:36.477799+01:00'::timestamptz, 539, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 10', 5, datetime.datetime(2024, 2, 13, 4, 46, 36, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 539, False); alias=default
DEBUG 2024-03-03 00:46:06,552 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 5, 'Player 20', 11, '2023-11-14T01:21:54.477799+01:00'::timestamptz, 926, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 5, 'Player 20', 11, datetime.datetime(2023, 11, 14, 1, 21, 54, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 926, False); alias=default
DEBUG 2024-03-03 00:46:06,554 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 3, 'Player 1', 11, '2023-12-07T19:04:52.477799+01:00'::timestamptz, 745, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 3, 'Player 1', 11, datetime.datetime(2023, 12, 7, 19, 4, 52, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 745, False); alias=default
DEBUG 2024-03-03 00:46:06,555 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 0, 'Player 21', 11, '2023-12-01T15:27:13.477799+01:00'::timestamptz, 632, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 0, 'Player 21', 11, datetime.datetime(2023, 12, 1, 15, 27, 13, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 632, False); alias=default
DEBUG 2024-03-03 00:46:06,556 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 6, 'Player 10', 11, '2023-12-12T15:47:52.477799+01:00'::timestamptz, 151, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 6, 'Player 10', 11, datetime.datetime(2023, 12, 12, 15, 47, 52, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 151, False); alias=default
DEBUG 2024-03-03 00:46:06,557 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 11', 3, '2024-02-24T22:57:15.477799+01:00'::timestamptz, 295, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 11', 3, datetime.datetime(2024, 2, 24, 22, 57, 15, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 295, False); alias=default
DEBUG 2024-03-03 00:46:06,559 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 7, 'Player 13', 11, '2023-11-30T14:34:24.477799+01:00'::timestamptz, 288, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 7, 'Player 13', 11, datetime.datetime(2023, 11, 30, 14, 34, 24, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 288, False); alias=default
DEBUG 2024-03-03 00:46:06,560 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 1, 'Player 16', 11, '2023-12-26T12:22:11.477799+01:00'::timestamptz, 466, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 1, 'Player 16', 11, datetime.datetime(2023, 12, 26, 12, 22, 11, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 466, False); alias=default
DEBUG 2024-03-03 00:46:06,561 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 9', 3, '2023-11-21T02:41:43.477799+01:00'::timestamptz, 345, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 9', 3, datetime.datetime(2023, 11, 21, 2, 41, 43, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 345, False); alias=default
DEBUG 2024-03-03 00:46:06,563 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 28', 2, '2024-01-31T13:04:06.477799+01:00'::timestamptz, 245, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 28', 2, datetime.datetime(2024, 1, 31, 13, 4, 6, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 245, False); alias=default
DEBUG 2024-03-03 00:46:06,564 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 17', 1, '2024-02-20T12:56:55.477799+01:00'::timestamptz, 587, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 17', 1, datetime.datetime(2024, 2, 20, 12, 56, 55, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 587, False); alias=default
DEBUG 2024-03-03 00:46:06,566 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 8, 'Player 15', 11, '2024-02-26T16:55:38.477799+01:00'::timestamptz, 951, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 8, 'Player 15', 11, datetime.datetime(2024, 2, 26, 16, 55, 38, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 951, False); alias=default
DEBUG 2024-03-03 00:46:06,567 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 3, 'Player 15', 11, '2024-01-25T10:44:23.477799+01:00'::timestamptz, 62, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 3, 'Player 15', 11, datetime.datetime(2024, 1, 25, 10, 44, 23, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 62, False); alias=default
DEBUG 2024-03-03 00:46:06,569 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 3, 'Player 5', 11, '2023-12-19T00:31:26.477799+01:00'::timestamptz, 719, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 3, 'Player 5', 11, datetime.datetime(2023, 12, 19, 0, 31, 26, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 719, False); alias=default
DEBUG 2024-03-03 00:46:06,570 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 4, 'Player 8', 11, '2023-12-26T01:21:25.477799+01:00'::timestamptz, 630, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 4, 'Player 8', 11, datetime.datetime(2023, 12, 26, 1, 21, 25, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 630, False); alias=default
DEBUG 2024-03-03 00:46:06,571 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 3, 'Player 34', 11, '2024-01-27T15:24:38.477799+01:00'::timestamptz, 1000, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 3, 'Player 34', 11, datetime.datetime(2024, 1, 27, 15, 24, 38, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 1000, False); alias=default
DEBUG 2024-03-03 00:46:06,573 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 3, 'Player 4', 11, '2024-01-12T04:16:06.477799+01:00'::timestamptz, 613, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 3, 'Player 4', 11, datetime.datetime(2024, 1, 12, 4, 16, 6, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 613, False); alias=default
DEBUG 2024-03-03 00:46:06,574 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 37', 10, '2024-01-31T19:20:29.477799+01:00'::timestamptz, 922, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 37', 10, datetime.datetime(2024, 1, 31, 19, 20, 29, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 922, False); alias=default
DEBUG 2024-03-03 00:46:06,575 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 11, 'Player 32', 6, '2023-12-17T15:24:53.477799+01:00'::timestamptz, 49, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 11, 'Player 32', 6, datetime.datetime(2023, 12, 17, 15, 24, 53, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 49, False); alias=default
DEBUG 2024-03-03 00:46:06,577 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 26', 9, '2024-01-21T15:08:49.477799+01:00'::timestamptz, 756, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 26', 9, datetime.datetime(2024, 1, 21, 15, 8, 49, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 756, False); alias=default
DEBUG 2024-03-03 00:46:06,578 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 6, 'Player 10', 11, '2024-01-15T10:14:49.477799+01:00'::timestamptz, 858, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 6, 'Player 10', 11, datetime.datetime(2024, 1, 15, 10, 14, 49, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 858, False); alias=default
DEBUG 2024-03-03 00:46:06,579 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 4, 'Player 25', 11, '2024-02-09T22:39:53.477799+01:00'::timestamptz, 577, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 4, 'Player 25', 11, datetime.datetime(2024, 2, 9, 22, 39, 53, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 577, False); alias=default
DEBUG 2024-03-03 00:46:06,580 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 8', 1, '2023-11-30T17:32:06.477799+01:00'::timestamptz, 51, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 8', 1, datetime.datetime(2023, 11, 30, 17, 32, 6, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 51, False); alias=default
DEBUG 2024-03-03 00:46:06,582 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 34', 5, '2023-11-17T00:56:05.477799+01:00'::timestamptz, 893, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 34', 5, datetime.datetime(2023, 11, 17, 0, 56, 5, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 893, False); alias=default
DEBUG 2024-03-03 00:46:06,584 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 11, 'Player 0', 3, '2023-11-20T03:23:46.477799+01:00'::timestamptz, 939, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 11, 'Player 0', 3, datetime.datetime(2023, 11, 20, 3, 23, 46, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 939, False); alias=default
DEBUG 2024-03-03 00:46:06,586 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 28', 0, '2023-11-04T12:41:09.477799+01:00'::timestamptz, 308, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 28', 0, datetime.datetime(2023, 11, 4, 12, 41, 9, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 308, False); alias=default
DEBUG 2024-03-03 00:46:06,587 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 32', 6, '2023-12-17T00:50:50.477799+01:00'::timestamptz, 573, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 32', 6, datetime.datetime(2023, 12, 17, 0, 50, 50, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 573, False); alias=default
DEBUG 2024-03-03 00:46:06,588 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 0, 'Player 39', 11, '2024-01-09T18:19:36.477799+01:00'::timestamptz, 791, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 0, 'Player 39', 11, datetime.datetime(2024, 1, 9, 18, 19, 36, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 791, False); alias=default
DEBUG 2024-03-03 00:46:06,589 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 23', 4, '2023-12-21T11:04:20.477799+01:00'::timestamptz, 128, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 23', 4, datetime.datetime(2023, 12, 21, 11, 4, 20, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 128, False); alias=default
DEBUG 2024-03-03 00:46:06,591 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 1, 'Player 27', 11, '2024-02-13T14:07:12.477799+01:00'::timestamptz, 112, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 1, 'Player 27', 11, datetime.datetime(2024, 2, 13, 14, 7, 12, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 112, False); alias=default
DEBUG 2024-03-03 00:46:06,592 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 32', 3, '2023-11-10T03:06:53.477799+01:00'::timestamptz, 572, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 32', 3, datetime.datetime(2023, 11, 10, 3, 6, 53, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 572, False); alias=default
DEBUG 2024-03-03 00:46:06,593 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 11, 'Player 39', 8, '2024-01-08T03:06:03.477799+01:00'::timestamptz, 515, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 11, 'Player 39', 8, datetime.datetime(2024, 1, 8, 3, 6, 3, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 515, False); alias=default
DEBUG 2024-03-03 00:46:06,594 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 46', 11, 'Player 23', 9, '2023-12-19T20:24:07.477799+01:00'::timestamptz, 288, false) RETURNING "pong_gamedata"."id"; args=('Player 46', 11, 'Player 23', 9, datetime.datetime(2023, 12, 19, 20, 24, 7, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 288, False); alias=default
DEBUG 2024-03-03 00:46:06,596 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 11, 'Player 18', 3, '2023-12-29T18:37:47.477799+01:00'::timestamptz, 879, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 11, 'Player 18', 3, datetime.datetime(2023, 12, 29, 18, 37, 47, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 879, False); alias=default
DEBUG 2024-03-03 00:46:06,597 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 7, 'Player 45', 11, '2024-01-26T05:04:11.477799+01:00'::timestamptz, 203, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 7, 'Player 45', 11, datetime.datetime(2024, 1, 26, 5, 4, 11, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 203, False); alias=default
DEBUG 2024-03-03 00:46:06,599 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 11, 'Player 25', 3, '2024-01-14T22:03:28.477799+01:00'::timestamptz, 498, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 11, 'Player 25', 3, datetime.datetime(2024, 1, 14, 22, 3, 28, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 498, False); alias=default
DEBUG 2024-03-03 00:46:06,601 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 47', 10, 'Player 0', 11, '2024-02-17T13:09:42.477799+01:00'::timestamptz, 300, false) RETURNING "pong_gamedata"."id"; args=('Player 47', 10, 'Player 0', 11, datetime.datetime(2024, 2, 17, 13, 9, 42, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 300, False); alias=default
DEBUG 2024-03-03 00:46:06,602 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 2, 'Player 48', 11, '2023-12-14T01:48:37.477799+01:00'::timestamptz, 99, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 2, 'Player 48', 11, datetime.datetime(2023, 12, 14, 1, 48, 37, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 99, False); alias=default
DEBUG 2024-03-03 00:46:06,603 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 6, 'Player 37', 11, '2024-01-20T16:21:20.477799+01:00'::timestamptz, 93, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 6, 'Player 37', 11, datetime.datetime(2024, 1, 20, 16, 21, 20, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 93, False); alias=default
DEBUG 2024-03-03 00:46:06,604 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 44', 8, '2023-11-21T06:34:27.477799+01:00'::timestamptz, 996, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 44', 8, datetime.datetime(2023, 11, 21, 6, 34, 27, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 996, False); alias=default
DEBUG 2024-03-03 00:46:06,605 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 11, 'Player 42', 4, '2024-03-01T20:46:12.477799+01:00'::timestamptz, 461, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 11, 'Player 42', 4, datetime.datetime(2024, 3, 1, 20, 46, 12, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 461, False); alias=default
DEBUG 2024-03-03 00:46:06,607 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 2, 'Player 27', 11, '2023-12-20T09:55:46.477799+01:00'::timestamptz, 833, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 2, 'Player 27', 11, datetime.datetime(2023, 12, 20, 9, 55, 46, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 833, False); alias=default
DEBUG 2024-03-03 00:46:06,609 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 11, 'Player 39', 8, '2024-02-12T18:55:23.477799+01:00'::timestamptz, 517, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 11, 'Player 39', 8, datetime.datetime(2024, 2, 12, 18, 55, 23, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 517, False); alias=default
DEBUG 2024-03-03 00:46:06,610 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 7, 'Player 43', 11, '2023-12-16T01:24:10.477799+01:00'::timestamptz, 443, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 7, 'Player 43', 11, datetime.datetime(2023, 12, 16, 1, 24, 10, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 443, False); alias=default
DEBUG 2024-03-03 00:46:06,611 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 9', 8, '2023-11-27T19:48:49.477799+01:00'::timestamptz, 149, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 9', 8, datetime.datetime(2023, 11, 27, 19, 48, 49, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 149, False); alias=default
DEBUG 2024-03-03 00:46:06,613 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 11, 'Player 30', 0, '2024-02-07T12:50:02.477799+01:00'::timestamptz, 424, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 11, 'Player 30', 0, datetime.datetime(2024, 2, 7, 12, 50, 2, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 424, False); alias=default
DEBUG 2024-03-03 00:46:06,614 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 8, 'Player 33', 11, '2024-01-04T17:52:14.477799+01:00'::timestamptz, 936, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 8, 'Player 33', 11, datetime.datetime(2024, 1, 4, 17, 52, 14, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 936, False); alias=default
DEBUG 2024-03-03 00:46:06,616 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 5, 'Player 7', 11, '2023-11-20T05:19:12.477799+01:00'::timestamptz, 246, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 5, 'Player 7', 11, datetime.datetime(2023, 11, 20, 5, 19, 12, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 246, False); alias=default
DEBUG 2024-03-03 00:46:06,618 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 1', 3, '2023-12-06T21:31:38.477799+01:00'::timestamptz, 287, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 1', 3, datetime.datetime(2023, 12, 6, 21, 31, 38, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 287, False); alias=default
DEBUG 2024-03-03 00:46:06,619 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 5, 'Player 23', 11, '2023-12-28T22:25:01.477799+01:00'::timestamptz, 821, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 5, 'Player 23', 11, datetime.datetime(2023, 12, 28, 22, 25, 1, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 821, False); alias=default
DEBUG 2024-03-03 00:46:06,620 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 3, 'Player 32', 11, '2024-02-06T01:31:43.477799+01:00'::timestamptz, 250, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 3, 'Player 32', 11, datetime.datetime(2024, 2, 6, 1, 31, 43, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 250, False); alias=default
DEBUG 2024-03-03 00:46:06,621 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 1, 'Player 31', 11, '2023-12-29T08:33:41.477799+01:00'::timestamptz, 850, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 1, 'Player 31', 11, datetime.datetime(2023, 12, 29, 8, 33, 41, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 850, False); alias=default
DEBUG 2024-03-03 00:46:06,623 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 1, 'Player 2', 11, '2023-12-24T05:43:05.477799+01:00'::timestamptz, 592, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 1, 'Player 2', 11, datetime.datetime(2023, 12, 24, 5, 43, 5, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 592, False); alias=default
DEBUG 2024-03-03 00:46:06,624 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 11, 'Player 10', 4, '2024-01-15T04:38:33.477799+01:00'::timestamptz, 773, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 11, 'Player 10', 4, datetime.datetime(2024, 1, 15, 4, 38, 33, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 773, False); alias=default
DEBUG 2024-03-03 00:46:06,625 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 10, 'Player 1', 11, '2024-01-27T22:29:33.477799+01:00'::timestamptz, 895, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 10, 'Player 1', 11, datetime.datetime(2024, 1, 27, 22, 29, 33, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 895, False); alias=default
DEBUG 2024-03-03 00:46:06,626 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 11', 0, '2024-02-02T12:01:24.477799+01:00'::timestamptz, 884, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 11', 0, datetime.datetime(2024, 2, 2, 12, 1, 24, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 884, False); alias=default
DEBUG 2024-03-03 00:46:06,628 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 8, 'Player 23', 11, '2023-11-18T18:42:14.477799+01:00'::timestamptz, 462, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 8, 'Player 23', 11, datetime.datetime(2023, 11, 18, 18, 42, 14, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 462, False); alias=default
DEBUG 2024-03-03 00:46:06,629 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 55', 11, 'Player 26', 8, '2023-12-04T05:48:16.477799+01:00'::timestamptz, 507, false) RETURNING "pong_gamedata"."id"; args=('Player 55', 11, 'Player 26', 8, datetime.datetime(2023, 12, 4, 5, 48, 16, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 507, False); alias=default
DEBUG 2024-03-03 00:46:06,630 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 33', 2, '2024-02-26T16:55:33.477799+01:00'::timestamptz, 168, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 33', 2, datetime.datetime(2024, 2, 26, 16, 55, 33, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 168, False); alias=default
DEBUG 2024-03-03 00:46:06,632 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 1, 'Player 35', 11, '2023-12-24T09:56:08.477799+01:00'::timestamptz, 653, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 1, 'Player 35', 11, datetime.datetime(2023, 12, 24, 9, 56, 8, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 653, False); alias=default
DEBUG 2024-03-03 00:46:06,634 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 10, 'Player 47', 11, '2024-02-17T17:18:24.477799+01:00'::timestamptz, 41, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 10, 'Player 47', 11, datetime.datetime(2024, 2, 17, 17, 18, 24, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 41, False); alias=default
DEBUG 2024-03-03 00:46:06,635 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 8, 'Player 4', 11, '2024-01-30T05:58:54.477799+01:00'::timestamptz, 599, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 8, 'Player 4', 11, datetime.datetime(2024, 1, 30, 5, 58, 54, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 599, False); alias=default
DEBUG 2024-03-03 00:46:06,636 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 6, 'Player 56', 11, '2024-02-21T14:13:29.477799+01:00'::timestamptz, 378, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 6, 'Player 56', 11, datetime.datetime(2024, 2, 21, 14, 13, 29, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 378, False); alias=default
DEBUG 2024-03-03 00:46:06,638 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 11, 'Player 0', 7, '2024-01-15T04:47:02.477799+01:00'::timestamptz, 760, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 11, 'Player 0', 7, datetime.datetime(2024, 1, 15, 4, 47, 2, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 760, False); alias=default
DEBUG 2024-03-03 00:46:06,639 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 4, 'Player 47', 11, '2023-12-26T14:47:05.477799+01:00'::timestamptz, 427, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 4, 'Player 47', 11, datetime.datetime(2023, 12, 26, 14, 47, 5, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 427, False); alias=default
DEBUG 2024-03-03 00:46:06,640 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 2, 'Player 47', 11, '2024-02-10T13:40:42.477799+01:00'::timestamptz, 516, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 2, 'Player 47', 11, datetime.datetime(2024, 2, 10, 13, 40, 42, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 516, False); alias=default
DEBUG 2024-03-03 00:46:06,641 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 51', 10, 'Player 0', 11, '2023-11-21T19:19:10.477799+01:00'::timestamptz, 903, false) RETURNING "pong_gamedata"."id"; args=('Player 51', 10, 'Player 0', 11, datetime.datetime(2023, 11, 21, 19, 19, 10, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 903, False); alias=default
DEBUG 2024-03-03 00:46:06,643 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 51', 11, 'Player 22', 8, '2024-02-23T07:45:00.477799+01:00'::timestamptz, 441, false) RETURNING "pong_gamedata"."id"; args=('Player 51', 11, 'Player 22', 8, datetime.datetime(2024, 2, 23, 7, 45, 0, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 441, False); alias=default
DEBUG 2024-03-03 00:46:06,644 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 5, 'Player 57', 11, '2023-11-16T15:03:04.477799+01:00'::timestamptz, 299, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 5, 'Player 57', 11, datetime.datetime(2023, 11, 16, 15, 3, 4, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 299, False); alias=default
DEBUG 2024-03-03 00:46:06,645 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,647 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 4, 'Player 2', 11, '2024-01-05T21:08:43.477799+01:00'::timestamptz, 380, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 4, 'Player 2', 11, datetime.datetime(2024, 1, 5, 21, 8, 43, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 380, True); alias=default
DEBUG 2024-03-03 00:46:06,649 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 6', 1, '2024-01-05T21:11:28.477799+01:00'::timestamptz, 880, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 6', 1, datetime.datetime(2024, 1, 5, 21, 11, 28, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 880, True); alias=default
DEBUG 2024-03-03 00:46:06,651 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 1, 'Player 3', 11, '2024-01-05T21:12:42.477799+01:00'::timestamptz, 493, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 1, 'Player 3', 11, datetime.datetime(2024, 1, 5, 21, 12, 42, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 493, True); alias=default
DEBUG 2024-03-03 00:46:06,652 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2024-01-05T21:12:42.477799+01:00'::timestamptz, 954, '["Player 3", "Player 2", "Player 13", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2024, 1, 5, 21, 12, 42, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 954, <psycopg2._json.Json object at 0x7f2132f9a660>, '0x0'); alias=default
DEBUG 2024-03-03 00:46:06,654 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 4', 1, '2023-12-28T12:15:14.477799+01:00'::timestamptz, 276, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 4', 1, datetime.datetime(2023, 12, 28, 12, 15, 14, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 276, True); alias=default
DEBUG 2024-03-03 00:46:06,655 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 1, 'Player 8', 11, '2023-12-28T12:17:34.477799+01:00'::timestamptz, 423, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 1, 'Player 8', 11, datetime.datetime(2023, 12, 28, 12, 17, 34, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 423, True); alias=default
DEBUG 2024-03-03 00:46:06,656 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 8', 5, '2023-12-28T12:24:45.477799+01:00'::timestamptz, 48, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 8', 5, datetime.datetime(2023, 12, 28, 12, 24, 45, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 48, True); alias=default
DEBUG 2024-03-03 00:46:06,657 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2023-12-28T12:24:45.477799+01:00'::timestamptz, 854, '["Player 10", "Player 8", "Player 4", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2023, 12, 28, 12, 24, 45, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 854, <psycopg2._json.Json object at 0x7f2132fec8f0>, '0x0'); alias=default
DEBUG 2024-03-03 00:46:06,659 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 0, 'Player 6', 11, '2024-01-18T04:09:51.477799+01:00'::timestamptz, 752, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 0, 'Player 6', 11, datetime.datetime(2024, 1, 18, 4, 9, 51, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 752, True); alias=default
DEBUG 2024-03-03 00:46:06,660 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 14', 1, '2024-01-18T04:03:24.477799+01:00'::timestamptz, 144, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 14', 1, datetime.datetime(2024, 1, 18, 4, 3, 24, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 144, True); alias=default
DEBUG 2024-03-03 00:46:06,661 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 0, 'Player 3', 11, '2024-01-18T04:12:35.477799+01:00'::timestamptz, 928, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 0, 'Player 3', 11, datetime.datetime(2024, 1, 18, 4, 12, 35, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 928, True); alias=default
DEBUG 2024-03-03 00:46:06,662 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2024-01-18T04:12:35.477799+01:00'::timestamptz, 916, '["Player 3", "Player 6", "Player 8", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2024, 1, 18, 4, 12, 35, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 916, <psycopg2._json.Json object at 0x7f2132ffc200>, '0x0'); alias=default
DEBUG 2024-03-03 00:46:06,664 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 0, 'Player 8', 11, '2024-02-22T16:29:34.477799+01:00'::timestamptz, 136, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 0, 'Player 8', 11, datetime.datetime(2024, 2, 22, 16, 29, 34, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 136, True); alias=default
DEBUG 2024-03-03 00:46:06,666 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 10, 'Player 17', 11, '2024-02-22T16:26:23.477799+01:00'::timestamptz, 531, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 10, 'Player 17', 11, datetime.datetime(2024, 2, 22, 16, 26, 23, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 531, True); alias=default
DEBUG 2024-03-03 00:46:06,667 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 17', 9, '2024-02-22T16:30:07.477799+01:00'::timestamptz, 737, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 17', 9, datetime.datetime(2024, 2, 22, 16, 30, 7, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 737, True); alias=default
DEBUG 2024-03-03 00:46:06,669 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2024-02-22T16:30:07.477799+01:00'::timestamptz, 755, '["Player 8", "Player 17", "Player 7", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2024, 2, 22, 16, 30, 7, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 755, <psycopg2._json.Json object at 0x7f2132fc7e30>, '0x0'); alias=default
DEBUG 2024-03-03 00:46:06,670 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 4, 'Player 5', 11, '2023-11-20T19:18:19.477799+01:00'::timestamptz, 407, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 4, 'Player 5', 11, datetime.datetime(2023, 11, 20, 19, 18, 19, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 407, True); alias=default
DEBUG 2024-03-03 00:46:06,671 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 8', 5, '2023-11-20T19:22:39.477799+01:00'::timestamptz, 227, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 8', 5, datetime.datetime(2023, 11, 20, 19, 22, 39, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 227, True); alias=default
DEBUG 2024-03-03 00:46:06,672 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 13', 8, '2023-11-20T19:24:47.477799+01:00'::timestamptz, 698, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 13', 8, datetime.datetime(2023, 11, 20, 19, 24, 47, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 698, True); alias=default
DEBUG 2024-03-03 00:46:06,673 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2023-11-20T19:24:47.477799+01:00'::timestamptz, 795, '["Player 5", "Player 13", "Player 2", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2023, 11, 20, 19, 24, 47, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 795, <psycopg2._json.Json object at 0x7f2132fef1d0>, '0x0'); alias=default
DEBUG 2024-03-03 00:46:06,675 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 10, 'Player 6', 11, '2023-11-16T13:10:15.477799+01:00'::timestamptz, 121, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 10, 'Player 6', 11, datetime.datetime(2023, 11, 16, 13, 10, 15, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 121, True); alias=default
DEBUG 2024-03-03 00:46:06,676 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 13', 9, '2023-11-16T13:08:00.477799+01:00'::timestamptz, 671, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 13', 9, datetime.datetime(2023, 11, 16, 13, 8, 0, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 671, True); alias=default
DEBUG 2024-03-03 00:46:06,677 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 3, 'Player 0', 11, '2023-11-16T13:12:43.477799+01:00'::timestamptz, 38, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 3, 'Player 0', 11, datetime.datetime(2023, 11, 16, 13, 12, 43, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 38, True); alias=default
DEBUG 2024-03-03 00:46:06,678 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2023-11-16T13:12:43.477799+01:00'::timestamptz, 954, '["Player 0", "Player 6", "Player 12", "Player 13"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2023, 11, 16, 13, 12, 43, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 954, <psycopg2._json.Json object at 0x7f2132fee210>, '0x0'); alias=default
DEBUG 2024-03-03 00:46:06,680 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 1, 'Player 2', 11, '2024-02-01T03:21:05.477799+01:00'::timestamptz, 702, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 1, 'Player 2', 11, datetime.datetime(2024, 2, 1, 3, 21, 5, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 702, True); alias=default
DEBUG 2024-03-03 00:46:06,681 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 0, 'Player 15', 11, '2024-02-01T03:17:20.477799+01:00'::timestamptz, 200, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 0, 'Player 15', 11, datetime.datetime(2024, 2, 1, 3, 17, 20, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 200, True); alias=default
DEBUG 2024-03-03 00:46:06,683 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 0, 'Player 15', 11, '2024-02-01T03:24:35.477799+01:00'::timestamptz, 131, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 0, 'Player 15', 11, datetime.datetime(2024, 2, 1, 3, 24, 35, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 131, True); alias=default
DEBUG 2024-03-03 00:46:06,684 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2024-02-01T03:24:35.477799+01:00'::timestamptz, 912, '["Player 15", "Player 2", "Player 4", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2024, 2, 1, 3, 24, 35, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 912, <psycopg2._json.Json object at 0x7f2132fef170>, '0x0'); alias=default
DEBUG 2024-03-03 00:46:06,686 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 2', 7, '2024-02-04T09:11:50.477799+01:00'::timestamptz, 494, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 2', 7, datetime.datetime(2024, 2, 4, 9, 11, 50, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 494, True); alias=default
DEBUG 2024-03-03 00:46:06,687 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 4, 'Player 3', 11, '2024-02-04T09:12:41.477799+01:00'::timestamptz, 421, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 4, 'Player 3', 11, datetime.datetime(2024, 2, 4, 9, 12, 41, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 421, True); alias=default
DEBUG 2024-03-03 00:46:06,688 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 3', 5, '2024-02-04T09:18:34.477799+01:00'::timestamptz, 576, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 3', 5, datetime.datetime(2024, 2, 4, 9, 18, 34, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 576, True); alias=default
DEBUG 2024-03-03 00:46:06,690 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2024-02-04T09:18:34.477799+01:00'::timestamptz, 898, '["Player 10", "Player 3", "Player 2", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2024, 2, 4, 9, 18, 34, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 898, <psycopg2._json.Json object at 0x7f2132fc58e0>, '0x0'); alias=default
DEBUG 2024-03-03 00:46:06,691 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 4, 'Player 14', 11, '2023-11-27T17:24:58.477799+01:00'::timestamptz, 575, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 4, 'Player 14', 11, datetime.datetime(2023, 11, 27, 17, 24, 58, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 575, True); alias=default
DEBUG 2024-03-03 00:46:06,692 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 10, 'Player 15', 11, '2023-11-27T17:13:43.477799+01:00'::timestamptz, 33, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 10, 'Player 15', 11, datetime.datetime(2023, 11, 27, 17, 13, 43, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 33, True); alias=default
DEBUG 2024-03-03 00:46:06,694 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 6, 'Player 15', 11, '2023-11-27T17:25:00.477799+01:00'::timestamptz, 133, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 6, 'Player 15', 11, datetime.datetime(2023, 11, 27, 17, 25, 0, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 133, True); alias=default
DEBUG 2024-03-03 00:46:06,695 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2023-11-27T17:25:00.477799+01:00'::timestamptz, 710, '["Player 15", "Player 14", "Player 4", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2023, 11, 27, 17, 25, 0, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 710, <psycopg2._json.Json object at 0x7f2132e1bb90>, '0x0'); alias=default
DEBUG 2024-03-03 00:46:06,696 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 2, 'Player 14', 11, '2023-12-29T05:10:25.477799+01:00'::timestamptz, 608, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 2, 'Player 14', 11, datetime.datetime(2023, 12, 29, 5, 10, 25, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 608, True); alias=default
DEBUG 2024-03-03 00:46:06,698 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 15', 2, '2023-12-29T05:15:44.477799+01:00'::timestamptz, 949, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 15', 2, datetime.datetime(2023, 12, 29, 5, 15, 44, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 949, True); alias=default
DEBUG 2024-03-03 00:46:06,700 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 3', 0, '2023-12-29T05:16:33.477799+01:00'::timestamptz, 41, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 3', 0, datetime.datetime(2023, 12, 29, 5, 16, 33, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 41, True); alias=default
DEBUG 2024-03-03 00:46:06,701 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2023-12-29T05:16:33.477799+01:00'::timestamptz, 998, '["Player 14", "Player 3", "Player 1", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2023, 12, 29, 5, 16, 33, 477799, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 998, <psycopg2._json.Json object at 0x7f2132fef230>, '0x0'); alias=default
DEBUG 2024-03-03 00:46:06,702 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,703 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,704 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 00:46:06,704 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,705 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 00:46:06,706 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,707 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 00:46:06,708 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 00:46:06,709 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 00:46:06,710 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 00:46:06,711 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,712 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 00:46:06,713 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,714 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 00:46:06,715 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,716 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,718 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,719 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,720 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,721 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,722 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 00:46:06,722 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,723 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 00:46:06,724 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,725 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 00:46:06,726 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 00:46:06,727 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,727 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 00:46:06,728 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,729 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 00:46:06,730 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,731 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,733 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,734 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,736 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,737 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,738 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 00:46:06,738 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,738 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 00:46:06,739 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,740 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 00:46:06,741 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 00:46:06,742 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,743 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 00:46:06,743 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,744 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 00:46:06,745 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,746 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,747 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,749 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,751 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,751 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,752 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 00:46:06,752 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,753 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 00:46:06,754 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,755 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 00:46:06,756 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 00:46:06,757 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 00:46:06,757 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:46:06,758 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 00:46:06,759 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:46:06,760 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 00:46:06,761 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,762 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,763 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,764 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,766 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:46:06,767 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
