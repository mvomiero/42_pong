DEBUG 2024-02-27 22:43:48,563 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:43:48,566 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,567 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:43:48,568 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,588 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:43:48,589 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:43:48,590 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,592 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:43:48,593 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 22:43:48,595 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 22:43:48,596 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:43:48,598 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,599 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,600 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,601 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,637 utils (0.009) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 9, 'Player 9', 11, '2023-11-08T05:43:45.599466+01:00'::timestamptz, 986, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 9, 'Player 9', 11, datetime.datetime(2023, 11, 8, 5, 43, 45, 599466, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 986, True); alias=default
DEBUG 2024-02-27 22:43:48,640 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 10', 8, '2023-11-08T05:38:58.599466+01:00'::timestamptz, 644, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 10', 8, datetime.datetime(2023, 11, 8, 5, 38, 58, 599466, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 644, True); alias=default
DEBUG 2024-02-27 22:43:48,641 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 4, 'Player 14', 11, '2023-11-08T05:43:58.599466+01:00'::timestamptz, 107, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 4, 'Player 14', 11, datetime.datetime(2023, 11, 8, 5, 43, 58, 599466, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 107, True); alias=default
DEBUG 2024-02-27 22:43:48,642 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2357, 2358, 2359, '2023-11-08T05:43:58.599466+01:00'::timestamptz, 999, '["Player 14", "Player 9", "Player 8", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2357, 2358, 2359, datetime.datetime(2023, 11, 8, 5, 43, 58, 599466, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 999, <psycopg2._json.Json object at 0x7f57c3f4e870>, '0x0'); alias=default
DEBUG 2024-02-27 22:43:48,643 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 5, 'Player 6', 11, '2023-11-06T03:24:15.599466+01:00'::timestamptz, 378, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 5, 'Player 6', 11, datetime.datetime(2023, 11, 6, 3, 24, 15, 599466, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 378, True); alias=default
DEBUG 2024-02-27 22:43:48,645 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 9, 'Player 1', 11, '2023-11-06T03:29:17.599466+01:00'::timestamptz, 585, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 9, 'Player 1', 11, datetime.datetime(2023, 11, 6, 3, 29, 17, 599466, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 585, True); alias=default
DEBUG 2024-02-27 22:43:48,646 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 7, 'Player 1', 11, '2023-11-06T03:29:37.599466+01:00'::timestamptz, 935, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 7, 'Player 1', 11, datetime.datetime(2023, 11, 6, 3, 29, 37, 599466, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 935, True); alias=default
DEBUG 2024-02-27 22:43:48,647 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2360, 2361, 2362, '2023-11-06T03:29:37.599466+01:00'::timestamptz, 700, '["Player 1", "Player 6", "Player 11", "Player 13"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2360, 2361, 2362, datetime.datetime(2023, 11, 6, 3, 29, 37, 599466, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 700, <psycopg2._json.Json object at 0x7f57c3f4f2f0>, '0x0'); alias=default
DEBUG 2024-02-27 22:43:48,648 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,649 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,650 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:43:48,651 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 22:43:48,652 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 22:43:48,653 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 22:43:48,656 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 22:43:48,657 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:43:48,658 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,659 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,660 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,661 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,662 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 11', 10, '2023-12-03T09:47:11.659847+01:00'::timestamptz, 543, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 11', 10, datetime.datetime(2023, 12, 3, 9, 47, 11, 659847, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 543, True); alias=default
DEBUG 2024-02-27 22:43:48,664 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 5, 'Player 9', 11, '2023-12-03T09:43:04.659847+01:00'::timestamptz, 306, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 5, 'Player 9', 11, datetime.datetime(2023, 12, 3, 9, 43, 4, 659847, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 306, True); alias=default
DEBUG 2024-02-27 22:43:48,665 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 9', 9, '2023-12-03T09:53:07.659847+01:00'::timestamptz, 570, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 9', 9, datetime.datetime(2023, 12, 3, 9, 53, 7, 659847, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 570, True); alias=default
DEBUG 2024-02-27 22:43:48,666 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2363, 2364, 2365, '2023-12-03T09:53:07.659847+01:00'::timestamptz, 909, '["Player 3", "Player 9", "Player 11", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2363, 2364, 2365, datetime.datetime(2023, 12, 3, 9, 53, 7, 659847, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 909, <psycopg2._json.Json object at 0x7f57c3f4f830>, '0x0'); alias=default
DEBUG 2024-02-27 22:43:48,667 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 12', 6, '2023-12-01T23:20:54.659847+01:00'::timestamptz, 974, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 12', 6, datetime.datetime(2023, 12, 1, 23, 20, 54, 659847, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 974, True); alias=default
DEBUG 2024-02-27 22:43:48,668 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 10', 7, '2023-12-01T23:05:58.659847+01:00'::timestamptz, 39, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 10', 7, datetime.datetime(2023, 12, 1, 23, 5, 58, 659847, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 39, True); alias=default
DEBUG 2024-02-27 22:43:48,670 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 11', 0, '2023-12-01T23:20:57.659847+01:00'::timestamptz, 621, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 11', 0, datetime.datetime(2023, 12, 1, 23, 20, 57, 659847, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 621, True); alias=default
DEBUG 2024-02-27 22:43:48,671 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2366, 2367, 2368, '2023-12-01T23:20:57.659847+01:00'::timestamptz, 977, '["Player 1", "Player 11", "Player 12", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2366, 2367, 2368, datetime.datetime(2023, 12, 1, 23, 20, 57, 659847, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 977, <psycopg2._json.Json object at 0x7f57c3d78b00>, '0x0'); alias=default
DEBUG 2024-02-27 22:43:48,672 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,673 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,674 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:43:48,675 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 22:43:48,677 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 22:43:48,678 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:43:48,678 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,679 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,680 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,681 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,683 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 13', 9, '2023-12-14T10:11:20.679826+01:00'::timestamptz, 901, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 13', 9, datetime.datetime(2023, 12, 14, 10, 11, 20, 679826, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 901, True); alias=default
DEBUG 2024-02-27 22:43:48,684 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 14', 2, '2023-12-14T10:06:48.679826+01:00'::timestamptz, 153, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 14', 2, datetime.datetime(2023, 12, 14, 10, 6, 48, 679826, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 153, True); alias=default
DEBUG 2024-02-27 22:43:48,685 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 7', 9, '2023-12-14T10:11:20.679826+01:00'::timestamptz, 361, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 7', 9, datetime.datetime(2023, 12, 14, 10, 11, 20, 679826, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 361, True); alias=default
DEBUG 2024-02-27 22:43:48,686 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2369, 2370, 2371, '2023-12-14T10:11:20.679826+01:00'::timestamptz, 901, '["Player 15", "Player 7", "Player 13", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2369, 2370, 2371, datetime.datetime(2023, 12, 14, 10, 11, 20, 679826, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 901, <psycopg2._json.Json object at 0x7f57c3d79640>, '0x0'); alias=default
DEBUG 2024-02-27 22:43:48,688 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 1, 'Player 11', 11, '2023-11-06T06:22:32.679826+01:00'::timestamptz, 768, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 1, 'Player 11', 11, datetime.datetime(2023, 11, 6, 6, 22, 32, 679826, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 768, True); alias=default
DEBUG 2024-02-27 22:43:48,690 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 13', 4, '2023-11-06T06:14:48.679826+01:00'::timestamptz, 200, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 13', 4, datetime.datetime(2023, 11, 6, 6, 14, 48, 679826, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 200, True); alias=default
DEBUG 2024-02-27 22:43:48,691 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 0, 'Player 14', 11, '2023-11-06T06:22:41.679826+01:00'::timestamptz, 521, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 0, 'Player 14', 11, datetime.datetime(2023, 11, 6, 6, 22, 41, 679826, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 521, True); alias=default
DEBUG 2024-02-27 22:43:48,692 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2372, 2373, 2374, '2023-11-06T06:22:41.679826+01:00'::timestamptz, 777, '["Player 14", "Player 11", "Player 0", "Player 13"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2372, 2373, 2374, datetime.datetime(2023, 11, 6, 6, 22, 41, 679826, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 777, <psycopg2._json.Json object at 0x7f57c3d79ac0>, '0x0'); alias=default
DEBUG 2024-02-27 22:43:48,693 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,694 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,695 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:43:48,696 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 22:43:48,697 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 22:43:48,699 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:43:48,700 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,701 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,702 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,703 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,705 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 8', 2, '2023-11-14T07:47:31.701450+01:00'::timestamptz, 423, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 8', 2, datetime.datetime(2023, 11, 14, 7, 47, 31, 701450, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 423, True); alias=default
DEBUG 2024-02-27 22:43:48,707 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 0', 10, '2023-11-14T07:41:33.701450+01:00'::timestamptz, 138, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 0', 10, datetime.datetime(2023, 11, 14, 7, 41, 33, 701450, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 138, True); alias=default
DEBUG 2024-02-27 22:43:48,708 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 2, 'Player 2', 11, '2023-11-14T07:48:06.701450+01:00'::timestamptz, 490, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 2, 'Player 2', 11, datetime.datetime(2023, 11, 14, 7, 48, 6, 701450, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 490, True); alias=default
DEBUG 2024-02-27 22:43:48,709 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2375, 2376, 2377, '2023-11-14T07:48:06.701450+01:00'::timestamptz, 531, '["Player 2", "Player 5", "Player 8", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2375, 2376, 2377, datetime.datetime(2023, 11, 14, 7, 48, 6, 701450, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 531, <psycopg2._json.Json object at 0x7f57c3f4e9c0>, '0x0'); alias=default
DEBUG 2024-02-27 22:43:48,710 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 8', 5, '2023-12-22T19:11:10.701450+01:00'::timestamptz, 111, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 8', 5, datetime.datetime(2023, 12, 22, 19, 11, 10, 701450, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 111, True); alias=default
DEBUG 2024-02-27 22:43:48,712 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 7', 5, '2023-12-22T19:18:01.701450+01:00'::timestamptz, 870, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 7', 5, datetime.datetime(2023, 12, 22, 19, 18, 1, 701450, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 870, True); alias=default
DEBUG 2024-02-27 22:43:48,713 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 12', 7, '2023-12-22T19:19:19.701450+01:00'::timestamptz, 654, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 12', 7, datetime.datetime(2023, 12, 22, 19, 19, 19, 701450, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 654, True); alias=default
DEBUG 2024-02-27 22:43:48,714 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2378, 2379, 2380, '2023-12-22T19:19:19.701450+01:00'::timestamptz, 948, '["Player 3", "Player 12", "Player 8", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2378, 2379, 2380, datetime.datetime(2023, 12, 22, 19, 19, 19, 701450, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 948, <psycopg2._json.Json object at 0x7f57c3d7b050>, '0x0'); alias=default
DEBUG 2024-02-27 22:43:48,715 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,716 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,716 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:43:48,717 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 22:43:48,719 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 22:43:48,720 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 22:43:48,722 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:43:48,724 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,725 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,726 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,727 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,728 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 12', 0, '2023-12-23T22:39:04.725266+01:00'::timestamptz, 928, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 12', 0, datetime.datetime(2023, 12, 23, 22, 39, 4, 725266, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 928, True); alias=default
DEBUG 2024-02-27 22:43:48,730 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 4, 'Player 6', 11, '2023-12-23T22:36:51.725266+01:00'::timestamptz, 89, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 4, 'Player 6', 11, datetime.datetime(2023, 12, 23, 22, 36, 51, 725266, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 89, True); alias=default
DEBUG 2024-02-27 22:43:48,731 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 2, 'Player 6', 11, '2023-12-23T22:39:35.725266+01:00'::timestamptz, 556, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 2, 'Player 6', 11, datetime.datetime(2023, 12, 23, 22, 39, 35, 725266, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 556, True); alias=default
DEBUG 2024-02-27 22:43:48,732 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2381, 2382, 2383, '2023-12-23T22:39:35.725266+01:00'::timestamptz, 959, '["Player 6", "Player 8", "Player 12", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2381, 2382, 2383, datetime.datetime(2023, 12, 23, 22, 39, 35, 725266, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 959, <psycopg2._json.Json object at 0x7f57c3d7b770>, '0x0'); alias=default
DEBUG 2024-02-27 22:43:48,733 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 12', 2, '2023-11-30T00:24:23.725266+01:00'::timestamptz, 822, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 12', 2, datetime.datetime(2023, 11, 30, 0, 24, 23, 725266, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 822, True); alias=default
DEBUG 2024-02-27 22:43:48,734 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 8, 'Player 15', 11, '2023-11-30T00:25:46.725266+01:00'::timestamptz, 455, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 8, 'Player 15', 11, datetime.datetime(2023, 11, 30, 0, 25, 46, 725266, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 455, True); alias=default
DEBUG 2024-02-27 22:43:48,735 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 7, 'Player 15', 11, '2023-11-30T00:27:17.725266+01:00'::timestamptz, 159, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 7, 'Player 15', 11, datetime.datetime(2023, 11, 30, 0, 27, 17, 725266, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 159, True); alias=default
DEBUG 2024-02-27 22:43:48,736 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2384, 2385, 2386, '2023-11-30T00:27:17.725266+01:00'::timestamptz, 996, '["Player 15", "Player 1", "Player 12", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2384, 2385, 2386, datetime.datetime(2023, 11, 30, 0, 27, 17, 725266, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 996, <psycopg2._json.Json object at 0x7f57c3d7b920>, '0x0'); alias=default
DEBUG 2024-02-27 22:43:48,738 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:43:48,739 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
