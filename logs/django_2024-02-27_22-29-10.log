DEBUG 2024-02-27 22:29:11,838 utils (0.003) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:29:11,840 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:29:11,842 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:29:11,843 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:29:11,858 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:29:11,859 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:29:11,860 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:29:11,862 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:29:11,863 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 22:29:11,866 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 22:29:11,867 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:29:11,874 utils (0.006) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:29:11,875 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:29:11,876 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:29:11,877 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:29:11,920 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 3, 'Player 15', 11, '2024-02-01T16:52:18.876011+01:00'::timestamptz, 150, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 3, 'Player 15', 11, datetime.datetime(2024, 2, 1, 16, 52, 18, 876011, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 150, True); alias=default
DEBUG 2024-02-27 22:29:11,922 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 3', 1, '2024-02-01T16:53:32.876011+01:00'::timestamptz, 794, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 3', 1, datetime.datetime(2024, 2, 1, 16, 53, 32, 876011, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 794, True); alias=default
DEBUG 2024-02-27 22:29:11,924 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 0', 0, '2024-02-01T16:55:15.876011+01:00'::timestamptz, 107, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 0', 0, datetime.datetime(2024, 2, 1, 16, 55, 15, 876011, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 107, True); alias=default
DEBUG 2024-02-27 22:29:11,926 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2174, 2175, 2176, '2024-02-01T16:55:15.876011+01:00'::timestamptz, 897, '["Player 15", "Player 0", "Player 7", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2174, 2175, 2176, datetime.datetime(2024, 2, 1, 16, 55, 15, 876011, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 897, <psycopg2._json.Json object at 0x7f4e0d0c2b10>, '0x0'); alias=default
DEBUG 2024-02-27 22:29:11,929 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 10, 'Player 6', 11, '2024-01-04T11:19:34.876011+01:00'::timestamptz, 662, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 10, 'Player 6', 11, datetime.datetime(2024, 1, 4, 11, 19, 34, 876011, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 662, True); alias=default
DEBUG 2024-02-27 22:29:11,931 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 4, 'Player 3', 11, '2024-01-04T11:21:56.876011+01:00'::timestamptz, 92, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 4, 'Player 3', 11, datetime.datetime(2024, 1, 4, 11, 21, 56, 876011, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 92, True); alias=default
DEBUG 2024-02-27 22:29:11,934 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 3', 7, '2024-01-04T11:23:18.876011+01:00'::timestamptz, 778, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 3', 7, datetime.datetime(2024, 1, 4, 11, 23, 18, 876011, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 778, True); alias=default
DEBUG 2024-02-27 22:29:11,936 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2177, 2178, 2179, '2024-01-04T11:23:18.876011+01:00'::timestamptz, 886, '["Player 6", "Player 3", "Player 8", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2177, 2178, 2179, datetime.datetime(2024, 1, 4, 11, 23, 18, 876011, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 886, <psycopg2._json.Json object at 0x7f4e0d0c2f90>, '0x0'); alias=default
DEBUG 2024-02-27 22:29:11,938 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:29:11,940 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:29:11,942 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:29:11,943 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 22:29:11,945 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 22:29:11,947 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 22:29:11,952 utils (0.003) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 22:29:11,954 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:29:11,955 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:29:11,956 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:29:11,958 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:29:11,959 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:29:11,964 utils (0.003) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 6', 1, '2024-01-25T02:29:56.957109+01:00'::timestamptz, 645, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 6', 1, datetime.datetime(2024, 1, 25, 2, 29, 56, 957109, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 645, True); alias=default
DEBUG 2024-02-27 22:29:11,965 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 9, 'Player 5', 11, '2024-01-25T02:33:53.957109+01:00'::timestamptz, 937, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 9, 'Player 5', 11, datetime.datetime(2024, 1, 25, 2, 33, 53, 957109, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 937, True); alias=default
DEBUG 2024-02-27 22:29:11,967 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 5', 2, '2024-01-25T02:34:50.957109+01:00'::timestamptz, 261, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 5', 2, datetime.datetime(2024, 1, 25, 2, 34, 50, 957109, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 261, True); alias=default
DEBUG 2024-02-27 22:29:11,968 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2180, 2181, 2182, '2024-01-25T02:34:50.957109+01:00'::timestamptz, 994, '["Player 9", "Player 5", "Player 6", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2180, 2181, 2182, datetime.datetime(2024, 1, 25, 2, 34, 50, 957109, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 994, <psycopg2._json.Json object at 0x7f4e0d0c3fe0>, '0x0'); alias=default
DEBUG 2024-02-27 22:29:11,970 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 0', 2, '2023-11-13T09:15:27.957109+01:00'::timestamptz, 417, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 0', 2, datetime.datetime(2023, 11, 13, 9, 15, 27, 957109, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 417, True); alias=default
DEBUG 2024-02-27 22:29:11,971 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 3', 2, '2023-11-13T09:21:00.957109+01:00'::timestamptz, 665, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 3', 2, datetime.datetime(2023, 11, 13, 9, 21, 0, 957109, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 665, True); alias=default
DEBUG 2024-02-27 22:29:11,973 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 9, 'Player 7', 11, '2023-11-13T09:21:29.957109+01:00'::timestamptz, 112, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 9, 'Player 7', 11, datetime.datetime(2023, 11, 13, 9, 21, 29, 957109, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 112, True); alias=default
DEBUG 2024-02-27 22:29:11,974 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2183, 2184, 2185, '2023-11-13T09:21:29.957109+01:00'::timestamptz, 779, '["Player 7", "Player 8", "Player 0", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2183, 2184, 2185, datetime.datetime(2023, 11, 13, 9, 21, 29, 957109, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 779, <psycopg2._json.Json object at 0x7f4e0cee8530>, '0x0'); alias=default
DEBUG 2024-02-27 22:29:11,975 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:29:11,976 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:29:11,977 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:29:11,978 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 22:29:11,984 utils (0.003) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 22:29:11,985 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:29:11,986 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:29:11,987 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:29:11,989 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:29:11,991 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:29:11,993 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 4, 'Player 6', 11, '2023-12-27T01:10:38.988118+01:00'::timestamptz, 454, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 4, 'Player 6', 11, datetime.datetime(2023, 12, 27, 1, 10, 38, 988118, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 454, True); alias=default
DEBUG 2024-02-27 22:29:11,994 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 5', 4, '2023-12-27T01:15:42.988118+01:00'::timestamptz, 816, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 5', 4, datetime.datetime(2023, 12, 27, 1, 15, 42, 988118, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 816, True); alias=default
DEBUG 2024-02-27 22:29:11,996 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 10', 7, '2023-12-27T01:17:48.988118+01:00'::timestamptz, 489, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 10', 7, datetime.datetime(2023, 12, 27, 1, 17, 48, 988118, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 489, True); alias=default
DEBUG 2024-02-27 22:29:11,997 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2186, 2187, 2188, '2023-12-27T01:17:48.988118+01:00'::timestamptz, 942, '["Player 6", "Player 10", "Player 12", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2186, 2187, 2188, datetime.datetime(2023, 12, 27, 1, 17, 48, 988118, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 942, <psycopg2._json.Json object at 0x7f4e0cee83e0>, '0x0'); alias=default
DEBUG 2024-02-27 22:29:11,999 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 9', 2, '2023-12-12T09:29:11.988118+01:00'::timestamptz, 316, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 9', 2, datetime.datetime(2023, 12, 12, 9, 29, 11, 988118, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 316, True); alias=default
DEBUG 2024-02-27 22:29:12,001 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 11', 5, '2023-12-12T09:38:48.988118+01:00'::timestamptz, 851, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 11', 5, datetime.datetime(2023, 12, 12, 9, 38, 48, 988118, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 851, True); alias=default
DEBUG 2024-02-27 22:29:12,002 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 7, 'Player 4', 11, '2023-12-12T09:40:27.988118+01:00'::timestamptz, 540, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 7, 'Player 4', 11, datetime.datetime(2023, 12, 12, 9, 40, 27, 988118, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 540, True); alias=default
DEBUG 2024-02-27 22:29:12,003 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2189, 2190, 2191, '2023-12-12T09:40:27.988118+01:00'::timestamptz, 992, '["Player 4", "Player 1", "Player 9", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2189, 2190, 2191, datetime.datetime(2023, 12, 12, 9, 40, 27, 988118, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 992, <psycopg2._json.Json object at 0x7f4e0cee9640>, '0x0'); alias=default
DEBUG 2024-02-27 22:29:12,005 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:29:12,006 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:29:12,007 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:29:12,009 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 22:29:12,012 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 22:29:12,013 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:29:12,015 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:29:12,016 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:29:12,018 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:29:12,020 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:29:12,022 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 10', 6, '2024-01-04T13:49:19.016948+01:00'::timestamptz, 337, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 10', 6, datetime.datetime(2024, 1, 4, 13, 49, 19, 16948, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 337, True); alias=default
DEBUG 2024-02-27 22:29:12,024 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 8, 'Player 15', 11, '2024-01-04T13:50:11.016948+01:00'::timestamptz, 303, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 8, 'Player 15', 11, datetime.datetime(2024, 1, 4, 13, 50, 11, 16948, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 303, True); alias=default
DEBUG 2024-02-27 22:29:12,026 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 2, 'Player 15', 11, '2024-01-04T13:52:49.016948+01:00'::timestamptz, 259, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 2, 'Player 15', 11, datetime.datetime(2024, 1, 4, 13, 52, 49, 16948, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 259, True); alias=default
DEBUG 2024-02-27 22:29:12,027 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2192, 2193, 2194, '2024-01-04T13:52:49.016948+01:00'::timestamptz, 547, '["Player 15", "Player 11", "Player 10", "Player 13"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2192, 2193, 2194, datetime.datetime(2024, 1, 4, 13, 52, 49, 16948, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 547, <psycopg2._json.Json object at 0x7f4e0cee9ee0>, '0x0'); alias=default
DEBUG 2024-02-27 22:29:12,029 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 8, 'Player 8', 11, '2024-01-17T07:28:49.016948+01:00'::timestamptz, 40, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 8, 'Player 8', 11, datetime.datetime(2024, 1, 17, 7, 28, 49, 16948, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 40, True); alias=default
DEBUG 2024-02-27 22:29:12,031 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 9', 5, '2024-01-17T07:43:51.016948+01:00'::timestamptz, 631, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 9', 5, datetime.datetime(2024, 1, 17, 7, 43, 51, 16948, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 631, True); alias=default
DEBUG 2024-02-27 22:29:12,033 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 8, 'Player 1', 11, '2024-01-17T07:44:42.016948+01:00'::timestamptz, 450, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 8, 'Player 1', 11, datetime.datetime(2024, 1, 17, 7, 44, 42, 16948, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 450, True); alias=default
DEBUG 2024-02-27 22:29:12,034 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2195, 2196, 2197, '2024-01-17T07:44:42.016948+01:00'::timestamptz, 993, '["Player 1", "Player 8", "Player 4", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2195, 2196, 2197, datetime.datetime(2024, 1, 17, 7, 44, 42, 16948, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 993, <psycopg2._json.Json object at 0x7f4e0ceeac00>, '0x0'); alias=default
DEBUG 2024-02-27 22:29:12,036 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:29:12,037 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:29:12,039 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:29:12,041 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 22:29:12,043 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 22:29:12,045 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 22:29:12,046 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:29:12,047 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:29:12,048 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:29:12,049 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:29:12,050 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:29:12,052 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 3, 'Player 5', 11, '2023-11-09T16:43:25.048619+01:00'::timestamptz, 581, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 3, 'Player 5', 11, datetime.datetime(2023, 11, 9, 16, 43, 25, 48619, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 581, True); alias=default
DEBUG 2024-02-27 22:29:12,056 utils (0.003) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 5, 'Player 6', 11, '2023-11-09T16:44:55.048619+01:00'::timestamptz, 919, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 5, 'Player 6', 11, datetime.datetime(2023, 11, 9, 16, 44, 55, 48619, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 919, True); alias=default
DEBUG 2024-02-27 22:29:12,058 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 10, 'Player 6', 11, '2023-11-09T16:45:38.048619+01:00'::timestamptz, 748, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 10, 'Player 6', 11, datetime.datetime(2023, 11, 9, 16, 45, 38, 48619, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 748, True); alias=default
DEBUG 2024-02-27 22:29:12,059 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2198, 2199, 2200, '2023-11-09T16:45:38.048619+01:00'::timestamptz, 962, '["Player 6", "Player 5", "Player 9", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2198, 2199, 2200, datetime.datetime(2023, 11, 9, 16, 45, 38, 48619, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 962, <psycopg2._json.Json object at 0x7f4e0ceea0c0>, '0x0'); alias=default
DEBUG 2024-02-27 22:29:12,061 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 14', 3, '2024-02-04T07:34:13.048619+01:00'::timestamptz, 764, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 14', 3, datetime.datetime(2024, 2, 4, 7, 34, 13, 48619, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 764, True); alias=default
DEBUG 2024-02-27 22:29:12,063 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 4', 9, '2024-02-04T07:35:30.048619+01:00'::timestamptz, 975, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 4', 9, datetime.datetime(2024, 2, 4, 7, 35, 30, 48619, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 975, True); alias=default
DEBUG 2024-02-27 22:29:12,065 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 1, 'Player 6', 11, '2024-02-04T07:35:45.048619+01:00'::timestamptz, 100, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 1, 'Player 6', 11, datetime.datetime(2024, 2, 4, 7, 35, 45, 48619, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 100, True); alias=default
DEBUG 2024-02-27 22:29:12,066 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2201, 2202, 2203, '2024-02-04T07:35:45.048619+01:00'::timestamptz, 990, '["Player 6", "Player 15", "Player 14", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2201, 2202, 2203, datetime.datetime(2024, 2, 4, 7, 35, 45, 48619, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 990, <psycopg2._json.Json object at 0x7f4e0ceeb410>, '0x0'); alias=default
DEBUG 2024-02-27 22:29:12,068 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:29:12,071 utils (0.002) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
