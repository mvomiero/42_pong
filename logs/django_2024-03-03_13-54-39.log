DEBUG 2024-03-03 13:54:39,958 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:39,959 utils (0.000) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:39,960 utils (0.000) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:39,960 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:39,960 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 13:54:39,969 utils (0.009) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:54:39,970 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:39,970 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:39,971 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 13:54:39,972 utils (0.001) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:54:39,974 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 13:54:39,975 utils (0.001) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 13:54:39,975 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:39,977 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T13:54:39.975936+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 13, 54, 39, 975936, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:54:39,977 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:39,977 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:39,979 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 13:54:39,980 utils (0.001) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:54:39,982 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 13:54:39,985 utils (0.003) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 13:54:39,985 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 13:54:39,987 utils (0.001) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:54:39,990 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 13:54:39,992 utils (0.002) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:54:39,993 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 13:54:39,994 utils (0.001) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:54:39,995 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 13:54:39,996 utils (0.001) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:54:39,996 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 13:54:39,997 utils (0.001) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 13:54:39,997 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 13:54:39,998 utils (0.001) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 13:54:39,999 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 13:54:40,000 utils (0.001) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 13:54:40,000 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 13:54:40,001 utils (0.001) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 13:54:40,001 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 13:54:40,002 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 13:54:40,002 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 13:54:40,002 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 13:54:40,003 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 13:54:40,003 utils (0.000) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 13:54:40,003 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 13:54:40,004 utils (0.001) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 13:54:40,004 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 13:54:40,005 utils (0.001) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 13:54:40,005 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 13:54:40,006 utils (0.001) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 13:54:40,006 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 13:54:40,007 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 13:54:40,007 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 13:54:40,008 utils (0.000) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 13:54:40,008 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 13:54:40,008 utils (0.000) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 13:54:40,008 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 13:54:40,009 utils (0.001) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 13:54:40,009 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 13:54:40,010 utils (0.001) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 13:54:40,010 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 13:54:40,011 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 13:54:40,011 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 13:54:40,012 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 13:54:40,012 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 13:54:40,013 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 13:54:40,013 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 13:54:40,014 utils (0.001) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 13:54:40,014 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 13:54:40,015 utils (0.001) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 13:54:40,015 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,016 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:40,017 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T13:54:40.016821+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 13, 54, 40, 16821, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:54:40,017 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,021 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 13:54:40,024 utils (0.002) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:54:40,024 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 13:54:40,024 utils (0.000) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 13:54:40,024 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 13:54:40,025 utils (0.000) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 13:54:40,025 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 13:54:40,026 utils (0.001) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 13:54:40,026 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 13:54:40,027 utils (0.001) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 13:54:40,027 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,028 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:40,029 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T13:54:40.028620+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 13, 54, 40, 28620, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:54:40,029 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,035 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:40,035 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T13:54:40.035510+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 13, 54, 40, 35510, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:54:40,036 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,036 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,041 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:40,041 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T13:54:40.041148+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 13, 54, 40, 41148, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:54:40,041 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,041 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,045 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 13:54:40,045 utils (0.000) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 13:54:40,051 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 13:54:40,052 utils (0.000) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 13:54:40,052 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:40,053 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T13:54:40.052862+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 13, 54, 40, 52862, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:54:40,053 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,053 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,057 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 13:54:40,057 utils (0.000) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 13:54:40,058 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:40,058 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T13:54:40.058702+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 13, 54, 40, 58702, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:54:40,059 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,059 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,067 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 13:54:40,068 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 13:54:40,069 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:40,069 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T13:54:40.069343+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 13, 54, 40, 69343, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:54:40,070 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,070 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,075 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:40,076 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T13:54:40.075660+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 13, 54, 40, 75660, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:54:40,076 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,076 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,082 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 13:54:40,083 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 13:54:40,084 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:40,084 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T13:54:40.084477+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 13, 54, 40, 84477, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:54:40,085 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,085 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,086 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:40,086 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T13:54:40.086211+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 13, 54, 40, 86211, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:54:40,087 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,087 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,092 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:40,092 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T13:54:40.092394+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 13, 54, 40, 92394, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:54:40,093 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,093 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,099 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 13:54:40,101 utils (0.002) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 13:54:40,102 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:40,103 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T13:54:40.102890+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 13, 54, 40, 102890, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:54:40,104 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,104 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,108 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 13:54:40,108 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 13:54:40,109 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:40,109 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T13:54:40.109477+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 13, 54, 40, 109477, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:54:40,110 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,110 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,117 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 13:54:40,118 utils (0.001) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 13:54:40,118 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:40,119 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T13:54:40.119081+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 13, 54, 40, 119081, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:54:40,119 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,119 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,125 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:40,125 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T13:54:40.125231+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 13, 54, 40, 125231, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:54:40,126 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,126 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,132 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 13:54:40,132 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 13:54:40,133 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:40,134 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T13:54:40.133912+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 13, 54, 40, 133912, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:54:40,134 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,134 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,135 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 13:54:40,138 utils (0.003) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:54:40,139 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 13:54:40,141 utils (0.002) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 13:54:40,142 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:40,143 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T13:54:40.142745+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 13, 54, 40, 142745, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:54:40,143 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,143 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,145 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 13:54:40,147 utils (0.002) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 13:54:40,147 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 13:54:40,148 utils (0.001) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 13:54:40,148 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 13:54:40,149 utils (0.001) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 13:54:40,150 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,150 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:40,151 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T13:54:40.150953+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 13, 54, 40, 150953, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 13:54:40,152 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 13:54:40,152 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,160 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 13:54:40,160 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,161 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 13:54:40,162 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,163 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 13:54:40,165 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 13:54:40,165 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,166 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 13:54:40,166 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,167 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 13:54:40,168 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,168 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,169 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,184 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 4, 'Player 15', 11, '2023-12-06T05:00:47.169018+01:00'::timestamptz, 336, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 4, 'Player 15', 11, datetime.datetime(2023, 12, 6, 5, 0, 47, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 336, False); alias=default
DEBUG 2024-03-03 13:54:40,185 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 9, 'Player 15', 11, '2023-12-24T18:22:45.169018+01:00'::timestamptz, 27, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 9, 'Player 15', 11, datetime.datetime(2023, 12, 24, 18, 22, 45, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 27, False); alias=default
DEBUG 2024-03-03 13:54:40,185 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 4, 'Player 4', 11, '2024-03-02T12:45:39.169018+01:00'::timestamptz, 987, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 4, 'Player 4', 11, datetime.datetime(2024, 3, 2, 12, 45, 39, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 987, False); alias=default
DEBUG 2024-03-03 13:54:40,186 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 1, 'Player 3', 11, '2024-02-03T17:21:58.169018+01:00'::timestamptz, 808, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 1, 'Player 3', 11, datetime.datetime(2024, 2, 3, 17, 21, 58, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 808, False); alias=default
DEBUG 2024-03-03 13:54:40,187 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 0, 'Player 10', 11, '2023-12-19T17:53:46.169018+01:00'::timestamptz, 365, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 0, 'Player 10', 11, datetime.datetime(2023, 12, 19, 17, 53, 46, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 365, False); alias=default
DEBUG 2024-03-03 13:54:40,187 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 7, 'Player 5', 11, '2024-01-27T14:32:02.169018+01:00'::timestamptz, 273, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 7, 'Player 5', 11, datetime.datetime(2024, 1, 27, 14, 32, 2, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 273, False); alias=default
DEBUG 2024-03-03 13:54:40,188 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 9, 'Player 3', 11, '2023-12-28T05:25:20.169018+01:00'::timestamptz, 763, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 9, 'Player 3', 11, datetime.datetime(2023, 12, 28, 5, 25, 20, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 763, False); alias=default
DEBUG 2024-03-03 13:54:40,189 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 9, 'Player 11', 11, '2023-12-03T03:36:59.169018+01:00'::timestamptz, 200, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 9, 'Player 11', 11, datetime.datetime(2023, 12, 3, 3, 36, 59, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 200, False); alias=default
DEBUG 2024-03-03 13:54:40,189 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 9, 'Player 9', 11, '2024-01-20T04:31:25.169018+01:00'::timestamptz, 909, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 9, 'Player 9', 11, datetime.datetime(2024, 1, 20, 4, 31, 25, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 909, False); alias=default
DEBUG 2024-03-03 13:54:40,190 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 10, 'Player 13', 11, '2024-02-11T01:55:03.169018+01:00'::timestamptz, 726, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 10, 'Player 13', 11, datetime.datetime(2024, 2, 11, 1, 55, 3, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 726, False); alias=default
DEBUG 2024-03-03 13:54:40,190 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 10', 9, '2024-01-05T20:04:51.169018+01:00'::timestamptz, 794, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 10', 9, datetime.datetime(2024, 1, 5, 20, 4, 51, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 794, False); alias=default
DEBUG 2024-03-03 13:54:40,191 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 2, 'Player 8', 11, '2023-11-22T00:13:33.169018+01:00'::timestamptz, 186, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 2, 'Player 8', 11, datetime.datetime(2023, 11, 22, 0, 13, 33, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 186, False); alias=default
DEBUG 2024-03-03 13:54:40,192 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 4', 4, '2024-01-25T21:38:56.169018+01:00'::timestamptz, 380, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 4', 4, datetime.datetime(2024, 1, 25, 21, 38, 56, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 380, False); alias=default
DEBUG 2024-03-03 13:54:40,192 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 10, 'Player 19', 11, '2024-01-09T14:09:48.169018+01:00'::timestamptz, 281, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 10, 'Player 19', 11, datetime.datetime(2024, 1, 9, 14, 9, 48, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 281, False); alias=default
DEBUG 2024-03-03 13:54:40,193 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 19', 4, '2024-02-23T18:41:06.169018+01:00'::timestamptz, 671, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 19', 4, datetime.datetime(2024, 2, 23, 18, 41, 6, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 671, False); alias=default
DEBUG 2024-03-03 13:54:40,194 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 6, 'Player 20', 11, '2023-12-23T17:54:43.169018+01:00'::timestamptz, 971, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 6, 'Player 20', 11, datetime.datetime(2023, 12, 23, 17, 54, 43, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 971, False); alias=default
DEBUG 2024-03-03 13:54:40,194 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 6, 'Player 20', 11, '2024-02-08T05:04:45.169018+01:00'::timestamptz, 841, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 6, 'Player 20', 11, datetime.datetime(2024, 2, 8, 5, 4, 45, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 841, False); alias=default
DEBUG 2024-03-03 13:54:40,195 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 10', 1, '2024-02-23T14:37:32.169018+01:00'::timestamptz, 14, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 10', 1, datetime.datetime(2024, 2, 23, 14, 37, 32, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 14, False); alias=default
DEBUG 2024-03-03 13:54:40,196 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 7, 'Player 21', 11, '2023-12-05T05:35:33.169018+01:00'::timestamptz, 976, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 7, 'Player 21', 11, datetime.datetime(2023, 12, 5, 5, 35, 33, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 976, False); alias=default
DEBUG 2024-03-03 13:54:40,196 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 19', 2, '2024-02-22T04:07:14.169018+01:00'::timestamptz, 466, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 19', 2, datetime.datetime(2024, 2, 22, 4, 7, 14, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 466, False); alias=default
DEBUG 2024-03-03 13:54:40,197 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 8, 'Player 6', 11, '2024-02-07T16:57:46.169018+01:00'::timestamptz, 159, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 8, 'Player 6', 11, datetime.datetime(2024, 2, 7, 16, 57, 46, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 159, False); alias=default
DEBUG 2024-03-03 13:54:40,198 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 0, 'Player 1', 11, '2023-12-19T11:42:32.169018+01:00'::timestamptz, 433, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 0, 'Player 1', 11, datetime.datetime(2023, 12, 19, 11, 42, 32, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 433, False); alias=default
DEBUG 2024-03-03 13:54:40,198 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 2, 'Player 8', 11, '2024-02-20T07:29:14.169018+01:00'::timestamptz, 68, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 2, 'Player 8', 11, datetime.datetime(2024, 2, 20, 7, 29, 14, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 68, False); alias=default
DEBUG 2024-03-03 13:54:40,199 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 3', 4, '2023-11-04T08:38:52.169018+01:00'::timestamptz, 636, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 3', 4, datetime.datetime(2023, 11, 4, 8, 38, 52, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 636, False); alias=default
DEBUG 2024-03-03 13:54:40,199 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 7, 'Player 11', 11, '2023-11-17T00:02:29.169018+01:00'::timestamptz, 276, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 7, 'Player 11', 11, datetime.datetime(2023, 11, 17, 0, 2, 29, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 276, False); alias=default
DEBUG 2024-03-03 13:54:40,200 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 27', 0, '2023-11-08T17:16:26.169018+01:00'::timestamptz, 857, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 27', 0, datetime.datetime(2023, 11, 8, 17, 16, 26, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 857, False); alias=default
DEBUG 2024-03-03 13:54:40,201 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 3', 3, '2023-11-02T01:07:45.169018+01:00'::timestamptz, 211, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 3', 3, datetime.datetime(2023, 11, 2, 1, 7, 45, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 211, False); alias=default
DEBUG 2024-03-03 13:54:40,201 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 8, 'Player 1', 11, '2024-02-12T23:18:38.169018+01:00'::timestamptz, 839, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 8, 'Player 1', 11, datetime.datetime(2024, 2, 12, 23, 18, 38, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 839, False); alias=default
DEBUG 2024-03-03 13:54:40,202 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 26', 7, '2024-01-17T10:01:25.169018+01:00'::timestamptz, 654, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 26', 7, datetime.datetime(2024, 1, 17, 10, 1, 25, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 654, False); alias=default
DEBUG 2024-03-03 13:54:40,202 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 4, 'Player 27', 11, '2023-11-22T10:21:00.169018+01:00'::timestamptz, 465, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 4, 'Player 27', 11, datetime.datetime(2023, 11, 22, 10, 21, 0, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 465, False); alias=default
DEBUG 2024-03-03 13:54:40,203 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 20', 2, '2024-02-23T02:58:57.169018+01:00'::timestamptz, 905, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 20', 2, datetime.datetime(2024, 2, 23, 2, 58, 57, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 905, False); alias=default
DEBUG 2024-03-03 13:54:40,203 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 0, 'Player 24', 11, '2023-11-22T02:44:59.169018+01:00'::timestamptz, 606, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 0, 'Player 24', 11, datetime.datetime(2023, 11, 22, 2, 44, 59, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 606, False); alias=default
DEBUG 2024-03-03 13:54:40,204 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 10, 'Player 26', 11, '2023-12-21T05:43:19.169018+01:00'::timestamptz, 403, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 10, 'Player 26', 11, datetime.datetime(2023, 12, 21, 5, 43, 19, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 403, False); alias=default
DEBUG 2024-03-03 13:54:40,205 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 3', 4, '2024-01-19T18:00:38.169018+01:00'::timestamptz, 140, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 3', 4, datetime.datetime(2024, 1, 19, 18, 0, 38, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 140, False); alias=default
DEBUG 2024-03-03 13:54:40,205 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 12', 1, '2024-01-29T06:18:44.169018+01:00'::timestamptz, 934, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 12', 1, datetime.datetime(2024, 1, 29, 6, 18, 44, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 934, False); alias=default
DEBUG 2024-03-03 13:54:40,206 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 30', 6, '2023-11-27T21:09:55.169018+01:00'::timestamptz, 492, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 30', 6, datetime.datetime(2023, 11, 27, 21, 9, 55, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 492, False); alias=default
DEBUG 2024-03-03 13:54:40,206 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 23', 3, '2023-12-12T06:32:14.169018+01:00'::timestamptz, 85, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 23', 3, datetime.datetime(2023, 12, 12, 6, 32, 14, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 85, False); alias=default
DEBUG 2024-03-03 13:54:40,207 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 6, 'Player 28', 11, '2024-01-09T19:14:45.169018+01:00'::timestamptz, 671, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 6, 'Player 28', 11, datetime.datetime(2024, 1, 9, 19, 14, 45, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 671, False); alias=default
DEBUG 2024-03-03 13:54:40,208 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 1, 'Player 1', 11, '2023-12-10T09:47:15.169018+01:00'::timestamptz, 15, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 1, 'Player 1', 11, datetime.datetime(2023, 12, 10, 9, 47, 15, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 15, False); alias=default
DEBUG 2024-03-03 13:54:40,208 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 1, 'Player 34', 11, '2023-12-27T14:08:24.169018+01:00'::timestamptz, 129, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 1, 'Player 34', 11, datetime.datetime(2023, 12, 27, 14, 8, 24, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 129, False); alias=default
DEBUG 2024-03-03 13:54:40,209 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 6', 2, '2024-02-27T21:27:46.169018+01:00'::timestamptz, 319, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 6', 2, datetime.datetime(2024, 2, 27, 21, 27, 46, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 319, False); alias=default
DEBUG 2024-03-03 13:54:40,209 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 9', 0, '2023-12-22T05:07:53.169018+01:00'::timestamptz, 673, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 9', 0, datetime.datetime(2023, 12, 22, 5, 7, 53, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 673, False); alias=default
DEBUG 2024-03-03 13:54:40,210 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 2, 'Player 14', 11, '2024-01-16T22:09:18.169018+01:00'::timestamptz, 712, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 2, 'Player 14', 11, datetime.datetime(2024, 1, 16, 22, 9, 18, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 712, False); alias=default
DEBUG 2024-03-03 13:54:40,211 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 7', 3, '2023-11-13T21:20:58.169018+01:00'::timestamptz, 810, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 7', 3, datetime.datetime(2023, 11, 13, 21, 20, 58, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 810, False); alias=default
DEBUG 2024-03-03 13:54:40,211 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 34', 9, 'Player 24', 11, '2024-02-26T03:11:59.169018+01:00'::timestamptz, 367, false) RETURNING "pong_gamedata"."id"; args=('Player 34', 9, 'Player 24', 11, datetime.datetime(2024, 2, 26, 3, 11, 59, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 367, False); alias=default
DEBUG 2024-03-03 13:54:40,212 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 10, 'Player 3', 11, '2024-02-05T02:41:50.169018+01:00'::timestamptz, 207, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 10, 'Player 3', 11, datetime.datetime(2024, 2, 5, 2, 41, 50, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 207, False); alias=default
DEBUG 2024-03-03 13:54:40,212 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 5, 'Player 8', 11, '2024-02-12T06:42:53.169018+01:00'::timestamptz, 162, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 5, 'Player 8', 11, datetime.datetime(2024, 2, 12, 6, 42, 53, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 162, False); alias=default
DEBUG 2024-03-03 13:54:40,213 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 6, 'Player 28', 11, '2023-11-20T20:51:36.169018+01:00'::timestamptz, 609, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 6, 'Player 28', 11, datetime.datetime(2023, 11, 20, 20, 51, 36, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 609, False); alias=default
DEBUG 2024-03-03 13:54:40,214 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 11, 'Player 6', 3, '2024-02-06T10:21:00.169018+01:00'::timestamptz, 53, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 11, 'Player 6', 3, datetime.datetime(2024, 2, 6, 10, 21, 0, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 53, False); alias=default
DEBUG 2024-03-03 13:54:40,214 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 10, 'Player 15', 11, '2024-01-27T17:24:22.169018+01:00'::timestamptz, 913, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 10, 'Player 15', 11, datetime.datetime(2024, 1, 27, 17, 24, 22, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 913, False); alias=default
DEBUG 2024-03-03 13:54:40,215 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 34', 9, '2024-02-06T12:34:24.169018+01:00'::timestamptz, 198, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 34', 9, datetime.datetime(2024, 2, 6, 12, 34, 24, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 198, False); alias=default
DEBUG 2024-03-03 13:54:40,216 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 11, 'Player 32', 1, '2024-02-27T02:34:59.169018+01:00'::timestamptz, 298, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 11, 'Player 32', 1, datetime.datetime(2024, 2, 27, 2, 34, 59, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 298, False); alias=default
DEBUG 2024-03-03 13:54:40,216 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 6, 'Player 2', 11, '2023-12-19T13:53:05.169018+01:00'::timestamptz, 930, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 6, 'Player 2', 11, datetime.datetime(2023, 12, 19, 13, 53, 5, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 930, False); alias=default
DEBUG 2024-03-03 13:54:40,217 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 9, 'Player 6', 11, '2023-12-13T03:21:44.169018+01:00'::timestamptz, 585, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 9, 'Player 6', 11, datetime.datetime(2023, 12, 13, 3, 21, 44, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 585, False); alias=default
DEBUG 2024-03-03 13:54:40,217 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 22', 9, '2024-02-04T07:20:32.169018+01:00'::timestamptz, 924, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 22', 9, datetime.datetime(2024, 2, 4, 7, 20, 32, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 924, False); alias=default
DEBUG 2024-03-03 13:54:40,218 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 34', 9, '2023-12-25T07:53:08.169018+01:00'::timestamptz, 145, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 34', 9, datetime.datetime(2023, 12, 25, 7, 53, 8, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 145, False); alias=default
DEBUG 2024-03-03 13:54:40,219 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 3', 10, '2024-02-06T15:52:31.169018+01:00'::timestamptz, 215, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 3', 10, datetime.datetime(2024, 2, 6, 15, 52, 31, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 215, False); alias=default
DEBUG 2024-03-03 13:54:40,219 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 11, 'Player 36', 6, '2023-12-30T12:41:00.169018+01:00'::timestamptz, 66, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 11, 'Player 36', 6, datetime.datetime(2023, 12, 30, 12, 41, 0, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 66, False); alias=default
DEBUG 2024-03-03 13:54:40,220 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 1, 'Player 34', 11, '2024-02-04T04:27:58.169018+01:00'::timestamptz, 392, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 1, 'Player 34', 11, datetime.datetime(2024, 2, 4, 4, 27, 58, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 392, False); alias=default
DEBUG 2024-03-03 13:54:40,220 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 11, 'Player 43', 4, '2024-01-18T17:54:02.169018+01:00'::timestamptz, 148, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 11, 'Player 43', 4, datetime.datetime(2024, 1, 18, 17, 54, 2, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 148, False); alias=default
DEBUG 2024-03-03 13:54:40,221 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 9, 'Player 34', 11, '2023-12-13T04:38:55.169018+01:00'::timestamptz, 124, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 9, 'Player 34', 11, datetime.datetime(2023, 12, 13, 4, 38, 55, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 124, False); alias=default
DEBUG 2024-03-03 13:54:40,222 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 1', 6, '2023-11-13T16:35:18.169018+01:00'::timestamptz, 103, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 1', 6, datetime.datetime(2023, 11, 13, 16, 35, 18, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 103, False); alias=default
DEBUG 2024-03-03 13:54:40,222 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 10, 'Player 35', 11, '2024-01-02T00:36:31.169018+01:00'::timestamptz, 251, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 10, 'Player 35', 11, datetime.datetime(2024, 1, 2, 0, 36, 31, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 251, False); alias=default
DEBUG 2024-03-03 13:54:40,223 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 8, 'Player 26', 11, '2024-01-27T20:14:31.169018+01:00'::timestamptz, 729, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 8, 'Player 26', 11, datetime.datetime(2024, 1, 27, 20, 14, 31, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 729, False); alias=default
DEBUG 2024-03-03 13:54:40,223 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 5, 'Player 15', 11, '2023-12-24T16:13:24.169018+01:00'::timestamptz, 38, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 5, 'Player 15', 11, datetime.datetime(2023, 12, 24, 16, 13, 24, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 38, False); alias=default
DEBUG 2024-03-03 13:54:40,224 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 7, 'Player 22', 11, '2024-01-27T07:40:38.169018+01:00'::timestamptz, 140, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 7, 'Player 22', 11, datetime.datetime(2024, 1, 27, 7, 40, 38, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 140, False); alias=default
DEBUG 2024-03-03 13:54:40,225 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 10, 'Player 22', 11, '2024-01-29T04:51:02.169018+01:00'::timestamptz, 41, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 10, 'Player 22', 11, datetime.datetime(2024, 1, 29, 4, 51, 2, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 41, False); alias=default
DEBUG 2024-03-03 13:54:40,225 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 27', 10, '2024-01-23T20:25:52.169018+01:00'::timestamptz, 458, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 27', 10, datetime.datetime(2024, 1, 23, 20, 25, 52, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 458, False); alias=default
DEBUG 2024-03-03 13:54:40,226 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 6, 'Player 17', 11, '2024-02-27T11:57:27.169018+01:00'::timestamptz, 223, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 6, 'Player 17', 11, datetime.datetime(2024, 2, 27, 11, 57, 27, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 223, False); alias=default
DEBUG 2024-03-03 13:54:40,226 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 11, 'Player 27', 9, '2024-02-05T16:22:53.169018+01:00'::timestamptz, 705, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 11, 'Player 27', 9, datetime.datetime(2024, 2, 5, 16, 22, 53, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 705, False); alias=default
DEBUG 2024-03-03 13:54:40,227 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 7, 'Player 26', 11, '2023-11-10T22:29:59.169018+01:00'::timestamptz, 866, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 7, 'Player 26', 11, datetime.datetime(2023, 11, 10, 22, 29, 59, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 866, False); alias=default
DEBUG 2024-03-03 13:54:40,227 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 30', 1, '2024-01-03T05:02:03.169018+01:00'::timestamptz, 406, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 30', 1, datetime.datetime(2024, 1, 3, 5, 2, 3, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 406, False); alias=default
DEBUG 2024-03-03 13:54:40,228 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 7, 'Player 19', 11, '2024-01-19T03:07:36.169018+01:00'::timestamptz, 133, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 7, 'Player 19', 11, datetime.datetime(2024, 1, 19, 3, 7, 36, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 133, False); alias=default
DEBUG 2024-03-03 13:54:40,229 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 11, 'Player 26', 0, '2024-02-10T18:27:13.169018+01:00'::timestamptz, 520, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 11, 'Player 26', 0, datetime.datetime(2024, 2, 10, 18, 27, 13, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 520, False); alias=default
DEBUG 2024-03-03 13:54:40,229 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 4', 1, '2023-11-25T07:26:54.169018+01:00'::timestamptz, 330, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 4', 1, datetime.datetime(2023, 11, 25, 7, 26, 54, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 330, False); alias=default
DEBUG 2024-03-03 13:54:40,230 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 9, 'Player 21', 11, '2023-12-07T16:04:53.169018+01:00'::timestamptz, 569, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 9, 'Player 21', 11, datetime.datetime(2023, 12, 7, 16, 4, 53, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 569, False); alias=default
DEBUG 2024-03-03 13:54:40,230 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 43', 11, 'Player 9', 6, '2024-02-13T07:11:03.169018+01:00'::timestamptz, 132, false) RETURNING "pong_gamedata"."id"; args=('Player 43', 11, 'Player 9', 6, datetime.datetime(2024, 2, 13, 7, 11, 3, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 132, False); alias=default
DEBUG 2024-03-03 13:54:40,231 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 7, 'Player 38', 11, '2023-11-13T10:43:08.169018+01:00'::timestamptz, 540, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 7, 'Player 38', 11, datetime.datetime(2023, 11, 13, 10, 43, 8, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 540, False); alias=default
DEBUG 2024-03-03 13:54:40,232 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 0, 'Player 30', 11, '2024-01-24T01:08:39.169018+01:00'::timestamptz, 142, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 0, 'Player 30', 11, datetime.datetime(2024, 1, 24, 1, 8, 39, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 142, False); alias=default
DEBUG 2024-03-03 13:54:40,232 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 26', 3, 'Player 22', 11, '2023-12-02T10:46:02.169018+01:00'::timestamptz, 957, false) RETURNING "pong_gamedata"."id"; args=('Player 26', 3, 'Player 22', 11, datetime.datetime(2023, 12, 2, 10, 46, 2, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 957, False); alias=default
DEBUG 2024-03-03 13:54:40,233 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 7, 'Player 54', 11, '2024-02-23T06:46:13.169018+01:00'::timestamptz, 416, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 7, 'Player 54', 11, datetime.datetime(2024, 2, 23, 6, 46, 13, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 416, False); alias=default
DEBUG 2024-03-03 13:54:40,233 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 46', 11, 'Player 37', 1, '2023-12-20T12:45:19.169018+01:00'::timestamptz, 199, false) RETURNING "pong_gamedata"."id"; args=('Player 46', 11, 'Player 37', 1, datetime.datetime(2023, 12, 20, 12, 45, 19, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 199, False); alias=default
DEBUG 2024-03-03 13:54:40,234 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 2, 'Player 15', 11, '2023-12-04T10:58:42.169018+01:00'::timestamptz, 971, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 2, 'Player 15', 11, datetime.datetime(2023, 12, 4, 10, 58, 42, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 971, False); alias=default
DEBUG 2024-03-03 13:54:40,234 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 47', 4, 'Player 56', 11, '2024-01-05T21:24:46.169018+01:00'::timestamptz, 6, false) RETURNING "pong_gamedata"."id"; args=('Player 47', 4, 'Player 56', 11, datetime.datetime(2024, 1, 5, 21, 24, 46, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 6, False); alias=default
DEBUG 2024-03-03 13:54:40,235 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 10, 'Player 24', 11, '2023-12-20T02:03:00.169018+01:00'::timestamptz, 100, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 10, 'Player 24', 11, datetime.datetime(2023, 12, 20, 2, 3, 0, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 100, False); alias=default
DEBUG 2024-03-03 13:54:40,236 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 56', 11, 'Player 39', 4, '2024-02-21T23:59:03.169018+01:00'::timestamptz, 265, false) RETURNING "pong_gamedata"."id"; args=('Player 56', 11, 'Player 39', 4, datetime.datetime(2024, 2, 21, 23, 59, 3, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 265, False); alias=default
DEBUG 2024-03-03 13:54:40,236 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 1', 5, '2024-01-17T01:09:00.169018+01:00'::timestamptz, 252, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 1', 5, datetime.datetime(2024, 1, 17, 1, 9, 0, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 252, False); alias=default
DEBUG 2024-03-03 13:54:40,237 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 4, 'Player 21', 11, '2024-01-06T16:10:59.169018+01:00'::timestamptz, 30, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 4, 'Player 21', 11, datetime.datetime(2024, 1, 6, 16, 10, 59, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 30, False); alias=default
DEBUG 2024-03-03 13:54:40,238 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 3, 'Player 4', 11, '2024-01-31T03:50:14.169018+01:00'::timestamptz, 911, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 3, 'Player 4', 11, datetime.datetime(2024, 1, 31, 3, 50, 14, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 911, False); alias=default
DEBUG 2024-03-03 13:54:40,238 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 4, 'Player 32', 11, '2023-12-09T15:29:07.169018+01:00'::timestamptz, 809, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 4, 'Player 32', 11, datetime.datetime(2023, 12, 9, 15, 29, 7, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 809, False); alias=default
DEBUG 2024-03-03 13:54:40,239 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 52', 5, 'Player 50', 11, '2023-12-04T12:31:37.169018+01:00'::timestamptz, 371, false) RETURNING "pong_gamedata"."id"; args=('Player 52', 5, 'Player 50', 11, datetime.datetime(2023, 12, 4, 12, 31, 37, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 371, False); alias=default
DEBUG 2024-03-03 13:54:40,239 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 39', 11, 'Player 54', 10, '2023-12-23T12:05:43.169018+01:00'::timestamptz, 601, false) RETURNING "pong_gamedata"."id"; args=('Player 39', 11, 'Player 54', 10, datetime.datetime(2023, 12, 23, 12, 5, 43, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 601, False); alias=default
DEBUG 2024-03-03 13:54:40,240 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 10, 'Player 51', 11, '2024-02-26T04:24:51.169018+01:00'::timestamptz, 609, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 10, 'Player 51', 11, datetime.datetime(2024, 2, 26, 4, 24, 51, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 609, False); alias=default
DEBUG 2024-03-03 13:54:40,241 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 52', 6, 'Player 60', 11, '2024-01-14T05:45:19.169018+01:00'::timestamptz, 686, false) RETURNING "pong_gamedata"."id"; args=('Player 52', 6, 'Player 60', 11, datetime.datetime(2024, 1, 14, 5, 45, 19, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 686, False); alias=default
DEBUG 2024-03-03 13:54:40,241 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 59', 5, 'Player 42', 11, '2023-11-12T14:16:15.169018+01:00'::timestamptz, 190, false) RETURNING "pong_gamedata"."id"; args=('Player 59', 5, 'Player 42', 11, datetime.datetime(2023, 11, 12, 14, 16, 15, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 190, False); alias=default
DEBUG 2024-03-03 13:54:40,242 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 4, 'Player 55', 11, '2023-12-09T09:31:30.169018+01:00'::timestamptz, 177, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 4, 'Player 55', 11, datetime.datetime(2023, 12, 9, 9, 31, 30, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 177, False); alias=default
DEBUG 2024-03-03 13:54:40,243 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 48', 7, 'Player 10', 11, '2023-12-24T20:32:47.169018+01:00'::timestamptz, 304, false) RETURNING "pong_gamedata"."id"; args=('Player 48', 7, 'Player 10', 11, datetime.datetime(2023, 12, 24, 20, 32, 47, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 304, False); alias=default
DEBUG 2024-03-03 13:54:40,243 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 11, 'Player 10', 2, '2023-12-02T16:03:59.169018+01:00'::timestamptz, 458, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 11, 'Player 10', 2, datetime.datetime(2023, 12, 2, 16, 3, 59, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 458, False); alias=default
DEBUG 2024-03-03 13:54:40,244 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 50', 4, 'Player 54', 11, '2024-01-14T00:30:13.169018+01:00'::timestamptz, 274, false) RETURNING "pong_gamedata"."id"; args=('Player 50', 4, 'Player 54', 11, datetime.datetime(2024, 1, 14, 0, 30, 13, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 274, False); alias=default
DEBUG 2024-03-03 13:54:40,245 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 8, 'Player 10', 11, '2024-02-15T17:21:25.169018+01:00'::timestamptz, 250, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 8, 'Player 10', 11, datetime.datetime(2024, 2, 15, 17, 21, 25, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 250, False); alias=default
DEBUG 2024-03-03 13:54:40,245 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,246 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 4, 'Player 7', 11, '2023-12-29T03:19:05.169018+01:00'::timestamptz, 390, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 4, 'Player 7', 11, datetime.datetime(2023, 12, 29, 3, 19, 5, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 390, True); alias=default
DEBUG 2024-03-03 13:54:40,247 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 7, 'Player 9', 11, '2023-12-29T03:19:54.169018+01:00'::timestamptz, 150, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 7, 'Player 9', 11, datetime.datetime(2023, 12, 29, 3, 19, 54, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 150, True); alias=default
DEBUG 2024-03-03 13:54:40,247 utils (0.000) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 0, 'Player 9', 11, '2023-12-29T03:27:20.169018+01:00'::timestamptz, 485, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 0, 'Player 9', 11, datetime.datetime(2023, 12, 29, 3, 27, 20, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 485, True); alias=default
DEBUG 2024-03-03 13:54:40,525 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (7301, 101, 102, 103, '2023-12-29T03:27:20.169018+01:00'::timestamptz, 885, '["Player 9", "Player 7", "Player 5", "Player 2"]', '0x996e2531caebae4394fbe57117e3c2d94ba7fd2e8069896eb78a078d0d62a58b') RETURNING "pong_tournamentdata"."id"; args=(7301, 101, 102, 103, datetime.datetime(2023, 12, 29, 3, 27, 20, 169018, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 885, <psycopg2._json.Json object at 0x7ff788ee8950>, '0x996e2531caebae4394fbe57117e3c2d94ba7fd2e8069896eb78a078d0d62a58b'); alias=default
DEBUG 2024-03-03 13:54:40,526 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,526 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,527 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 13:54:40,527 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,528 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 13:54:40,528 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,528 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 13:54:40,529 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 13:54:40,530 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 13:54:40,531 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 13:54:40,531 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,531 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 13:54:40,532 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,532 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 13:54:40,533 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,533 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,534 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,534 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,535 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,536 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,536 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 13:54:40,536 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,536 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 13:54:40,537 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,537 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 13:54:40,538 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 13:54:40,538 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,539 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 13:54:40,539 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,539 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 13:54:40,540 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,540 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,541 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,541 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,542 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,542 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,543 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 13:54:40,543 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,543 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 13:54:40,543 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,544 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 13:54:40,545 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 13:54:40,545 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,545 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 13:54:40,546 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,546 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 13:54:40,547 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,547 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,547 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,548 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,548 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,549 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,549 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 13:54:40,549 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,550 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 13:54:40,550 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,551 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 13:54:40,551 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 13:54:40,552 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 13:54:40,552 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 13:54:40,553 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 13:54:40,553 utils (0.000) COMMIT; args=None; alias=default
DEBUG 2024-03-03 13:54:40,553 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 13:54:40,554 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,554 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,555 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,555 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,556 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 13:54:40,556 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
