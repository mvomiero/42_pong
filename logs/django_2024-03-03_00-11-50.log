DEBUG 2024-03-03 00:11:52,219 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,221 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,222 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,222 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,222 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 00:11:52,244 utils (0.021) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:11:52,245 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,245 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,247 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 00:11:52,250 utils (0.002) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:11:52,253 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 00:11:52,255 utils (0.002) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 00:11:52,257 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,264 utils (0.003) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T00:11:52.258476+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 0, 11, 52, 258476, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:11:52,266 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,266 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,270 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 00:11:52,274 utils (0.004) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:11:52,278 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 00:11:52,283 utils (0.005) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 00:11:52,285 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:11:52,289 utils (0.004) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:11:52,294 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 00:11:52,298 utils (0.004) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:11:52,300 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:11:52,305 utils (0.005) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:11:52,306 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:11:52,309 utils (0.002) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:11:52,310 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 00:11:52,312 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 00:11:52,312 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:11:52,314 utils (0.001) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:11:52,314 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 00:11:52,316 utils (0.002) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 00:11:52,317 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 00:11:52,319 utils (0.002) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 00:11:52,319 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 00:11:52,321 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:11:52,321 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:11:52,322 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:11:52,323 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:11:52,323 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:11:52,324 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 00:11:52,325 utils (0.002) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 00:11:52,326 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 00:11:52,328 utils (0.002) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:11:52,328 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 00:11:52,330 utils (0.002) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 00:11:52,330 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 00:11:52,332 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 00:11:52,332 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:11:52,334 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:11:52,334 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:11:52,336 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:11:52,336 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 00:11:52,338 utils (0.002) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 00:11:52,338 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 00:11:52,340 utils (0.002) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 00:11:52,340 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 00:11:52,341 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:11:52,342 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:11:52,342 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:11:52,343 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:11:52,343 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:11:52,344 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 00:11:52,345 utils (0.002) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 00:11:52,346 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 00:11:52,348 utils (0.002) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 00:11:52,349 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,351 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,353 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T00:11:52.351801+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 0, 11, 52, 351801, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:11:52,353 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,361 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 00:11:52,366 utils (0.005) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:11:52,367 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:11:52,369 utils (0.002) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:11:52,369 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 00:11:52,370 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 00:11:52,371 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 00:11:52,373 utils (0.002) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 00:11:52,373 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 00:11:52,375 utils (0.002) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 00:11:52,376 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,388 utils (0.011) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,397 utils (0.008) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T00:11:52.388648+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 0, 11, 52, 388648, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:11:52,397 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,416 utils (0.003) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,423 utils (0.006) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T00:11:52.417014+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 0, 11, 52, 417014, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:11:52,425 utils (0.002) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,425 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,439 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,440 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T00:11:52.439992+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 0, 11, 52, 439992, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:11:52,441 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,442 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,451 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 00:11:52,452 utils (0.001) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 00:11:52,468 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 00:11:52,469 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 00:11:52,471 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,473 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T00:11:52.471500+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 0, 11, 52, 471500, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:11:52,475 utils (0.002) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,476 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,486 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 00:11:52,486 utils (0.000) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 00:11:52,488 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,489 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T00:11:52.488985+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 0, 11, 52, 488985, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:11:52,493 utils (0.003) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,493 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,507 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 00:11:52,508 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 00:11:52,509 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,510 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T00:11:52.510083+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 0, 11, 52, 510083, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:11:52,514 utils (0.004) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,515 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,531 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,531 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T00:11:52.531380+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 0, 11, 52, 531380, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:11:52,532 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,532 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,541 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 00:11:52,542 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 00:11:52,545 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,546 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T00:11:52.545291+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 0, 11, 52, 545291, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:11:52,547 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,547 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,549 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,550 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T00:11:52.549463+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 0, 11, 52, 549463, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:11:52,551 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,551 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,563 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,565 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T00:11:52.564178+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 0, 11, 52, 564178, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:11:52,566 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,566 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,578 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:11:52,581 utils (0.003) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:11:52,582 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,583 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T00:11:52.583236+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 0, 11, 52, 583236, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:11:52,584 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,584 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,598 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:11:52,600 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:11:52,602 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,603 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T00:11:52.602594+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 0, 11, 52, 602594, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:11:52,604 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,604 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,616 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:11:52,622 utils (0.006) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:11:52,624 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,626 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T00:11:52.625024+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 0, 11, 52, 625024, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:11:52,627 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,627 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,639 utils (0.003) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,640 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T00:11:52.639746+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 0, 11, 52, 639746, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:11:52,641 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,641 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,652 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 00:11:52,658 utils (0.006) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 00:11:52,660 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,662 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T00:11:52.661296+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 0, 11, 52, 661296, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:11:52,663 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,663 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,665 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 00:11:52,671 utils (0.005) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:11:52,673 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 00:11:52,679 utils (0.005) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 00:11:52,681 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,682 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T00:11:52.681873+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 0, 11, 52, 681873, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:11:52,683 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,684 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,685 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 00:11:52,690 utils (0.004) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 00:11:52,690 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 00:11:52,693 utils (0.002) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 00:11:52,693 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 00:11:52,696 utils (0.002) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 00:11:52,697 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,698 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,700 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T00:11:52.699006+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 0, 11, 52, 699006, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 00:11:52,701 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 00:11:52,703 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 00:11:52,728 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 00:11:52,729 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,730 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 00:11:52,732 utils (0.002) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,734 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 00:11:52,739 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 00:11:52,740 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:52,742 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 00:11:52,744 utils (0.002) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:52,746 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 00:11:52,748 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:11:52,749 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:11:52,751 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:11:52,793 utils (0.004) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 3, 'Player 1', 11, '2024-01-26T08:15:44.750100+01:00'::timestamptz, 324, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 3, 'Player 1', 11, datetime.datetime(2024, 1, 26, 8, 15, 44, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 324, False); alias=default
DEBUG 2024-03-03 00:11:52,795 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 10', 8, '2024-02-15T20:17:19.750100+01:00'::timestamptz, 956, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 10', 8, datetime.datetime(2024, 2, 15, 20, 17, 19, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 956, False); alias=default
DEBUG 2024-03-03 00:11:52,797 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 0, 'Player 2', 11, '2024-01-17T04:22:23.750100+01:00'::timestamptz, 804, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 0, 'Player 2', 11, datetime.datetime(2024, 1, 17, 4, 22, 23, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 804, False); alias=default
DEBUG 2024-03-03 00:11:52,801 utils (0.003) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 0, 'Player 10', 11, '2024-01-11T07:44:45.750100+01:00'::timestamptz, 532, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 0, 'Player 10', 11, datetime.datetime(2024, 1, 11, 7, 44, 45, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 532, False); alias=default
DEBUG 2024-03-03 00:11:52,803 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 3', 6, '2023-12-17T11:10:31.750100+01:00'::timestamptz, 568, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 3', 6, datetime.datetime(2023, 12, 17, 11, 10, 31, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 568, False); alias=default
DEBUG 2024-03-03 00:11:52,805 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 6', 3, '2024-01-28T06:13:24.750100+01:00'::timestamptz, 439, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 6', 3, datetime.datetime(2024, 1, 28, 6, 13, 24, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 439, False); alias=default
DEBUG 2024-03-03 00:11:52,806 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 4, 'Player 6', 11, '2023-12-08T11:07:47.750100+01:00'::timestamptz, 316, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 4, 'Player 6', 11, datetime.datetime(2023, 12, 8, 11, 7, 47, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 316, False); alias=default
DEBUG 2024-03-03 00:11:52,808 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 4, 'Player 5', 11, '2023-11-02T17:47:45.750100+01:00'::timestamptz, 79, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 4, 'Player 5', 11, datetime.datetime(2023, 11, 2, 17, 47, 45, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 79, False); alias=default
DEBUG 2024-03-03 00:11:52,810 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 7', 7, '2023-11-10T20:34:26.750100+01:00'::timestamptz, 623, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 7', 7, datetime.datetime(2023, 11, 10, 20, 34, 26, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 623, False); alias=default
DEBUG 2024-03-03 00:11:52,812 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 10, 'Player 6', 11, '2023-12-29T20:59:15.750100+01:00'::timestamptz, 695, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 10, 'Player 6', 11, datetime.datetime(2023, 12, 29, 20, 59, 15, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 695, False); alias=default
DEBUG 2024-03-03 00:11:52,814 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 10, 'Player 1', 11, '2023-12-14T13:41:48.750100+01:00'::timestamptz, 216, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 10, 'Player 1', 11, datetime.datetime(2023, 12, 14, 13, 41, 48, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 216, False); alias=default
DEBUG 2024-03-03 00:11:52,816 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 5, 'Player 3', 11, '2023-11-21T21:46:19.750100+01:00'::timestamptz, 236, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 5, 'Player 3', 11, datetime.datetime(2023, 11, 21, 21, 46, 19, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 236, False); alias=default
DEBUG 2024-03-03 00:11:52,818 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 0, 'Player 12', 11, '2024-01-21T06:08:09.750100+01:00'::timestamptz, 774, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 0, 'Player 12', 11, datetime.datetime(2024, 1, 21, 6, 8, 9, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 774, False); alias=default
DEBUG 2024-03-03 00:11:52,819 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 14', 6, '2024-02-17T03:14:46.750100+01:00'::timestamptz, 539, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 14', 6, datetime.datetime(2024, 2, 17, 3, 14, 46, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 539, False); alias=default
DEBUG 2024-03-03 00:11:52,820 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 5, 'Player 5', 11, '2023-12-10T22:20:04.750100+01:00'::timestamptz, 538, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 5, 'Player 5', 11, datetime.datetime(2023, 12, 10, 22, 20, 4, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 538, False); alias=default
DEBUG 2024-03-03 00:11:52,822 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 2, 'Player 17', 11, '2023-12-07T03:46:59.750100+01:00'::timestamptz, 156, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 2, 'Player 17', 11, datetime.datetime(2023, 12, 7, 3, 46, 59, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 156, False); alias=default
DEBUG 2024-03-03 00:11:52,823 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 21', 1, '2024-01-08T11:51:18.750100+01:00'::timestamptz, 647, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 21', 1, datetime.datetime(2024, 1, 8, 11, 51, 18, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 647, False); alias=default
DEBUG 2024-03-03 00:11:52,824 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 3', 1, '2023-11-13T00:50:25.750100+01:00'::timestamptz, 649, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 3', 1, datetime.datetime(2023, 11, 13, 0, 50, 25, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 649, False); alias=default
DEBUG 2024-03-03 00:11:52,825 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 5, 'Player 22', 11, '2023-12-09T16:03:51.750100+01:00'::timestamptz, 369, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 5, 'Player 22', 11, datetime.datetime(2023, 12, 9, 16, 3, 51, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 369, False); alias=default
DEBUG 2024-03-03 00:11:52,827 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 18', 9, '2023-11-04T05:04:04.750100+01:00'::timestamptz, 99, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 18', 9, datetime.datetime(2023, 11, 4, 5, 4, 4, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 99, False); alias=default
DEBUG 2024-03-03 00:11:52,828 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 7, 'Player 16', 11, '2024-02-29T12:33:30.750100+01:00'::timestamptz, 440, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 7, 'Player 16', 11, datetime.datetime(2024, 2, 29, 12, 33, 30, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 440, False); alias=default
DEBUG 2024-03-03 00:11:52,830 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 1, 'Player 7', 11, '2024-02-12T15:31:16.750100+01:00'::timestamptz, 511, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 1, 'Player 7', 11, datetime.datetime(2024, 2, 12, 15, 31, 16, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 511, False); alias=default
DEBUG 2024-03-03 00:11:52,832 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 5', 3, '2024-01-06T16:56:06.750100+01:00'::timestamptz, 258, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 5', 3, datetime.datetime(2024, 1, 6, 16, 56, 6, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 258, False); alias=default
DEBUG 2024-03-03 00:11:52,833 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 8, 'Player 4', 11, '2024-01-08T04:54:18.750100+01:00'::timestamptz, 1000, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 8, 'Player 4', 11, datetime.datetime(2024, 1, 8, 4, 54, 18, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 1000, False); alias=default
DEBUG 2024-03-03 00:11:52,834 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 4, 'Player 12', 11, '2024-01-21T23:00:35.750100+01:00'::timestamptz, 139, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 4, 'Player 12', 11, datetime.datetime(2024, 1, 21, 23, 0, 35, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 139, False); alias=default
DEBUG 2024-03-03 00:11:52,836 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 7, 'Player 4', 11, '2024-01-24T23:17:32.750100+01:00'::timestamptz, 27, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 7, 'Player 4', 11, datetime.datetime(2024, 1, 24, 23, 17, 32, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 27, False); alias=default
DEBUG 2024-03-03 00:11:52,837 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 22', 6, '2024-01-04T18:01:05.750100+01:00'::timestamptz, 310, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 22', 6, datetime.datetime(2024, 1, 4, 18, 1, 5, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 310, False); alias=default
DEBUG 2024-03-03 00:11:52,838 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 28', 2, '2024-02-24T12:11:38.750100+01:00'::timestamptz, 570, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 28', 2, datetime.datetime(2024, 2, 24, 12, 11, 38, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 570, False); alias=default
DEBUG 2024-03-03 00:11:52,839 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 11, 'Player 0', 8, '2024-02-21T09:52:29.750100+01:00'::timestamptz, 228, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 11, 'Player 0', 8, datetime.datetime(2024, 2, 21, 9, 52, 29, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 228, False); alias=default
DEBUG 2024-03-03 00:11:52,840 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 2, 'Player 4', 11, '2024-02-06T17:12:58.750100+01:00'::timestamptz, 456, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 2, 'Player 4', 11, datetime.datetime(2024, 2, 6, 17, 12, 58, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 456, False); alias=default
DEBUG 2024-03-03 00:11:52,842 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 10', 3, '2024-02-27T11:34:05.750100+01:00'::timestamptz, 683, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 10', 3, datetime.datetime(2024, 2, 27, 11, 34, 5, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 683, False); alias=default
DEBUG 2024-03-03 00:11:52,843 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 4', 2, '2024-01-06T11:47:57.750100+01:00'::timestamptz, 152, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 4', 2, datetime.datetime(2024, 1, 6, 11, 47, 57, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 152, False); alias=default
DEBUG 2024-03-03 00:11:52,845 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 0, 'Player 10', 11, '2023-12-23T09:20:29.750100+01:00'::timestamptz, 329, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 0, 'Player 10', 11, datetime.datetime(2023, 12, 23, 9, 20, 29, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 329, False); alias=default
DEBUG 2024-03-03 00:11:52,846 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 8', 2, '2023-11-25T11:46:44.750100+01:00'::timestamptz, 53, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 8', 2, datetime.datetime(2023, 11, 25, 11, 46, 44, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 53, False); alias=default
DEBUG 2024-03-03 00:11:52,848 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 2, 'Player 30', 11, '2023-12-26T17:35:16.750100+01:00'::timestamptz, 649, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 2, 'Player 30', 11, datetime.datetime(2023, 12, 26, 17, 35, 16, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 649, False); alias=default
DEBUG 2024-03-03 00:11:52,850 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 5, 'Player 25', 11, '2024-01-26T07:38:53.750100+01:00'::timestamptz, 89, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 5, 'Player 25', 11, datetime.datetime(2024, 1, 26, 7, 38, 53, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 89, False); alias=default
DEBUG 2024-03-03 00:11:52,851 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 5, 'Player 23', 11, '2024-02-16T03:24:17.750100+01:00'::timestamptz, 672, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 5, 'Player 23', 11, datetime.datetime(2024, 2, 16, 3, 24, 17, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 672, False); alias=default
DEBUG 2024-03-03 00:11:52,852 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 8, 'Player 9', 11, '2024-02-19T19:09:54.750100+01:00'::timestamptz, 474, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 8, 'Player 9', 11, datetime.datetime(2024, 2, 19, 19, 9, 54, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 474, False); alias=default
DEBUG 2024-03-03 00:11:52,853 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 11', 10, '2024-02-07T03:39:01.750100+01:00'::timestamptz, 111, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 11', 10, datetime.datetime(2024, 2, 7, 3, 39, 1, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 111, False); alias=default
DEBUG 2024-03-03 00:11:52,854 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 32', 6, '2024-02-14T17:17:00.750100+01:00'::timestamptz, 580, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 32', 6, datetime.datetime(2024, 2, 14, 17, 17, 0, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 580, False); alias=default
DEBUG 2024-03-03 00:11:52,856 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 9, 'Player 16', 11, '2024-01-23T05:55:20.750100+01:00'::timestamptz, 984, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 9, 'Player 16', 11, datetime.datetime(2024, 1, 23, 5, 55, 20, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 984, False); alias=default
DEBUG 2024-03-03 00:11:52,857 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 9', 8, '2023-12-29T04:55:19.750100+01:00'::timestamptz, 699, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 9', 8, datetime.datetime(2023, 12, 29, 4, 55, 19, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 699, False); alias=default
DEBUG 2024-03-03 00:11:52,858 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 11, 'Player 4', 1, '2023-12-16T04:17:57.750100+01:00'::timestamptz, 698, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 11, 'Player 4', 1, datetime.datetime(2023, 12, 16, 4, 17, 57, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 698, False); alias=default
DEBUG 2024-03-03 00:11:52,859 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 10, 'Player 21', 11, '2023-11-24T19:29:38.750100+01:00'::timestamptz, 32, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 10, 'Player 21', 11, datetime.datetime(2023, 11, 24, 19, 29, 38, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 32, False); alias=default
DEBUG 2024-03-03 00:11:52,861 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 6, 'Player 15', 11, '2024-01-21T12:27:18.750100+01:00'::timestamptz, 540, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 6, 'Player 15', 11, datetime.datetime(2024, 1, 21, 12, 27, 18, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 540, False); alias=default
DEBUG 2024-03-03 00:11:52,863 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 11, 'Player 21', 6, '2023-12-20T22:41:34.750100+01:00'::timestamptz, 860, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 11, 'Player 21', 6, datetime.datetime(2023, 12, 20, 22, 41, 34, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 860, False); alias=default
DEBUG 2024-03-03 00:11:52,864 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 11, 'Player 27', 4, '2024-01-20T01:10:02.750100+01:00'::timestamptz, 175, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 11, 'Player 27', 4, datetime.datetime(2024, 1, 20, 1, 10, 2, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 175, False); alias=default
DEBUG 2024-03-03 00:11:52,866 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 6, 'Player 20', 11, '2024-01-02T14:25:48.750100+01:00'::timestamptz, 388, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 6, 'Player 20', 11, datetime.datetime(2024, 1, 2, 14, 25, 48, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 388, False); alias=default
DEBUG 2024-03-03 00:11:52,867 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 11, 'Player 18', 5, '2024-01-19T06:38:51.750100+01:00'::timestamptz, 87, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 11, 'Player 18', 5, datetime.datetime(2024, 1, 19, 6, 38, 51, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 87, False); alias=default
DEBUG 2024-03-03 00:11:52,869 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 13', 4, '2024-02-02T05:23:41.750100+01:00'::timestamptz, 985, false) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 13', 4, datetime.datetime(2024, 2, 2, 5, 23, 41, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 985, False); alias=default
DEBUG 2024-03-03 00:11:52,870 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 32', 0, '2024-01-20T00:35:52.750100+01:00'::timestamptz, 967, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 32', 0, datetime.datetime(2024, 1, 20, 0, 35, 52, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 967, False); alias=default
DEBUG 2024-03-03 00:11:52,871 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 9, 'Player 14', 11, '2024-01-11T23:32:55.750100+01:00'::timestamptz, 336, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 9, 'Player 14', 11, datetime.datetime(2024, 1, 11, 23, 32, 55, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 336, False); alias=default
DEBUG 2024-03-03 00:11:52,872 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 6', 5, '2023-12-23T13:21:49.750100+01:00'::timestamptz, 781, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 6', 5, datetime.datetime(2023, 12, 23, 13, 21, 49, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 781, False); alias=default
DEBUG 2024-03-03 00:11:52,874 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 1, 'Player 12', 11, '2023-12-24T18:49:11.750100+01:00'::timestamptz, 116, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 1, 'Player 12', 11, datetime.datetime(2023, 12, 24, 18, 49, 11, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 116, False); alias=default
DEBUG 2024-03-03 00:11:52,875 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 10, 'Player 31', 11, '2024-01-31T04:55:08.750100+01:00'::timestamptz, 268, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 10, 'Player 31', 11, datetime.datetime(2024, 1, 31, 4, 55, 8, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 268, False); alias=default
DEBUG 2024-03-03 00:11:52,876 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 19', 6, '2024-02-13T22:32:48.750100+01:00'::timestamptz, 935, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 19', 6, datetime.datetime(2024, 2, 13, 22, 32, 48, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 935, False); alias=default
DEBUG 2024-03-03 00:11:52,878 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 9', 4, '2023-12-20T10:43:57.750100+01:00'::timestamptz, 286, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 9', 4, datetime.datetime(2023, 12, 20, 10, 43, 57, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 286, False); alias=default
DEBUG 2024-03-03 00:11:52,880 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 10, 'Player 6', 11, '2024-01-22T15:16:50.750100+01:00'::timestamptz, 231, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 10, 'Player 6', 11, datetime.datetime(2024, 1, 22, 15, 16, 50, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 231, False); alias=default
DEBUG 2024-03-03 00:11:52,881 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 11, 'Player 42', 2, '2024-02-13T02:27:28.750100+01:00'::timestamptz, 469, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 11, 'Player 42', 2, datetime.datetime(2024, 2, 13, 2, 27, 28, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 469, False); alias=default
DEBUG 2024-03-03 00:11:52,882 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 6, 'Player 21', 11, '2023-12-22T08:22:53.750100+01:00'::timestamptz, 131, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 6, 'Player 21', 11, datetime.datetime(2023, 12, 22, 8, 22, 53, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 131, False); alias=default
DEBUG 2024-03-03 00:11:52,884 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 1, 'Player 26', 11, '2024-01-16T14:11:50.750100+01:00'::timestamptz, 911, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 1, 'Player 26', 11, datetime.datetime(2024, 1, 16, 14, 11, 50, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 911, False); alias=default
DEBUG 2024-03-03 00:11:52,885 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 11, 'Player 5', 4, '2024-01-11T17:09:21.750100+01:00'::timestamptz, 85, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 11, 'Player 5', 4, datetime.datetime(2024, 1, 11, 17, 9, 21, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 85, False); alias=default
DEBUG 2024-03-03 00:11:52,887 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 4, 'Player 46', 11, '2024-02-26T13:45:15.750100+01:00'::timestamptz, 777, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 4, 'Player 46', 11, datetime.datetime(2024, 2, 26, 13, 45, 15, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 777, False); alias=default
DEBUG 2024-03-03 00:11:52,888 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 10, 'Player 35', 11, '2024-01-03T11:49:00.750100+01:00'::timestamptz, 131, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 10, 'Player 35', 11, datetime.datetime(2024, 1, 3, 11, 49, 0, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 131, False); alias=default
DEBUG 2024-03-03 00:11:52,889 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 3, 'Player 36', 11, '2023-11-27T08:44:38.750100+01:00'::timestamptz, 279, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 3, 'Player 36', 11, datetime.datetime(2023, 11, 27, 8, 44, 38, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 279, False); alias=default
DEBUG 2024-03-03 00:11:52,891 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 11, 'Player 47', 5, '2023-11-13T18:37:28.750100+01:00'::timestamptz, 914, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 11, 'Player 47', 5, datetime.datetime(2023, 11, 13, 18, 37, 28, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 914, False); alias=default
DEBUG 2024-03-03 00:11:52,892 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 21', 1, '2024-02-16T21:28:00.750100+01:00'::timestamptz, 332, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 21', 1, datetime.datetime(2024, 2, 16, 21, 28, 0, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 332, False); alias=default
DEBUG 2024-03-03 00:11:52,894 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 38', 11, 'Player 10', 6, '2024-01-17T05:16:29.750100+01:00'::timestamptz, 774, false) RETURNING "pong_gamedata"."id"; args=('Player 38', 11, 'Player 10', 6, datetime.datetime(2024, 1, 17, 5, 16, 29, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 774, False); alias=default
DEBUG 2024-03-03 00:11:52,895 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 7, 'Player 31', 11, '2023-12-01T00:37:53.750100+01:00'::timestamptz, 64, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 7, 'Player 31', 11, datetime.datetime(2023, 12, 1, 0, 37, 53, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 64, False); alias=default
DEBUG 2024-03-03 00:11:52,897 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 1', 10, '2023-12-27T17:15:53.750100+01:00'::timestamptz, 80, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 1', 10, datetime.datetime(2023, 12, 27, 17, 15, 53, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 80, False); alias=default
DEBUG 2024-03-03 00:11:52,899 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 0, 'Player 26', 11, '2024-02-15T09:22:53.750100+01:00'::timestamptz, 456, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 0, 'Player 26', 11, datetime.datetime(2024, 2, 15, 9, 22, 53, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 456, False); alias=default
DEBUG 2024-03-03 00:11:52,900 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 5, 'Player 33', 11, '2023-12-31T20:26:52.750100+01:00'::timestamptz, 1000, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 5, 'Player 33', 11, datetime.datetime(2023, 12, 31, 20, 26, 52, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 1000, False); alias=default
DEBUG 2024-03-03 00:11:52,901 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 28', 11, 'Player 15', 1, '2023-11-04T18:20:28.750100+01:00'::timestamptz, 135, false) RETURNING "pong_gamedata"."id"; args=('Player 28', 11, 'Player 15', 1, datetime.datetime(2023, 11, 4, 18, 20, 28, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 135, False); alias=default
DEBUG 2024-03-03 00:11:52,903 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 5, 'Player 11', 11, '2024-01-31T21:19:30.750100+01:00'::timestamptz, 715, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 5, 'Player 11', 11, datetime.datetime(2024, 1, 31, 21, 19, 30, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 715, False); alias=default
DEBUG 2024-03-03 00:11:52,904 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 19', 6, '2023-12-20T10:55:44.750100+01:00'::timestamptz, 784, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 19', 6, datetime.datetime(2023, 12, 20, 10, 55, 44, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 784, False); alias=default
DEBUG 2024-03-03 00:11:52,905 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 32', 5, '2023-11-29T22:35:10.750100+01:00'::timestamptz, 939, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 32', 5, datetime.datetime(2023, 11, 29, 22, 35, 10, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 939, False); alias=default
DEBUG 2024-03-03 00:11:52,906 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 3', 0, '2023-11-20T11:25:20.750100+01:00'::timestamptz, 887, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 3', 0, datetime.datetime(2023, 11, 20, 11, 25, 20, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 887, False); alias=default
DEBUG 2024-03-03 00:11:52,907 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 15', 9, '2023-11-30T20:59:37.750100+01:00'::timestamptz, 863, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 15', 9, datetime.datetime(2023, 11, 30, 20, 59, 37, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 863, False); alias=default
DEBUG 2024-03-03 00:11:52,908 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 49', 11, 'Player 54', 7, '2023-12-11T03:44:00.750100+01:00'::timestamptz, 238, false) RETURNING "pong_gamedata"."id"; args=('Player 49', 11, 'Player 54', 7, datetime.datetime(2023, 12, 11, 3, 44, 0, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 238, False); alias=default
DEBUG 2024-03-03 00:11:52,909 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 3, 'Player 39', 11, '2024-02-26T07:54:01.750100+01:00'::timestamptz, 583, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 3, 'Player 39', 11, datetime.datetime(2024, 2, 26, 7, 54, 1, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 583, False); alias=default
DEBUG 2024-03-03 00:11:52,911 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 9, 'Player 42', 11, '2024-01-16T12:13:06.750100+01:00'::timestamptz, 238, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 9, 'Player 42', 11, datetime.datetime(2024, 1, 16, 12, 13, 6, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 238, False); alias=default
DEBUG 2024-03-03 00:11:52,913 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 33', 5, '2023-12-30T15:27:15.750100+01:00'::timestamptz, 872, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 33', 5, datetime.datetime(2023, 12, 30, 15, 27, 15, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 872, False); alias=default
DEBUG 2024-03-03 00:11:52,914 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 8, 'Player 12', 11, '2024-01-01T11:18:49.750100+01:00'::timestamptz, 656, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 8, 'Player 12', 11, datetime.datetime(2024, 1, 1, 11, 18, 49, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 656, False); alias=default
DEBUG 2024-03-03 00:11:52,916 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 9, 'Player 35', 11, '2024-01-11T22:37:03.750100+01:00'::timestamptz, 373, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 9, 'Player 35', 11, datetime.datetime(2024, 1, 11, 22, 37, 3, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 373, False); alias=default
DEBUG 2024-03-03 00:11:52,917 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 51', 11, 'Player 13', 10, '2023-12-01T04:25:54.750100+01:00'::timestamptz, 34, false) RETURNING "pong_gamedata"."id"; args=('Player 51', 11, 'Player 13', 10, datetime.datetime(2023, 12, 1, 4, 25, 54, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 34, False); alias=default
DEBUG 2024-03-03 00:11:52,918 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 0, 'Player 40', 11, '2024-01-08T17:48:52.750100+01:00'::timestamptz, 863, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 0, 'Player 40', 11, datetime.datetime(2024, 1, 8, 17, 48, 52, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 863, False); alias=default
DEBUG 2024-03-03 00:11:52,919 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 33', 10, 'Player 25', 11, '2023-12-07T09:27:53.750100+01:00'::timestamptz, 220, false) RETURNING "pong_gamedata"."id"; args=('Player 33', 10, 'Player 25', 11, datetime.datetime(2023, 12, 7, 9, 27, 53, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 220, False); alias=default
DEBUG 2024-03-03 00:11:52,921 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 7, 'Player 28', 11, '2023-12-01T14:47:33.750100+01:00'::timestamptz, 134, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 7, 'Player 28', 11, datetime.datetime(2023, 12, 1, 14, 47, 33, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 134, False); alias=default
DEBUG 2024-03-03 00:11:52,922 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 4, 'Player 50', 11, '2023-11-13T04:53:11.750100+01:00'::timestamptz, 908, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 4, 'Player 50', 11, datetime.datetime(2023, 11, 13, 4, 53, 11, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 908, False); alias=default
DEBUG 2024-03-03 00:11:52,923 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 42', 10, '2024-02-10T21:32:30.750100+01:00'::timestamptz, 690, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 42', 10, datetime.datetime(2024, 2, 10, 21, 32, 30, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 690, False); alias=default
DEBUG 2024-03-03 00:11:52,925 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 59', 7, '2024-01-18T19:17:22.750100+01:00'::timestamptz, 311, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 59', 7, datetime.datetime(2024, 1, 18, 19, 17, 22, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 311, False); alias=default
DEBUG 2024-03-03 00:11:52,926 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 6, 'Player 10', 11, '2023-12-05T07:56:24.750100+01:00'::timestamptz, 557, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 6, 'Player 10', 11, datetime.datetime(2023, 12, 5, 7, 56, 24, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 557, False); alias=default
DEBUG 2024-03-03 00:11:52,928 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 14', 10, '2024-02-06T20:44:52.750100+01:00'::timestamptz, 689, false) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 14', 10, datetime.datetime(2024, 2, 6, 20, 44, 52, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 689, False); alias=default
DEBUG 2024-03-03 00:11:52,930 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 60', 11, 'Player 46', 1, '2023-12-17T03:41:46.750100+01:00'::timestamptz, 892, false) RETURNING "pong_gamedata"."id"; args=('Player 60', 11, 'Player 46', 1, datetime.datetime(2023, 12, 17, 3, 41, 46, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 892, False); alias=default
DEBUG 2024-03-03 00:11:52,931 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 8, 'Player 16', 11, '2023-11-07T00:23:19.750100+01:00'::timestamptz, 935, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 8, 'Player 16', 11, datetime.datetime(2023, 11, 7, 0, 23, 19, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 935, False); alias=default
DEBUG 2024-03-03 00:11:52,932 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 35', 11, 'Player 14', 2, '2023-12-19T02:56:20.750100+01:00'::timestamptz, 997, false) RETURNING "pong_gamedata"."id"; args=('Player 35', 11, 'Player 14', 2, datetime.datetime(2023, 12, 19, 2, 56, 20, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 997, False); alias=default
DEBUG 2024-03-03 00:11:52,934 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 11, 'Player 19', 8, '2024-01-11T05:38:00.750100+01:00'::timestamptz, 418, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 11, 'Player 19', 8, datetime.datetime(2024, 1, 11, 5, 38, 0, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 418, False); alias=default
DEBUG 2024-03-03 00:11:52,935 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 11, 'Player 3', 0, '2023-12-04T22:06:00.750100+01:00'::timestamptz, 69, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 11, 'Player 3', 0, datetime.datetime(2023, 12, 4, 22, 6, 0, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 69, False); alias=default
DEBUG 2024-03-03 00:11:52,936 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 64', 11, 'Player 14', 4, '2024-01-06T08:47:05.750100+01:00'::timestamptz, 322, false) RETURNING "pong_gamedata"."id"; args=('Player 64', 11, 'Player 14', 4, datetime.datetime(2024, 1, 6, 8, 47, 5, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 322, False); alias=default
DEBUG 2024-03-03 00:11:52,938 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 65', 3, 'Player 30', 11, '2023-11-24T23:30:15.750100+01:00'::timestamptz, 697, false) RETURNING "pong_gamedata"."id"; args=('Player 65', 3, 'Player 30', 11, datetime.datetime(2023, 11, 24, 23, 30, 15, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 697, False); alias=default
DEBUG 2024-03-03 00:11:52,939 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:11:52,940 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 1', 8, '2024-02-03T08:34:06.750100+01:00'::timestamptz, 50, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 1', 8, datetime.datetime(2024, 2, 3, 8, 34, 6, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 50, True); alias=default
DEBUG 2024-03-03 00:11:52,941 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 4, 'Player 5', 11, '2024-02-03T08:41:56.750100+01:00'::timestamptz, 552, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 4, 'Player 5', 11, datetime.datetime(2024, 2, 3, 8, 41, 56, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 552, True); alias=default
DEBUG 2024-03-03 00:11:52,942 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 10, 'Player 5', 11, '2024-02-03T08:42:44.750100+01:00'::timestamptz, 307, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 10, 'Player 5', 11, datetime.datetime(2024, 2, 3, 8, 42, 44, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 307, True); alias=default
DEBUG 2024-03-03 00:11:52,944 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2024-02-03T08:42:44.750100+01:00'::timestamptz, 600, '["Player 5", "Player 15", "Player 1", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2024, 2, 3, 8, 42, 44, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 600, <psycopg2._json.Json object at 0x7fd8a123aff0>, '0x0'); alias=default
DEBUG 2024-03-03 00:11:52,946 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 7', 4, '2024-02-09T02:45:25.750100+01:00'::timestamptz, 707, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 7', 4, datetime.datetime(2024, 2, 9, 2, 45, 25, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 707, True); alias=default
DEBUG 2024-03-03 00:11:52,948 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 5, 'Player 1', 11, '2024-02-09T02:42:00.750100+01:00'::timestamptz, 540, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 5, 'Player 1', 11, datetime.datetime(2024, 2, 9, 2, 42, 0, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 540, True); alias=default
DEBUG 2024-03-03 00:11:52,949 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 1', 0, '2024-02-09T02:48:25.750100+01:00'::timestamptz, 858, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 1', 0, datetime.datetime(2024, 2, 9, 2, 48, 25, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 858, True); alias=default
DEBUG 2024-03-03 00:11:52,950 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2024-02-09T02:48:25.750100+01:00'::timestamptz, 925, '["Player 0", "Player 1", "Player 7", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2024, 2, 9, 2, 48, 25, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 925, <psycopg2._json.Json object at 0x7fd89e746300>, '0x0'); alias=default
DEBUG 2024-03-03 00:11:52,952 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 1, 'Player 3', 11, '2023-11-22T23:47:58.750100+01:00'::timestamptz, 39, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 1, 'Player 3', 11, datetime.datetime(2023, 11, 22, 23, 47, 58, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 39, True); alias=default
DEBUG 2024-03-03 00:11:52,953 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 12', 0, '2023-11-22T23:48:10.750100+01:00'::timestamptz, 157, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 12', 0, datetime.datetime(2023, 11, 22, 23, 48, 10, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 157, True); alias=default
DEBUG 2024-03-03 00:11:52,954 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 1', 2, '2023-11-22T23:57:08.750100+01:00'::timestamptz, 64, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 1', 2, datetime.datetime(2023, 11, 22, 23, 57, 8, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 64, True); alias=default
DEBUG 2024-03-03 00:11:52,956 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2023-11-22T23:57:08.750100+01:00'::timestamptz, 695, '["Player 3", "Player 1", "Player 11", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2023, 11, 22, 23, 57, 8, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 695, <psycopg2._json.Json object at 0x7fd89e7475c0>, '0x0'); alias=default
DEBUG 2024-03-03 00:11:52,957 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 1, 'Player 6', 11, '2024-02-12T21:56:25.750100+01:00'::timestamptz, 880, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 1, 'Player 6', 11, datetime.datetime(2024, 2, 12, 21, 56, 25, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 880, True); alias=default
DEBUG 2024-03-03 00:11:52,958 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 3, 'Player 2', 11, '2024-02-12T21:44:20.750100+01:00'::timestamptz, 62, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 3, 'Player 2', 11, datetime.datetime(2024, 2, 12, 21, 44, 20, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 62, True); alias=default
DEBUG 2024-03-03 00:11:52,959 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 9, 'Player 2', 11, '2024-02-12T21:57:58.750100+01:00'::timestamptz, 297, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 9, 'Player 2', 11, datetime.datetime(2024, 2, 12, 21, 57, 58, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 297, True); alias=default
DEBUG 2024-03-03 00:11:52,961 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2024-02-12T21:57:58.750100+01:00'::timestamptz, 973, '["Player 2", "Player 6", "Player 17", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2024, 2, 12, 21, 57, 58, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 973, <psycopg2._json.Json object at 0x7fd89e7440b0>, '0x0'); alias=default
DEBUG 2024-03-03 00:11:52,963 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 1, 'Player 9', 11, '2024-01-01T12:32:52.750100+01:00'::timestamptz, 229, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 1, 'Player 9', 11, datetime.datetime(2024, 1, 1, 12, 32, 52, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 229, True); alias=default
DEBUG 2024-03-03 00:11:52,964 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 8, 'Player 17', 11, '2024-01-01T12:42:20.750100+01:00'::timestamptz, 985, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 8, 'Player 17', 11, datetime.datetime(2024, 1, 1, 12, 42, 20, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 985, True); alias=default
DEBUG 2024-03-03 00:11:52,966 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 10, 'Player 17', 11, '2024-01-01T12:42:23.750100+01:00'::timestamptz, 950, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 10, 'Player 17', 11, datetime.datetime(2024, 1, 1, 12, 42, 23, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 950, True); alias=default
DEBUG 2024-03-03 00:11:52,967 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2024-01-01T12:42:23.750100+01:00'::timestamptz, 988, '["Player 17", "Player 9", "Player 16", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2024, 1, 1, 12, 42, 23, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 988, <psycopg2._json.Json object at 0x7fd89e7448f0>, '0x0'); alias=default
DEBUG 2024-03-03 00:11:52,968 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 3, 'Player 16', 11, '2024-01-07T20:19:35.750100+01:00'::timestamptz, 115, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 3, 'Player 16', 11, datetime.datetime(2024, 1, 7, 20, 19, 35, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 115, True); alias=default
DEBUG 2024-03-03 00:11:52,970 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 2, 'Player 8', 11, '2024-01-07T20:23:18.750100+01:00'::timestamptz, 362, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 2, 'Player 8', 11, datetime.datetime(2024, 1, 7, 20, 23, 18, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 362, True); alias=default
DEBUG 2024-03-03 00:11:52,971 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 8', 9, '2024-01-07T20:27:44.750100+01:00'::timestamptz, 321, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 8', 9, datetime.datetime(2024, 1, 7, 20, 27, 44, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 321, True); alias=default
DEBUG 2024-03-03 00:11:52,973 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2024-01-07T20:27:44.750100+01:00'::timestamptz, 628, '["Player 16", "Player 8", "Player 17", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2024, 1, 7, 20, 27, 44, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 628, <psycopg2._json.Json object at 0x7fd89e747500>, '0x0'); alias=default
DEBUG 2024-03-03 00:11:52,974 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 10', 2, '2023-12-01T12:06:08.750100+01:00'::timestamptz, 506, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 10', 2, datetime.datetime(2023, 12, 1, 12, 6, 8, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 506, True); alias=default
DEBUG 2024-03-03 00:11:52,975 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 5, 'Player 5', 11, '2023-12-01T12:07:15.750100+01:00'::timestamptz, 607, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 5, 'Player 5', 11, datetime.datetime(2023, 12, 1, 12, 7, 15, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 607, True); alias=default
DEBUG 2024-03-03 00:11:52,976 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 5, 'Player 5', 11, '2023-12-01T12:10:22.750100+01:00'::timestamptz, 688, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 5, 'Player 5', 11, datetime.datetime(2023, 12, 1, 12, 10, 22, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 688, True); alias=default
DEBUG 2024-03-03 00:11:52,977 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2023-12-01T12:10:22.750100+01:00'::timestamptz, 794, '["Player 5", "Player 1", "Player 10", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2023, 12, 1, 12, 10, 22, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 794, <psycopg2._json.Json object at 0x7fd89e746330>, '0x0'); alias=default
DEBUG 2024-03-03 00:11:52,979 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 8, 'Player 3', 11, '2024-01-29T01:55:39.750100+01:00'::timestamptz, 919, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 8, 'Player 3', 11, datetime.datetime(2024, 1, 29, 1, 55, 39, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 919, True); alias=default
DEBUG 2024-03-03 00:11:52,981 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 5, 'Player 12', 11, '2024-01-29T01:53:24.750100+01:00'::timestamptz, 664, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 5, 'Player 12', 11, datetime.datetime(2024, 1, 29, 1, 53, 24, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 664, True); alias=default
DEBUG 2024-03-03 00:11:52,983 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 12', 4, '2024-01-29T01:56:20.750100+01:00'::timestamptz, 425, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 12', 4, datetime.datetime(2024, 1, 29, 1, 56, 20, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 425, True); alias=default
DEBUG 2024-03-03 00:11:52,984 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2024-01-29T01:56:20.750100+01:00'::timestamptz, 960, '["Player 3", "Player 12", "Player 7", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2024, 1, 29, 1, 56, 20, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 960, <psycopg2._json.Json object at 0x7fd89e744c50>, '0x0'); alias=default
DEBUG 2024-03-03 00:11:52,985 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 12', 0, '2024-01-28T00:56:36.750100+01:00'::timestamptz, 47, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 12', 0, datetime.datetime(2024, 1, 28, 0, 56, 36, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 47, True); alias=default
DEBUG 2024-03-03 00:11:52,986 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 8', 7, '2024-01-28T01:07:03.750100+01:00'::timestamptz, 789, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 8', 7, datetime.datetime(2024, 1, 28, 1, 7, 3, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 789, True); alias=default
DEBUG 2024-03-03 00:11:52,988 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 2, 'Player 11', 11, '2024-01-28T01:07:18.750100+01:00'::timestamptz, 683, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 2, 'Player 11', 11, datetime.datetime(2024, 1, 28, 1, 7, 18, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 683, True); alias=default
DEBUG 2024-03-03 00:11:52,989 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2024-01-28T01:07:18.750100+01:00'::timestamptz, 804, '["Player 11", "Player 17", "Player 12", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2024, 1, 28, 1, 7, 18, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 804, <psycopg2._json.Json object at 0x7fd89e7455b0>, '0x0'); alias=default
DEBUG 2024-03-03 00:11:52,991 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 8, 'Player 14', 11, '2024-02-01T06:02:37.750100+01:00'::timestamptz, 388, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 8, 'Player 14', 11, datetime.datetime(2024, 2, 1, 6, 2, 37, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 388, True); alias=default
DEBUG 2024-03-03 00:11:52,993 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 7, 'Player 13', 11, '2024-02-01T06:02:23.750100+01:00'::timestamptz, 558, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 7, 'Player 13', 11, datetime.datetime(2024, 2, 1, 6, 2, 23, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 558, True); alias=default
DEBUG 2024-03-03 00:11:52,994 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 3, 'Player 13', 11, '2024-02-01T06:05:15.750100+01:00'::timestamptz, 958, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 3, 'Player 13', 11, datetime.datetime(2024, 2, 1, 6, 5, 15, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 958, True); alias=default
DEBUG 2024-03-03 00:11:52,996 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2024-02-01T06:05:15.750100+01:00'::timestamptz, 730, '["Player 13", "Player 14", "Player 0", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2024, 2, 1, 6, 5, 15, 750100, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 730, <psycopg2._json.Json object at 0x7fd89e763800>, '0x0'); alias=default
DEBUG 2024-03-03 00:11:52,997 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:11:52,999 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,001 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 00:11:53,001 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:53,003 utils (0.001) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 00:11:53,004 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:53,005 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 00:11:53,006 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 00:11:53,007 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 00:11:53,009 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 00:11:53,009 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:53,010 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 00:11:53,011 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:53,012 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 00:11:53,012 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,013 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,015 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,017 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,018 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,019 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,020 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 00:11:53,020 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:53,020 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 00:11:53,021 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:53,022 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 00:11:53,024 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 00:11:53,024 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:53,025 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 00:11:53,026 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:53,027 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 00:11:53,028 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,029 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,030 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,032 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,034 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,035 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,036 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 00:11:53,036 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:53,037 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 00:11:53,038 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:53,039 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 00:11:53,041 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 00:11:53,041 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:53,042 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 00:11:53,043 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:53,044 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 00:11:53,045 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,047 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,050 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,051 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,053 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,054 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,055 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 00:11:53,055 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:53,055 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 00:11:53,056 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:53,057 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 00:11:53,058 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 00:11:53,059 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 00:11:53,060 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 00:11:53,061 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 00:11:53,061 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 00:11:53,062 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 00:11:53,063 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,065 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,066 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,068 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,069 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 00:11:53,070 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
