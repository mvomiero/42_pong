DEBUG 2024-02-27 22:37:19,405 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:37:19,407 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,409 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:37:19,409 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,426 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:37:19,427 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:37:19,428 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,431 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:37:19,432 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 22:37:19,435 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 22:37:19,436 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:37:19,438 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,439 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,440 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,442 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,481 utils (0.009) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 2', 2, '2024-01-04T12:27:25.439834+01:00'::timestamptz, 586, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 2', 2, datetime.datetime(2024, 1, 4, 12, 27, 25, 439834, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 586, True); alias=default
DEBUG 2024-02-27 22:37:19,485 utils (0.003) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 11', 2, '2024-01-04T12:30:26.439834+01:00'::timestamptz, 75, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 11', 2, datetime.datetime(2024, 1, 4, 12, 30, 26, 439834, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 75, True); alias=default
DEBUG 2024-02-27 22:37:19,486 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 8, 'Player 5', 11, '2024-01-04T12:32:51.439834+01:00'::timestamptz, 84, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 8, 'Player 5', 11, datetime.datetime(2024, 1, 4, 12, 32, 51, 439834, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 84, True); alias=default
DEBUG 2024-02-27 22:37:19,487 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2326, 2327, 2328, '2024-01-04T12:32:51.439834+01:00'::timestamptz, 912, '["Player 5", "Player 1", "Player 2", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2326, 2327, 2328, datetime.datetime(2024, 1, 4, 12, 32, 51, 439834, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 912, <psycopg2._json.Json object at 0x7efded67e750>, '0x0'); alias=default
DEBUG 2024-02-27 22:37:19,488 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 1', 7, '2023-12-29T03:47:32.439834+01:00'::timestamptz, 749, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 1', 7, datetime.datetime(2023, 12, 29, 3, 47, 32, 439834, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 749, True); alias=default
DEBUG 2024-02-27 22:37:19,490 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 3, 'Player 0', 11, '2023-12-29T03:49:00.439834+01:00'::timestamptz, 589, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 3, 'Player 0', 11, datetime.datetime(2023, 12, 29, 3, 49, 0, 439834, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 589, True); alias=default
DEBUG 2024-02-27 22:37:19,491 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 0', 4, '2023-12-29T03:51:15.439834+01:00'::timestamptz, 117, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 0', 4, datetime.datetime(2023, 12, 29, 3, 51, 15, 439834, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 117, True); alias=default
DEBUG 2024-02-27 22:37:19,492 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2329, 2330, 2331, '2023-12-29T03:51:15.439834+01:00'::timestamptz, 972, '["Player 9", "Player 0", "Player 1", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2329, 2330, 2331, datetime.datetime(2023, 12, 29, 3, 51, 15, 439834, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 972, <psycopg2._json.Json object at 0x7efded67f020>, '0x0'); alias=default
DEBUG 2024-02-27 22:37:19,493 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,494 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,494 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:37:19,495 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 22:37:19,496 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 22:37:19,497 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 22:37:19,500 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 22:37:19,501 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:37:19,503 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,504 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,504 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,505 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,507 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 4, 'Player 7', 11, '2024-02-19T18:38:52.504237+01:00'::timestamptz, 141, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 4, 'Player 7', 11, datetime.datetime(2024, 2, 19, 18, 38, 52, 504237, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 141, True); alias=default
DEBUG 2024-02-27 22:37:19,508 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 10, 'Player 12', 11, '2024-02-19T18:40:43.504237+01:00'::timestamptz, 753, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 10, 'Player 12', 11, datetime.datetime(2024, 2, 19, 18, 40, 43, 504237, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 753, True); alias=default
DEBUG 2024-02-27 22:37:19,510 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 12', 8, '2024-02-19T18:44:45.504237+01:00'::timestamptz, 748, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 12', 8, datetime.datetime(2024, 2, 19, 18, 44, 45, 504237, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 748, True); alias=default
DEBUG 2024-02-27 22:37:19,510 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2332, 2333, 2334, '2024-02-19T18:44:45.504237+01:00'::timestamptz, 995, '["Player 7", "Player 12", "Player 10", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2332, 2333, 2334, datetime.datetime(2024, 2, 19, 18, 44, 45, 504237, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 995, <psycopg2._json.Json object at 0x7efded67ea80>, '0x0'); alias=default
DEBUG 2024-02-27 22:37:19,512 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 10, 'Player 1', 11, '2023-12-14T17:16:57.504237+01:00'::timestamptz, 63, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 10, 'Player 1', 11, datetime.datetime(2023, 12, 14, 17, 16, 57, 504237, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 63, True); alias=default
DEBUG 2024-02-27 22:37:19,513 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 1, 'Player 9', 11, '2023-12-14T17:16:13.504237+01:00'::timestamptz, 54, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 1, 'Player 9', 11, datetime.datetime(2023, 12, 14, 17, 16, 13, 504237, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 54, True); alias=default
DEBUG 2024-02-27 22:37:19,514 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 3, 'Player 9', 11, '2023-12-14T17:22:15.504237+01:00'::timestamptz, 857, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 3, 'Player 9', 11, datetime.datetime(2023, 12, 14, 17, 22, 15, 504237, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 857, True); alias=default
DEBUG 2024-02-27 22:37:19,515 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2335, 2336, 2337, '2023-12-14T17:22:15.504237+01:00'::timestamptz, 416, '["Player 9", "Player 1", "Player 11", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2335, 2336, 2337, datetime.datetime(2023, 12, 14, 17, 22, 15, 504237, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 416, <psycopg2._json.Json object at 0x7efded4a8320>, '0x0'); alias=default
DEBUG 2024-02-27 22:37:19,517 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,518 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,519 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:37:19,520 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 22:37:19,522 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 22:37:19,523 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:37:19,524 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,525 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,526 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,527 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,529 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 11', 10, '2023-12-25T10:16:57.525822+01:00'::timestamptz, 160, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 11', 10, datetime.datetime(2023, 12, 25, 10, 16, 57, 525822, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 160, True); alias=default
DEBUG 2024-02-27 22:37:19,530 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 0, 'Player 12', 11, '2023-12-25T10:12:18.525822+01:00'::timestamptz, 41, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 0, 'Player 12', 11, datetime.datetime(2023, 12, 25, 10, 12, 18, 525822, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 41, True); alias=default
DEBUG 2024-02-27 22:37:19,531 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 8, 'Player 12', 11, '2023-12-25T10:25:30.525822+01:00'::timestamptz, 58, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 8, 'Player 12', 11, datetime.datetime(2023, 12, 25, 10, 25, 30, 525822, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 58, True); alias=default
DEBUG 2024-02-27 22:37:19,532 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2338, 2339, 2340, '2023-12-25T10:25:30.525822+01:00'::timestamptz, 833, '["Player 12", "Player 13", "Player 11", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2338, 2339, 2340, datetime.datetime(2023, 12, 25, 10, 25, 30, 525822, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 833, <psycopg2._json.Json object at 0x7efded4a89e0>, '0x0'); alias=default
DEBUG 2024-02-27 22:37:19,534 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 1, 'Player 10', 11, '2023-12-29T10:15:50.525822+01:00'::timestamptz, 836, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 1, 'Player 10', 11, datetime.datetime(2023, 12, 29, 10, 15, 50, 525822, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 836, True); alias=default
DEBUG 2024-02-27 22:37:19,535 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 12', 8, '2023-12-29T10:15:51.525822+01:00'::timestamptz, 750, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 12', 8, datetime.datetime(2023, 12, 29, 10, 15, 51, 525822, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 750, True); alias=default
DEBUG 2024-02-27 22:37:19,537 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 1, 'Player 1', 11, '2023-12-29T10:18:31.525822+01:00'::timestamptz, 869, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 1, 'Player 1', 11, datetime.datetime(2023, 12, 29, 10, 18, 31, 525822, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 869, True); alias=default
DEBUG 2024-02-27 22:37:19,538 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2341, 2342, 2343, '2023-12-29T10:18:31.525822+01:00'::timestamptz, 997, '["Player 1", "Player 10", "Player 2", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2341, 2342, 2343, datetime.datetime(2023, 12, 29, 10, 18, 31, 525822, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 997, <psycopg2._json.Json object at 0x7efded4a9700>, '0x0'); alias=default
DEBUG 2024-02-27 22:37:19,539 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,540 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,540 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:37:19,541 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 22:37:19,543 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 22:37:19,544 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:37:19,545 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,546 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,546 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,547 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,549 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 13', 7, '2024-02-19T09:34:54.546215+01:00'::timestamptz, 293, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 13', 7, datetime.datetime(2024, 2, 19, 9, 34, 54, 546215, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 293, True); alias=default
DEBUG 2024-02-27 22:37:19,551 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 14', 3, '2024-02-19T09:40:41.546215+01:00'::timestamptz, 891, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 14', 3, datetime.datetime(2024, 2, 19, 9, 40, 41, 546215, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 891, True); alias=default
DEBUG 2024-02-27 22:37:19,552 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 7', 10, '2024-02-19T09:41:09.546215+01:00'::timestamptz, 865, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 7', 10, datetime.datetime(2024, 2, 19, 9, 41, 9, 546215, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 865, True); alias=default
DEBUG 2024-02-27 22:37:19,553 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2344, 2345, 2346, '2024-02-19T09:41:09.546215+01:00'::timestamptz, 919, '["Player 10", "Player 7", "Player 13", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2344, 2345, 2346, datetime.datetime(2024, 2, 19, 9, 41, 9, 546215, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 919, <psycopg2._json.Json object at 0x7efded4a9d60>, '0x0'); alias=default
DEBUG 2024-02-27 22:37:19,555 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 13', 5, '2023-12-01T15:01:13.546215+01:00'::timestamptz, 88, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 13', 5, datetime.datetime(2023, 12, 1, 15, 1, 13, 546215, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 88, True); alias=default
DEBUG 2024-02-27 22:37:19,556 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 5', 6, '2023-12-01T15:08:56.546215+01:00'::timestamptz, 612, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 5', 6, datetime.datetime(2023, 12, 1, 15, 8, 56, 546215, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 612, True); alias=default
DEBUG 2024-02-27 22:37:19,557 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 9', 6, '2023-12-01T15:10:36.546215+01:00'::timestamptz, 928, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 9', 6, datetime.datetime(2023, 12, 1, 15, 10, 36, 546215, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 928, True); alias=default
DEBUG 2024-02-27 22:37:19,558 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2347, 2348, 2349, '2023-12-01T15:10:36.546215+01:00'::timestamptz, 712, '["Player 1", "Player 9", "Player 13", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2347, 2348, 2349, datetime.datetime(2023, 12, 1, 15, 10, 36, 546215, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 712, <psycopg2._json.Json object at 0x7efded4aac90>, '0x0'); alias=default
DEBUG 2024-02-27 22:37:19,559 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,560 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,561 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:37:19,562 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 22:37:19,564 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 22:37:19,566 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 22:37:19,567 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:37:19,569 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,570 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,571 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,573 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,574 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 7', 3, '2023-12-12T03:56:27.570598+01:00'::timestamptz, 401, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 7', 3, datetime.datetime(2023, 12, 12, 3, 56, 27, 570598, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 401, True); alias=default
DEBUG 2024-02-27 22:37:19,576 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 12', 9, '2023-12-12T03:58:46.570598+01:00'::timestamptz, 609, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 12', 9, datetime.datetime(2023, 12, 12, 3, 58, 46, 570598, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 609, True); alias=default
DEBUG 2024-02-27 22:37:19,578 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 6, 'Player 6', 11, '2023-12-12T03:59:49.570598+01:00'::timestamptz, 458, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 6, 'Player 6', 11, datetime.datetime(2023, 12, 12, 3, 59, 49, 570598, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 458, True); alias=default
DEBUG 2024-02-27 22:37:19,579 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2350, 2351, 2352, '2023-12-12T03:59:49.570598+01:00'::timestamptz, 672, '["Player 6", "Player 9", "Player 7", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2350, 2351, 2352, datetime.datetime(2023, 12, 12, 3, 59, 49, 570598, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 672, <psycopg2._json.Json object at 0x7efded4a95b0>, '0x0'); alias=default
DEBUG 2024-02-27 22:37:19,581 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 9, 'Player 11', 11, '2023-12-04T19:13:33.570598+01:00'::timestamptz, 122, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 9, 'Player 11', 11, datetime.datetime(2023, 12, 4, 19, 13, 33, 570598, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 122, True); alias=default
DEBUG 2024-02-27 22:37:19,583 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 0', 3, '2023-12-04T19:19:40.570598+01:00'::timestamptz, 876, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 0', 3, datetime.datetime(2023, 12, 4, 19, 19, 40, 570598, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 876, True); alias=default
DEBUG 2024-02-27 22:37:19,585 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 1, 'Player 8', 11, '2023-12-04T19:20:00.570598+01:00'::timestamptz, 729, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 1, 'Player 8', 11, datetime.datetime(2023, 12, 4, 19, 20, 0, 570598, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 729, True); alias=default
DEBUG 2024-02-27 22:37:19,586 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2353, 2354, 2355, '2023-12-04T19:20:00.570598+01:00'::timestamptz, 896, '["Player 8", "Player 11", "Player 12", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2353, 2354, 2355, datetime.datetime(2023, 12, 4, 19, 20, 0, 570598, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 896, <psycopg2._json.Json object at 0x7efded4a8e00>, '0x0'); alias=default
DEBUG 2024-02-27 22:37:19,588 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:37:19,589 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
