DEBUG 2024-02-27 22:22:08,689 utils (0.003) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:22:08,692 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,694 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:22:08,694 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,710 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:22:08,711 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:22:08,712 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,713 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:22:08,714 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 22:22:08,717 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 22:22:08,718 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:22:08,719 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,721 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,722 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,723 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,758 utils (0.009) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 13', 0, '2024-01-24T12:36:00.721427+01:00'::timestamptz, 927, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 13', 0, datetime.datetime(2024, 1, 24, 12, 36, 0, 721427, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 927, True); alias=default
DEBUG 2024-02-27 22:22:08,760 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 2, 'Player 4', 11, '2024-01-24T12:35:08.721427+01:00'::timestamptz, 821, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 2, 'Player 4', 11, datetime.datetime(2024, 1, 24, 12, 35, 8, 721427, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 821, True); alias=default
DEBUG 2024-02-27 22:22:08,761 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 4', 8, '2024-01-24T12:36:12.721427+01:00'::timestamptz, 794, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 4', 8, datetime.datetime(2024, 1, 24, 12, 36, 12, 721427, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 794, True); alias=default
DEBUG 2024-02-27 22:22:08,762 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2083, 2084, 2085, '2024-01-24T12:36:12.721427+01:00'::timestamptz, 939, '["Player 11", "Player 4", "Player 13", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2083, 2084, 2085, datetime.datetime(2024, 1, 24, 12, 36, 12, 721427, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 939, <psycopg2._json.Json object at 0x7fed939fec00>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:08,763 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 10, 'Player 13', 11, '2024-02-15T12:36:19.721427+01:00'::timestamptz, 233, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 10, 'Player 13', 11, datetime.datetime(2024, 2, 15, 12, 36, 19, 721427, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 233, True); alias=default
DEBUG 2024-02-27 22:22:08,764 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 5, 'Player 7', 11, '2024-02-15T12:45:51.721427+01:00'::timestamptz, 566, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 5, 'Player 7', 11, datetime.datetime(2024, 2, 15, 12, 45, 51, 721427, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 566, True); alias=default
DEBUG 2024-02-27 22:22:08,766 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 8, 'Player 7', 11, '2024-02-15T12:49:04.721427+01:00'::timestamptz, 173, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 8, 'Player 7', 11, datetime.datetime(2024, 2, 15, 12, 49, 4, 721427, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 173, True); alias=default
DEBUG 2024-02-27 22:22:08,767 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2086, 2087, 2088, '2024-02-15T12:49:04.721427+01:00'::timestamptz, 998, '["Player 7", "Player 13", "Player 8", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2086, 2087, 2088, datetime.datetime(2024, 2, 15, 12, 49, 4, 721427, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 998, <psycopg2._json.Json object at 0x7fed939ff650>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:08,768 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,769 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,770 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:22:08,772 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 22:22:08,774 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 22:22:08,775 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 22:22:08,777 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 22:22:08,778 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:22:08,779 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,780 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,781 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,782 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,783 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 1', 1, '2024-01-17T23:37:10.780527+01:00'::timestamptz, 785, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 1', 1, datetime.datetime(2024, 1, 17, 23, 37, 10, 780527, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 785, True); alias=default
DEBUG 2024-02-27 22:22:08,784 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 15', 5, '2024-01-17T23:39:50.780527+01:00'::timestamptz, 964, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 15', 5, datetime.datetime(2024, 1, 17, 23, 39, 50, 780527, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 964, True); alias=default
DEBUG 2024-02-27 22:22:08,786 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 7, 'Player 5', 11, '2024-01-17T23:40:17.780527+01:00'::timestamptz, 262, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 7, 'Player 5', 11, datetime.datetime(2024, 1, 17, 23, 40, 17, 780527, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 262, True); alias=default
DEBUG 2024-02-27 22:22:08,787 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2089, 2090, 2091, '2024-01-17T23:40:17.780527+01:00'::timestamptz, 991, '["Player 5", "Player 4", "Player 1", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2089, 2090, 2091, datetime.datetime(2024, 1, 17, 23, 40, 17, 780527, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 991, <psycopg2._json.Json object at 0x7fed939ffc80>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:08,789 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 9', 10, '2023-12-23T09:48:11.780527+01:00'::timestamptz, 246, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 9', 10, datetime.datetime(2023, 12, 23, 9, 48, 11, 780527, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 246, True); alias=default
DEBUG 2024-02-27 22:22:08,791 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 10, 'Player 8', 11, '2023-12-23T10:00:04.780527+01:00'::timestamptz, 11, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 10, 'Player 8', 11, datetime.datetime(2023, 12, 23, 10, 0, 4, 780527, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 11, True); alias=default
DEBUG 2024-02-27 22:22:08,792 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 8', 9, '2023-12-23T10:00:07.780527+01:00'::timestamptz, 795, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 8', 9, datetime.datetime(2023, 12, 23, 10, 0, 7, 780527, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 795, True); alias=default
DEBUG 2024-02-27 22:22:08,793 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2092, 2093, 2094, '2023-12-23T10:00:07.780527+01:00'::timestamptz, 962, '["Player 12", "Player 8", "Player 9", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2092, 2093, 2094, datetime.datetime(2023, 12, 23, 10, 0, 7, 780527, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 962, <psycopg2._json.Json object at 0x7fed93824620>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:08,793 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,794 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,795 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:22:08,796 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 22:22:08,798 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 22:22:08,798 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:22:08,799 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,800 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,801 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,803 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,804 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 1', 3, '2024-01-14T16:14:54.800694+01:00'::timestamptz, 819, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 1', 3, datetime.datetime(2024, 1, 14, 16, 14, 54, 800694, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 819, True); alias=default
DEBUG 2024-02-27 22:22:08,806 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 9', 9, '2024-01-14T16:13:57.800694+01:00'::timestamptz, 509, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 9', 9, datetime.datetime(2024, 1, 14, 16, 13, 57, 800694, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 509, True); alias=default
DEBUG 2024-02-27 22:22:08,807 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 2', 6, '2024-01-14T16:17:14.800694+01:00'::timestamptz, 939, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 2', 6, datetime.datetime(2024, 1, 14, 16, 17, 14, 800694, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 939, True); alias=default
DEBUG 2024-02-27 22:22:08,808 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2095, 2096, 2097, '2024-01-14T16:17:14.800694+01:00'::timestamptz, 959, '["Player 8", "Player 2", "Player 1", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2095, 2096, 2097, datetime.datetime(2024, 1, 14, 16, 17, 14, 800694, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 959, <psycopg2._json.Json object at 0x7fed93825670>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:08,809 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 15', 0, '2023-11-23T00:06:09.800694+01:00'::timestamptz, 155, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 15', 0, datetime.datetime(2023, 11, 23, 0, 6, 9, 800694, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 155, True); alias=default
DEBUG 2024-02-27 22:22:08,810 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 1', 3, '2023-11-23T00:10:12.800694+01:00'::timestamptz, 658, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 1', 3, datetime.datetime(2023, 11, 23, 0, 10, 12, 800694, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 658, True); alias=default
DEBUG 2024-02-27 22:22:08,812 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 8, 'Player 9', 11, '2023-11-23T00:12:24.800694+01:00'::timestamptz, 159, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 8, 'Player 9', 11, datetime.datetime(2023, 11, 23, 0, 12, 24, 800694, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 159, True); alias=default
DEBUG 2024-02-27 22:22:08,813 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2098, 2099, 2100, '2023-11-23T00:12:24.800694+01:00'::timestamptz, 790, '["Player 9", "Player 4", "Player 15", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2098, 2099, 2100, datetime.datetime(2023, 11, 23, 0, 12, 24, 800694, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 790, <psycopg2._json.Json object at 0x7fed93825c40>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:08,813 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,814 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,815 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:22:08,816 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 22:22:08,818 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 22:22:08,819 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:22:08,821 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,822 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,823 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,824 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,825 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 4, 'Player 2', 11, '2024-02-19T20:20:46.822581+01:00'::timestamptz, 43, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 4, 'Player 2', 11, datetime.datetime(2024, 2, 19, 20, 20, 46, 822581, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 43, True); alias=default
DEBUG 2024-02-27 22:22:08,826 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 9', 4, '2024-02-19T20:35:17.822581+01:00'::timestamptz, 946, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 9', 4, datetime.datetime(2024, 2, 19, 20, 35, 17, 822581, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 946, True); alias=default
DEBUG 2024-02-27 22:22:08,828 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 13', 9, '2024-02-19T20:35:59.822581+01:00'::timestamptz, 405, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 13', 9, datetime.datetime(2024, 2, 19, 20, 35, 59, 822581, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 405, True); alias=default
DEBUG 2024-02-27 22:22:08,828 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2101, 2102, 2103, '2024-02-19T20:35:59.822581+01:00'::timestamptz, 988, '["Player 2", "Player 13", "Player 8", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2101, 2102, 2103, datetime.datetime(2024, 2, 19, 20, 35, 59, 822581, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 988, <psycopg2._json.Json object at 0x7fed93826c30>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:08,830 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 12', 2, '2023-12-27T11:54:40.822581+01:00'::timestamptz, 597, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 12', 2, datetime.datetime(2023, 12, 27, 11, 54, 40, 822581, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 597, True); alias=default
DEBUG 2024-02-27 22:22:08,831 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 8', 2, '2023-12-27T11:56:17.822581+01:00'::timestamptz, 584, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 8', 2, datetime.datetime(2023, 12, 27, 11, 56, 17, 822581, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 584, True); alias=default
DEBUG 2024-02-27 22:22:08,832 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 9, 'Player 13', 11, '2023-12-27T11:57:48.822581+01:00'::timestamptz, 709, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 9, 'Player 13', 11, datetime.datetime(2023, 12, 27, 11, 57, 48, 822581, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 709, True); alias=default
DEBUG 2024-02-27 22:22:08,833 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2104, 2105, 2106, '2023-12-27T11:57:48.822581+01:00'::timestamptz, 785, '["Player 13", "Player 7", "Player 12", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2104, 2105, 2106, datetime.datetime(2023, 12, 27, 11, 57, 48, 822581, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 785, <psycopg2._json.Json object at 0x7fed93826f30>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:08,834 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,835 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,836 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:22:08,837 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 22:22:08,839 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 22:22:08,841 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 22:22:08,842 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:22:08,843 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,844 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,845 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,846 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,847 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 6, 'Player 5', 11, '2023-12-21T21:31:55.844582+01:00'::timestamptz, 163, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 6, 'Player 5', 11, datetime.datetime(2023, 12, 21, 21, 31, 55, 844582, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 163, True); alias=default
DEBUG 2024-02-27 22:22:08,849 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 10, 'Player 11', 11, '2023-12-21T21:37:54.844582+01:00'::timestamptz, 760, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 10, 'Player 11', 11, datetime.datetime(2023, 12, 21, 21, 37, 54, 844582, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 760, True); alias=default
DEBUG 2024-02-27 22:22:08,850 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 6, 'Player 11', 11, '2023-12-21T21:39:11.844582+01:00'::timestamptz, 378, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 6, 'Player 11', 11, datetime.datetime(2023, 12, 21, 21, 39, 11, 844582, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 378, True); alias=default
DEBUG 2024-02-27 22:22:08,851 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2107, 2108, 2109, '2023-12-21T21:39:11.844582+01:00'::timestamptz, 837, '["Player 11", "Player 5", "Player 6", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2107, 2108, 2109, datetime.datetime(2023, 12, 21, 21, 39, 11, 844582, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 837, <psycopg2._json.Json object at 0x7fed93825b80>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:08,852 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 0', 2, '2023-11-12T00:53:27.844582+01:00'::timestamptz, 722, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 0', 2, datetime.datetime(2023, 11, 12, 0, 53, 27, 844582, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 722, True); alias=default
DEBUG 2024-02-27 22:22:08,854 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 1', 2, '2023-11-12T00:55:34.844582+01:00'::timestamptz, 847, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 1', 2, datetime.datetime(2023, 11, 12, 0, 55, 34, 844582, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 847, True); alias=default
DEBUG 2024-02-27 22:22:08,855 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 10', 8, '2023-11-12T00:58:05.844582+01:00'::timestamptz, 735, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 10', 8, datetime.datetime(2023, 11, 12, 0, 58, 5, 844582, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 735, True); alias=default
DEBUG 2024-02-27 22:22:08,856 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2110, 2111, 2112, '2023-11-12T00:58:05.844582+01:00'::timestamptz, 1000, '["Player 15", "Player 10", "Player 0", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2110, 2111, 2112, datetime.datetime(2023, 11, 12, 0, 58, 5, 844582, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 1000, <psycopg2._json.Json object at 0x7fed938253a0>, '0x0'); alias=default
DEBUG 2024-02-27 22:22:08,857 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:22:08,858 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
