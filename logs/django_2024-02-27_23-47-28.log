DEBUG 2024-02-27 23:47:29,456 utils (0.004) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 23:47:29,459 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,460 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 23:47:29,461 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,476 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 23:47:29,478 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 23:47:29,479 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,482 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 23:47:29,483 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 23:47:29,488 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 23:47:29,489 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 23:47:29,491 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,493 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,494 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,496 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,535 utils (0.010) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 9', 0, '2024-02-05T17:50:34.493841+01:00'::timestamptz, 448, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 9', 0, datetime.datetime(2024, 2, 5, 17, 50, 34, 493841, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 448, True); alias=default
DEBUG 2024-02-27 23:47:29,536 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 8, 'Player 15', 11, '2024-02-05T17:52:38.493841+01:00'::timestamptz, 929, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 8, 'Player 15', 11, datetime.datetime(2024, 2, 5, 17, 52, 38, 493841, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 929, True); alias=default
DEBUG 2024-02-27 23:47:29,537 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 15', 4, '2024-02-05T17:53:02.493841+01:00'::timestamptz, 312, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 15', 4, datetime.datetime(2024, 2, 5, 17, 53, 2, 493841, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 312, True); alias=default
DEBUG 2024-02-27 23:47:29,539 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2527, 2528, 2529, '2024-02-05T17:53:02.493841+01:00'::timestamptz, 953, '["Player 0", "Player 15", "Player 9", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2527, 2528, 2529, datetime.datetime(2024, 2, 5, 17, 53, 2, 493841, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 953, <psycopg2._json.Json object at 0x7f8729fa6960>, '0x0'); alias=default
DEBUG 2024-02-27 23:47:29,541 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 5, 'Player 5', 11, '2024-02-13T00:51:34.493841+01:00'::timestamptz, 838, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 5, 'Player 5', 11, datetime.datetime(2024, 2, 13, 0, 51, 34, 493841, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 838, True); alias=default
DEBUG 2024-02-27 23:47:29,543 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 4', 0, '2024-02-13T00:52:27.493841+01:00'::timestamptz, 902, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 4', 0, datetime.datetime(2024, 2, 13, 0, 52, 27, 493841, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 902, True); alias=default
DEBUG 2024-02-27 23:47:29,544 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 1, 'Player 2', 11, '2024-02-13T00:53:36.493841+01:00'::timestamptz, 115, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 1, 'Player 2', 11, datetime.datetime(2024, 2, 13, 0, 53, 36, 493841, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 115, True); alias=default
DEBUG 2024-02-27 23:47:29,545 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2530, 2531, 2532, '2024-02-13T00:53:36.493841+01:00'::timestamptz, 971, '["Player 2", "Player 5", "Player 8", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2530, 2531, 2532, datetime.datetime(2024, 2, 13, 0, 53, 36, 493841, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 971, <psycopg2._json.Json object at 0x7f8729fa6cc0>, '0x0'); alias=default
DEBUG 2024-02-27 23:47:29,546 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,547 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,548 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 23:47:29,549 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 23:47:29,550 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 23:47:29,551 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 23:47:29,552 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 23:47:29,553 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 23:47:29,554 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,555 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,556 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,557 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,558 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 0, 'Player 13', 11, '2023-12-21T21:57:59.555720+01:00'::timestamptz, 669, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 0, 'Player 13', 11, datetime.datetime(2023, 12, 21, 21, 57, 59, 555720, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 669, True); alias=default
DEBUG 2024-02-27 23:47:29,560 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 10', 3, '2023-12-21T21:56:16.555720+01:00'::timestamptz, 23, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 10', 3, datetime.datetime(2023, 12, 21, 21, 56, 16, 555720, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 23, True); alias=default
DEBUG 2024-02-27 23:47:29,561 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 3', 2, '2023-12-21T22:02:55.555720+01:00'::timestamptz, 953, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 3', 2, datetime.datetime(2023, 12, 21, 22, 2, 55, 555720, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 953, True); alias=default
DEBUG 2024-02-27 23:47:29,562 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2533, 2534, 2535, '2023-12-21T22:02:55.555720+01:00'::timestamptz, 965, '["Player 13", "Player 3", "Player 2", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2533, 2534, 2535, datetime.datetime(2023, 12, 21, 22, 2, 55, 555720, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 965, <psycopg2._json.Json object at 0x7f8729fa7cb0>, '0x0'); alias=default
DEBUG 2024-02-27 23:47:29,563 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 14', 5, '2023-12-01T07:51:57.555720+01:00'::timestamptz, 729, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 14', 5, datetime.datetime(2023, 12, 1, 7, 51, 57, 555720, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 729, True); alias=default
DEBUG 2024-02-27 23:47:29,564 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 10', 9, '2023-12-01T07:53:38.555720+01:00'::timestamptz, 472, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 10', 9, datetime.datetime(2023, 12, 1, 7, 53, 38, 555720, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 472, True); alias=default
DEBUG 2024-02-27 23:47:29,566 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 3', 8, '2023-12-01T07:53:45.555720+01:00'::timestamptz, 715, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 3', 8, datetime.datetime(2023, 12, 1, 7, 53, 45, 555720, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 715, True); alias=default
DEBUG 2024-02-27 23:47:29,566 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2536, 2537, 2538, '2023-12-01T07:53:45.555720+01:00'::timestamptz, 837, '["Player 2", "Player 3", "Player 14", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2536, 2537, 2538, datetime.datetime(2023, 12, 1, 7, 53, 45, 555720, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 837, <psycopg2._json.Json object at 0x7f8729dcc2f0>, '0x0'); alias=default
DEBUG 2024-02-27 23:47:29,568 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,569 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,569 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 23:47:29,570 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 23:47:29,572 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 23:47:29,572 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 23:47:29,573 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,574 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,575 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,576 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,577 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 1, 'Player 5', 11, '2024-01-28T11:23:57.574870+01:00'::timestamptz, 177, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 1, 'Player 5', 11, datetime.datetime(2024, 1, 28, 11, 23, 57, 574870, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 177, True); alias=default
DEBUG 2024-02-27 23:47:29,579 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 4, 'Player 8', 11, '2024-01-28T11:27:40.574870+01:00'::timestamptz, 707, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 4, 'Player 8', 11, datetime.datetime(2024, 1, 28, 11, 27, 40, 574870, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 707, True); alias=default
DEBUG 2024-02-27 23:47:29,580 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 8', 2, '2024-01-28T11:30:34.574870+01:00'::timestamptz, 800, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 8', 2, datetime.datetime(2024, 1, 28, 11, 30, 34, 574870, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 800, True); alias=default
DEBUG 2024-02-27 23:47:29,580 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2539, 2540, 2541, '2024-01-28T11:30:34.574870+01:00'::timestamptz, 881, '["Player 5", "Player 8", "Player 3", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2539, 2540, 2541, datetime.datetime(2024, 1, 28, 11, 30, 34, 574870, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 881, <psycopg2._json.Json object at 0x7f8729dcd160>, '0x0'); alias=default
DEBUG 2024-02-27 23:47:29,582 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 5', 0, '2023-11-07T04:57:37.574870+01:00'::timestamptz, 434, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 5', 0, datetime.datetime(2023, 11, 7, 4, 57, 37, 574870, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 434, True); alias=default
DEBUG 2024-02-27 23:47:29,583 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 1, 'Player 10', 11, '2023-11-07T05:00:02.574870+01:00'::timestamptz, 998, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 1, 'Player 10', 11, datetime.datetime(2023, 11, 7, 5, 0, 2, 574870, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 998, True); alias=default
DEBUG 2024-02-27 23:47:29,585 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 6, 'Player 10', 11, '2023-11-07T05:00:02.574870+01:00'::timestamptz, 189, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 6, 'Player 10', 11, datetime.datetime(2023, 11, 7, 5, 0, 2, 574870, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 189, True); alias=default
DEBUG 2024-02-27 23:47:29,585 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2542, 2543, 2544, '2023-11-07T05:00:02.574870+01:00'::timestamptz, 998, '["Player 10", "Player 7", "Player 5", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2542, 2543, 2544, datetime.datetime(2023, 11, 7, 5, 0, 2, 574870, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 998, <psycopg2._json.Json object at 0x7f8729dcd640>, '0x0'); alias=default
DEBUG 2024-02-27 23:47:29,586 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,587 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,588 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 23:47:29,589 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 23:47:29,590 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 23:47:29,591 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 23:47:29,592 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,593 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,594 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,595 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,596 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 3', 0, '2023-12-14T03:17:17.593563+01:00'::timestamptz, 521, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 3', 0, datetime.datetime(2023, 12, 14, 3, 17, 17, 593563, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 521, True); alias=default
DEBUG 2024-02-27 23:47:29,598 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 0, 'Player 6', 11, '2023-12-14T03:07:17.593563+01:00'::timestamptz, 369, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 0, 'Player 6', 11, datetime.datetime(2023, 12, 14, 3, 7, 17, 593563, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 369, True); alias=default
DEBUG 2024-02-27 23:47:29,599 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 3, 'Player 6', 11, '2023-12-14T03:17:46.593563+01:00'::timestamptz, 178, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 3, 'Player 6', 11, datetime.datetime(2023, 12, 14, 3, 17, 46, 593563, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 178, True); alias=default
DEBUG 2024-02-27 23:47:29,600 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2545, 2546, 2547, '2023-12-14T03:17:46.593563+01:00'::timestamptz, 998, '["Player 6", "Player 1", "Player 3", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2545, 2546, 2547, datetime.datetime(2023, 12, 14, 3, 17, 46, 593563, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 998, <psycopg2._json.Json object at 0x7f8729dcdd60>, '0x0'); alias=default
DEBUG 2024-02-27 23:47:29,601 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 5', 2, '2023-11-23T20:05:06.593563+01:00'::timestamptz, 124, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 5', 2, datetime.datetime(2023, 11, 23, 20, 5, 6, 593563, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 124, True); alias=default
DEBUG 2024-02-27 23:47:29,602 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 2, 'Player 13', 11, '2023-11-23T20:09:59.593563+01:00'::timestamptz, 78, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 2, 'Player 13', 11, datetime.datetime(2023, 11, 23, 20, 9, 59, 593563, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 78, True); alias=default
DEBUG 2024-02-27 23:47:29,603 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 13', 10, '2023-11-23T20:15:01.593563+01:00'::timestamptz, 871, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 13', 10, datetime.datetime(2023, 11, 23, 20, 15, 1, 593563, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 871, True); alias=default
DEBUG 2024-02-27 23:47:29,604 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2548, 2549, 2550, '2023-11-23T20:15:01.593563+01:00'::timestamptz, 719, '["Player 10", "Player 13", "Player 5", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2548, 2549, 2550, datetime.datetime(2023, 11, 23, 20, 15, 1, 593563, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 719, <psycopg2._json.Json object at 0x7f8729dcecc0>, '0x0'); alias=default
DEBUG 2024-02-27 23:47:29,606 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,607 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,608 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 23:47:29,609 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 23:47:29,610 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 23:47:29,612 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 23:47:29,613 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 23:47:29,613 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,614 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,615 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,616 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,618 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 11', 0, '2023-11-12T19:34:28.615063+01:00'::timestamptz, 373, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 11', 0, datetime.datetime(2023, 11, 12, 19, 34, 28, 615063, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 373, True); alias=default
DEBUG 2024-02-27 23:47:29,619 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 10, 'Player 3', 11, '2023-11-12T19:39:54.615063+01:00'::timestamptz, 240, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 10, 'Player 3', 11, datetime.datetime(2023, 11, 12, 19, 39, 54, 615063, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 240, True); alias=default
DEBUG 2024-02-27 23:47:29,620 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 3, 'Player 3', 11, '2023-11-12T19:40:16.615063+01:00'::timestamptz, 432, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 3, 'Player 3', 11, datetime.datetime(2023, 11, 12, 19, 40, 16, 615063, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 432, True); alias=default
DEBUG 2024-02-27 23:47:29,621 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2551, 2552, 2553, '2023-11-12T19:40:16.615063+01:00'::timestamptz, 721, '["Player 3", "Player 15", "Player 11", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2551, 2552, 2553, datetime.datetime(2023, 11, 12, 19, 40, 16, 615063, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 721, <psycopg2._json.Json object at 0x7f8729dcd940>, '0x0'); alias=default
DEBUG 2024-02-27 23:47:29,622 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 7, 'Player 2', 11, '2024-01-08T21:11:20.615063+01:00'::timestamptz, 730, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 7, 'Player 2', 11, datetime.datetime(2024, 1, 8, 21, 11, 20, 615063, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 730, True); alias=default
DEBUG 2024-02-27 23:47:29,623 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 11', 9, '2024-01-08T21:06:04.615063+01:00'::timestamptz, 481, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 11', 9, datetime.datetime(2024, 1, 8, 21, 6, 4, 615063, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 481, True); alias=default
DEBUG 2024-02-27 23:47:29,625 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 7, 'Player 9', 11, '2024-01-08T21:12:21.615063+01:00'::timestamptz, 431, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 7, 'Player 9', 11, datetime.datetime(2024, 1, 8, 21, 12, 21, 615063, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 431, True); alias=default
DEBUG 2024-02-27 23:47:29,626 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2554, 2555, 2556, '2024-01-08T21:12:21.615063+01:00'::timestamptz, 858, '["Player 9", "Player 2", "Player 15", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2554, 2555, 2556, datetime.datetime(2024, 1, 8, 21, 12, 21, 615063, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 858, <psycopg2._json.Json object at 0x7f8729dcdeb0>, '0x0'); alias=default
DEBUG 2024-02-27 23:47:29,627 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 23:47:29,628 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
