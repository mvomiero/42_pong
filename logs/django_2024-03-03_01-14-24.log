DEBUG 2024-03-03 01:14:26,348 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,350 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,352 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,352 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,352 schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 01:14:26,367 utils (0.014) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 01:14:26,368 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,368 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,369 schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 01:14:26,373 utils (0.003) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 01:14:26,375 schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
DEBUG 2024-03-03 01:14:26,377 utils (0.002) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
DEBUG 2024-03-03 01:14:26,378 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,381 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2024-03-03T01:14:26.379144+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2024, 3, 3, 1, 14, 26, 379144, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 01:14:26,382 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,382 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,385 schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
DEBUG 2024-03-03 01:14:26,388 utils (0.003) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
DEBUG 2024-03-03 01:14:26,395 schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
DEBUG 2024-03-03 01:14:26,399 utils (0.004) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
DEBUG 2024-03-03 01:14:26,400 schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 01:14:26,403 utils (0.003) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 01:14:26,413 schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 01:14:26,417 utils (0.004) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 01:14:26,418 schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 01:14:26,421 utils (0.003) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 01:14:26,423 schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 01:14:26,426 utils (0.003) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 01:14:26,427 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
DEBUG 2024-03-03 01:14:26,429 utils (0.002) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
DEBUG 2024-03-03 01:14:26,429 schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 01:14:26,431 utils (0.001) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 01:14:26,431 schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
DEBUG 2024-03-03 01:14:26,433 utils (0.002) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 01:14:26,433 schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 01:14:26,435 utils (0.002) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 01:14:26,435 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
DEBUG 2024-03-03 01:14:26,437 utils (0.002) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 01:14:26,437 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 01:14:26,439 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 01:14:26,439 schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 01:14:26,440 utils (0.001) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 01:14:26,440 schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
DEBUG 2024-03-03 01:14:26,442 utils (0.002) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 01:14:26,442 schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 01:14:26,444 utils (0.002) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 01:14:26,444 schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 01:14:26,446 utils (0.002) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 01:14:26,446 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
DEBUG 2024-03-03 01:14:26,448 utils (0.002) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
DEBUG 2024-03-03 01:14:26,448 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 01:14:26,449 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 01:14:26,449 schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 01:14:26,450 utils (0.001) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 01:14:26,450 schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
DEBUG 2024-03-03 01:14:26,452 utils (0.002) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 01:14:26,452 schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
DEBUG 2024-03-03 01:14:26,454 utils (0.002) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
DEBUG 2024-03-03 01:14:26,455 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
DEBUG 2024-03-03 01:14:26,456 utils (0.002) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
DEBUG 2024-03-03 01:14:26,457 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 01:14:26,457 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 01:14:26,458 schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 01:14:26,458 utils (0.001) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 01:14:26,459 schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
DEBUG 2024-03-03 01:14:26,460 utils (0.002) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 01:14:26,461 schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
DEBUG 2024-03-03 01:14:26,462 utils (0.001) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
DEBUG 2024-03-03 01:14:26,463 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,464 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,465 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2024-03-03T01:14:26.465009+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2024, 3, 3, 1, 14, 26, 465009, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 01:14:26,466 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,474 schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
DEBUG 2024-03-03 01:14:26,478 utils (0.004) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
DEBUG 2024-03-03 01:14:26,478 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 01:14:26,479 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 01:14:26,479 schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
DEBUG 2024-03-03 01:14:26,480 utils (0.001) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
DEBUG 2024-03-03 01:14:26,480 schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
DEBUG 2024-03-03 01:14:26,482 utils (0.002) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
DEBUG 2024-03-03 01:14:26,482 schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
DEBUG 2024-03-03 01:14:26,484 utils (0.002) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
DEBUG 2024-03-03 01:14:26,485 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,487 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,489 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2024-03-03T01:14:26.488085+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2024, 3, 3, 1, 14, 26, 488085, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 01:14:26,490 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,502 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,503 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2024-03-03T01:14:26.502551+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2024, 3, 3, 1, 14, 26, 502551, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 01:14:26,505 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,505 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,513 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,514 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2024-03-03T01:14:26.513593+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2024, 3, 3, 1, 14, 26, 513593, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 01:14:26,515 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,515 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,524 schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
DEBUG 2024-03-03 01:14:26,524 utils (0.000) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 01:14:26,538 schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
DEBUG 2024-03-03 01:14:26,540 utils (0.001) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
DEBUG 2024-03-03 01:14:26,542 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,543 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2024-03-03T01:14:26.542579+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2024, 3, 3, 1, 14, 26, 542579, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 01:14:26,544 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,544 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,552 schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
DEBUG 2024-03-03 01:14:26,552 utils (0.000) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
DEBUG 2024-03-03 01:14:26,555 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,555 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2024-03-03T01:14:26.555318+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2024, 3, 3, 1, 14, 26, 555318, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 01:14:26,557 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,557 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,565 schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
DEBUG 2024-03-03 01:14:26,566 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
DEBUG 2024-03-03 01:14:26,567 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,568 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2024-03-03T01:14:26.568034+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2024, 3, 3, 1, 14, 26, 568034, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 01:14:26,573 utils (0.004) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,573 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,584 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,585 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2024-03-03T01:14:26.584541+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2024, 3, 3, 1, 14, 26, 584541, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 01:14:26,586 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,586 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,596 schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
DEBUG 2024-03-03 01:14:26,597 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
DEBUG 2024-03-03 01:14:26,598 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,599 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2024-03-03T01:14:26.599306+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2024, 3, 3, 1, 14, 26, 599306, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 01:14:26,601 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,601 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,603 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,604 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2024-03-03T01:14:26.604080+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2024, 3, 3, 1, 14, 26, 604080, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 01:14:26,605 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,606 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,615 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,616 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2024-03-03T01:14:26.615820+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2024, 3, 3, 1, 14, 26, 615820, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 01:14:26,617 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,617 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,629 schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
DEBUG 2024-03-03 01:14:26,632 utils (0.003) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 01:14:26,634 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,635 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2024-03-03T01:14:26.634385+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2024, 3, 3, 1, 14, 26, 634385, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 01:14:26,636 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,636 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,647 schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 01:14:26,648 utils (0.001) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 01:14:26,649 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,650 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2024-03-03T01:14:26.650259+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2024, 3, 3, 1, 14, 26, 650259, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 01:14:26,651 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,652 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,663 schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 01:14:26,664 utils (0.001) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 01:14:26,665 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,666 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2024-03-03T01:14:26.665859+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2024, 3, 3, 1, 14, 26, 665859, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 01:14:26,667 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,667 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,687 utils (0.009) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,689 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2024-03-03T01:14:26.688265+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2024, 3, 3, 1, 14, 26, 688265, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 01:14:26,690 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,691 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,702 schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
DEBUG 2024-03-03 01:14:26,703 utils (0.000) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
DEBUG 2024-03-03 01:14:26,704 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,706 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2024-03-03T01:14:26.705289+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2024, 3, 3, 1, 14, 26, 705289, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 01:14:26,707 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,707 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,709 schema CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); (params None)
DEBUG 2024-03-03 01:14:26,715 utils (0.005) CREATE TABLE "pong_gamedata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "player1_name" varchar(255) NOT NULL, "player1_points" integer NOT NULL CHECK ("player1_points" >= 0), "player2_name" varchar(255) NOT NULL, "player2_points" integer NOT NULL CHECK ("player2_points" >= 0), "game_end_timestamp" timestamp with time zone NOT NULL, "game_duration_secs" integer NOT NULL CHECK ("game_duration_secs" >= 0), "is_tournament_game" boolean NOT NULL); args=None; alias=default
DEBUG 2024-03-03 01:14:26,717 schema CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); (params None)
DEBUG 2024-03-03 01:14:26,724 utils (0.007) CREATE TABLE "pong_tournamentdata" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "tour_id" integer NOT NULL, "match_id_semi_1" integer NOT NULL CHECK ("match_id_semi_1" >= 0), "match_id_semi_2" integer NOT NULL CHECK ("match_id_semi_2" >= 0), "match_id_final" integer NOT NULL CHECK ("match_id_final" >= 0), "tournament_end_timestamp" timestamp with time zone NOT NULL, "tournament_duration_secs" integer NOT NULL CHECK ("tournament_duration_secs" >= 0), "player_ranking" jsonb NOT NULL, "blockchain_hash" varchar(255) NULL); args=None; alias=default
DEBUG 2024-03-03 01:14:26,726 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,726 utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('pong', '0001_initial', '2024-03-03T01:14:26.726397+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('pong', '0001_initial', datetime.datetime(2024, 3, 3, 1, 14, 26, 726397, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 01:14:26,728 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,728 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,729 schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
DEBUG 2024-03-03 01:14:26,733 utils (0.004) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
DEBUG 2024-03-03 01:14:26,734 schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
DEBUG 2024-03-03 01:14:26,736 utils (0.002) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
DEBUG 2024-03-03 01:14:26,737 schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
DEBUG 2024-03-03 01:14:26,741 utils (0.004) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
DEBUG 2024-03-03 01:14:26,742 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,744 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,746 utils (0.001) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2024-03-03T01:14:26.744886+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2024, 3, 3, 1, 14, 26, 744886, tzinfo=datetime.timezone.utc)); alias=default
DEBUG 2024-03-03 01:14:26,747 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-03-03 01:14:26,748 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-03-03 01:14:26,769 utils (0.002) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 01:14:26,770 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,772 utils (0.002) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 01:14:26,782 utils (0.009) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,790 utils (0.007) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-03-03 01:14:26,798 utils (0.004) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-03-03 01:14:26,799 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:26,804 utils (0.005) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
DEBUG 2024-03-03 01:14:26,806 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:26,807 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-03-03 01:14:26,814 utils (0.005) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 01:14:26,815 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 01:14:26,818 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 01:14:26,882 utils (0.006) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 9', 2, '2023-12-03T17:00:33.816107+01:00'::timestamptz, 551, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 9', 2, datetime.datetime(2023, 12, 3, 17, 0, 33, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 551, False); alias=default
DEBUG 2024-03-03 01:14:26,884 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 6, 'Player 0', 11, '2023-11-02T17:58:57.816107+01:00'::timestamptz, 292, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 6, 'Player 0', 11, datetime.datetime(2023, 11, 2, 17, 58, 57, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 292, False); alias=default
DEBUG 2024-03-03 01:14:26,886 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 1, 'Player 5', 11, '2024-02-28T18:47:25.816107+01:00'::timestamptz, 339, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 1, 'Player 5', 11, datetime.datetime(2024, 2, 28, 18, 47, 25, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 339, False); alias=default
DEBUG 2024-03-03 01:14:26,888 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 8', 0, '2024-01-14T10:56:40.816107+01:00'::timestamptz, 714, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 8', 0, datetime.datetime(2024, 1, 14, 10, 56, 40, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 714, False); alias=default
DEBUG 2024-03-03 01:14:26,889 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 12', 6, '2024-02-09T08:01:10.816107+01:00'::timestamptz, 27, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 12', 6, datetime.datetime(2024, 2, 9, 8, 1, 10, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 27, False); alias=default
DEBUG 2024-03-03 01:14:26,891 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 2', 4, '2024-01-30T04:29:48.816107+01:00'::timestamptz, 392, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 2', 4, datetime.datetime(2024, 1, 30, 4, 29, 48, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 392, False); alias=default
DEBUG 2024-03-03 01:14:26,893 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 14', 1, '2023-11-11T13:26:16.816107+01:00'::timestamptz, 836, false) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 14', 1, datetime.datetime(2023, 11, 11, 13, 26, 16, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 836, False); alias=default
DEBUG 2024-03-03 01:14:26,895 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 3', 10, '2023-11-14T21:03:31.816107+01:00'::timestamptz, 98, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 3', 10, datetime.datetime(2023, 11, 14, 21, 3, 31, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 98, False); alias=default
DEBUG 2024-03-03 01:14:26,897 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 5, 'Player 14', 11, '2023-12-02T20:09:43.816107+01:00'::timestamptz, 351, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 5, 'Player 14', 11, datetime.datetime(2023, 12, 2, 20, 9, 43, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 351, False); alias=default
DEBUG 2024-03-03 01:14:26,898 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 11', 4, '2024-01-31T05:38:51.816107+01:00'::timestamptz, 180, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 11', 4, datetime.datetime(2024, 1, 31, 5, 38, 51, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 180, False); alias=default
DEBUG 2024-03-03 01:14:26,900 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 20', 3, '2024-01-06T04:02:28.816107+01:00'::timestamptz, 357, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 20', 3, datetime.datetime(2024, 1, 6, 4, 2, 28, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 357, False); alias=default
DEBUG 2024-03-03 01:14:26,902 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 8, 'Player 13', 11, '2023-12-10T13:41:28.816107+01:00'::timestamptz, 354, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 8, 'Player 13', 11, datetime.datetime(2023, 12, 10, 13, 41, 28, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 354, False); alias=default
DEBUG 2024-03-03 01:14:26,904 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 3', 8, '2023-12-08T19:43:22.816107+01:00'::timestamptz, 784, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 3', 8, datetime.datetime(2023, 12, 8, 19, 43, 22, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 784, False); alias=default
DEBUG 2024-03-03 01:14:26,905 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 6', 7, '2024-02-04T07:04:14.816107+01:00'::timestamptz, 463, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 6', 7, datetime.datetime(2024, 2, 4, 7, 4, 14, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 463, False); alias=default
DEBUG 2024-03-03 01:14:26,907 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 22', 3, '2024-01-02T15:41:32.816107+01:00'::timestamptz, 414, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 22', 3, datetime.datetime(2024, 1, 2, 15, 41, 32, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 414, False); alias=default
DEBUG 2024-03-03 01:14:26,909 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 12', 3, '2023-11-06T22:32:53.816107+01:00'::timestamptz, 503, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 12', 3, datetime.datetime(2023, 11, 6, 22, 32, 53, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 503, False); alias=default
DEBUG 2024-03-03 01:14:26,910 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 19', 9, '2024-01-30T13:49:26.816107+01:00'::timestamptz, 395, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 19', 9, datetime.datetime(2024, 1, 30, 13, 49, 26, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 395, False); alias=default
DEBUG 2024-03-03 01:14:26,912 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 12', 3, '2024-01-25T19:47:24.816107+01:00'::timestamptz, 442, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 12', 3, datetime.datetime(2024, 1, 25, 19, 47, 24, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 442, False); alias=default
DEBUG 2024-03-03 01:14:26,913 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 2, 'Player 20', 11, '2023-11-14T16:29:38.816107+01:00'::timestamptz, 137, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 2, 'Player 20', 11, datetime.datetime(2023, 11, 14, 16, 29, 38, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 137, False); alias=default
DEBUG 2024-03-03 01:14:26,915 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 8', 10, '2024-02-23T17:41:16.816107+01:00'::timestamptz, 502, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 8', 10, datetime.datetime(2024, 2, 23, 17, 41, 16, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 502, False); alias=default
DEBUG 2024-03-03 01:14:26,917 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 13', 2, '2023-11-25T19:19:07.816107+01:00'::timestamptz, 952, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 13', 2, datetime.datetime(2023, 11, 25, 19, 19, 7, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 952, False); alias=default
DEBUG 2024-03-03 01:14:26,918 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 11, 'Player 0', 3, '2023-12-27T22:40:02.816107+01:00'::timestamptz, 22, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 11, 'Player 0', 3, datetime.datetime(2023, 12, 27, 22, 40, 2, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 22, False); alias=default
DEBUG 2024-03-03 01:14:26,926 utils (0.006) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 9, 'Player 10', 11, '2023-11-30T01:07:05.816107+01:00'::timestamptz, 478, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 9, 'Player 10', 11, datetime.datetime(2023, 11, 30, 1, 7, 5, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 478, False); alias=default
DEBUG 2024-03-03 01:14:26,928 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 0', 0, '2023-11-30T09:38:51.816107+01:00'::timestamptz, 426, false) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 0', 0, datetime.datetime(2023, 11, 30, 9, 38, 51, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 426, False); alias=default
DEBUG 2024-03-03 01:14:26,929 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 2, 'Player 5', 11, '2023-12-09T01:57:49.816107+01:00'::timestamptz, 203, false) RETURNING "pong_gamedata"."id"; args=('Player 1', 2, 'Player 5', 11, datetime.datetime(2023, 12, 9, 1, 57, 49, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 203, False); alias=default
DEBUG 2024-03-03 01:14:26,931 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 11, 'Player 1', 4, '2024-01-29T20:43:42.816107+01:00'::timestamptz, 418, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 11, 'Player 1', 4, datetime.datetime(2024, 1, 29, 20, 43, 42, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 418, False); alias=default
DEBUG 2024-03-03 01:14:26,936 utils (0.004) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 3, 'Player 22', 11, '2024-01-25T19:34:42.816107+01:00'::timestamptz, 545, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 3, 'Player 22', 11, datetime.datetime(2024, 1, 25, 19, 34, 42, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 545, False); alias=default
DEBUG 2024-03-03 01:14:26,938 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 11, 'Player 19', 1, '2024-02-09T10:34:45.816107+01:00'::timestamptz, 604, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 11, 'Player 19', 1, datetime.datetime(2024, 2, 9, 10, 34, 45, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 604, False); alias=default
DEBUG 2024-03-03 01:14:26,939 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 15', 1, '2024-03-01T09:14:12.816107+01:00'::timestamptz, 724, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 15', 1, datetime.datetime(2024, 3, 1, 9, 14, 12, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 724, False); alias=default
DEBUG 2024-03-03 01:14:26,941 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 11, 'Player 20', 6, '2024-02-14T08:20:28.816107+01:00'::timestamptz, 496, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 11, 'Player 20', 6, datetime.datetime(2024, 2, 14, 8, 20, 28, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 496, False); alias=default
DEBUG 2024-03-03 01:14:26,943 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 15', 9, '2023-12-20T00:49:34.816107+01:00'::timestamptz, 280, false) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 15', 9, datetime.datetime(2023, 12, 20, 0, 49, 34, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 280, False); alias=default
DEBUG 2024-03-03 01:14:26,945 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 11, 'Player 8', 3, '2024-02-10T21:45:42.816107+01:00'::timestamptz, 307, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 11, 'Player 8', 3, datetime.datetime(2024, 2, 10, 21, 45, 42, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 307, False); alias=default
DEBUG 2024-03-03 01:14:26,946 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 2, 'Player 20', 11, '2023-12-15T00:40:41.816107+01:00'::timestamptz, 601, false) RETURNING "pong_gamedata"."id"; args=('Player 16', 2, 'Player 20', 11, datetime.datetime(2023, 12, 15, 0, 40, 41, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 601, False); alias=default
DEBUG 2024-03-03 01:14:26,948 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 3, 'Player 18', 11, '2023-11-15T06:54:14.816107+01:00'::timestamptz, 727, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 3, 'Player 18', 11, datetime.datetime(2023, 11, 15, 6, 54, 14, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 727, False); alias=default
DEBUG 2024-03-03 01:14:26,950 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 7, 'Player 9', 11, '2024-02-07T05:24:40.816107+01:00'::timestamptz, 699, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 7, 'Player 9', 11, datetime.datetime(2024, 2, 7, 5, 24, 40, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 699, False); alias=default
DEBUG 2024-03-03 01:14:26,952 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 25', 9, 'Player 9', 11, '2023-11-28T08:10:11.816107+01:00'::timestamptz, 590, false) RETURNING "pong_gamedata"."id"; args=('Player 25', 9, 'Player 9', 11, datetime.datetime(2023, 11, 28, 8, 10, 11, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 590, False); alias=default
DEBUG 2024-03-03 01:14:26,954 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 0, 'Player 30', 11, '2023-11-18T10:55:00.816107+01:00'::timestamptz, 508, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 0, 'Player 30', 11, datetime.datetime(2023, 11, 18, 10, 55, 0, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 508, False); alias=default
DEBUG 2024-03-03 01:14:26,955 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 10, 'Player 6', 11, '2023-11-03T06:33:41.816107+01:00'::timestamptz, 283, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 10, 'Player 6', 11, datetime.datetime(2023, 11, 3, 6, 33, 41, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 283, False); alias=default
DEBUG 2024-03-03 01:14:26,956 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 9, 'Player 8', 11, '2024-01-09T02:54:36.816107+01:00'::timestamptz, 373, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 9, 'Player 8', 11, datetime.datetime(2024, 1, 9, 2, 54, 36, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 373, False); alias=default
DEBUG 2024-03-03 01:14:26,958 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 9, 'Player 24', 11, '2024-01-22T20:39:40.816107+01:00'::timestamptz, 451, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 9, 'Player 24', 11, datetime.datetime(2024, 1, 22, 20, 39, 40, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 451, False); alias=default
DEBUG 2024-03-03 01:14:26,960 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 11, 'Player 23', 5, '2024-02-22T15:37:41.816107+01:00'::timestamptz, 900, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 11, 'Player 23', 5, datetime.datetime(2024, 2, 22, 15, 37, 41, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 900, False); alias=default
DEBUG 2024-03-03 01:14:26,961 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 5, 'Player 25', 11, '2023-11-01T02:20:13.816107+01:00'::timestamptz, 396, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 5, 'Player 25', 11, datetime.datetime(2023, 11, 1, 2, 20, 13, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 396, False); alias=default
DEBUG 2024-03-03 01:14:26,963 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 6, 'Player 17', 11, '2023-11-09T11:18:14.816107+01:00'::timestamptz, 869, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 6, 'Player 17', 11, datetime.datetime(2023, 11, 9, 11, 18, 14, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 869, False); alias=default
DEBUG 2024-03-03 01:14:26,964 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 2, 'Player 28', 11, '2023-11-24T08:09:54.816107+01:00'::timestamptz, 260, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 2, 'Player 28', 11, datetime.datetime(2023, 11, 24, 8, 9, 54, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 260, False); alias=default
DEBUG 2024-03-03 01:14:26,965 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 11, 'Player 28', 4, '2023-12-24T17:02:58.816107+01:00'::timestamptz, 940, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 11, 'Player 28', 4, datetime.datetime(2023, 12, 24, 17, 2, 58, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 940, False); alias=default
DEBUG 2024-03-03 01:14:26,967 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 13', 6, '2023-12-27T14:07:32.816107+01:00'::timestamptz, 330, false) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 13', 6, datetime.datetime(2023, 12, 27, 14, 7, 32, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 330, False); alias=default
DEBUG 2024-03-03 01:14:26,968 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 10, 'Player 0', 11, '2023-11-25T09:57:03.816107+01:00'::timestamptz, 677, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 10, 'Player 0', 11, datetime.datetime(2023, 11, 25, 9, 57, 3, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 677, False); alias=default
DEBUG 2024-03-03 01:14:26,970 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 9', 2, '2023-12-30T23:26:09.816107+01:00'::timestamptz, 237, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 9', 2, datetime.datetime(2023, 12, 30, 23, 26, 9, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 237, False); alias=default
DEBUG 2024-03-03 01:14:26,971 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 30', 8, 'Player 37', 11, '2023-11-25T23:56:40.816107+01:00'::timestamptz, 742, false) RETURNING "pong_gamedata"."id"; args=('Player 30', 8, 'Player 37', 11, datetime.datetime(2023, 11, 25, 23, 56, 40, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 742, False); alias=default
DEBUG 2024-03-03 01:14:26,972 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 5, 'Player 18', 11, '2024-01-05T10:34:23.816107+01:00'::timestamptz, 722, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 5, 'Player 18', 11, datetime.datetime(2024, 1, 5, 10, 34, 23, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 722, False); alias=default
DEBUG 2024-03-03 01:14:26,974 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 8, 'Player 26', 11, '2023-12-09T10:55:37.816107+01:00'::timestamptz, 733, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 8, 'Player 26', 11, datetime.datetime(2023, 12, 9, 10, 55, 37, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 733, False); alias=default
DEBUG 2024-03-03 01:14:26,975 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 28', 5, '2024-02-19T05:43:24.816107+01:00'::timestamptz, 30, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 28', 5, datetime.datetime(2024, 2, 19, 5, 43, 24, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 30, False); alias=default
DEBUG 2024-03-03 01:14:26,976 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 11, 'Player 4', 4, '2024-01-08T19:05:09.816107+01:00'::timestamptz, 79, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 11, 'Player 4', 4, datetime.datetime(2024, 1, 8, 19, 5, 9, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 79, False); alias=default
DEBUG 2024-03-03 01:14:26,977 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 40', 7, '2024-01-09T22:55:42.816107+01:00'::timestamptz, 354, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 40', 7, datetime.datetime(2024, 1, 9, 22, 55, 42, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 354, False); alias=default
DEBUG 2024-03-03 01:14:26,979 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 27', 10, 'Player 31', 11, '2024-02-23T05:55:29.816107+01:00'::timestamptz, 186, false) RETURNING "pong_gamedata"."id"; args=('Player 27', 10, 'Player 31', 11, datetime.datetime(2024, 2, 23, 5, 55, 29, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 186, False); alias=default
DEBUG 2024-03-03 01:14:26,980 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 42', 1, 'Player 1', 11, '2024-03-02T11:03:12.816107+01:00'::timestamptz, 282, false) RETURNING "pong_gamedata"."id"; args=('Player 42', 1, 'Player 1', 11, datetime.datetime(2024, 3, 2, 11, 3, 12, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 282, False); alias=default
DEBUG 2024-03-03 01:14:26,981 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 7, 'Player 37', 11, '2024-02-08T17:02:33.816107+01:00'::timestamptz, 624, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 7, 'Player 37', 11, datetime.datetime(2024, 2, 8, 17, 2, 33, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 624, False); alias=default
DEBUG 2024-03-03 01:14:26,982 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 26', 10, '2024-01-01T00:08:01.816107+01:00'::timestamptz, 859, false) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 26', 10, datetime.datetime(2024, 1, 1, 0, 8, 1, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 859, False); alias=default
DEBUG 2024-03-03 01:14:26,984 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 3, 'Player 28', 11, '2024-03-01T22:22:23.816107+01:00'::timestamptz, 998, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 3, 'Player 28', 11, datetime.datetime(2024, 3, 1, 22, 22, 23, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 998, False); alias=default
DEBUG 2024-03-03 01:14:26,985 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 2, 'Player 17', 11, '2024-01-24T00:26:21.816107+01:00'::timestamptz, 253, false) RETURNING "pong_gamedata"."id"; args=('Player 13', 2, 'Player 17', 11, datetime.datetime(2024, 1, 24, 0, 26, 21, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 253, False); alias=default
DEBUG 2024-03-03 01:14:26,986 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 8', 10, '2024-02-17T06:57:13.816107+01:00'::timestamptz, 50, false) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 8', 10, datetime.datetime(2024, 2, 17, 6, 57, 13, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 50, False); alias=default
DEBUG 2024-03-03 01:14:26,988 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 6, 'Player 5', 11, '2023-11-07T01:29:50.816107+01:00'::timestamptz, 560, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 6, 'Player 5', 11, datetime.datetime(2023, 11, 7, 1, 29, 50, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 560, False); alias=default
DEBUG 2024-03-03 01:14:26,990 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 12', 6, '2023-12-28T02:29:48.816107+01:00'::timestamptz, 420, false) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 12', 6, datetime.datetime(2023, 12, 28, 2, 29, 48, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 420, False); alias=default
DEBUG 2024-03-03 01:14:26,991 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 12', 3, '2024-01-02T16:23:23.816107+01:00'::timestamptz, 619, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 12', 3, datetime.datetime(2024, 1, 2, 16, 23, 23, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 619, False); alias=default
DEBUG 2024-03-03 01:14:26,992 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 5, 'Player 46', 11, '2024-01-01T18:28:21.816107+01:00'::timestamptz, 947, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 5, 'Player 46', 11, datetime.datetime(2024, 1, 1, 18, 28, 21, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 947, False); alias=default
DEBUG 2024-03-03 01:14:26,994 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 37', 0, 'Player 10', 11, '2024-01-29T18:02:14.816107+01:00'::timestamptz, 550, false) RETURNING "pong_gamedata"."id"; args=('Player 37', 0, 'Player 10', 11, datetime.datetime(2024, 1, 29, 18, 2, 14, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 550, False); alias=default
DEBUG 2024-03-03 01:14:26,995 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 1, 'Player 4', 11, '2023-11-14T18:43:51.816107+01:00'::timestamptz, 57, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 1, 'Player 4', 11, datetime.datetime(2023, 11, 14, 18, 43, 51, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 57, False); alias=default
DEBUG 2024-03-03 01:14:26,996 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 7, 'Player 21', 11, '2024-01-23T19:54:42.816107+01:00'::timestamptz, 997, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 7, 'Player 21', 11, datetime.datetime(2024, 1, 23, 19, 54, 42, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 997, False); alias=default
DEBUG 2024-03-03 01:14:26,997 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 31', 11, 'Player 27', 0, '2024-01-10T23:04:58.816107+01:00'::timestamptz, 408, false) RETURNING "pong_gamedata"."id"; args=('Player 31', 11, 'Player 27', 0, datetime.datetime(2024, 1, 10, 23, 4, 58, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 408, False); alias=default
DEBUG 2024-03-03 01:14:26,999 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 34', 3, '2024-02-01T23:48:11.816107+01:00'::timestamptz, 776, false) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 34', 3, datetime.datetime(2024, 2, 1, 23, 48, 11, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 776, False); alias=default
DEBUG 2024-03-03 01:14:27,000 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 18', 8, 'Player 17', 11, '2023-11-30T15:24:03.816107+01:00'::timestamptz, 482, false) RETURNING "pong_gamedata"."id"; args=('Player 18', 8, 'Player 17', 11, datetime.datetime(2023, 11, 30, 15, 24, 3, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 482, False); alias=default
DEBUG 2024-03-03 01:14:27,001 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 2, 'Player 2', 11, '2023-11-17T17:07:38.816107+01:00'::timestamptz, 442, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 2, 'Player 2', 11, datetime.datetime(2023, 11, 17, 17, 7, 38, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 442, False); alias=default
DEBUG 2024-03-03 01:14:27,003 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 45', 2, 'Player 31', 11, '2023-11-03T11:33:27.816107+01:00'::timestamptz, 104, false) RETURNING "pong_gamedata"."id"; args=('Player 45', 2, 'Player 31', 11, datetime.datetime(2023, 11, 3, 11, 33, 27, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 104, False); alias=default
DEBUG 2024-03-03 01:14:27,004 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 20', 6, 'Player 49', 11, '2024-01-12T20:25:04.816107+01:00'::timestamptz, 991, false) RETURNING "pong_gamedata"."id"; args=('Player 20', 6, 'Player 49', 11, datetime.datetime(2024, 1, 12, 20, 25, 4, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 991, False); alias=default
DEBUG 2024-03-03 01:14:27,006 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 11, 'Player 7', 6, '2023-11-19T08:02:59.816107+01:00'::timestamptz, 892, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 11, 'Player 7', 6, datetime.datetime(2023, 11, 19, 8, 2, 59, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 892, False); alias=default
DEBUG 2024-03-03 01:14:27,007 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 32', 11, 'Player 44', 5, '2023-11-17T01:21:39.816107+01:00'::timestamptz, 949, false) RETURNING "pong_gamedata"."id"; args=('Player 32', 11, 'Player 44', 5, datetime.datetime(2023, 11, 17, 1, 21, 39, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 949, False); alias=default
DEBUG 2024-03-03 01:14:27,008 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 44', 4, 'Player 12', 11, '2024-02-03T10:39:39.816107+01:00'::timestamptz, 908, false) RETURNING "pong_gamedata"."id"; args=('Player 44', 4, 'Player 12', 11, datetime.datetime(2024, 2, 3, 10, 39, 39, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 908, False); alias=default
DEBUG 2024-03-03 01:14:27,009 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 22', 4, 'Player 44', 11, '2024-02-02T00:23:33.816107+01:00'::timestamptz, 606, false) RETURNING "pong_gamedata"."id"; args=('Player 22', 4, 'Player 44', 11, datetime.datetime(2024, 2, 2, 0, 23, 33, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 606, False); alias=default
DEBUG 2024-03-03 01:14:27,011 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 9, 'Player 19', 11, '2024-01-05T11:34:00.816107+01:00'::timestamptz, 789, false) RETURNING "pong_gamedata"."id"; args=('Player 0', 9, 'Player 19', 11, datetime.datetime(2024, 1, 5, 11, 34, 0, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 789, False); alias=default
DEBUG 2024-03-03 01:14:27,012 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 9, 'Player 44', 11, '2024-01-21T00:52:28.816107+01:00'::timestamptz, 152, false) RETURNING "pong_gamedata"."id"; args=('Player 5', 9, 'Player 44', 11, datetime.datetime(2024, 1, 21, 0, 52, 28, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 152, False); alias=default
DEBUG 2024-03-03 01:14:27,013 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 52', 7, 'Player 21', 11, '2024-03-02T12:06:58.816107+01:00'::timestamptz, 233, false) RETURNING "pong_gamedata"."id"; args=('Player 52', 7, 'Player 21', 11, datetime.datetime(2024, 3, 2, 12, 6, 58, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 233, False); alias=default
DEBUG 2024-03-03 01:14:27,015 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 45', 0, '2023-12-14T10:14:59.816107+01:00'::timestamptz, 652, false) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 45', 0, datetime.datetime(2023, 12, 14, 10, 14, 59, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 652, False); alias=default
DEBUG 2024-03-03 01:14:27,016 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 24', 10, 'Player 17', 11, '2024-01-04T16:34:30.816107+01:00'::timestamptz, 37, false) RETURNING "pong_gamedata"."id"; args=('Player 24', 10, 'Player 17', 11, datetime.datetime(2024, 1, 4, 16, 34, 30, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 37, False); alias=default
DEBUG 2024-03-03 01:14:27,017 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 50', 0, 'Player 5', 11, '2024-01-31T17:18:16.816107+01:00'::timestamptz, 434, false) RETURNING "pong_gamedata"."id"; args=('Player 50', 0, 'Player 5', 11, datetime.datetime(2024, 1, 31, 17, 18, 16, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 434, False); alias=default
DEBUG 2024-03-03 01:14:27,019 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 40', 11, 'Player 38', 8, '2024-01-11T03:50:52.816107+01:00'::timestamptz, 610, false) RETURNING "pong_gamedata"."id"; args=('Player 40', 11, 'Player 38', 8, datetime.datetime(2024, 1, 11, 3, 50, 52, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 610, False); alias=default
DEBUG 2024-03-03 01:14:27,020 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 41', 11, 'Player 42', 4, '2024-01-27T16:02:41.816107+01:00'::timestamptz, 729, false) RETURNING "pong_gamedata"."id"; args=('Player 41', 11, 'Player 42', 4, datetime.datetime(2024, 1, 27, 16, 2, 41, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 729, False); alias=default
DEBUG 2024-03-03 01:14:27,022 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 36', 3, 'Player 26', 11, '2024-01-11T04:22:45.816107+01:00'::timestamptz, 523, false) RETURNING "pong_gamedata"."id"; args=('Player 36', 3, 'Player 26', 11, datetime.datetime(2024, 1, 11, 4, 22, 45, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 523, False); alias=default
DEBUG 2024-03-03 01:14:27,023 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 58', 11, 'Player 13', 10, '2023-11-20T05:55:28.816107+01:00'::timestamptz, 304, false) RETURNING "pong_gamedata"."id"; args=('Player 58', 11, 'Player 13', 10, datetime.datetime(2023, 11, 20, 5, 55, 28, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 304, False); alias=default
DEBUG 2024-03-03 01:14:27,024 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 54', 11, 'Player 28', 6, '2023-11-29T16:15:01.816107+01:00'::timestamptz, 182, false) RETURNING "pong_gamedata"."id"; args=('Player 54', 11, 'Player 28', 6, datetime.datetime(2023, 11, 29, 16, 15, 1, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 182, False); alias=default
DEBUG 2024-03-03 01:14:27,025 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 11, 'Player 22', 8, '2023-12-02T14:57:48.816107+01:00'::timestamptz, 817, false) RETURNING "pong_gamedata"."id"; args=('Player 14', 11, 'Player 22', 8, datetime.datetime(2023, 12, 2, 14, 57, 48, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 817, False); alias=default
DEBUG 2024-03-03 01:14:27,027 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 57', 9, '2024-02-29T15:59:28.816107+01:00'::timestamptz, 653, false) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 57', 9, datetime.datetime(2024, 2, 29, 15, 59, 28, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 653, False); alias=default
DEBUG 2024-03-03 01:14:27,028 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 5, 'Player 9', 11, '2023-12-01T23:09:43.816107+01:00'::timestamptz, 629, false) RETURNING "pong_gamedata"."id"; args=('Player 17', 5, 'Player 9', 11, datetime.datetime(2023, 12, 1, 23, 9, 43, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 629, False); alias=default
DEBUG 2024-03-03 01:14:27,029 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 47', 11, 'Player 44', 4, '2023-11-22T06:25:16.816107+01:00'::timestamptz, 284, false) RETURNING "pong_gamedata"."id"; args=('Player 47', 11, 'Player 44', 4, datetime.datetime(2023, 11, 22, 6, 25, 16, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 284, False); alias=default
DEBUG 2024-03-03 01:14:27,031 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 11, 'Player 3', 8, '2023-11-02T17:52:28.816107+01:00'::timestamptz, 904, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 11, 'Player 3', 8, datetime.datetime(2023, 11, 2, 17, 52, 28, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 904, False); alias=default
DEBUG 2024-03-03 01:14:27,032 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 21', 11, 'Player 62', 0, '2023-11-24T15:56:53.816107+01:00'::timestamptz, 943, false) RETURNING "pong_gamedata"."id"; args=('Player 21', 11, 'Player 62', 0, datetime.datetime(2023, 11, 24, 15, 56, 53, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 943, False); alias=default
DEBUG 2024-03-03 01:14:27,033 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 29', 11, 'Player 12', 10, '2023-11-19T17:36:48.816107+01:00'::timestamptz, 755, false) RETURNING "pong_gamedata"."id"; args=('Player 29', 11, 'Player 12', 10, datetime.datetime(2023, 11, 19, 17, 36, 48, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 755, False); alias=default
DEBUG 2024-03-03 01:14:27,035 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 60', 8, 'Player 45', 11, '2024-02-13T12:22:48.816107+01:00'::timestamptz, 809, false) RETURNING "pong_gamedata"."id"; args=('Player 60', 8, 'Player 45', 11, datetime.datetime(2024, 2, 13, 12, 22, 48, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 809, False); alias=default
DEBUG 2024-03-03 01:14:27,037 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 47', 11, 'Player 26', 7, '2024-02-22T10:37:39.816107+01:00'::timestamptz, 899, false) RETURNING "pong_gamedata"."id"; args=('Player 47', 11, 'Player 26', 7, datetime.datetime(2024, 2, 22, 10, 37, 39, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 899, False); alias=default
DEBUG 2024-03-03 01:14:27,038 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 56', 1, 'Player 8', 11, '2024-02-22T15:34:57.816107+01:00'::timestamptz, 493, false) RETURNING "pong_gamedata"."id"; args=('Player 56', 1, 'Player 8', 11, datetime.datetime(2024, 2, 22, 15, 34, 57, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 493, False); alias=default
DEBUG 2024-03-03 01:14:27,039 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 23', 5, 'Player 52', 11, '2024-01-26T01:58:08.816107+01:00'::timestamptz, 467, false) RETURNING "pong_gamedata"."id"; args=('Player 23', 5, 'Player 52', 11, datetime.datetime(2024, 1, 26, 1, 58, 8, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 467, False); alias=default
DEBUG 2024-03-03 01:14:27,040 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,042 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 4, 'Player 8', 11, '2024-01-19T10:14:35.816107+01:00'::timestamptz, 410, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 4, 'Player 8', 11, datetime.datetime(2024, 1, 19, 10, 14, 35, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 410, True); alias=default
DEBUG 2024-03-03 01:14:27,044 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 10, 'Player 15', 11, '2024-01-19T10:15:13.816107+01:00'::timestamptz, 393, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 10, 'Player 15', 11, datetime.datetime(2024, 1, 19, 10, 15, 13, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 393, True); alias=default
DEBUG 2024-03-03 01:14:27,045 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 15', 9, '2024-01-19T10:16:08.816107+01:00'::timestamptz, 75, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 15', 9, datetime.datetime(2024, 1, 19, 10, 16, 8, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 75, True); alias=default
DEBUG 2024-03-03 01:14:27,047 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 101, 102, 103, '2024-01-19T10:16:08.816107+01:00'::timestamptz, 503, '["Player 8", "Player 15", "Player 7", "Player 13"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 101, 102, 103, datetime.datetime(2024, 1, 19, 10, 16, 8, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 503, <psycopg2._json.Json object at 0x7f4994312840>, '0x0'); alias=default
DEBUG 2024-03-03 01:14:27,048 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 0', 1, '2024-02-13T19:03:54.816107+01:00'::timestamptz, 581, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 0', 1, datetime.datetime(2024, 2, 13, 19, 3, 54, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 581, True); alias=default
DEBUG 2024-03-03 01:14:27,049 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 1', 0, '2024-02-13T19:07:19.816107+01:00'::timestamptz, 976, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 1', 0, datetime.datetime(2024, 2, 13, 19, 7, 19, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 976, True); alias=default
DEBUG 2024-03-03 01:14:27,050 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 2', 6, '2024-02-13T19:07:22.816107+01:00'::timestamptz, 725, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 2', 6, datetime.datetime(2024, 2, 13, 19, 7, 22, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 725, True); alias=default
DEBUG 2024-03-03 01:14:27,052 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 104, 105, 106, '2024-02-13T19:07:22.816107+01:00'::timestamptz, 979, '["Player 13", "Player 2", "Player 0", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 104, 105, 106, datetime.datetime(2024, 2, 13, 19, 7, 22, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 979, <psycopg2._json.Json object at 0x7f4994364110>, '0x0'); alias=default
DEBUG 2024-03-03 01:14:27,054 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 11, 'Player 16', 8, '2023-11-09T16:55:13.816107+01:00'::timestamptz, 704, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 11, 'Player 16', 8, datetime.datetime(2023, 11, 9, 16, 55, 13, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 704, True); alias=default
DEBUG 2024-03-03 01:14:27,055 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 0, 'Player 14', 11, '2023-11-09T16:56:47.816107+01:00'::timestamptz, 540, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 0, 'Player 14', 11, datetime.datetime(2023, 11, 9, 16, 56, 47, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 540, True); alias=default
DEBUG 2024-03-03 01:14:27,056 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 6, 'Player 14', 11, '2023-11-09T16:59:03.816107+01:00'::timestamptz, 826, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 6, 'Player 14', 11, datetime.datetime(2023, 11, 9, 16, 59, 3, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 826, True); alias=default
DEBUG 2024-03-03 01:14:27,058 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 107, 108, 109, '2023-11-09T16:59:03.816107+01:00'::timestamptz, 934, '["Player 14", "Player 0", "Player 16", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 107, 108, 109, datetime.datetime(2023, 11, 9, 16, 59, 3, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 934, <psycopg2._json.Json object at 0x7f49941994c0>, '0x0'); alias=default
DEBUG 2024-03-03 01:14:27,059 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 9', 1, '2024-01-29T11:27:28.816107+01:00'::timestamptz, 323, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 9', 1, datetime.datetime(2024, 1, 29, 11, 27, 28, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 323, True); alias=default
DEBUG 2024-03-03 01:14:27,061 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 7, 'Player 11', 11, '2024-01-29T11:28:53.816107+01:00'::timestamptz, 941, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 7, 'Player 11', 11, datetime.datetime(2024, 1, 29, 11, 28, 53, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 941, True); alias=default
DEBUG 2024-03-03 01:14:27,062 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 11', 0, '2024-01-29T11:29:40.816107+01:00'::timestamptz, 987, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 11', 0, datetime.datetime(2024, 1, 29, 11, 29, 40, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 987, True); alias=default
DEBUG 2024-03-03 01:14:27,063 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 110, 111, 112, '2024-01-29T11:29:40.816107+01:00'::timestamptz, 988, '["Player 3", "Player 11", "Player 9", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 110, 111, 112, datetime.datetime(2024, 1, 29, 11, 29, 40, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 988, <psycopg2._json.Json object at 0x7f499419b050>, '0x0'); alias=default
DEBUG 2024-03-03 01:14:27,064 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 0', 8, '2023-11-23T07:22:50.816107+01:00'::timestamptz, 480, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 0', 8, datetime.datetime(2023, 11, 23, 7, 22, 50, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 480, True); alias=default
DEBUG 2024-03-03 01:14:27,066 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 9, 'Player 10', 11, '2023-11-23T07:22:42.816107+01:00'::timestamptz, 706, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 9, 'Player 10', 11, datetime.datetime(2023, 11, 23, 7, 22, 42, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 706, True); alias=default
DEBUG 2024-03-03 01:14:27,067 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 0, 'Player 10', 11, '2023-11-23T07:25:33.816107+01:00'::timestamptz, 412, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 0, 'Player 10', 11, datetime.datetime(2023, 11, 23, 7, 25, 33, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 412, True); alias=default
DEBUG 2024-03-03 01:14:27,068 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 113, 114, 115, '2023-11-23T07:25:33.816107+01:00'::timestamptz, 877, '["Player 10", "Player 7", "Player 0", "Player 1"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 113, 114, 115, datetime.datetime(2023, 11, 23, 7, 25, 33, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 877, <psycopg2._json.Json object at 0x7f49941986b0>, '0x0'); alias=default
DEBUG 2024-03-03 01:14:27,070 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 8, 'Player 16', 11, '2024-03-02T08:38:00.816107+01:00'::timestamptz, 650, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 8, 'Player 16', 11, datetime.datetime(2024, 3, 2, 8, 38, 0, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 650, True); alias=default
DEBUG 2024-03-03 01:14:27,072 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 10, 'Player 2', 11, '2024-03-02T08:37:10.816107+01:00'::timestamptz, 512, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 10, 'Player 2', 11, datetime.datetime(2024, 3, 2, 8, 37, 10, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 512, True); alias=default
DEBUG 2024-03-03 01:14:27,073 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 0, 'Player 2', 11, '2024-03-02T08:40:05.816107+01:00'::timestamptz, 892, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 0, 'Player 2', 11, datetime.datetime(2024, 3, 2, 8, 40, 5, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 892, True); alias=default
DEBUG 2024-03-03 01:14:27,074 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 116, 117, 118, '2024-03-02T08:40:05.816107+01:00'::timestamptz, 775, '["Player 2", "Player 16", "Player 15", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 116, 117, 118, datetime.datetime(2024, 3, 2, 8, 40, 5, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 775, <psycopg2._json.Json object at 0x7f499419b710>, '0x0'); alias=default
DEBUG 2024-03-03 01:14:27,075 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 3, 'Player 7', 11, '2023-12-03T23:38:31.816107+01:00'::timestamptz, 697, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 3, 'Player 7', 11, datetime.datetime(2023, 12, 3, 23, 38, 31, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 697, True); alias=default
DEBUG 2024-03-03 01:14:27,077 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 11, 'Player 0', 5, '2023-12-03T23:37:21.816107+01:00'::timestamptz, 720, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 11, 'Player 0', 5, datetime.datetime(2023, 12, 3, 23, 37, 21, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 720, True); alias=default
DEBUG 2024-03-03 01:14:27,078 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 11, 'Player 6', 2, '2023-12-03T23:41:42.816107+01:00'::timestamptz, 560, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 11, 'Player 6', 2, datetime.datetime(2023, 12, 3, 23, 41, 42, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 560, True); alias=default
DEBUG 2024-03-03 01:14:27,080 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 119, 120, 121, '2023-12-03T23:41:42.816107+01:00'::timestamptz, 981, '["Player 7", "Player 6", "Player 17", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 119, 120, 121, datetime.datetime(2023, 12, 3, 23, 41, 42, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 981, <psycopg2._json.Json object at 0x7f4994198980>, '0x0'); alias=default
DEBUG 2024-03-03 01:14:27,081 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 17', 4, '2024-02-18T01:21:23.816107+01:00'::timestamptz, 176, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 17', 4, datetime.datetime(2024, 2, 18, 1, 21, 23, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 176, True); alias=default
DEBUG 2024-03-03 01:14:27,082 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 3, 'Player 18', 11, '2024-02-18T01:16:55.816107+01:00'::timestamptz, 329, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 3, 'Player 18', 11, datetime.datetime(2024, 2, 18, 1, 16, 55, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 329, True); alias=default
DEBUG 2024-03-03 01:14:27,083 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 18', 10, '2024-02-18T01:27:22.816107+01:00'::timestamptz, 387, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 18', 10, datetime.datetime(2024, 2, 18, 1, 27, 22, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 387, True); alias=default
DEBUG 2024-03-03 01:14:27,085 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 122, 123, 124, '2024-02-18T01:27:22.816107+01:00'::timestamptz, 956, '["Player 2", "Player 18", "Player 17", "Player 16"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 122, 123, 124, datetime.datetime(2024, 2, 18, 1, 27, 22, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 956, <psycopg2._json.Json object at 0x7f499419a270>, '0x0'); alias=default
DEBUG 2024-03-03 01:14:27,087 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 6, 'Player 16', 11, '2024-02-22T09:23:31.816107+01:00'::timestamptz, 373, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 6, 'Player 16', 11, datetime.datetime(2024, 2, 22, 9, 23, 31, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 373, True); alias=default
DEBUG 2024-03-03 01:14:27,088 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 14', 9, 'Player 7', 11, '2024-02-22T09:26:52.816107+01:00'::timestamptz, 462, true) RETURNING "pong_gamedata"."id"; args=('Player 14', 9, 'Player 7', 11, datetime.datetime(2024, 2, 22, 9, 26, 52, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 462, True); alias=default
DEBUG 2024-03-03 01:14:27,089 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 16', 5, 'Player 7', 11, '2024-02-22T09:32:33.816107+01:00'::timestamptz, 777, true) RETURNING "pong_gamedata"."id"; args=('Player 16', 5, 'Player 7', 11, datetime.datetime(2024, 2, 22, 9, 32, 33, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 777, True); alias=default
DEBUG 2024-03-03 01:14:27,091 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 125, 126, 127, '2024-02-22T09:32:33.816107+01:00'::timestamptz, 915, '["Player 7", "Player 16", "Player 2", "Player 14"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 125, 126, 127, datetime.datetime(2024, 2, 22, 9, 32, 33, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 915, <psycopg2._json.Json object at 0x7f499419a750>, '0x0'); alias=default
DEBUG 2024-03-03 01:14:27,092 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 11, 'Player 0', 4, '2024-01-26T14:22:15.816107+01:00'::timestamptz, 199, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 11, 'Player 0', 4, datetime.datetime(2024, 1, 26, 14, 22, 15, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 199, True); alias=default
DEBUG 2024-03-03 01:14:27,093 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 19', 11, 'Player 3', 4, '2024-01-26T14:24:56.816107+01:00'::timestamptz, 398, true) RETURNING "pong_gamedata"."id"; args=('Player 19', 11, 'Player 3', 4, datetime.datetime(2024, 1, 26, 14, 24, 56, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 398, True); alias=default
DEBUG 2024-03-03 01:14:27,095 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 17', 8, 'Player 19', 11, '2024-01-26T14:28:37.816107+01:00'::timestamptz, 339, true) RETURNING "pong_gamedata"."id"; args=('Player 17', 8, 'Player 19', 11, datetime.datetime(2024, 1, 26, 14, 28, 37, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 339, True); alias=default
DEBUG 2024-03-03 01:14:27,096 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 128, 129, 130, '2024-01-26T14:28:37.816107+01:00'::timestamptz, 619, '["Player 19", "Player 17", "Player 0", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 128, 129, 130, datetime.datetime(2024, 1, 26, 14, 28, 37, 816107, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 619, <psycopg2._json.Json object at 0x7f4994199a00>, '0x0'); alias=default
DEBUG 2024-03-03 01:14:27,098 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,098 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,099 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 01:14:27,099 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:27,100 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
DEBUG 2024-03-03 01:14:27,101 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:27,103 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-03-03 01:14:27,104 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-03-03 01:14:27,105 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-03-03 01:14:27,107 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-03-03 01:14:27,107 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:27,108 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
DEBUG 2024-03-03 01:14:27,109 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:27,110 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-03-03 01:14:27,111 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,112 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,112 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,113 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,115 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,115 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,116 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 01:14:27,117 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:27,117 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 01:14:27,118 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:27,119 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-03-03 01:14:27,121 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-03-03 01:14:27,122 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:27,123 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
DEBUG 2024-03-03 01:14:27,123 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:27,124 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-03-03 01:14:27,125 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,126 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,127 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,128 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,129 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,130 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,130 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 01:14:27,131 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:27,131 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 01:14:27,132 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:27,133 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-03-03 01:14:27,134 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-03-03 01:14:27,135 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:27,136 utils (0.001) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
DEBUG 2024-03-03 01:14:27,137 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:27,138 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-03-03 01:14:27,139 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,140 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,141 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,142 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,143 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,143 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,144 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 01:14:27,144 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:27,145 utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('pong', 'gamedata'), ('pong', 'tournamentdata') RETURNING "django_content_type"."id"; args=('pong', 'gamedata', 'pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 01:14:27,146 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:27,147 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-03-03 01:14:27,148 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-03-03 01:14:27,149 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-03-03 01:14:27,149 utils (0.000) BEGIN; args=None; alias=default
DEBUG 2024-03-03 01:14:27,150 utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add game data', 7, 'add_gamedata'), ('Can change game data', 7, 'change_gamedata'), ('Can delete game data', 7, 'delete_gamedata'), ('Can view game data', 7, 'view_gamedata'), ('Can add tournament data', 8, 'add_tournamentdata'), ('Can change tournament data', 8, 'change_tournamentdata'), ('Can delete tournament data', 8, 'delete_tournamentdata'), ('Can view tournament data', 8, 'view_tournamentdata') RETURNING "auth_permission"."id"; args=('Can add game data', 7, 'add_gamedata', 'Can change game data', 7, 'change_gamedata', 'Can delete game data', 7, 'delete_gamedata', 'Can view game data', 7, 'view_gamedata', 'Can add tournament data', 8, 'add_tournamentdata', 'Can change tournament data', 8, 'change_tournamentdata', 'Can delete tournament data', 8, 'delete_tournamentdata', 'Can view tournament data', 8, 'view_tournamentdata'); alias=default
DEBUG 2024-03-03 01:14:27,151 utils (0.001) COMMIT; args=None; alias=default
DEBUG 2024-03-03 01:14:27,152 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-03-03 01:14:27,153 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,154 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,155 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,156 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,157 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-03-03 01:14:27,158 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
