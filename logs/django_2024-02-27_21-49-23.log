DEBUG 2024-02-27 21:49:25,429 utils (0.004) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:49:25,436 utils (0.004) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,438 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:49:25,439 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,464 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:49:25,466 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 21:49:25,467 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,470 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:49:25,471 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 21:49:25,474 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 21:49:25,475 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 21:49:25,477 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,478 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,479 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,480 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,512 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 9', 2, '2023-11-22T06:11:01.478535+01:00'::timestamptz, 219, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 9', 2, datetime.datetime(2023, 11, 22, 6, 11, 1, 478535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 219, True); alias=default
DEBUG 2024-02-27 21:49:25,514 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 7, 'Player 14', 11, '2023-11-22T06:16:30.478535+01:00'::timestamptz, 229, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 7, 'Player 14', 11, datetime.datetime(2023, 11, 22, 6, 16, 30, 478535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 229, True); alias=default
DEBUG 2024-02-27 21:49:25,516 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 11, 'Player 14', 6, '2023-11-22T06:18:08.478535+01:00'::timestamptz, 164, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 11, 'Player 14', 6, datetime.datetime(2023, 11, 22, 6, 18, 8, 478535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 164, True); alias=default
DEBUG 2024-02-27 21:49:25,518 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1805, 1806, 1807, '2023-11-22T06:18:08.478535+01:00'::timestamptz, 646, '["Player 10", "Player 14", "Player 9", "Player 11"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1805, 1806, 1807, datetime.datetime(2023, 11, 22, 6, 18, 8, 478535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 646, <psycopg2._json.Json object at 0x7fde04e22930>, '0x0'); alias=default
DEBUG 2024-02-27 21:49:25,520 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 0, 'Player 10', 11, '2024-01-22T12:39:07.478535+01:00'::timestamptz, 390, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 0, 'Player 10', 11, datetime.datetime(2024, 1, 22, 12, 39, 7, 478535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 390, True); alias=default
DEBUG 2024-02-27 21:49:25,521 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 6, 'Player 13', 11, '2024-01-22T12:38:30.478535+01:00'::timestamptz, 267, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 6, 'Player 13', 11, datetime.datetime(2024, 1, 22, 12, 38, 30, 478535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 267, True); alias=default
DEBUG 2024-02-27 21:49:25,523 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 3, 'Player 13', 11, '2024-01-22T12:42:09.478535+01:00'::timestamptz, 106, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 3, 'Player 13', 11, datetime.datetime(2024, 1, 22, 12, 42, 9, 478535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 106, True); alias=default
DEBUG 2024-02-27 21:49:25,524 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1808, 1809, 1810, '2024-01-22T12:42:09.478535+01:00'::timestamptz, 572, '["Player 13", "Player 10", "Player 4", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1808, 1809, 1810, datetime.datetime(2024, 1, 22, 12, 42, 9, 478535, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 572, <psycopg2._json.Json object at 0x7fde04e23a10>, '0x0'); alias=default
DEBUG 2024-02-27 21:49:25,526 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,529 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,530 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:49:25,532 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 21:49:25,537 utils (0.003) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 21:49:25,539 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 21:49:25,543 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 21:49:25,544 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 21:49:25,546 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,547 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,550 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,552 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,562 utils (0.009) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 12', 6, '2024-02-23T00:53:47.548199+01:00'::timestamptz, 861, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 12', 6, datetime.datetime(2024, 2, 23, 0, 53, 47, 548199, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 861, True); alias=default
DEBUG 2024-02-27 21:49:25,564 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 9', 4, '2024-02-23T00:48:37.548199+01:00'::timestamptz, 375, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 9', 4, datetime.datetime(2024, 2, 23, 0, 48, 37, 548199, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 375, True); alias=default
DEBUG 2024-02-27 21:49:25,566 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 11, 'Player 5', 2, '2024-02-23T00:55:45.548199+01:00'::timestamptz, 993, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 11, 'Player 5', 2, datetime.datetime(2024, 2, 23, 0, 55, 45, 548199, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 993, True); alias=default
DEBUG 2024-02-27 21:49:25,567 utils (0.001) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1811, 1812, 1813, '2024-02-23T00:55:45.548199+01:00'::timestamptz, 979, '["Player 4", "Player 5", "Player 12", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1811, 1812, 1813, datetime.datetime(2024, 2, 23, 0, 55, 45, 548199, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 979, <psycopg2._json.Json object at 0x7fde04c48500>, '0x0'); alias=default
DEBUG 2024-02-27 21:49:25,569 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 9, 'Player 15', 11, '2023-11-10T10:12:16.548199+01:00'::timestamptz, 888, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 9, 'Player 15', 11, datetime.datetime(2023, 11, 10, 10, 12, 16, 548199, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 888, True); alias=default
DEBUG 2024-02-27 21:49:25,570 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 7, 'Player 13', 11, '2023-11-10T10:09:38.548199+01:00'::timestamptz, 191, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 7, 'Player 13', 11, datetime.datetime(2023, 11, 10, 10, 9, 38, 548199, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 191, True); alias=default
DEBUG 2024-02-27 21:49:25,571 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 13', 8, '2023-11-10T10:13:21.548199+01:00'::timestamptz, 373, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 13', 8, datetime.datetime(2023, 11, 10, 10, 13, 21, 548199, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 373, True); alias=default
DEBUG 2024-02-27 21:49:25,572 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1814, 1815, 1816, '2023-11-10T10:13:21.548199+01:00'::timestamptz, 953, '["Player 15", "Player 13", "Player 8", "Player 5"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1814, 1815, 1816, datetime.datetime(2023, 11, 10, 10, 13, 21, 548199, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 953, <psycopg2._json.Json object at 0x7fde04c48620>, '0x0'); alias=default
DEBUG 2024-02-27 21:49:25,573 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,574 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,575 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:49:25,577 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 21:49:25,579 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 21:49:25,579 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 21:49:25,581 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,582 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,583 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,585 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,586 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 13', 7, '2024-01-17T11:16:40.582301+01:00'::timestamptz, 670, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 13', 7, datetime.datetime(2024, 1, 17, 11, 16, 40, 582301, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 670, True); alias=default
DEBUG 2024-02-27 21:49:25,588 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 0, 'Player 15', 11, '2024-01-17T11:10:43.582301+01:00'::timestamptz, 294, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 0, 'Player 15', 11, datetime.datetime(2024, 1, 17, 11, 10, 43, 582301, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 294, True); alias=default
DEBUG 2024-02-27 21:49:25,589 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 15', 3, '2024-01-17T11:19:09.582301+01:00'::timestamptz, 148, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 15', 3, datetime.datetime(2024, 1, 17, 11, 19, 9, 582301, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 148, True); alias=default
DEBUG 2024-02-27 21:49:25,590 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1817, 1818, 1819, '2024-01-17T11:19:09.582301+01:00'::timestamptz, 819, '["Player 3", "Player 15", "Player 13", "Player 0"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1817, 1818, 1819, datetime.datetime(2024, 1, 17, 11, 19, 9, 582301, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 819, <psycopg2._json.Json object at 0x7fde04e234a0>, '0x0'); alias=default
DEBUG 2024-02-27 21:49:25,591 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 15', 1, '2024-01-07T18:06:00.582301+01:00'::timestamptz, 29, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 15', 1, datetime.datetime(2024, 1, 7, 18, 6, 0, 582301, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 29, True); alias=default
DEBUG 2024-02-27 21:49:25,592 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 7', 2, '2024-01-07T18:08:18.582301+01:00'::timestamptz, 551, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 7', 2, datetime.datetime(2024, 1, 7, 18, 8, 18, 582301, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 551, True); alias=default
DEBUG 2024-02-27 21:49:25,593 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 7, 'Player 1', 11, '2024-01-07T18:13:58.582301+01:00'::timestamptz, 339, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 7, 'Player 1', 11, datetime.datetime(2024, 1, 7, 18, 13, 58, 582301, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 339, True); alias=default
DEBUG 2024-02-27 21:49:25,594 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1820, 1821, 1822, '2024-01-07T18:13:58.582301+01:00'::timestamptz, 891, '["Player 1", "Player 3", "Player 15", "Player 7"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1820, 1821, 1822, datetime.datetime(2024, 1, 7, 18, 13, 58, 582301, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 891, <psycopg2._json.Json object at 0x7fde04c4a1b0>, '0x0'); alias=default
DEBUG 2024-02-27 21:49:25,595 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,596 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,597 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:49:25,599 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 21:49:25,601 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 21:49:25,602 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 21:49:25,603 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,604 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,605 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,606 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,608 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 6', 9, '2024-02-25T03:30:59.604826+01:00'::timestamptz, 741, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 6', 9, datetime.datetime(2024, 2, 25, 3, 30, 59, 604826, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 741, True); alias=default
DEBUG 2024-02-27 21:49:25,609 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 4', 3, '2024-02-25T03:24:43.604826+01:00'::timestamptz, 111, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 4', 3, datetime.datetime(2024, 2, 25, 3, 24, 43, 604826, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 111, True); alias=default
DEBUG 2024-02-27 21:49:25,610 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 15', 2, '2024-02-25T03:32:33.604826+01:00'::timestamptz, 758, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 15', 2, datetime.datetime(2024, 2, 25, 3, 32, 33, 604826, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 758, True); alias=default
DEBUG 2024-02-27 21:49:25,611 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1823, 1824, 1825, '2024-02-25T03:32:33.604826+01:00'::timestamptz, 835, '["Player 3", "Player 15", "Player 6", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1823, 1824, 1825, datetime.datetime(2024, 2, 25, 3, 32, 33, 604826, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 835, <psycopg2._json.Json object at 0x7fde04c48e00>, '0x0'); alias=default
DEBUG 2024-02-27 21:49:25,613 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 4, 'Player 8', 11, '2024-02-19T04:39:40.604826+01:00'::timestamptz, 595, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 4, 'Player 8', 11, datetime.datetime(2024, 2, 19, 4, 39, 40, 604826, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 595, True); alias=default
DEBUG 2024-02-27 21:49:25,615 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 11, 'Player 9', 0, '2024-02-19T04:32:03.604826+01:00'::timestamptz, 185, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 11, 'Player 9', 0, datetime.datetime(2024, 2, 19, 4, 32, 3, 604826, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 185, True); alias=default
DEBUG 2024-02-27 21:49:25,617 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 2', 7, '2024-02-19T04:41:40.604826+01:00'::timestamptz, 771, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 2', 7, datetime.datetime(2024, 2, 19, 4, 41, 40, 604826, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 771, True); alias=default
DEBUG 2024-02-27 21:49:25,618 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1826, 1827, 1828, '2024-02-19T04:41:40.604826+01:00'::timestamptz, 762, '["Player 8", "Player 2", "Player 0", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1826, 1827, 1828, datetime.datetime(2024, 2, 19, 4, 41, 40, 604826, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 762, <psycopg2._json.Json object at 0x7fde04c4b1d0>, '0x0'); alias=default
DEBUG 2024-02-27 21:49:25,620 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,621 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,622 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:49:25,623 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 21:49:25,624 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 21:49:25,626 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 21:49:25,627 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 21:49:25,629 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,630 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,631 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,633 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,635 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 0', 4, 'Player 7', 11, '2023-12-02T20:25:33.630293+01:00'::timestamptz, 501, true) RETURNING "pong_gamedata"."id"; args=('Player 0', 4, 'Player 7', 11, datetime.datetime(2023, 12, 2, 20, 25, 33, 630293, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 501, True); alias=default
DEBUG 2024-02-27 21:49:25,637 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 11, 'Player 6', 7, '2023-12-02T20:30:29.630293+01:00'::timestamptz, 466, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 11, 'Player 6', 7, datetime.datetime(2023, 12, 2, 20, 30, 29, 630293, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 466, True); alias=default
DEBUG 2024-02-27 21:49:25,638 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 7', 1, 'Player 1', 11, '2023-12-02T20:32:20.630293+01:00'::timestamptz, 935, true) RETURNING "pong_gamedata"."id"; args=('Player 7', 1, 'Player 1', 11, datetime.datetime(2023, 12, 2, 20, 32, 20, 630293, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 935, True); alias=default
DEBUG 2024-02-27 21:49:25,639 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1829, 1830, 1831, '2023-12-02T20:32:20.630293+01:00'::timestamptz, 908, '["Player 1", "Player 7", "Player 0", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1829, 1830, 1831, datetime.datetime(2023, 12, 2, 20, 32, 20, 630293, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 908, <psycopg2._json.Json object at 0x7fde04c4af60>, '0x0'); alias=default
DEBUG 2024-02-27 21:49:25,640 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 14', 4, '2024-01-21T04:48:35.630293+01:00'::timestamptz, 645, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 14', 4, datetime.datetime(2024, 1, 21, 4, 48, 35, 630293, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 645, True); alias=default
DEBUG 2024-02-27 21:49:25,642 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 3, 'Player 13', 11, '2024-01-21T04:44:39.630293+01:00'::timestamptz, 360, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 3, 'Player 13', 11, datetime.datetime(2024, 1, 21, 4, 44, 39, 630293, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 360, True); alias=default
DEBUG 2024-02-27 21:49:25,643 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 2, 'Player 13', 11, '2024-01-21T04:51:25.630293+01:00'::timestamptz, 877, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 2, 'Player 13', 11, datetime.datetime(2024, 1, 21, 4, 51, 25, 630293, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 877, True); alias=default
DEBUG 2024-02-27 21:49:25,644 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 1832, 1833, 1834, '2024-01-21T04:51:25.630293+01:00'::timestamptz, 815, '["Player 13", "Player 15", "Player 14", "Player 9"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 1832, 1833, 1834, datetime.datetime(2024, 1, 21, 4, 51, 25, 630293, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 815, <psycopg2._json.Json object at 0x7fde04c48da0>, '0x0'); alias=default
DEBUG 2024-02-27 21:49:25,645 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 21:49:25,646 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
