DEBUG 2024-02-27 22:33:38,598 utils (0.002) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:33:38,600 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,602 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:33:38,602 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,622 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:33:38,623 utils (0.001) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
DEBUG 2024-02-27 22:33:38,624 utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,628 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:33:38,629 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
DEBUG 2024-02-27 22:33:38,633 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
DEBUG 2024-02-27 22:33:38,634 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
DEBUG 2024-02-27 22:33:38,636 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,638 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,639 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,640 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,692 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 15', 2, '2024-01-14T02:32:31.638320+01:00'::timestamptz, 473, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 15', 2, datetime.datetime(2024, 1, 14, 2, 32, 31, 638320, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 473, True); alias=default
DEBUG 2024-02-27 22:33:38,693 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 6, 'Player 1', 11, '2024-01-14T02:40:29.638320+01:00'::timestamptz, 939, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 6, 'Player 1', 11, datetime.datetime(2024, 1, 14, 2, 40, 29, 638320, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 939, True); alias=default
DEBUG 2024-02-27 22:33:38,695 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 11', 11, 'Player 1', 5, '2024-01-14T02:41:14.638320+01:00'::timestamptz, 566, true) RETURNING "pong_gamedata"."id"; args=('Player 11', 11, 'Player 1', 5, datetime.datetime(2024, 1, 14, 2, 41, 14, 638320, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 566, True); alias=default
DEBUG 2024-02-27 22:33:38,697 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2235, 2236, 2237, '2024-01-14T02:41:14.638320+01:00'::timestamptz, 996, '["Player 11", "Player 1", "Player 15", "Player 3"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2235, 2236, 2237, datetime.datetime(2024, 1, 14, 2, 41, 14, 638320, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 996, <psycopg2._json.Json object at 0x7f1c5f68eb40>, '0x0'); alias=default
DEBUG 2024-02-27 22:33:38,698 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 8, 'Player 15', 11, '2024-02-25T03:32:33.638320+01:00'::timestamptz, 815, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 8, 'Player 15', 11, datetime.datetime(2024, 2, 25, 3, 32, 33, 638320, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 815, True); alias=default
DEBUG 2024-02-27 22:33:38,700 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 6', 9, '2024-02-25T03:24:34.638320+01:00'::timestamptz, 281, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 6', 9, datetime.datetime(2024, 2, 25, 3, 24, 34, 638320, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 281, True); alias=default
DEBUG 2024-02-27 22:33:38,702 utils (0.002) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 15', 11, 'Player 5', 4, '2024-02-25T03:32:58.638320+01:00'::timestamptz, 212, true) RETURNING "pong_gamedata"."id"; args=('Player 15', 11, 'Player 5', 4, datetime.datetime(2024, 2, 25, 3, 32, 58, 638320, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 212, True); alias=default
DEBUG 2024-02-27 22:33:38,704 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2238, 2239, 2240, '2024-02-25T03:32:58.638320+01:00'::timestamptz, 840, '["Player 15", "Player 5", "Player 3", "Player 6"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2238, 2239, 2240, datetime.datetime(2024, 2, 25, 3, 32, 58, 638320, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 840, <psycopg2._json.Json object at 0x7f1c5f68f650>, '0x0'); alias=default
DEBUG 2024-02-27 22:33:38,706 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,709 utils (0.002) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,710 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:33:38,712 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
DEBUG 2024-02-27 22:33:38,713 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
DEBUG 2024-02-27 22:33:38,715 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
DEBUG 2024-02-27 22:33:38,718 utils (0.001) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
DEBUG 2024-02-27 22:33:38,719 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
DEBUG 2024-02-27 22:33:38,721 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,722 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,723 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,726 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,728 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 1', 4, 'Player 2', 11, '2024-01-30T21:27:00.722495+01:00'::timestamptz, 272, true) RETURNING "pong_gamedata"."id"; args=('Player 1', 4, 'Player 2', 11, datetime.datetime(2024, 1, 30, 21, 27, 0, 722495, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 272, True); alias=default
DEBUG 2024-02-27 22:33:38,730 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 6, 'Player 3', 11, '2024-01-30T21:32:47.722495+01:00'::timestamptz, 517, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 6, 'Player 3', 11, datetime.datetime(2024, 1, 30, 21, 32, 47, 722495, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 517, True); alias=default
DEBUG 2024-02-27 22:33:38,732 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 6, 'Player 3', 11, '2024-01-30T21:37:20.722495+01:00'::timestamptz, 417, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 6, 'Player 3', 11, datetime.datetime(2024, 1, 30, 21, 37, 20, 722495, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 417, True); alias=default
DEBUG 2024-02-27 22:33:38,733 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2241, 2242, 2243, '2024-01-30T21:37:20.722495+01:00'::timestamptz, 892, '["Player 3", "Player 2", "Player 1", "Player 8"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2241, 2242, 2243, datetime.datetime(2024, 1, 30, 21, 37, 20, 722495, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 892, <psycopg2._json.Json object at 0x7f1c5f4b41d0>, '0x0'); alias=default
DEBUG 2024-02-27 22:33:38,734 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 1', 10, '2023-11-03T21:10:23.722495+01:00'::timestamptz, 247, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 1', 10, datetime.datetime(2023, 11, 3, 21, 10, 23, 722495, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 247, True); alias=default
DEBUG 2024-02-27 22:33:38,736 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 13', 11, 'Player 12', 5, '2023-11-03T21:17:56.722495+01:00'::timestamptz, 768, true) RETURNING "pong_gamedata"."id"; args=('Player 13', 11, 'Player 12', 5, datetime.datetime(2023, 11, 3, 21, 17, 56, 722495, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 768, True); alias=default
DEBUG 2024-02-27 22:33:38,738 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 11, 'Player 13', 8, '2023-11-03T21:21:34.722495+01:00'::timestamptz, 491, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 11, 'Player 13', 8, datetime.datetime(2023, 11, 3, 21, 21, 34, 722495, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 491, True); alias=default
DEBUG 2024-02-27 22:33:38,739 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2244, 2245, 2246, '2023-11-03T21:21:34.722495+01:00'::timestamptz, 986, '["Player 5", "Player 13", "Player 1", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2244, 2245, 2246, datetime.datetime(2023, 11, 3, 21, 21, 34, 722495, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 986, <psycopg2._json.Json object at 0x7f1c5f4b49e0>, '0x0'); alias=default
DEBUG 2024-02-27 22:33:38,740 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,742 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,744 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:33:38,746 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
DEBUG 2024-02-27 22:33:38,748 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
DEBUG 2024-02-27 22:33:38,749 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
DEBUG 2024-02-27 22:33:38,751 utils (0.002) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,753 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,754 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,756 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,757 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 2, 'Player 6', 11, '2023-11-01T13:28:41.753394+01:00'::timestamptz, 722, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 2, 'Player 6', 11, datetime.datetime(2023, 11, 1, 13, 28, 41, 753394, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 722, True); alias=default
DEBUG 2024-02-27 22:33:38,759 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 2', 10, '2023-11-01T13:22:49.753394+01:00'::timestamptz, 364, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 2', 10, datetime.datetime(2023, 11, 1, 13, 22, 49, 753394, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 364, True); alias=default
DEBUG 2024-02-27 22:33:38,760 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 6', 6, 'Player 12', 11, '2023-11-01T13:31:40.753394+01:00'::timestamptz, 843, true) RETURNING "pong_gamedata"."id"; args=('Player 6', 6, 'Player 12', 11, datetime.datetime(2023, 11, 1, 13, 31, 40, 753394, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 843, True); alias=default
DEBUG 2024-02-27 22:33:38,762 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2247, 2248, 2249, '2023-11-01T13:31:40.753394+01:00'::timestamptz, 901, '["Player 12", "Player 6", "Player 10", "Player 2"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2247, 2248, 2249, datetime.datetime(2023, 11, 1, 13, 31, 40, 753394, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 901, <psycopg2._json.Json object at 0x7f1c5f4b5160>, '0x0'); alias=default
DEBUG 2024-02-27 22:33:38,763 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 0', 5, '2024-01-23T23:50:00.753394+01:00'::timestamptz, 715, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 0', 5, datetime.datetime(2024, 1, 23, 23, 50, 0, 753394, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 715, True); alias=default
DEBUG 2024-02-27 22:33:38,765 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 4, 'Player 3', 11, '2024-01-23T23:48:19.753394+01:00'::timestamptz, 428, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 4, 'Player 3', 11, datetime.datetime(2024, 1, 23, 23, 48, 19, 753394, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 428, True); alias=default
DEBUG 2024-02-27 22:33:38,766 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 3, 'Player 3', 11, '2024-01-23T23:53:02.753394+01:00'::timestamptz, 62, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 3, 'Player 3', 11, datetime.datetime(2024, 1, 23, 23, 53, 2, 753394, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 62, True); alias=default
DEBUG 2024-02-27 22:33:38,767 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2250, 2251, 2252, '2024-01-23T23:53:02.753394+01:00'::timestamptz, 897, '["Player 3", "Player 9", "Player 0", "Player 12"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2250, 2251, 2252, datetime.datetime(2024, 1, 23, 23, 53, 2, 753394, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 897, <psycopg2._json.Json object at 0x7f1c5f4b5940>, '0x0'); alias=default
DEBUG 2024-02-27 22:33:38,768 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,769 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,769 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:33:38,770 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
DEBUG 2024-02-27 22:33:38,772 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
DEBUG 2024-02-27 22:33:38,773 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
DEBUG 2024-02-27 22:33:38,774 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,775 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,776 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,778 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,779 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 2', 3, 'Player 3', 11, '2024-02-01T18:23:50.775369+01:00'::timestamptz, 698, true) RETURNING "pong_gamedata"."id"; args=('Player 2', 3, 'Player 3', 11, datetime.datetime(2024, 2, 1, 18, 23, 50, 775369, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 698, True); alias=default
DEBUG 2024-02-27 22:33:38,781 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 1, 'Player 12', 11, '2024-02-01T18:23:12.775369+01:00'::timestamptz, 895, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 1, 'Player 12', 11, datetime.datetime(2024, 2, 1, 18, 23, 12, 775369, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 895, True); alias=default
DEBUG 2024-02-27 22:33:38,782 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 12', 10, '2024-02-01T18:24:14.775369+01:00'::timestamptz, 611, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 12', 10, datetime.datetime(2024, 2, 1, 18, 24, 14, 775369, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 611, True); alias=default
DEBUG 2024-02-27 22:33:38,783 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2253, 2254, 2255, '2024-02-01T18:24:14.775369+01:00'::timestamptz, 957, '["Player 3", "Player 12", "Player 2", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2253, 2254, 2255, datetime.datetime(2024, 2, 1, 18, 24, 14, 775369, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 957, <psycopg2._json.Json object at 0x7f1c5f4b6780>, '0x0'); alias=default
DEBUG 2024-02-27 22:33:38,785 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 11, 'Player 9', 3, '2023-11-30T17:16:00.775369+01:00'::timestamptz, 842, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 11, 'Player 9', 3, datetime.datetime(2023, 11, 30, 17, 16, 0, 775369, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 842, True); alias=default
DEBUG 2024-02-27 22:33:38,786 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 12', 11, 'Player 15', 0, '2023-11-30T17:15:27.775369+01:00'::timestamptz, 191, true) RETURNING "pong_gamedata"."id"; args=('Player 12', 11, 'Player 15', 0, datetime.datetime(2023, 11, 30, 17, 15, 27, 775369, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 191, True); alias=default
DEBUG 2024-02-27 22:33:38,787 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 3', 7, 'Player 12', 11, '2023-11-30T17:17:29.775369+01:00'::timestamptz, 440, true) RETURNING "pong_gamedata"."id"; args=('Player 3', 7, 'Player 12', 11, datetime.datetime(2023, 11, 30, 17, 17, 29, 775369, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 440, True); alias=default
DEBUG 2024-02-27 22:33:38,788 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2256, 2257, 2258, '2023-11-30T17:17:29.775369+01:00'::timestamptz, 931, '["Player 12", "Player 3", "Player 9", "Player 15"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2256, 2257, 2258, datetime.datetime(2023, 11, 30, 17, 17, 29, 775369, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 931, <psycopg2._json.Json object at 0x7f1c5f4b7020>, '0x0'); alias=default
DEBUG 2024-02-27 22:33:38,790 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,791 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,792 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:33:38,794 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'gamedata') LIMIT 21; args=('pong', 'gamedata'); alias=default
DEBUG 2024-02-27 22:33:38,796 utils (0.001) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'pong' AND "django_content_type"."model" = 'tournamentdata') LIMIT 21; args=('pong', 'tournamentdata'); alias=default
DEBUG 2024-02-27 22:33:38,798 utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 7); alias=default
DEBUG 2024-02-27 22:33:38,799 utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'pong'; args=('pong',); alias=default
DEBUG 2024-02-27 22:33:38,801 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,802 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,803 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,805 utils (0.001) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,807 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 11, 'Player 7', 0, '2023-12-17T07:52:23.802593+01:00'::timestamptz, 548, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 11, 'Player 7', 0, datetime.datetime(2023, 12, 17, 7, 52, 23, 802593, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 548, True); alias=default
DEBUG 2024-02-27 22:33:38,809 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 9', 11, 'Player 4', 6, '2023-12-17T07:50:41.802593+01:00'::timestamptz, 706, true) RETURNING "pong_gamedata"."id"; args=('Player 9', 11, 'Player 4', 6, datetime.datetime(2023, 12, 17, 7, 50, 41, 802593, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 706, True); alias=default
DEBUG 2024-02-27 22:33:38,811 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 8', 1, 'Player 9', 11, '2023-12-17T07:54:40.802593+01:00'::timestamptz, 435, true) RETURNING "pong_gamedata"."id"; args=('Player 8', 1, 'Player 9', 11, datetime.datetime(2023, 12, 17, 7, 54, 40, 802593, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 435, True); alias=default
DEBUG 2024-02-27 22:33:38,812 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2259, 2260, 2261, '2023-12-17T07:54:40.802593+01:00'::timestamptz, 945, '["Player 9", "Player 8", "Player 7", "Player 4"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2259, 2260, 2261, datetime.datetime(2023, 12, 17, 7, 54, 40, 802593, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 945, <psycopg2._json.Json object at 0x7f1c5f4b6840>, '0x0'); alias=default
DEBUG 2024-02-27 22:33:38,814 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 5', 4, 'Player 4', 11, '2024-02-08T12:18:57.802593+01:00'::timestamptz, 573, true) RETURNING "pong_gamedata"."id"; args=('Player 5', 4, 'Player 4', 11, datetime.datetime(2024, 2, 8, 12, 18, 57, 802593, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 573, True); alias=default
DEBUG 2024-02-27 22:33:38,815 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 10', 8, 'Player 6', 11, '2024-02-08T12:21:26.802593+01:00'::timestamptz, 708, true) RETURNING "pong_gamedata"."id"; args=('Player 10', 8, 'Player 6', 11, datetime.datetime(2024, 2, 8, 12, 21, 26, 802593, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 708, True); alias=default
DEBUG 2024-02-27 22:33:38,816 utils (0.001) INSERT INTO "pong_gamedata" ("player1_name", "player1_points", "player2_name", "player2_points", "game_end_timestamp", "game_duration_secs", "is_tournament_game") VALUES ('Player 4', 0, 'Player 6', 11, '2024-02-08T12:25:50.802593+01:00'::timestamptz, 198, true) RETURNING "pong_gamedata"."id"; args=('Player 4', 0, 'Player 6', 11, datetime.datetime(2024, 2, 8, 12, 25, 50, 802593, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 198, True); alias=default
DEBUG 2024-02-27 22:33:38,817 utils (0.000) INSERT INTO "pong_tournamentdata" ("tour_id", "match_id_semi_1", "match_id_semi_2", "match_id_final", "tournament_end_timestamp", "tournament_duration_secs", "player_ranking", "blockchain_hash") VALUES (0, 2262, 2263, 2264, '2024-02-08T12:25:50.802593+01:00'::timestamptz, 986, '["Player 6", "Player 4", "Player 5", "Player 10"]', '0x0') RETURNING "pong_tournamentdata"."id"; args=(0, 2262, 2263, 2264, datetime.datetime(2024, 2, 8, 12, 25, 50, 802593, tzinfo=<DstTzInfo 'Europe/Paris' CET+1:00:00 STD>), 986, <psycopg2._json.Json object at 0x7f1c5f4b72f0>, '0x0'); alias=default
DEBUG 2024-02-27 22:33:38,818 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_gamedata"; args=(); alias=default
DEBUG 2024-02-27 22:33:38,819 utils (0.000) SELECT COUNT(*) AS "__count" FROM "pong_tournamentdata"; args=(); alias=default
