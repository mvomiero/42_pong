version: '3'

services:
  transcendence:
    container_name: transcendence
    build:
      context: .
    ports:
      - "4443:4443"
    env_file:
      - .env
    volumes:
      - ssl_keys_local:/ssl-keys-local
    depends_on:
      postgres:
        condition: service_healthy  
    networks:
      - network

  postgres:
    container_name: postgres
    image: postgres
    ports:
      - "5432:5432"
    restart: always
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - network

  elasticsearch:
    container_name: elasticsearch
    build: ./Elastic
    ports:
      - "9200:9200"
      - "9300:9300"
    depends_on:
      - transcendence
    volumes:
      - ssl_data:/etc/elasticsearch/ssl
    restart: always
    networks:
      - network
      
  kibana:
    container_name: kibana
    build: ./Kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=https://elasticsearch:9200
    depends_on:
      - elasticsearch
    volumes:
      - ssl_data:/etc/kibana/ssl
      - ssl_keys_local:/ssl-keys-local
    networks:
      - network

  logstash:
    container_name: logstash
    build: ./Logstash
    ports:
      - "5000:5000"
    environment:
      - ELASTICSEARCH_URL=https://elasticsearch:9200
    depends_on:
      - elasticsearch
    volumes:
      - ssl_data:/etc/logstash/ssl
    networks:
      - network
  
  filebeat:
    container_name: filebeat
    build: ./Filebeat
    volumes:
      - ${HOME}/logs:/logs
      - ssl_data:/etc/filebeat/ssl
    depends_on:
      - elasticsearch
    networks:
      - network

volumes:
  ssl_data:
  ssl_keys_local:
    
networks:
  network:
    driver: bridge