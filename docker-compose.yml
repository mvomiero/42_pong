version: '3'

services:
  transcendence:
    container_name: transcendence
    build:
      context: .
    ports:
      - "4443:4443"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
        - ./logs:/logs
    networks:
      - network

  postgres:
    container_name: postgres
    image: postgres
    ports:
      - "5432:5432"
    restart: always
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - network

  # elasticsearch:
  #   container_name: elasticsearch
  #   build: ./Elastic
  #   env_file:
  #     - .env
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   depends_on:
  #     - transcendence
  #   volumes:
  #     - ssl_data:/etc/elasticsearch/ssl
  #   restart: always
  #   networks:
  #     - network
      
  # kibana:
  #   container_name: kibana
  #   build: ./Kibana
  #   ports:
  #     - "9400:9400"
  #   environment:
  #     - ELASTICSEARCH_URL=https://elasticsearch:9200
  #   depends_on:
  #     - elasticsearch
  #   volumes:
  #     - ssl_data:/etc/kibana/ssl
  #     - ./certs:/etc/kibana/certs
  #   networks:
  #     - network

  # logstash:
  #   container_name: logstash
  #   build: ./Logstash
  #   ports:
  #     - "9500:9500"
  #   env_file:
  #     - .env
  #   environment:
  #     - ELASTICSEARCH_URL=https://elasticsearch:9200
  #   depends_on:
  #     - elasticsearch
  #   volumes:
  #     - ssl_data:/etc/logstash/ssl
  #   networks:
  #     - network
  
  # filebeat:
  #   container_name: filebeat
  #   build: ./Filebeat
  #   volumes:
  #     - ./logs:/logs
  #     - ssl_data:/etc/filebeat/ssl
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - network

volumes:
  ssl_data:
  logs:
    
networks:
  network:
    driver: bridge